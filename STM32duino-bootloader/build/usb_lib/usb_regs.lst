   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usb_regs.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SetCNTR,"ax",%progbits
  16              		.align	1
  17              		.global	SetCNTR
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SetCNTR:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "usb_lib/usb_regs.c"
   1:usb_lib/usb_regs.c **** /******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
   2:usb_lib/usb_regs.c **** * File Name          : usb_regs.c
   3:usb_lib/usb_regs.c **** * Author             : MCD Application Team
   4:usb_lib/usb_regs.c **** * Version            : V2.2.1
   5:usb_lib/usb_regs.c **** * Date               : 09/22/2008
   6:usb_lib/usb_regs.c **** * Description        : Interface functions to USB cell registers
   7:usb_lib/usb_regs.c **** ********************************************************************************
   8:usb_lib/usb_regs.c **** * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
   9:usb_lib/usb_regs.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  10:usb_lib/usb_regs.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  11:usb_lib/usb_regs.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  12:usb_lib/usb_regs.c **** * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  13:usb_lib/usb_regs.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  14:usb_lib/usb_regs.c **** *******************************************************************************/
  15:usb_lib/usb_regs.c **** 
  16:usb_lib/usb_regs.c **** /* Includes ------------------------------------------------------------------*/
  17:usb_lib/usb_regs.c **** #include "usb_lib.h"
  18:usb_lib/usb_regs.c **** 
  19:usb_lib/usb_regs.c **** /* Private typedef -----------------------------------------------------------*/
  20:usb_lib/usb_regs.c **** /* Private define ------------------------------------------------------------*/
  21:usb_lib/usb_regs.c **** /* Private macro -------------------------------------------------------------*/
  22:usb_lib/usb_regs.c **** /* Private variables ---------------------------------------------------------*/
  23:usb_lib/usb_regs.c **** /* Extern variables ----------------------------------------------------------*/
  24:usb_lib/usb_regs.c **** /* Private function prototypes -----------------------------------------------*/
  25:usb_lib/usb_regs.c **** /* Private functions ---------------------------------------------------------*/
  26:usb_lib/usb_regs.c **** 
  27:usb_lib/usb_regs.c **** /*******************************************************************************
  28:usb_lib/usb_regs.c **** * Function Name  : SetCNTR.
  29:usb_lib/usb_regs.c **** * Description    : Set the CNTR register value.
  30:usb_lib/usb_regs.c **** * Input          : wRegValue: new register value.
  31:usb_lib/usb_regs.c **** * Output         : None.
  32:usb_lib/usb_regs.c **** * Return         : None.
  33:usb_lib/usb_regs.c **** *******************************************************************************/
  34:usb_lib/usb_regs.c **** void SetCNTR(u16 wRegValue)
  35:usb_lib/usb_regs.c **** {
  28              		.loc 1 35 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  36:usb_lib/usb_regs.c ****   _SetCNTR(wRegValue);
  33              		.loc 1 36 3 view .LVU1
  34 0000 014B     		ldr	r3, .L2
  35 0002 C3F8400C 		str	r0, [r3, #3136]
  37:usb_lib/usb_regs.c **** }
  36              		.loc 1 37 1 is_stmt 0 view .LVU2
  37 0006 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 0008 00500040 		.word	1073762304
  42              		.cfi_endproc
  43              	.LFE0:
  45              		.section	.text.GetCNTR,"ax",%progbits
  46              		.align	1
  47              		.global	GetCNTR
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu softvfp
  53              	GetCNTR:
  54              	.LFB1:
  38:usb_lib/usb_regs.c **** 
  39:usb_lib/usb_regs.c **** /*******************************************************************************
  40:usb_lib/usb_regs.c **** * Function Name  : GetCNTR.
  41:usb_lib/usb_regs.c **** * Description    : returns the CNTR register value.
  42:usb_lib/usb_regs.c **** * Input          : None.
  43:usb_lib/usb_regs.c **** * Output         : None.
  44:usb_lib/usb_regs.c **** * Return         : CNTR register Value.
  45:usb_lib/usb_regs.c **** *******************************************************************************/
  46:usb_lib/usb_regs.c **** u16 GetCNTR(void)
  47:usb_lib/usb_regs.c **** {
  55              		.loc 1 47 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  48:usb_lib/usb_regs.c ****   return(_GetCNTR());
  60              		.loc 1 48 3 view .LVU4
  61              		.loc 1 48 10 is_stmt 0 view .LVU5
  62 0000 024B     		ldr	r3, .L5
  63 0002 D3F8400C 		ldr	r0, [r3, #3136]
  49:usb_lib/usb_regs.c **** }
  64              		.loc 1 49 1 view .LVU6
  65 0006 80B2     		uxth	r0, r0
  66 0008 7047     		bx	lr
  67              	.L6:
  68 000a 00BF     		.align	2
  69              	.L5:
  70 000c 00500040 		.word	1073762304
  71              		.cfi_endproc
  72              	.LFE1:
  74              		.section	.text.SetISTR,"ax",%progbits
  75              		.align	1
  76              		.global	SetISTR
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu softvfp
  82              	SetISTR:
  83              	.LVL1:
  84              	.LFB2:
  50:usb_lib/usb_regs.c **** 
  51:usb_lib/usb_regs.c **** /*******************************************************************************
  52:usb_lib/usb_regs.c **** * Function Name  : SetISTR.
  53:usb_lib/usb_regs.c **** * Description    : Set the ISTR register value.
  54:usb_lib/usb_regs.c **** * Input          : wRegValue: new register value.
  55:usb_lib/usb_regs.c **** * Output         : None.
  56:usb_lib/usb_regs.c **** * Return         : None.
  57:usb_lib/usb_regs.c **** *******************************************************************************/
  58:usb_lib/usb_regs.c **** void SetISTR(u16 wRegValue)
  59:usb_lib/usb_regs.c **** {
  85              		.loc 1 59 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  60:usb_lib/usb_regs.c ****   _SetISTR(wRegValue);
  90              		.loc 1 60 3 view .LVU8
  91 0000 014B     		ldr	r3, .L8
  92 0002 C3F8440C 		str	r0, [r3, #3140]
  61:usb_lib/usb_regs.c **** }
  93              		.loc 1 61 1 is_stmt 0 view .LVU9
  94 0006 7047     		bx	lr
  95              	.L9:
  96              		.align	2
  97              	.L8:
  98 0008 00500040 		.word	1073762304
  99              		.cfi_endproc
 100              	.LFE2:
 102              		.section	.text.GetISTR,"ax",%progbits
 103              		.align	1
 104              		.global	GetISTR
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu softvfp
 110              	GetISTR:
 111              	.LFB3:
  62:usb_lib/usb_regs.c **** 
  63:usb_lib/usb_regs.c **** /*******************************************************************************
  64:usb_lib/usb_regs.c **** * Function Name  : GetISTR
  65:usb_lib/usb_regs.c **** * Description    : Returns the ISTR register value.
  66:usb_lib/usb_regs.c **** * Input          : None.
  67:usb_lib/usb_regs.c **** * Output         : None.
  68:usb_lib/usb_regs.c **** * Return         : ISTR register Value
  69:usb_lib/usb_regs.c **** *******************************************************************************/
  70:usb_lib/usb_regs.c **** u16 GetISTR(void)
  71:usb_lib/usb_regs.c **** {
 112              		.loc 1 71 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
  72:usb_lib/usb_regs.c ****   return(_GetISTR());
 117              		.loc 1 72 3 view .LVU11
 118              		.loc 1 72 10 is_stmt 0 view .LVU12
 119 0000 024B     		ldr	r3, .L11
 120 0002 D3F8440C 		ldr	r0, [r3, #3140]
  73:usb_lib/usb_regs.c **** }
 121              		.loc 1 73 1 view .LVU13
 122 0006 80B2     		uxth	r0, r0
 123 0008 7047     		bx	lr
 124              	.L12:
 125 000a 00BF     		.align	2
 126              	.L11:
 127 000c 00500040 		.word	1073762304
 128              		.cfi_endproc
 129              	.LFE3:
 131              		.section	.text.GetFNR,"ax",%progbits
 132              		.align	1
 133              		.global	GetFNR
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 139              	GetFNR:
 140              	.LFB4:
  74:usb_lib/usb_regs.c **** 
  75:usb_lib/usb_regs.c **** /*******************************************************************************
  76:usb_lib/usb_regs.c **** * Function Name  : GetFNR
  77:usb_lib/usb_regs.c **** * Description    : Returns the FNR register value.
  78:usb_lib/usb_regs.c **** * Input          : None.
  79:usb_lib/usb_regs.c **** * Output         : None.
  80:usb_lib/usb_regs.c **** * Return         : FNR register Value
  81:usb_lib/usb_regs.c **** *******************************************************************************/
  82:usb_lib/usb_regs.c **** u16 GetFNR(void)
  83:usb_lib/usb_regs.c **** {
 141              		.loc 1 83 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
  84:usb_lib/usb_regs.c ****   return(_GetFNR());
 146              		.loc 1 84 3 view .LVU15
 147              		.loc 1 84 10 is_stmt 0 view .LVU16
 148 0000 024B     		ldr	r3, .L14
 149 0002 D3F8480C 		ldr	r0, [r3, #3144]
  85:usb_lib/usb_regs.c **** }
 150              		.loc 1 85 1 view .LVU17
 151 0006 80B2     		uxth	r0, r0
 152 0008 7047     		bx	lr
 153              	.L15:
 154 000a 00BF     		.align	2
 155              	.L14:
 156 000c 00500040 		.word	1073762304
 157              		.cfi_endproc
 158              	.LFE4:
 160              		.section	.text.SetDADDR,"ax",%progbits
 161              		.align	1
 162              		.global	SetDADDR
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu softvfp
 168              	SetDADDR:
 169              	.LVL2:
 170              	.LFB5:
  86:usb_lib/usb_regs.c **** 
  87:usb_lib/usb_regs.c **** /*******************************************************************************
  88:usb_lib/usb_regs.c **** * Function Name  : SetDADDR
  89:usb_lib/usb_regs.c **** * Description    : Set the DADDR register value.
  90:usb_lib/usb_regs.c **** * Input          : wRegValue: new register value.
  91:usb_lib/usb_regs.c **** * Output         : None.
  92:usb_lib/usb_regs.c **** * Return         : None.
  93:usb_lib/usb_regs.c **** *******************************************************************************/
  94:usb_lib/usb_regs.c **** void SetDADDR(u16 wRegValue)
  95:usb_lib/usb_regs.c **** {
 171              		.loc 1 95 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
  96:usb_lib/usb_regs.c ****   _SetDADDR(wRegValue);
 176              		.loc 1 96 3 view .LVU19
 177 0000 014B     		ldr	r3, .L17
 178 0002 C3F84C0C 		str	r0, [r3, #3148]
  97:usb_lib/usb_regs.c **** }
 179              		.loc 1 97 1 is_stmt 0 view .LVU20
 180 0006 7047     		bx	lr
 181              	.L18:
 182              		.align	2
 183              	.L17:
 184 0008 00500040 		.word	1073762304
 185              		.cfi_endproc
 186              	.LFE5:
 188              		.section	.text.GetDADDR,"ax",%progbits
 189              		.align	1
 190              		.global	GetDADDR
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu softvfp
 196              	GetDADDR:
 197              	.LFB6:
  98:usb_lib/usb_regs.c **** 
  99:usb_lib/usb_regs.c **** /*******************************************************************************
 100:usb_lib/usb_regs.c **** * Function Name  : GetDADDR
 101:usb_lib/usb_regs.c **** * Description    : Returns the DADDR register value.
 102:usb_lib/usb_regs.c **** * Input          : None.
 103:usb_lib/usb_regs.c **** * Output         : None.
 104:usb_lib/usb_regs.c **** * Return         : DADDR register Value
 105:usb_lib/usb_regs.c **** *******************************************************************************/
 106:usb_lib/usb_regs.c **** u16 GetDADDR(void)
 107:usb_lib/usb_regs.c **** {
 198              		.loc 1 107 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 108:usb_lib/usb_regs.c ****   return(_GetDADDR());
 203              		.loc 1 108 3 view .LVU22
 204              		.loc 1 108 10 is_stmt 0 view .LVU23
 205 0000 024B     		ldr	r3, .L20
 206 0002 D3F84C0C 		ldr	r0, [r3, #3148]
 109:usb_lib/usb_regs.c **** }
 207              		.loc 1 109 1 view .LVU24
 208 0006 80B2     		uxth	r0, r0
 209 0008 7047     		bx	lr
 210              	.L21:
 211 000a 00BF     		.align	2
 212              	.L20:
 213 000c 00500040 		.word	1073762304
 214              		.cfi_endproc
 215              	.LFE6:
 217              		.section	.text.SetBTABLE,"ax",%progbits
 218              		.align	1
 219              		.global	SetBTABLE
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu softvfp
 225              	SetBTABLE:
 226              	.LVL3:
 227              	.LFB7:
 110:usb_lib/usb_regs.c **** 
 111:usb_lib/usb_regs.c **** /*******************************************************************************
 112:usb_lib/usb_regs.c **** * Function Name  : SetBTABLE
 113:usb_lib/usb_regs.c **** * Description    : Set the BTABLE.
 114:usb_lib/usb_regs.c **** * Input          : wRegValue: New register value.
 115:usb_lib/usb_regs.c **** * Output         : None.
 116:usb_lib/usb_regs.c **** * Return         : None.
 117:usb_lib/usb_regs.c **** *******************************************************************************/
 118:usb_lib/usb_regs.c **** void SetBTABLE(u16 wRegValue)
 119:usb_lib/usb_regs.c **** {
 228              		.loc 1 119 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 120:usb_lib/usb_regs.c ****   _SetBTABLE(wRegValue);
 233              		.loc 1 120 3 view .LVU26
 234 0000 034B     		ldr	r3, .L23
 235 0002 20F00700 		bic	r0, r0, #7
 236              	.LVL4:
 237              		.loc 1 120 3 is_stmt 0 view .LVU27
 238 0006 80B2     		uxth	r0, r0
 239 0008 C3F8500C 		str	r0, [r3, #3152]
 121:usb_lib/usb_regs.c **** }
 240              		.loc 1 121 1 view .LVU28
 241 000c 7047     		bx	lr
 242              	.L24:
 243 000e 00BF     		.align	2
 244              	.L23:
 245 0010 00500040 		.word	1073762304
 246              		.cfi_endproc
 247              	.LFE7:
 249              		.section	.text.GetBTABLE,"ax",%progbits
 250              		.align	1
 251              		.global	GetBTABLE
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu softvfp
 257              	GetBTABLE:
 258              	.LFB8:
 122:usb_lib/usb_regs.c **** 
 123:usb_lib/usb_regs.c **** /*******************************************************************************
 124:usb_lib/usb_regs.c **** * Function Name  : GetBTABLE.
 125:usb_lib/usb_regs.c **** * Description    : Returns the BTABLE register value.
 126:usb_lib/usb_regs.c **** * Input          : None.
 127:usb_lib/usb_regs.c **** * Output         : None.
 128:usb_lib/usb_regs.c **** * Return         : BTABLE address.
 129:usb_lib/usb_regs.c **** *******************************************************************************/
 130:usb_lib/usb_regs.c **** u16 GetBTABLE(void)
 131:usb_lib/usb_regs.c **** {
 259              		.loc 1 131 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 132:usb_lib/usb_regs.c ****   return(_GetBTABLE());
 264              		.loc 1 132 3 view .LVU30
 265              		.loc 1 132 10 is_stmt 0 view .LVU31
 266 0000 024B     		ldr	r3, .L26
 267 0002 D3F8500C 		ldr	r0, [r3, #3152]
 133:usb_lib/usb_regs.c **** }
 268              		.loc 1 133 1 view .LVU32
 269 0006 80B2     		uxth	r0, r0
 270 0008 7047     		bx	lr
 271              	.L27:
 272 000a 00BF     		.align	2
 273              	.L26:
 274 000c 00500040 		.word	1073762304
 275              		.cfi_endproc
 276              	.LFE8:
 278              		.section	.text.SetENDPOINT,"ax",%progbits
 279              		.align	1
 280              		.global	SetENDPOINT
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu softvfp
 286              	SetENDPOINT:
 287              	.LVL5:
 288              	.LFB9:
 134:usb_lib/usb_regs.c **** 
 135:usb_lib/usb_regs.c **** /*******************************************************************************
 136:usb_lib/usb_regs.c **** * Function Name  : SetENDPOINT
 137:usb_lib/usb_regs.c **** * Description    : Setthe Endpoint register value.
 138:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 139:usb_lib/usb_regs.c **** *                  wRegValue.
 140:usb_lib/usb_regs.c **** * Output         : None.
 141:usb_lib/usb_regs.c **** * Return         : None.
 142:usb_lib/usb_regs.c **** *******************************************************************************/
 143:usb_lib/usb_regs.c **** void SetENDPOINT(u8 bEpNum, u16 wRegValue)
 144:usb_lib/usb_regs.c **** {
 289              		.loc 1 144 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 145:usb_lib/usb_regs.c ****   _SetENDPOINT(bEpNum, wRegValue);
 294              		.loc 1 145 3 view .LVU34
 295 0000 8000     		lsls	r0, r0, #2
 296              	.LVL6:
 297              		.loc 1 145 3 is_stmt 0 view .LVU35
 298 0002 00F18040 		add	r0, r0, #1073741824
 299 0006 00F5B840 		add	r0, r0, #23552
 300 000a 0160     		str	r1, [r0]
 146:usb_lib/usb_regs.c **** }
 301              		.loc 1 146 1 view .LVU36
 302 000c 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE9:
 306              		.section	.text.GetENDPOINT,"ax",%progbits
 307              		.align	1
 308              		.global	GetENDPOINT
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu softvfp
 314              	GetENDPOINT:
 315              	.LVL7:
 316              	.LFB10:
 147:usb_lib/usb_regs.c **** 
 148:usb_lib/usb_regs.c **** /*******************************************************************************
 149:usb_lib/usb_regs.c **** * Function Name  : GetENDPOINT
 150:usb_lib/usb_regs.c **** * Description    : Return the Endpoint register value.
 151:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 152:usb_lib/usb_regs.c **** * Output         : None.
 153:usb_lib/usb_regs.c **** * Return         : Endpoint register value.
 154:usb_lib/usb_regs.c **** *******************************************************************************/
 155:usb_lib/usb_regs.c **** u16 GetENDPOINT(u8 bEpNum)
 156:usb_lib/usb_regs.c **** {
 317              		.loc 1 156 1 is_stmt 1 view -0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 157:usb_lib/usb_regs.c ****   return(_GetENDPOINT(bEpNum));
 322              		.loc 1 157 3 view .LVU38
 323              		.loc 1 157 10 is_stmt 0 view .LVU39
 324 0000 8000     		lsls	r0, r0, #2
 325              	.LVL8:
 326              		.loc 1 157 10 view .LVU40
 327 0002 00F18040 		add	r0, r0, #1073741824
 328 0006 00F5B840 		add	r0, r0, #23552
 329 000a 0068     		ldr	r0, [r0]
 158:usb_lib/usb_regs.c **** }
 330              		.loc 1 158 1 view .LVU41
 331 000c 80B2     		uxth	r0, r0
 332 000e 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE10:
 336              		.section	.text.SetEPType,"ax",%progbits
 337              		.align	1
 338              		.global	SetEPType
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu softvfp
 344              	SetEPType:
 345              	.LVL9:
 346              	.LFB11:
 159:usb_lib/usb_regs.c **** 
 160:usb_lib/usb_regs.c **** /*******************************************************************************
 161:usb_lib/usb_regs.c **** * Function Name  : SetEPType
 162:usb_lib/usb_regs.c **** * Description    : sets the type in the endpoint register.
 163:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 164:usb_lib/usb_regs.c **** *                  wType: type definition.
 165:usb_lib/usb_regs.c **** * Output         : None.
 166:usb_lib/usb_regs.c **** * Return         : None.
 167:usb_lib/usb_regs.c **** *******************************************************************************/
 168:usb_lib/usb_regs.c **** void SetEPType(u8 bEpNum, u16 wType)
 169:usb_lib/usb_regs.c **** {
 347              		.loc 1 169 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 170:usb_lib/usb_regs.c ****   _SetEPType(bEpNum, wType);
 352              		.loc 1 170 3 view .LVU43
 353 0000 8000     		lsls	r0, r0, #2
 354              	.LVL10:
 355              		.loc 1 170 3 is_stmt 0 view .LVU44
 356 0002 00F18040 		add	r0, r0, #1073741824
 357 0006 00F5B840 		add	r0, r0, #23552
 358 000a 0368     		ldr	r3, [r0]
 359 000c 23F4EC43 		bic	r3, r3, #30208
 360 0010 23F07003 		bic	r3, r3, #112
 361 0014 0B43     		orrs	r3, r3, r1
 362 0016 9BB2     		uxth	r3, r3
 363 0018 0360     		str	r3, [r0]
 171:usb_lib/usb_regs.c **** }
 364              		.loc 1 171 1 view .LVU45
 365 001a 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE11:
 369              		.section	.text.GetEPType,"ax",%progbits
 370              		.align	1
 371              		.global	GetEPType
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu softvfp
 377              	GetEPType:
 378              	.LVL11:
 379              	.LFB12:
 172:usb_lib/usb_regs.c **** 
 173:usb_lib/usb_regs.c **** /*******************************************************************************
 174:usb_lib/usb_regs.c **** * Function Name  : GetEPType
 175:usb_lib/usb_regs.c **** * Description    : Returns the endpoint type.
 176:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 177:usb_lib/usb_regs.c **** * Output         : None.
 178:usb_lib/usb_regs.c **** * Return         : Endpoint Type
 179:usb_lib/usb_regs.c **** *******************************************************************************/
 180:usb_lib/usb_regs.c **** u16 GetEPType(u8 bEpNum)
 181:usb_lib/usb_regs.c **** {
 380              		.loc 1 181 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 182:usb_lib/usb_regs.c ****   return(_GetEPType(bEpNum));
 385              		.loc 1 182 3 view .LVU47
 386              		.loc 1 182 10 is_stmt 0 view .LVU48
 387 0000 8000     		lsls	r0, r0, #2
 388              	.LVL12:
 389              		.loc 1 182 10 view .LVU49
 390 0002 00F18040 		add	r0, r0, #1073741824
 391 0006 00F5B840 		add	r0, r0, #23552
 392 000a 0068     		ldr	r0, [r0]
 183:usb_lib/usb_regs.c **** }
 393              		.loc 1 183 1 view .LVU50
 394 000c 00F4C060 		and	r0, r0, #1536
 395 0010 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE12:
 399              		.section	.text.SetEPTxStatus,"ax",%progbits
 400              		.align	1
 401              		.global	SetEPTxStatus
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu softvfp
 407              	SetEPTxStatus:
 408              	.LVL13:
 409              	.LFB13:
 184:usb_lib/usb_regs.c **** 
 185:usb_lib/usb_regs.c **** /*******************************************************************************
 186:usb_lib/usb_regs.c **** * Function Name  : SetEPTxStatus
 187:usb_lib/usb_regs.c **** * Description    : Set the status of Tx endpoint.
 188:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 189:usb_lib/usb_regs.c **** *                  wState: new state.
 190:usb_lib/usb_regs.c **** * Output         : None.
 191:usb_lib/usb_regs.c **** * Return         : None.
 192:usb_lib/usb_regs.c **** *******************************************************************************/
 193:usb_lib/usb_regs.c **** void SetEPTxStatus(u8 bEpNum, u16 wState)
 194:usb_lib/usb_regs.c **** {
 410              		.loc 1 194 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              	.LBB4:
 195:usb_lib/usb_regs.c ****   _SetEPTxStatus(bEpNum, wState);
 416              		.loc 1 195 3 view .LVU52
 417              		.loc 1 195 3 view .LVU53
 418 0000 8000     		lsls	r0, r0, #2
 419              	.LVL14:
 420              		.loc 1 195 3 is_stmt 0 view .LVU54
 421 0002 00F18040 		add	r0, r0, #1073741824
 422 0006 00F5B840 		add	r0, r0, #23552
 423 000a 0368     		ldr	r3, [r0]
 424 000c CA06     		lsls	r2, r1, #27
 425 000e 23F4E043 		bic	r3, r3, #28672
 426 0012 23F04003 		bic	r3, r3, #64
 427 0016 9BB2     		uxth	r3, r3
 428              	.LVL15:
 429              		.loc 1 195 3 is_stmt 1 view .LVU55
 430              		.loc 1 195 3 view .LVU56
 431 0018 48BF     		it	mi
 432 001a 83F01003 		eormi	r3, r3, #16
 433              	.LVL16:
 434              		.loc 1 195 3 view .LVU57
 435 001e 8A06     		lsls	r2, r1, #26
 436              		.loc 1 195 3 view .LVU58
 437 0020 48BF     		it	mi
 438 0022 83F02003 		eormi	r3, r3, #32
 439              	.LVL17:
 440              		.loc 1 195 3 view .LVU59
 441 0026 0360     		str	r3, [r0]
 442              	.LBE4:
 443              		.loc 1 195 33 view .LVU60
 196:usb_lib/usb_regs.c **** }
 444              		.loc 1 196 1 is_stmt 0 view .LVU61
 445 0028 7047     		bx	lr
 446              		.cfi_endproc
 447              	.LFE13:
 449              		.section	.text.SetEPRxStatus,"ax",%progbits
 450              		.align	1
 451              		.global	SetEPRxStatus
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu softvfp
 457              	SetEPRxStatus:
 458              	.LVL18:
 459              	.LFB14:
 197:usb_lib/usb_regs.c **** 
 198:usb_lib/usb_regs.c **** /*******************************************************************************
 199:usb_lib/usb_regs.c **** * Function Name  : SetEPRxStatus
 200:usb_lib/usb_regs.c **** * Description    : Set the status of Rx endpoint.
 201:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 202:usb_lib/usb_regs.c **** *                  wState: new state.
 203:usb_lib/usb_regs.c **** * Output         : None.
 204:usb_lib/usb_regs.c **** * Return         : None.
 205:usb_lib/usb_regs.c **** *******************************************************************************/
 206:usb_lib/usb_regs.c **** void SetEPRxStatus(u8 bEpNum, u16 wState)
 207:usb_lib/usb_regs.c **** {
 460              		.loc 1 207 1 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465              	.LBB5:
 208:usb_lib/usb_regs.c ****   _SetEPRxStatus(bEpNum, wState);
 466              		.loc 1 208 3 view .LVU63
 467              		.loc 1 208 3 view .LVU64
 468 0000 8000     		lsls	r0, r0, #2
 469              	.LVL19:
 470              		.loc 1 208 3 is_stmt 0 view .LVU65
 471 0002 00F18040 		add	r0, r0, #1073741824
 472 0006 00F5B840 		add	r0, r0, #23552
 473 000a 0368     		ldr	r3, [r0]
 474 000c CA04     		lsls	r2, r1, #19
 475 000e 23F48043 		bic	r3, r3, #16384
 476 0012 23F07003 		bic	r3, r3, #112
 477 0016 9BB2     		uxth	r3, r3
 478              	.LVL20:
 479              		.loc 1 208 3 is_stmt 1 view .LVU66
 480              		.loc 1 208 3 view .LVU67
 481 0018 48BF     		it	mi
 482 001a 83F48053 		eormi	r3, r3, #4096
 483              	.LVL21:
 484              		.loc 1 208 3 view .LVU68
 485 001e 8A04     		lsls	r2, r1, #18
 486              		.loc 1 208 3 view .LVU69
 487 0020 48BF     		it	mi
 488 0022 83F40053 		eormi	r3, r3, #8192
 489              	.LVL22:
 490              		.loc 1 208 3 view .LVU70
 491 0026 0360     		str	r3, [r0]
 492              	.LBE5:
 493              		.loc 1 208 33 view .LVU71
 209:usb_lib/usb_regs.c **** }
 494              		.loc 1 209 1 is_stmt 0 view .LVU72
 495 0028 7047     		bx	lr
 496              		.cfi_endproc
 497              	.LFE14:
 499              		.section	.text.SetDouBleBuffEPStall,"ax",%progbits
 500              		.align	1
 501              		.global	SetDouBleBuffEPStall
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 505              		.fpu softvfp
 507              	SetDouBleBuffEPStall:
 508              	.LVL23:
 509              	.LFB15:
 210:usb_lib/usb_regs.c **** 
 211:usb_lib/usb_regs.c **** /*******************************************************************************
 212:usb_lib/usb_regs.c **** * Function Name  : SetDouBleBuffEPStall
 213:usb_lib/usb_regs.c **** * Description    : sets the status for Double Buffer Endpoint to STALL
 214:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 215:usb_lib/usb_regs.c **** *                  bDir: Endpoint direction.
 216:usb_lib/usb_regs.c **** * Output         : None.
 217:usb_lib/usb_regs.c **** * Return         : None.
 218:usb_lib/usb_regs.c **** *******************************************************************************/
 219:usb_lib/usb_regs.c **** void SetDouBleBuffEPStall(u8 bEpNum, u8 bDir)
 220:usb_lib/usb_regs.c **** {
 510              		.loc 1 220 1 is_stmt 1 view -0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 221:usb_lib/usb_regs.c ****   u16 Endpoint_DTOG_Status;
 515              		.loc 1 221 3 view .LVU74
 222:usb_lib/usb_regs.c ****   Endpoint_DTOG_Status = GetENDPOINT(bEpNum);
 516              		.loc 1 222 3 view .LVU75
 517              	.LBB6:
 518              	.LBI6:
 155:usb_lib/usb_regs.c **** {
 519              		.loc 1 155 5 view .LVU76
 520              	.LBB7:
 157:usb_lib/usb_regs.c **** }
 521              		.loc 1 157 3 view .LVU77
 157:usb_lib/usb_regs.c **** }
 522              		.loc 1 157 10 is_stmt 0 view .LVU78
 523 0000 8000     		lsls	r0, r0, #2
 524              	.LVL24:
 157:usb_lib/usb_regs.c **** }
 525              		.loc 1 157 10 view .LVU79
 526 0002 00F18040 		add	r0, r0, #1073741824
 527 0006 00F5B840 		add	r0, r0, #23552
 528              	.LBE7:
 529              	.LBE6:
 223:usb_lib/usb_regs.c ****   if (bDir == EP_DBUF_OUT)
 530              		.loc 1 223 6 view .LVU80
 531 000a 0129     		cmp	r1, #1
 532              	.LBB9:
 533              	.LBB8:
 157:usb_lib/usb_regs.c **** }
 534              		.loc 1 157 10 view .LVU81
 535 000c 0368     		ldr	r3, [r0]
 536              	.LVL25:
 157:usb_lib/usb_regs.c **** }
 537              		.loc 1 157 10 view .LVU82
 538              	.LBE8:
 539              	.LBE9:
 540              		.loc 1 223 3 is_stmt 1 view .LVU83
 541              		.loc 1 223 6 is_stmt 0 view .LVU84
 542 000e 05D1     		bne	.L51
 224:usb_lib/usb_regs.c ****   { /* OUT double buffered endpoint */
 225:usb_lib/usb_regs.c ****     _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPRX_DTOG1);
 543              		.loc 1 225 5 is_stmt 1 view .LVU85
 544 0010 23F48053 		bic	r3, r3, #4096
 545              	.LVL26:
 546              	.L53:
 226:usb_lib/usb_regs.c ****   }
 227:usb_lib/usb_regs.c ****   else if (bDir == EP_DBUF_IN)
 228:usb_lib/usb_regs.c ****   { /* IN double buffered endpoint */
 229:usb_lib/usb_regs.c ****     _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPTX_DTOG1);
 547              		.loc 1 229 5 is_stmt 0 view .LVU86
 548 0014 1B04     		lsls	r3, r3, #16
 549 0016 1B0C     		lsrs	r3, r3, #16
 550 0018 0360     		str	r3, [r0]
 551              	.L50:
 230:usb_lib/usb_regs.c ****   }
 231:usb_lib/usb_regs.c **** }
 552              		.loc 1 231 1 view .LVU87
 553 001a 7047     		bx	lr
 554              	.LVL27:
 555              	.L51:
 227:usb_lib/usb_regs.c ****   { /* IN double buffered endpoint */
 556              		.loc 1 227 8 is_stmt 1 view .LVU88
 227:usb_lib/usb_regs.c ****   { /* IN double buffered endpoint */
 557              		.loc 1 227 11 is_stmt 0 view .LVU89
 558 001c 0229     		cmp	r1, #2
 559 001e FCD1     		bne	.L50
 229:usb_lib/usb_regs.c ****   }
 560              		.loc 1 229 5 is_stmt 1 view .LVU90
 561 0020 23F01003 		bic	r3, r3, #16
 562              	.LVL28:
 229:usb_lib/usb_regs.c ****   }
 563              		.loc 1 229 5 is_stmt 0 view .LVU91
 564 0024 F6E7     		b	.L53
 565              		.cfi_endproc
 566              	.LFE15:
 568              		.section	.text.GetEPTxStatus,"ax",%progbits
 569              		.align	1
 570              		.global	GetEPTxStatus
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu softvfp
 576              	GetEPTxStatus:
 577              	.LVL29:
 578              	.LFB16:
 232:usb_lib/usb_regs.c **** 
 233:usb_lib/usb_regs.c **** /*******************************************************************************
 234:usb_lib/usb_regs.c **** * Function Name  : GetEPTxStatus
 235:usb_lib/usb_regs.c **** * Description    : Returns the endpoint Tx status.
 236:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 237:usb_lib/usb_regs.c **** * Output         : None.
 238:usb_lib/usb_regs.c **** * Return         : Endpoint TX Status
 239:usb_lib/usb_regs.c **** *******************************************************************************/
 240:usb_lib/usb_regs.c **** u16 GetEPTxStatus(u8 bEpNum)
 241:usb_lib/usb_regs.c **** {
 579              		.loc 1 241 1 is_stmt 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 242:usb_lib/usb_regs.c ****   return(_GetEPTxStatus(bEpNum));
 584              		.loc 1 242 3 view .LVU93
 585              		.loc 1 242 10 is_stmt 0 view .LVU94
 586 0000 8000     		lsls	r0, r0, #2
 587              	.LVL30:
 588              		.loc 1 242 10 view .LVU95
 589 0002 00F18040 		add	r0, r0, #1073741824
 590 0006 00F5B840 		add	r0, r0, #23552
 591 000a 0068     		ldr	r0, [r0]
 243:usb_lib/usb_regs.c **** }
 592              		.loc 1 243 1 view .LVU96
 593 000c 00F03000 		and	r0, r0, #48
 594 0010 7047     		bx	lr
 595              		.cfi_endproc
 596              	.LFE16:
 598              		.section	.text.GetEPRxStatus,"ax",%progbits
 599              		.align	1
 600              		.global	GetEPRxStatus
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 604              		.fpu softvfp
 606              	GetEPRxStatus:
 607              	.LVL31:
 608              	.LFB17:
 244:usb_lib/usb_regs.c **** 
 245:usb_lib/usb_regs.c **** /*******************************************************************************
 246:usb_lib/usb_regs.c **** * Function Name  : GetEPRxStatus
 247:usb_lib/usb_regs.c **** * Description    : Returns the endpoint Rx status.
 248:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 249:usb_lib/usb_regs.c **** * Output         : None.
 250:usb_lib/usb_regs.c **** * Return         : Endpoint RX Status
 251:usb_lib/usb_regs.c **** *******************************************************************************/
 252:usb_lib/usb_regs.c **** u16 GetEPRxStatus(u8 bEpNum)
 253:usb_lib/usb_regs.c **** {
 609              		.loc 1 253 1 is_stmt 1 view -0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 254:usb_lib/usb_regs.c ****   return(_GetEPRxStatus(bEpNum));
 614              		.loc 1 254 3 view .LVU98
 615              		.loc 1 254 10 is_stmt 0 view .LVU99
 616 0000 8000     		lsls	r0, r0, #2
 617              	.LVL32:
 618              		.loc 1 254 10 view .LVU100
 619 0002 00F18040 		add	r0, r0, #1073741824
 620 0006 00F5B840 		add	r0, r0, #23552
 621 000a 0068     		ldr	r0, [r0]
 255:usb_lib/usb_regs.c **** }
 622              		.loc 1 255 1 view .LVU101
 623 000c 00F44050 		and	r0, r0, #12288
 624 0010 7047     		bx	lr
 625              		.cfi_endproc
 626              	.LFE17:
 628              		.section	.text.SetEPTxValid,"ax",%progbits
 629              		.align	1
 630              		.global	SetEPTxValid
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu softvfp
 636              	SetEPTxValid:
 637              	.LVL33:
 638              	.LFB18:
 256:usb_lib/usb_regs.c **** 
 257:usb_lib/usb_regs.c **** /*******************************************************************************
 258:usb_lib/usb_regs.c **** * Function Name  : SetEPTxValid
 259:usb_lib/usb_regs.c **** * Description    : Valid the endpoint Tx Status.
 260:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 261:usb_lib/usb_regs.c **** * Output         : None.
 262:usb_lib/usb_regs.c **** * Return         : None.
 263:usb_lib/usb_regs.c **** *******************************************************************************/
 264:usb_lib/usb_regs.c **** void SetEPTxValid(u8 bEpNum)
 265:usb_lib/usb_regs.c **** {
 639              		.loc 1 265 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644              	.LBB10:
 266:usb_lib/usb_regs.c ****   _SetEPTxStatus(bEpNum, EP_TX_VALID);
 645              		.loc 1 266 3 view .LVU103
 646              		.loc 1 266 3 view .LVU104
 647 0000 8000     		lsls	r0, r0, #2
 648              	.LVL34:
 649              		.loc 1 266 3 is_stmt 0 view .LVU105
 650 0002 00F18040 		add	r0, r0, #1073741824
 651 0006 00F5B840 		add	r0, r0, #23552
 652 000a 0368     		ldr	r3, [r0]
 653 000c 23F4E043 		bic	r3, r3, #28672
 654 0010 23F04003 		bic	r3, r3, #64
 655 0014 9BB2     		uxth	r3, r3
 656              	.LVL35:
 657              		.loc 1 266 3 is_stmt 1 view .LVU106
 658              		.loc 1 266 3 view .LVU107
 659              		.loc 1 266 3 view .LVU108
 660              		.loc 1 266 3 view .LVU109
 661              		.loc 1 266 3 view .LVU110
 662 0016 83F03003 		eor	r3, r3, #48
 663              	.LVL36:
 664              		.loc 1 266 3 is_stmt 0 view .LVU111
 665 001a 0360     		str	r3, [r0]
 666              	.LBE10:
 667              		.loc 1 266 38 is_stmt 1 view .LVU112
 267:usb_lib/usb_regs.c **** }
 668              		.loc 1 267 1 is_stmt 0 view .LVU113
 669 001c 7047     		bx	lr
 670              		.cfi_endproc
 671              	.LFE18:
 673              		.section	.text.SetEPRxValid,"ax",%progbits
 674              		.align	1
 675              		.global	SetEPRxValid
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu softvfp
 681              	SetEPRxValid:
 682              	.LVL37:
 683              	.LFB19:
 268:usb_lib/usb_regs.c **** 
 269:usb_lib/usb_regs.c **** /*******************************************************************************
 270:usb_lib/usb_regs.c **** * Function Name  : SetEPRxValid
 271:usb_lib/usb_regs.c **** * Description    : Valid the endpoint Rx Status.
 272:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 273:usb_lib/usb_regs.c **** * Output         : None.
 274:usb_lib/usb_regs.c **** * Return         : None.
 275:usb_lib/usb_regs.c **** *******************************************************************************/
 276:usb_lib/usb_regs.c **** void SetEPRxValid(u8 bEpNum)
 277:usb_lib/usb_regs.c **** {
 684              		.loc 1 277 1 is_stmt 1 view -0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689              	.LBB11:
 278:usb_lib/usb_regs.c ****   _SetEPRxStatus(bEpNum, EP_RX_VALID);
 690              		.loc 1 278 3 view .LVU115
 691              		.loc 1 278 3 view .LVU116
 692 0000 8000     		lsls	r0, r0, #2
 693              	.LVL38:
 694              		.loc 1 278 3 is_stmt 0 view .LVU117
 695 0002 00F18040 		add	r0, r0, #1073741824
 696 0006 00F5B840 		add	r0, r0, #23552
 697 000a 0368     		ldr	r3, [r0]
 698 000c 23F48043 		bic	r3, r3, #16384
 699 0010 23F07003 		bic	r3, r3, #112
 700 0014 9BB2     		uxth	r3, r3
 701              	.LVL39:
 702              		.loc 1 278 3 is_stmt 1 view .LVU118
 703              		.loc 1 278 3 view .LVU119
 704              		.loc 1 278 3 view .LVU120
 705              		.loc 1 278 3 view .LVU121
 706              		.loc 1 278 3 view .LVU122
 707 0016 83F44053 		eor	r3, r3, #12288
 708              	.LVL40:
 709              		.loc 1 278 3 is_stmt 0 view .LVU123
 710 001a 0360     		str	r3, [r0]
 711              	.LBE11:
 712              		.loc 1 278 38 is_stmt 1 view .LVU124
 279:usb_lib/usb_regs.c **** }
 713              		.loc 1 279 1 is_stmt 0 view .LVU125
 714 001c 7047     		bx	lr
 715              		.cfi_endproc
 716              	.LFE19:
 718              		.section	.text.SetEP_KIND,"ax",%progbits
 719              		.align	1
 720              		.global	SetEP_KIND
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu softvfp
 726              	SetEP_KIND:
 727              	.LVL41:
 728              	.LFB20:
 280:usb_lib/usb_regs.c **** 
 281:usb_lib/usb_regs.c **** /*******************************************************************************
 282:usb_lib/usb_regs.c **** * Function Name  : SetEP_KIND
 283:usb_lib/usb_regs.c **** * Description    : Clear the EP_KIND bit.
 284:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 285:usb_lib/usb_regs.c **** * Output         : None.
 286:usb_lib/usb_regs.c **** * Return         : None.
 287:usb_lib/usb_regs.c **** *******************************************************************************/
 288:usb_lib/usb_regs.c **** void SetEP_KIND(u8 bEpNum)
 289:usb_lib/usb_regs.c **** {
 729              		.loc 1 289 1 is_stmt 1 view -0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 290:usb_lib/usb_regs.c ****   _SetEP_KIND(bEpNum);
 734              		.loc 1 290 3 view .LVU127
 735 0000 8000     		lsls	r0, r0, #2
 736              	.LVL42:
 737              		.loc 1 290 3 is_stmt 0 view .LVU128
 738 0002 00F18040 		add	r0, r0, #1073741824
 739 0006 00F5B840 		add	r0, r0, #23552
 740 000a 0368     		ldr	r3, [r0]
 741 000c 23F4E043 		bic	r3, r3, #28672
 742 0010 23F07003 		bic	r3, r3, #112
 743 0014 43F48073 		orr	r3, r3, #256
 744 0018 9BB2     		uxth	r3, r3
 745 001a 0360     		str	r3, [r0]
 291:usb_lib/usb_regs.c **** }
 746              		.loc 1 291 1 view .LVU129
 747 001c 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE20:
 751              		.section	.text.ClearEP_KIND,"ax",%progbits
 752              		.align	1
 753              		.global	ClearEP_KIND
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 757              		.fpu softvfp
 759              	ClearEP_KIND:
 760              	.LVL43:
 761              	.LFB21:
 292:usb_lib/usb_regs.c **** 
 293:usb_lib/usb_regs.c **** /*******************************************************************************
 294:usb_lib/usb_regs.c **** * Function Name  : ClearEP_KIND
 295:usb_lib/usb_regs.c **** * Description    : set the  EP_KIND bit.
 296:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 297:usb_lib/usb_regs.c **** * Output         : None.
 298:usb_lib/usb_regs.c **** * Return         : None.
 299:usb_lib/usb_regs.c **** *******************************************************************************/
 300:usb_lib/usb_regs.c **** void ClearEP_KIND(u8 bEpNum)
 301:usb_lib/usb_regs.c **** {
 762              		.loc 1 301 1 is_stmt 1 view -0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 302:usb_lib/usb_regs.c ****   _ClearEP_KIND(bEpNum);
 767              		.loc 1 302 3 view .LVU131
 768 0000 8000     		lsls	r0, r0, #2
 769              	.LVL44:
 770              		.loc 1 302 3 is_stmt 0 view .LVU132
 771 0002 00F18040 		add	r0, r0, #1073741824
 772 0006 00F5B840 		add	r0, r0, #23552
 773 000a 0368     		ldr	r3, [r0]
 774 000c 23F4E243 		bic	r3, r3, #28928
 775 0010 23F07003 		bic	r3, r3, #112
 776 0014 1B04     		lsls	r3, r3, #16
 777 0016 1B0C     		lsrs	r3, r3, #16
 778 0018 0360     		str	r3, [r0]
 303:usb_lib/usb_regs.c **** }
 779              		.loc 1 303 1 view .LVU133
 780 001a 7047     		bx	lr
 781              		.cfi_endproc
 782              	.LFE21:
 784              		.section	.text.Clear_Status_Out,"ax",%progbits
 785              		.align	1
 786              		.global	Clear_Status_Out
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 790              		.fpu softvfp
 792              	Clear_Status_Out:
 793              	.LFB64:
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 798 0000 FFF7FEBF 		b	ClearEP_KIND
 799              		.cfi_endproc
 800              	.LFE64:
 802              		.section	.text.Set_Status_Out,"ax",%progbits
 803              		.align	1
 804              		.global	Set_Status_Out
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu softvfp
 810              	Set_Status_Out:
 811              	.LFB60:
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816 0000 FFF7FEBF 		b	SetEP_KIND
 817              		.cfi_endproc
 818              	.LFE60:
 820              		.section	.text.SetEPDoubleBuff,"ax",%progbits
 821              		.align	1
 822              		.global	SetEPDoubleBuff
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 826              		.fpu softvfp
 828              	SetEPDoubleBuff:
 829              	.LFB62:
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834 0000 FFF7FEBF 		b	SetEP_KIND
 835              		.cfi_endproc
 836              	.LFE62:
 838              		.section	.text.ClearEPDoubleBuff,"ax",%progbits
 839              		.align	1
 840              		.global	ClearEPDoubleBuff
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 844              		.fpu softvfp
 846              	ClearEPDoubleBuff:
 847              	.LFB66:
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852 0000 FFF7FEBF 		b	ClearEP_KIND
 853              		.cfi_endproc
 854              	.LFE66:
 856              		.section	.text.GetTxStallStatus,"ax",%progbits
 857              		.align	1
 858              		.global	GetTxStallStatus
 859              		.syntax unified
 860              		.thumb
 861              		.thumb_func
 862              		.fpu softvfp
 864              	GetTxStallStatus:
 865              	.LVL45:
 866              	.LFB26:
 304:usb_lib/usb_regs.c **** /*******************************************************************************
 305:usb_lib/usb_regs.c **** * Function Name  : Clear_Status_Out
 306:usb_lib/usb_regs.c **** * Description    : Clear the Status Out of the related Endpoint
 307:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 308:usb_lib/usb_regs.c **** * Output         : None.
 309:usb_lib/usb_regs.c **** * Return         : None.
 310:usb_lib/usb_regs.c **** *******************************************************************************/
 311:usb_lib/usb_regs.c **** void Clear_Status_Out(u8 bEpNum)
 312:usb_lib/usb_regs.c **** {
 313:usb_lib/usb_regs.c ****   _ClearEP_KIND(bEpNum);
 314:usb_lib/usb_regs.c **** }
 315:usb_lib/usb_regs.c **** /*******************************************************************************
 316:usb_lib/usb_regs.c **** * Function Name  : Set_Status_Out
 317:usb_lib/usb_regs.c **** * Description    : Set the Status Out of the related Endpoint
 318:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 319:usb_lib/usb_regs.c **** * Output         : None.
 320:usb_lib/usb_regs.c **** * Return         : None.
 321:usb_lib/usb_regs.c **** *******************************************************************************/
 322:usb_lib/usb_regs.c **** void Set_Status_Out(u8 bEpNum)
 323:usb_lib/usb_regs.c **** {
 324:usb_lib/usb_regs.c ****   _SetEP_KIND(bEpNum);
 325:usb_lib/usb_regs.c **** }
 326:usb_lib/usb_regs.c **** /*******************************************************************************
 327:usb_lib/usb_regs.c **** * Function Name  : SetEPDoubleBuff
 328:usb_lib/usb_regs.c **** * Description    : Enable the double buffer feature for the endpoint.
 329:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 330:usb_lib/usb_regs.c **** * Output         : None.
 331:usb_lib/usb_regs.c **** * Return         : None.
 332:usb_lib/usb_regs.c **** *******************************************************************************/
 333:usb_lib/usb_regs.c **** void SetEPDoubleBuff(u8 bEpNum)
 334:usb_lib/usb_regs.c **** {
 335:usb_lib/usb_regs.c ****   _SetEP_KIND(bEpNum);
 336:usb_lib/usb_regs.c **** }
 337:usb_lib/usb_regs.c **** /*******************************************************************************
 338:usb_lib/usb_regs.c **** * Function Name  : ClearEPDoubleBuff
 339:usb_lib/usb_regs.c **** * Description    : Disable the double buffer feature for the endpoint.
 340:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 341:usb_lib/usb_regs.c **** * Output         : None.
 342:usb_lib/usb_regs.c **** * Return         : None.
 343:usb_lib/usb_regs.c **** *******************************************************************************/
 344:usb_lib/usb_regs.c **** void ClearEPDoubleBuff(u8 bEpNum)
 345:usb_lib/usb_regs.c **** {
 346:usb_lib/usb_regs.c ****   _ClearEP_KIND(bEpNum);
 347:usb_lib/usb_regs.c **** }
 348:usb_lib/usb_regs.c **** /*******************************************************************************
 349:usb_lib/usb_regs.c **** * Function Name  : GetTxStallStatus
 350:usb_lib/usb_regs.c **** * Description    : Returns the Stall status of the Tx endpoint.
 351:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 352:usb_lib/usb_regs.c **** * Output         : None.
 353:usb_lib/usb_regs.c **** * Return         : Tx Stall status.
 354:usb_lib/usb_regs.c **** *******************************************************************************/
 355:usb_lib/usb_regs.c **** u16 GetTxStallStatus(u8 bEpNum)
 356:usb_lib/usb_regs.c **** {
 867              		.loc 1 356 1 is_stmt 1 view -0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 357:usb_lib/usb_regs.c ****   return(_GetTxStallStatus(bEpNum));
 872              		.loc 1 357 3 view .LVU135
 873              		.loc 1 357 10 is_stmt 0 view .LVU136
 874 0000 8000     		lsls	r0, r0, #2
 875              	.LVL46:
 876              		.loc 1 357 10 view .LVU137
 877 0002 00F18040 		add	r0, r0, #1073741824
 878 0006 00F5B840 		add	r0, r0, #23552
 879 000a 0068     		ldr	r0, [r0]
 880 000c 00F03000 		and	r0, r0, #48
 358:usb_lib/usb_regs.c **** }
 881              		.loc 1 358 1 view .LVU138
 882 0010 A0F11003 		sub	r3, r0, #16
 883 0014 5842     		rsbs	r0, r3, #0
 884 0016 5841     		adcs	r0, r0, r3
 885 0018 7047     		bx	lr
 886              		.cfi_endproc
 887              	.LFE26:
 889              		.section	.text.GetRxStallStatus,"ax",%progbits
 890              		.align	1
 891              		.global	GetRxStallStatus
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu softvfp
 897              	GetRxStallStatus:
 898              	.LVL47:
 899              	.LFB27:
 359:usb_lib/usb_regs.c **** /*******************************************************************************
 360:usb_lib/usb_regs.c **** * Function Name  : GetRxStallStatus
 361:usb_lib/usb_regs.c **** * Description    : Returns the Stall status of the Rx endpoint.
 362:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 363:usb_lib/usb_regs.c **** * Output         : None.
 364:usb_lib/usb_regs.c **** * Return         : Rx Stall status.
 365:usb_lib/usb_regs.c **** *******************************************************************************/
 366:usb_lib/usb_regs.c **** u16 GetRxStallStatus(u8 bEpNum)
 367:usb_lib/usb_regs.c **** {
 900              		.loc 1 367 1 is_stmt 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 368:usb_lib/usb_regs.c ****   return(_GetRxStallStatus(bEpNum));
 905              		.loc 1 368 3 view .LVU140
 906              		.loc 1 368 10 is_stmt 0 view .LVU141
 907 0000 8000     		lsls	r0, r0, #2
 908              	.LVL48:
 909              		.loc 1 368 10 view .LVU142
 910 0002 00F18040 		add	r0, r0, #1073741824
 911 0006 00F5B840 		add	r0, r0, #23552
 912 000a 0068     		ldr	r0, [r0]
 913 000c 00F44050 		and	r0, r0, #12288
 369:usb_lib/usb_regs.c **** }
 914              		.loc 1 369 1 view .LVU143
 915 0010 A0F58053 		sub	r3, r0, #4096
 916 0014 5842     		rsbs	r0, r3, #0
 917 0016 5841     		adcs	r0, r0, r3
 918 0018 7047     		bx	lr
 919              		.cfi_endproc
 920              	.LFE27:
 922              		.section	.text.ClearEP_CTR_RX,"ax",%progbits
 923              		.align	1
 924              		.global	ClearEP_CTR_RX
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu softvfp
 930              	ClearEP_CTR_RX:
 931              	.LVL49:
 932              	.LFB28:
 370:usb_lib/usb_regs.c **** /*******************************************************************************
 371:usb_lib/usb_regs.c **** * Function Name  : ClearEP_CTR_RX
 372:usb_lib/usb_regs.c **** * Description    : Clear the CTR_RX bit.
 373:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 374:usb_lib/usb_regs.c **** * Output         : None.
 375:usb_lib/usb_regs.c **** * Return         : None.
 376:usb_lib/usb_regs.c **** *******************************************************************************/
 377:usb_lib/usb_regs.c **** void ClearEP_CTR_RX(u8 bEpNum)
 378:usb_lib/usb_regs.c **** {
 933              		.loc 1 378 1 is_stmt 1 view -0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 379:usb_lib/usb_regs.c ****   _ClearEP_CTR_RX(bEpNum);
 938              		.loc 1 379 3 view .LVU145
 939 0000 8000     		lsls	r0, r0, #2
 940              	.LVL50:
 941              		.loc 1 379 3 is_stmt 0 view .LVU146
 942 0002 00F18040 		add	r0, r0, #1073741824
 943 0006 00F5B840 		add	r0, r0, #23552
 944 000a 0368     		ldr	r3, [r0]
 945 000c 23F07003 		bic	r3, r3, #112
 946 0010 1B05     		lsls	r3, r3, #20
 947 0012 1B0D     		lsrs	r3, r3, #20
 948 0014 0360     		str	r3, [r0]
 380:usb_lib/usb_regs.c **** }
 949              		.loc 1 380 1 view .LVU147
 950 0016 7047     		bx	lr
 951              		.cfi_endproc
 952              	.LFE28:
 954              		.section	.text.ClearEP_CTR_TX,"ax",%progbits
 955              		.align	1
 956              		.global	ClearEP_CTR_TX
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 960              		.fpu softvfp
 962              	ClearEP_CTR_TX:
 963              	.LVL51:
 964              	.LFB29:
 381:usb_lib/usb_regs.c **** /*******************************************************************************
 382:usb_lib/usb_regs.c **** * Function Name  : ClearEP_CTR_TX
 383:usb_lib/usb_regs.c **** * Description    : Clear the CTR_TX bit.
 384:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 385:usb_lib/usb_regs.c **** * Output         : None.
 386:usb_lib/usb_regs.c **** * Return         : None.
 387:usb_lib/usb_regs.c **** *******************************************************************************/
 388:usb_lib/usb_regs.c **** void ClearEP_CTR_TX(u8 bEpNum)
 389:usb_lib/usb_regs.c **** {
 965              		.loc 1 389 1 is_stmt 1 view -0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              		@ link register save eliminated.
 390:usb_lib/usb_regs.c ****   _ClearEP_CTR_TX(bEpNum);
 970              		.loc 1 390 3 view .LVU149
 971 0000 8000     		lsls	r0, r0, #2
 972              	.LVL52:
 973              		.loc 1 390 3 is_stmt 0 view .LVU150
 974 0002 00F18040 		add	r0, r0, #1073741824
 975 0006 00F5B840 		add	r0, r0, #23552
 976 000a 0368     		ldr	r3, [r0]
 977 000c 23F4E143 		bic	r3, r3, #28800
 978 0010 23F07003 		bic	r3, r3, #112
 979 0014 1B04     		lsls	r3, r3, #16
 980 0016 1B0C     		lsrs	r3, r3, #16
 981 0018 0360     		str	r3, [r0]
 391:usb_lib/usb_regs.c **** }
 982              		.loc 1 391 1 view .LVU151
 983 001a 7047     		bx	lr
 984              		.cfi_endproc
 985              	.LFE29:
 987              		.section	.text.ToggleDTOG_RX,"ax",%progbits
 988              		.align	1
 989              		.global	ToggleDTOG_RX
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 993              		.fpu softvfp
 995              	ToggleDTOG_RX:
 996              	.LVL53:
 997              	.LFB30:
 392:usb_lib/usb_regs.c **** /*******************************************************************************
 393:usb_lib/usb_regs.c **** * Function Name  : ToggleDTOG_RX
 394:usb_lib/usb_regs.c **** * Description    : Toggle the DTOG_RX bit.
 395:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 396:usb_lib/usb_regs.c **** * Output         : None.
 397:usb_lib/usb_regs.c **** * Return         : None.
 398:usb_lib/usb_regs.c **** *******************************************************************************/
 399:usb_lib/usb_regs.c **** void ToggleDTOG_RX(u8 bEpNum)
 400:usb_lib/usb_regs.c **** {
 998              		.loc 1 400 1 is_stmt 1 view -0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002              		@ link register save eliminated.
 401:usb_lib/usb_regs.c ****   _ToggleDTOG_RX(bEpNum);
 1003              		.loc 1 401 3 view .LVU153
 1004 0000 8000     		lsls	r0, r0, #2
 1005              	.LVL54:
 1006              		.loc 1 401 3 is_stmt 0 view .LVU154
 1007 0002 00F18040 		add	r0, r0, #1073741824
 1008 0006 00F5B840 		add	r0, r0, #23552
 1009 000a 0368     		ldr	r3, [r0]
 1010 000c 23F4E043 		bic	r3, r3, #28672
 1011 0010 23F07003 		bic	r3, r3, #112
 1012 0014 1B04     		lsls	r3, r3, #16
 1013 0016 1B0C     		lsrs	r3, r3, #16
 1014 0018 43F48043 		orr	r3, r3, #16384
 1015 001c 0360     		str	r3, [r0]
 402:usb_lib/usb_regs.c **** }
 1016              		.loc 1 402 1 view .LVU155
 1017 001e 7047     		bx	lr
 1018              		.cfi_endproc
 1019              	.LFE30:
 1021              		.section	.text.ToggleDTOG_TX,"ax",%progbits
 1022              		.align	1
 1023              		.global	ToggleDTOG_TX
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu softvfp
 1029              	ToggleDTOG_TX:
 1030              	.LVL55:
 1031              	.LFB31:
 403:usb_lib/usb_regs.c **** /*******************************************************************************
 404:usb_lib/usb_regs.c **** * Function Name  : ToggleDTOG_TX
 405:usb_lib/usb_regs.c **** * Description    : Toggle the DTOG_TX bit.
 406:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 407:usb_lib/usb_regs.c **** * Output         : None.
 408:usb_lib/usb_regs.c **** * Return         : None.
 409:usb_lib/usb_regs.c **** *******************************************************************************/
 410:usb_lib/usb_regs.c **** void ToggleDTOG_TX(u8 bEpNum)
 411:usb_lib/usb_regs.c **** {
 1032              		.loc 1 411 1 is_stmt 1 view -0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 412:usb_lib/usb_regs.c ****   _ToggleDTOG_TX(bEpNum);
 1037              		.loc 1 412 3 view .LVU157
 1038 0000 8000     		lsls	r0, r0, #2
 1039              	.LVL56:
 1040              		.loc 1 412 3 is_stmt 0 view .LVU158
 1041 0002 00F18040 		add	r0, r0, #1073741824
 1042 0006 00F5B840 		add	r0, r0, #23552
 1043 000a 0368     		ldr	r3, [r0]
 1044 000c 23F4E043 		bic	r3, r3, #28672
 1045 0010 23F07003 		bic	r3, r3, #112
 1046 0014 1B04     		lsls	r3, r3, #16
 1047 0016 1B0C     		lsrs	r3, r3, #16
 1048 0018 43F04003 		orr	r3, r3, #64
 1049 001c 0360     		str	r3, [r0]
 413:usb_lib/usb_regs.c **** }
 1050              		.loc 1 413 1 view .LVU159
 1051 001e 7047     		bx	lr
 1052              		.cfi_endproc
 1053              	.LFE31:
 1055              		.section	.text.ClearDTOG_RX,"ax",%progbits
 1056              		.align	1
 1057              		.global	ClearDTOG_RX
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1061              		.fpu softvfp
 1063              	ClearDTOG_RX:
 1064              	.LVL57:
 1065              	.LFB32:
 414:usb_lib/usb_regs.c **** /*******************************************************************************
 415:usb_lib/usb_regs.c **** * Function Name  : ClearDTOG_RX.
 416:usb_lib/usb_regs.c **** * Description    : Clear the DTOG_RX bit.
 417:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 418:usb_lib/usb_regs.c **** * Output         : None.
 419:usb_lib/usb_regs.c **** * Return         : None.
 420:usb_lib/usb_regs.c **** *******************************************************************************/
 421:usb_lib/usb_regs.c **** void ClearDTOG_RX(u8 bEpNum)
 422:usb_lib/usb_regs.c **** {
 1066              		.loc 1 422 1 is_stmt 1 view -0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070              		@ link register save eliminated.
 423:usb_lib/usb_regs.c ****   _ClearDTOG_RX(bEpNum);
 1071              		.loc 1 423 3 view .LVU161
 1072 0000 8000     		lsls	r0, r0, #2
 1073              	.LVL58:
 1074              		.loc 1 423 3 is_stmt 0 view .LVU162
 1075 0002 00F18040 		add	r0, r0, #1073741824
 1076 0006 00F5B840 		add	r0, r0, #23552
 1077 000a 0368     		ldr	r3, [r0]
 1078 000c 5B04     		lsls	r3, r3, #17
 1079 000e 09D5     		bpl	.L70
 1080              		.loc 1 423 3 is_stmt 1 discriminator 1 view .LVU163
 1081 0010 0368     		ldr	r3, [r0]
 1082 0012 23F4E043 		bic	r3, r3, #28672
 1083 0016 23F07003 		bic	r3, r3, #112
 1084 001a 1B04     		lsls	r3, r3, #16
 1085 001c 1B0C     		lsrs	r3, r3, #16
 1086 001e 43F48043 		orr	r3, r3, #16384
 1087 0022 0360     		str	r3, [r0]
 1088              	.L70:
 424:usb_lib/usb_regs.c **** }
 1089              		.loc 1 424 1 is_stmt 0 view .LVU164
 1090 0024 7047     		bx	lr
 1091              		.cfi_endproc
 1092              	.LFE32:
 1094              		.section	.text.ClearDTOG_TX,"ax",%progbits
 1095              		.align	1
 1096              		.global	ClearDTOG_TX
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1100              		.fpu softvfp
 1102              	ClearDTOG_TX:
 1103              	.LVL59:
 1104              	.LFB33:
 425:usb_lib/usb_regs.c **** /*******************************************************************************
 426:usb_lib/usb_regs.c **** * Function Name  : ClearDTOG_TX.
 427:usb_lib/usb_regs.c **** * Description    : Clear the DTOG_TX bit.
 428:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 429:usb_lib/usb_regs.c **** * Output         : None.
 430:usb_lib/usb_regs.c **** * Return         : None.
 431:usb_lib/usb_regs.c **** *******************************************************************************/
 432:usb_lib/usb_regs.c **** void ClearDTOG_TX(u8 bEpNum)
 433:usb_lib/usb_regs.c **** {
 1105              		.loc 1 433 1 is_stmt 1 view -0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
 434:usb_lib/usb_regs.c ****   _ClearDTOG_TX(bEpNum);
 1110              		.loc 1 434 3 view .LVU166
 1111 0000 8000     		lsls	r0, r0, #2
 1112              	.LVL60:
 1113              		.loc 1 434 3 is_stmt 0 view .LVU167
 1114 0002 00F18040 		add	r0, r0, #1073741824
 1115 0006 00F5B840 		add	r0, r0, #23552
 1116 000a 0368     		ldr	r3, [r0]
 1117 000c 5B06     		lsls	r3, r3, #25
 1118 000e 09D5     		bpl	.L75
 1119              		.loc 1 434 3 is_stmt 1 discriminator 1 view .LVU168
 1120 0010 0368     		ldr	r3, [r0]
 1121 0012 23F4E043 		bic	r3, r3, #28672
 1122 0016 23F07003 		bic	r3, r3, #112
 1123 001a 1B04     		lsls	r3, r3, #16
 1124 001c 1B0C     		lsrs	r3, r3, #16
 1125 001e 43F04003 		orr	r3, r3, #64
 1126 0022 0360     		str	r3, [r0]
 1127              	.L75:
 435:usb_lib/usb_regs.c **** }
 1128              		.loc 1 435 1 is_stmt 0 view .LVU169
 1129 0024 7047     		bx	lr
 1130              		.cfi_endproc
 1131              	.LFE33:
 1133              		.section	.text.SetEPAddress,"ax",%progbits
 1134              		.align	1
 1135              		.global	SetEPAddress
 1136              		.syntax unified
 1137              		.thumb
 1138              		.thumb_func
 1139              		.fpu softvfp
 1141              	SetEPAddress:
 1142              	.LVL61:
 1143              	.LFB34:
 436:usb_lib/usb_regs.c **** /*******************************************************************************
 437:usb_lib/usb_regs.c **** * Function Name  : SetEPAddress
 438:usb_lib/usb_regs.c **** * Description    : Set the endpoint address.
 439:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 440:usb_lib/usb_regs.c **** *                  bAddr: New endpoint address.
 441:usb_lib/usb_regs.c **** * Output         : None.
 442:usb_lib/usb_regs.c **** * Return         : None.
 443:usb_lib/usb_regs.c **** *******************************************************************************/
 444:usb_lib/usb_regs.c **** void SetEPAddress(u8 bEpNum, u8 bAddr)
 445:usb_lib/usb_regs.c **** {
 1144              		.loc 1 445 1 is_stmt 1 view -0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
 446:usb_lib/usb_regs.c ****   _SetEPAddress(bEpNum, bAddr);
 1149              		.loc 1 446 3 view .LVU171
 1150 0000 8000     		lsls	r0, r0, #2
 1151              	.LVL62:
 1152              		.loc 1 446 3 is_stmt 0 view .LVU172
 1153 0002 00F18040 		add	r0, r0, #1073741824
 1154 0006 00F5B840 		add	r0, r0, #23552
 1155 000a 0368     		ldr	r3, [r0]
 1156 000c 23F4E043 		bic	r3, r3, #28672
 1157 0010 23F07003 		bic	r3, r3, #112
 1158 0014 1B04     		lsls	r3, r3, #16
 1159 0016 1B0C     		lsrs	r3, r3, #16
 1160 0018 0B43     		orrs	r3, r3, r1
 1161 001a 0360     		str	r3, [r0]
 447:usb_lib/usb_regs.c **** }
 1162              		.loc 1 447 1 view .LVU173
 1163 001c 7047     		bx	lr
 1164              		.cfi_endproc
 1165              	.LFE34:
 1167              		.section	.text.GetEPAddress,"ax",%progbits
 1168              		.align	1
 1169              		.global	GetEPAddress
 1170              		.syntax unified
 1171              		.thumb
 1172              		.thumb_func
 1173              		.fpu softvfp
 1175              	GetEPAddress:
 1176              	.LVL63:
 1177              	.LFB35:
 448:usb_lib/usb_regs.c **** /*******************************************************************************
 449:usb_lib/usb_regs.c **** * Function Name  : GetEPAddress
 450:usb_lib/usb_regs.c **** * Description    : Get the endpoint address.
 451:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 452:usb_lib/usb_regs.c **** * Output         : None.
 453:usb_lib/usb_regs.c **** * Return         : Endpoint address.
 454:usb_lib/usb_regs.c **** *******************************************************************************/
 455:usb_lib/usb_regs.c **** u8 GetEPAddress(u8 bEpNum)
 456:usb_lib/usb_regs.c **** {
 1178              		.loc 1 456 1 is_stmt 1 view -0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182              		@ link register save eliminated.
 457:usb_lib/usb_regs.c ****   return(_GetEPAddress(bEpNum));
 1183              		.loc 1 457 3 view .LVU175
 1184              		.loc 1 457 10 is_stmt 0 view .LVU176
 1185 0000 8000     		lsls	r0, r0, #2
 1186              	.LVL64:
 1187              		.loc 1 457 10 view .LVU177
 1188 0002 00F18040 		add	r0, r0, #1073741824
 1189 0006 00F5B840 		add	r0, r0, #23552
 1190 000a 0068     		ldr	r0, [r0]
 458:usb_lib/usb_regs.c **** }
 1191              		.loc 1 458 1 view .LVU178
 1192 000c 00F00F00 		and	r0, r0, #15
 1193 0010 7047     		bx	lr
 1194              		.cfi_endproc
 1195              	.LFE35:
 1197              		.section	.text.SetEPTxAddr,"ax",%progbits
 1198              		.align	1
 1199              		.global	SetEPTxAddr
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1203              		.fpu softvfp
 1205              	SetEPTxAddr:
 1206              	.LVL65:
 1207              	.LFB36:
 459:usb_lib/usb_regs.c **** /*******************************************************************************
 460:usb_lib/usb_regs.c **** * Function Name  : SetEPTxAddr
 461:usb_lib/usb_regs.c **** * Description    : Set the endpoint Tx buffer address.
 462:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 463:usb_lib/usb_regs.c **** *                  wAddr: new address.
 464:usb_lib/usb_regs.c **** * Output         : None.
 465:usb_lib/usb_regs.c **** * Return         : None.
 466:usb_lib/usb_regs.c **** *******************************************************************************/
 467:usb_lib/usb_regs.c **** void SetEPTxAddr(u8 bEpNum, u16 wAddr)
 468:usb_lib/usb_regs.c **** {
 1208              		.loc 1 468 1 is_stmt 1 view -0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212              		@ link register save eliminated.
 469:usb_lib/usb_regs.c ****   _SetEPTxAddr(bEpNum, wAddr);
 1213              		.loc 1 469 3 view .LVU180
 1214 0000 074B     		ldr	r3, .L83
 1215 0002 4908     		lsrs	r1, r1, #1
 1216              	.LVL66:
 1217              		.loc 1 469 3 is_stmt 0 view .LVU181
 1218 0004 D3F8503C 		ldr	r3, [r3, #3152]
 1219 0008 4900     		lsls	r1, r1, #1
 1220 000a 9BB2     		uxth	r3, r3
 1221 000c 03EBC000 		add	r0, r3, r0, lsl #3
 1222              	.LVL67:
 1223              		.loc 1 469 3 view .LVU182
 1224 0010 00F10050 		add	r0, r0, #536870912
 1225 0014 00F54050 		add	r0, r0, #12288
 1226 0018 4000     		lsls	r0, r0, #1
 1227 001a 0160     		str	r1, [r0]
 470:usb_lib/usb_regs.c **** }
 1228              		.loc 1 470 1 view .LVU183
 1229 001c 7047     		bx	lr
 1230              	.L84:
 1231 001e 00BF     		.align	2
 1232              	.L83:
 1233 0020 00500040 		.word	1073762304
 1234              		.cfi_endproc
 1235              	.LFE36:
 1237              		.section	.text.SetEPRxAddr,"ax",%progbits
 1238              		.align	1
 1239              		.global	SetEPRxAddr
 1240              		.syntax unified
 1241              		.thumb
 1242              		.thumb_func
 1243              		.fpu softvfp
 1245              	SetEPRxAddr:
 1246              	.LVL68:
 1247              	.LFB37:
 471:usb_lib/usb_regs.c **** /*******************************************************************************
 472:usb_lib/usb_regs.c **** * Function Name  : SetEPRxAddr
 473:usb_lib/usb_regs.c **** * Description    : Set the endpoint Rx buffer address.
 474:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 475:usb_lib/usb_regs.c **** *                  wAddr: new address.
 476:usb_lib/usb_regs.c **** * Output         : None.
 477:usb_lib/usb_regs.c **** * Return         : None.
 478:usb_lib/usb_regs.c **** *******************************************************************************/
 479:usb_lib/usb_regs.c **** void SetEPRxAddr(u8 bEpNum, u16 wAddr)
 480:usb_lib/usb_regs.c **** {
 1248              		.loc 1 480 1 is_stmt 1 view -0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
 481:usb_lib/usb_regs.c ****   _SetEPRxAddr(bEpNum, wAddr);
 1253              		.loc 1 481 3 view .LVU185
 1254 0000 064B     		ldr	r3, .L86
 1255 0002 4908     		lsrs	r1, r1, #1
 1256              	.LVL69:
 1257              		.loc 1 481 3 is_stmt 0 view .LVU186
 1258 0004 D3F8503C 		ldr	r3, [r3, #3152]
 1259 0008 4900     		lsls	r1, r1, #1
 1260 000a 9BB2     		uxth	r3, r3
 1261 000c 03EBC000 		add	r0, r3, r0, lsl #3
 1262              	.LVL70:
 1263              		.loc 1 481 3 view .LVU187
 1264 0010 034B     		ldr	r3, .L86+4
 1265 0012 0344     		add	r3, r3, r0
 1266 0014 5B00     		lsls	r3, r3, #1
 1267 0016 1960     		str	r1, [r3]
 482:usb_lib/usb_regs.c **** }
 1268              		.loc 1 482 1 view .LVU188
 1269 0018 7047     		bx	lr
 1270              	.L87:
 1271 001a 00BF     		.align	2
 1272              	.L86:
 1273 001c 00500040 		.word	1073762304
 1274 0020 04300020 		.word	536883204
 1275              		.cfi_endproc
 1276              	.LFE37:
 1278              		.section	.text.GetEPTxAddr,"ax",%progbits
 1279              		.align	1
 1280              		.global	GetEPTxAddr
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1284              		.fpu softvfp
 1286              	GetEPTxAddr:
 1287              	.LVL71:
 1288              	.LFB38:
 483:usb_lib/usb_regs.c **** /*******************************************************************************
 484:usb_lib/usb_regs.c **** * Function Name  : GetEPTxAddr
 485:usb_lib/usb_regs.c **** * Description    : Returns the endpoint Tx buffer address.
 486:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 487:usb_lib/usb_regs.c **** * Output         : None.
 488:usb_lib/usb_regs.c **** * Return         : Rx buffer address.
 489:usb_lib/usb_regs.c **** *******************************************************************************/
 490:usb_lib/usb_regs.c **** u16 GetEPTxAddr(u8 bEpNum)
 491:usb_lib/usb_regs.c **** {
 1289              		.loc 1 491 1 is_stmt 1 view -0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              		@ link register save eliminated.
 492:usb_lib/usb_regs.c ****   return(_GetEPTxAddr(bEpNum));
 1294              		.loc 1 492 3 view .LVU190
 1295              		.loc 1 492 10 is_stmt 0 view .LVU191
 1296 0000 064B     		ldr	r3, .L89
 1297 0002 D3F8503C 		ldr	r3, [r3, #3152]
 1298 0006 9BB2     		uxth	r3, r3
 1299 0008 03EBC000 		add	r0, r3, r0, lsl #3
 1300              	.LVL72:
 1301              		.loc 1 492 10 view .LVU192
 1302 000c 00F10050 		add	r0, r0, #536870912
 1303 0010 00F54050 		add	r0, r0, #12288
 1304 0014 4000     		lsls	r0, r0, #1
 1305 0016 0068     		ldr	r0, [r0]
 493:usb_lib/usb_regs.c **** }
 1306              		.loc 1 493 1 view .LVU193
 1307 0018 80B2     		uxth	r0, r0
 1308 001a 7047     		bx	lr
 1309              	.L90:
 1310              		.align	2
 1311              	.L89:
 1312 001c 00500040 		.word	1073762304
 1313              		.cfi_endproc
 1314              	.LFE38:
 1316              		.section	.text.GetEPRxAddr,"ax",%progbits
 1317              		.align	1
 1318              		.global	GetEPRxAddr
 1319              		.syntax unified
 1320              		.thumb
 1321              		.thumb_func
 1322              		.fpu softvfp
 1324              	GetEPRxAddr:
 1325              	.LVL73:
 1326              	.LFB39:
 494:usb_lib/usb_regs.c **** /*******************************************************************************
 495:usb_lib/usb_regs.c **** * Function Name  : GetEPRxAddr.
 496:usb_lib/usb_regs.c **** * Description    : Returns the endpoint Rx buffer address.
 497:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 498:usb_lib/usb_regs.c **** * Output         : None.
 499:usb_lib/usb_regs.c **** * Return         : Rx buffer address.
 500:usb_lib/usb_regs.c **** *******************************************************************************/
 501:usb_lib/usb_regs.c **** u16 GetEPRxAddr(u8 bEpNum)
 502:usb_lib/usb_regs.c **** {
 1327              		.loc 1 502 1 is_stmt 1 view -0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331              		@ link register save eliminated.
 503:usb_lib/usb_regs.c ****   return(_GetEPRxAddr(bEpNum));
 1332              		.loc 1 503 3 view .LVU195
 1333              		.loc 1 503 10 is_stmt 0 view .LVU196
 1334 0000 054B     		ldr	r3, .L92
 1335 0002 D3F8503C 		ldr	r3, [r3, #3152]
 1336 0006 9BB2     		uxth	r3, r3
 1337 0008 03EBC000 		add	r0, r3, r0, lsl #3
 1338              	.LVL74:
 1339              		.loc 1 503 10 view .LVU197
 1340 000c 034B     		ldr	r3, .L92+4
 1341 000e 0344     		add	r3, r3, r0
 1342 0010 5B00     		lsls	r3, r3, #1
 1343 0012 1868     		ldr	r0, [r3]
 504:usb_lib/usb_regs.c **** }
 1344              		.loc 1 504 1 view .LVU198
 1345 0014 80B2     		uxth	r0, r0
 1346 0016 7047     		bx	lr
 1347              	.L93:
 1348              		.align	2
 1349              	.L92:
 1350 0018 00500040 		.word	1073762304
 1351 001c 04300020 		.word	536883204
 1352              		.cfi_endproc
 1353              	.LFE39:
 1355              		.section	.text.SetEPTxCount,"ax",%progbits
 1356              		.align	1
 1357              		.global	SetEPTxCount
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.fpu softvfp
 1363              	SetEPTxCount:
 1364              	.LVL75:
 1365              	.LFB40:
 505:usb_lib/usb_regs.c **** /*******************************************************************************
 506:usb_lib/usb_regs.c **** * Function Name  : SetEPTxCount.
 507:usb_lib/usb_regs.c **** * Description    : Set the Tx count.
 508:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 509:usb_lib/usb_regs.c **** *                  wCount: new count value.
 510:usb_lib/usb_regs.c **** * Output         : None.
 511:usb_lib/usb_regs.c **** * Return         : None.
 512:usb_lib/usb_regs.c **** *******************************************************************************/
 513:usb_lib/usb_regs.c **** void SetEPTxCount(u8 bEpNum, u16 wCount)
 514:usb_lib/usb_regs.c **** {
 1366              		.loc 1 514 1 is_stmt 1 view -0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              		@ link register save eliminated.
 515:usb_lib/usb_regs.c ****   _SetEPTxCount(bEpNum, wCount);
 1371              		.loc 1 515 3 view .LVU200
 1372 0000 054B     		ldr	r3, .L95
 1373 0002 D3F8503C 		ldr	r3, [r3, #3152]
 1374 0006 9BB2     		uxth	r3, r3
 1375 0008 03EBC000 		add	r0, r3, r0, lsl #3
 1376              	.LVL76:
 1377              		.loc 1 515 3 is_stmt 0 view .LVU201
 1378 000c 034B     		ldr	r3, .L95+4
 1379 000e 0344     		add	r3, r3, r0
 1380 0010 5B00     		lsls	r3, r3, #1
 1381 0012 1960     		str	r1, [r3]
 516:usb_lib/usb_regs.c **** }
 1382              		.loc 1 516 1 view .LVU202
 1383 0014 7047     		bx	lr
 1384              	.L96:
 1385 0016 00BF     		.align	2
 1386              	.L95:
 1387 0018 00500040 		.word	1073762304
 1388 001c 02300020 		.word	536883202
 1389              		.cfi_endproc
 1390              	.LFE40:
 1392              		.section	.text.SetEPCountRxReg,"ax",%progbits
 1393              		.align	1
 1394              		.global	SetEPCountRxReg
 1395              		.syntax unified
 1396              		.thumb
 1397              		.thumb_func
 1398              		.fpu softvfp
 1400              	SetEPCountRxReg:
 1401              	.LVL77:
 1402              	.LFB41:
 517:usb_lib/usb_regs.c **** /*******************************************************************************
 518:usb_lib/usb_regs.c **** * Function Name  : SetEPCountRxReg.
 519:usb_lib/usb_regs.c **** * Description    : Set the Count Rx Register value.
 520:usb_lib/usb_regs.c **** * Input          : *pdwReg: point to the register.
 521:usb_lib/usb_regs.c **** *                  wCount: the new register value.
 522:usb_lib/usb_regs.c **** * Output         : None.
 523:usb_lib/usb_regs.c **** * Return         : None.
 524:usb_lib/usb_regs.c **** *******************************************************************************/
 525:usb_lib/usb_regs.c **** void SetEPCountRxReg(u32 *pdwReg, u16 wCount)
 526:usb_lib/usb_regs.c **** {
 1403              		.loc 1 526 1 is_stmt 1 view -0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407              		@ link register save eliminated.
 1408              	.LBB12:
 527:usb_lib/usb_regs.c ****   _SetEPCountRxReg(dwReg, wCount);
 1409              		.loc 1 527 3 view .LVU204
 1410              		.loc 1 527 3 view .LVU205
 1411 0000 3E29     		cmp	r1, #62
 1412 0002 0AD9     		bls	.L98
 1413              		.loc 1 527 3 discriminator 1 view .LVU206
 1414 0004 4B09     		lsrs	r3, r1, #5
 1415              	.LVL78:
 1416              		.loc 1 527 3 discriminator 1 view .LVU207
 1417 0006 C906     		lsls	r1, r1, #27
 1418              	.LVL79:
 1419              		.loc 1 527 3 discriminator 1 view .LVU208
 1420 0008 04BF     		itt	eq
 1421 000a 03F1FF33 		addeq	r3, r3, #-1
 1422              	.LVL80:
 1423              		.loc 1 527 3 is_stmt 0 discriminator 1 view .LVU209
 1424 000e 9BB2     		uxtheq	r3, r3
 1425              	.LVL81:
 1426              		.loc 1 527 3 is_stmt 1 discriminator 1 view .LVU210
 1427 0010 9B02     		lsls	r3, r3, #10
 1428              	.LVL82:
 1429              		.loc 1 527 3 is_stmt 0 discriminator 1 view .LVU211
 1430 0012 43F40043 		orr	r3, r3, #32768
 1431              	.L105:
 1432              		.loc 1 527 3 discriminator 9 view .LVU212
 1433 0016 0360     		str	r3, [r0]
 1434              		.loc 1 527 3 is_stmt 1 discriminator 9 view .LVU213
 1435              	.LBE12:
 1436              		.loc 1 527 34 discriminator 9 view .LVU214
 528:usb_lib/usb_regs.c **** }
 1437              		.loc 1 528 1 is_stmt 0 discriminator 9 view .LVU215
 1438 0018 7047     		bx	lr
 1439              	.LVL83:
 1440              	.L98:
 1441              	.LBB13:
 527:usb_lib/usb_regs.c ****   _SetEPCountRxReg(dwReg, wCount);
 1442              		.loc 1 527 3 is_stmt 1 discriminator 2 view .LVU216
 1443 001a 4B08     		lsrs	r3, r1, #1
 1444              	.LVL84:
 527:usb_lib/usb_regs.c ****   _SetEPCountRxReg(dwReg, wCount);
 1445              		.loc 1 527 3 discriminator 2 view .LVU217
 1446 001c CA07     		lsls	r2, r1, #31
 527:usb_lib/usb_regs.c ****   _SetEPCountRxReg(dwReg, wCount);
 1447              		.loc 1 527 3 discriminator 2 view .LVU218
 1448 001e 48BF     		it	mi
 1449 0020 0133     		addmi	r3, r3, #1
 1450              	.LVL85:
 527:usb_lib/usb_regs.c ****   _SetEPCountRxReg(dwReg, wCount);
 1451              		.loc 1 527 3 discriminator 2 view .LVU219
 1452 0022 9B02     		lsls	r3, r3, #10
 1453              	.LVL86:
 527:usb_lib/usb_regs.c ****   _SetEPCountRxReg(dwReg, wCount);
 1454              		.loc 1 527 3 is_stmt 0 discriminator 2 view .LVU220
 1455 0024 F7E7     		b	.L105
 1456              	.LBE13:
 1457              		.cfi_endproc
 1458              	.LFE41:
 1460              		.section	.text.SetEPRxCount,"ax",%progbits
 1461              		.align	1
 1462              		.global	SetEPRxCount
 1463              		.syntax unified
 1464              		.thumb
 1465              		.thumb_func
 1466              		.fpu softvfp
 1468              	SetEPRxCount:
 1469              	.LVL87:
 1470              	.LFB42:
 529:usb_lib/usb_regs.c **** /*******************************************************************************
 530:usb_lib/usb_regs.c **** * Function Name  : SetEPRxCount
 531:usb_lib/usb_regs.c **** * Description    : Set the Rx count.
 532:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 533:usb_lib/usb_regs.c **** *                  wCount: the new count value.
 534:usb_lib/usb_regs.c **** * Output         : None.
 535:usb_lib/usb_regs.c **** * Return         : None.
 536:usb_lib/usb_regs.c **** *******************************************************************************/
 537:usb_lib/usb_regs.c **** void SetEPRxCount(u8 bEpNum, u16 wCount)
 538:usb_lib/usb_regs.c **** {
 1471              		.loc 1 538 1 is_stmt 1 view -0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 1476              	.LBB14:
 539:usb_lib/usb_regs.c ****   _SetEPRxCount(bEpNum, wCount);
 1477              		.loc 1 539 3 view .LVU222
 1478 0000 0E4B     		ldr	r3, .L115
 1479 0002 0F4A     		ldr	r2, .L115+4
 1480 0004 D3F8503C 		ldr	r3, [r3, #3152]
 1481              	.LBB15:
 1482 0008 3E29     		cmp	r1, #62
 1483              	.LBE15:
 1484 000a 9BB2     		uxth	r3, r3
 1485 000c 03EBC000 		add	r0, r3, r0, lsl #3
 1486              	.LVL88:
 1487              		.loc 1 539 3 is_stmt 0 view .LVU223
 1488 0010 0244     		add	r2, r2, r0
 1489 0012 4FEA4202 		lsl	r2, r2, #1
 1490              	.LVL89:
 1491              	.LBB16:
 1492              		.loc 1 539 3 is_stmt 1 view .LVU224
 1493              		.loc 1 539 3 view .LVU225
 1494 0016 0AD9     		bls	.L107
 1495              		.loc 1 539 3 discriminator 1 view .LVU226
 1496 0018 4B09     		lsrs	r3, r1, #5
 1497              	.LVL90:
 1498              		.loc 1 539 3 discriminator 1 view .LVU227
 1499 001a C806     		lsls	r0, r1, #27
 1500              		.loc 1 539 3 discriminator 1 view .LVU228
 1501 001c 04BF     		itt	eq
 1502 001e 03F1FF33 		addeq	r3, r3, #-1
 1503              	.LVL91:
 1504              		.loc 1 539 3 is_stmt 0 discriminator 1 view .LVU229
 1505 0022 9BB2     		uxtheq	r3, r3
 1506              	.LVL92:
 1507              		.loc 1 539 3 is_stmt 1 discriminator 1 view .LVU230
 1508 0024 9B02     		lsls	r3, r3, #10
 1509              	.LVL93:
 1510              		.loc 1 539 3 is_stmt 0 discriminator 1 view .LVU231
 1511 0026 43F40043 		orr	r3, r3, #32768
 1512              	.LVL94:
 1513              	.L114:
 1514              		.loc 1 539 3 discriminator 9 view .LVU232
 1515 002a 1360     		str	r3, [r2]
 1516              		.loc 1 539 3 is_stmt 1 discriminator 9 view .LVU233
 1517              	.LBE16:
 1518              		.loc 1 539 3 discriminator 9 view .LVU234
 1519              	.LBE14:
 1520              		.loc 1 539 32 discriminator 9 view .LVU235
 540:usb_lib/usb_regs.c **** }
 1521              		.loc 1 540 1 is_stmt 0 discriminator 9 view .LVU236
 1522 002c 7047     		bx	lr
 1523              	.LVL95:
 1524              	.L107:
 1525              	.LBB18:
 1526              	.LBB17:
 539:usb_lib/usb_regs.c ****   _SetEPRxCount(bEpNum, wCount);
 1527              		.loc 1 539 3 is_stmt 1 discriminator 2 view .LVU237
 1528 002e 4B08     		lsrs	r3, r1, #1
 1529              	.LVL96:
 539:usb_lib/usb_regs.c ****   _SetEPRxCount(bEpNum, wCount);
 1530              		.loc 1 539 3 discriminator 2 view .LVU238
 1531 0030 C907     		lsls	r1, r1, #31
 1532              	.LVL97:
 539:usb_lib/usb_regs.c ****   _SetEPRxCount(bEpNum, wCount);
 1533              		.loc 1 539 3 discriminator 2 view .LVU239
 1534 0032 48BF     		it	mi
 1535 0034 0133     		addmi	r3, r3, #1
 1536              	.LVL98:
 539:usb_lib/usb_regs.c ****   _SetEPRxCount(bEpNum, wCount);
 1537              		.loc 1 539 3 discriminator 2 view .LVU240
 1538 0036 9B02     		lsls	r3, r3, #10
 1539              	.LVL99:
 539:usb_lib/usb_regs.c ****   _SetEPRxCount(bEpNum, wCount);
 1540              		.loc 1 539 3 is_stmt 0 discriminator 2 view .LVU241
 1541 0038 F7E7     		b	.L114
 1542              	.L116:
 1543 003a 00BF     		.align	2
 1544              	.L115:
 1545 003c 00500040 		.word	1073762304
 1546 0040 06300020 		.word	536883206
 1547              	.LBE17:
 1548              	.LBE18:
 1549              		.cfi_endproc
 1550              	.LFE42:
 1552              		.section	.text.GetEPTxCount,"ax",%progbits
 1553              		.align	1
 1554              		.global	GetEPTxCount
 1555              		.syntax unified
 1556              		.thumb
 1557              		.thumb_func
 1558              		.fpu softvfp
 1560              	GetEPTxCount:
 1561              	.LVL100:
 1562              	.LFB43:
 541:usb_lib/usb_regs.c **** /*******************************************************************************
 542:usb_lib/usb_regs.c **** * Function Name  : GetEPTxCount
 543:usb_lib/usb_regs.c **** * Description    : Get the Tx count.
 544:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 545:usb_lib/usb_regs.c **** * Output         : None
 546:usb_lib/usb_regs.c **** * Return         : Tx count value.
 547:usb_lib/usb_regs.c **** *******************************************************************************/
 548:usb_lib/usb_regs.c **** u16 GetEPTxCount(u8 bEpNum)
 549:usb_lib/usb_regs.c **** {
 1563              		.loc 1 549 1 is_stmt 1 view -0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567              		@ link register save eliminated.
 550:usb_lib/usb_regs.c ****   return(_GetEPTxCount(bEpNum));
 1568              		.loc 1 550 3 view .LVU243
 1569              		.loc 1 550 10 is_stmt 0 view .LVU244
 1570 0000 064B     		ldr	r3, .L118
 1571 0002 D3F8503C 		ldr	r3, [r3, #3152]
 1572 0006 9BB2     		uxth	r3, r3
 1573 0008 03EBC000 		add	r0, r3, r0, lsl #3
 1574              	.LVL101:
 1575              		.loc 1 550 10 view .LVU245
 1576 000c 044B     		ldr	r3, .L118+4
 1577 000e 0344     		add	r3, r3, r0
 1578 0010 5B00     		lsls	r3, r3, #1
 1579 0012 1868     		ldr	r0, [r3]
 551:usb_lib/usb_regs.c **** }
 1580              		.loc 1 551 1 view .LVU246
 1581 0014 C0F30900 		ubfx	r0, r0, #0, #10
 1582 0018 7047     		bx	lr
 1583              	.L119:
 1584 001a 00BF     		.align	2
 1585              	.L118:
 1586 001c 00500040 		.word	1073762304
 1587 0020 02300020 		.word	536883202
 1588              		.cfi_endproc
 1589              	.LFE43:
 1591              		.section	.text.GetEPRxCount,"ax",%progbits
 1592              		.align	1
 1593              		.global	GetEPRxCount
 1594              		.syntax unified
 1595              		.thumb
 1596              		.thumb_func
 1597              		.fpu softvfp
 1599              	GetEPRxCount:
 1600              	.LVL102:
 1601              	.LFB44:
 552:usb_lib/usb_regs.c **** /*******************************************************************************
 553:usb_lib/usb_regs.c **** * Function Name  : GetEPRxCount
 554:usb_lib/usb_regs.c **** * Description    : Get the Rx count.
 555:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 556:usb_lib/usb_regs.c **** * Output         : None.
 557:usb_lib/usb_regs.c **** * Return         : Rx count value.
 558:usb_lib/usb_regs.c **** *******************************************************************************/
 559:usb_lib/usb_regs.c **** u16 GetEPRxCount(u8 bEpNum)
 560:usb_lib/usb_regs.c **** {
 1602              		.loc 1 560 1 is_stmt 1 view -0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 1606              		@ link register save eliminated.
 561:usb_lib/usb_regs.c ****   return(_GetEPRxCount(bEpNum));
 1607              		.loc 1 561 3 view .LVU248
 1608              		.loc 1 561 10 is_stmt 0 view .LVU249
 1609 0000 064B     		ldr	r3, .L121
 1610 0002 D3F8503C 		ldr	r3, [r3, #3152]
 1611 0006 9BB2     		uxth	r3, r3
 1612 0008 03EBC000 		add	r0, r3, r0, lsl #3
 1613              	.LVL103:
 1614              		.loc 1 561 10 view .LVU250
 1615 000c 044B     		ldr	r3, .L121+4
 1616 000e 0344     		add	r3, r3, r0
 1617 0010 5B00     		lsls	r3, r3, #1
 1618 0012 1868     		ldr	r0, [r3]
 562:usb_lib/usb_regs.c **** }
 1619              		.loc 1 562 1 view .LVU251
 1620 0014 C0F30900 		ubfx	r0, r0, #0, #10
 1621 0018 7047     		bx	lr
 1622              	.L122:
 1623 001a 00BF     		.align	2
 1624              	.L121:
 1625 001c 00500040 		.word	1073762304
 1626 0020 06300020 		.word	536883206
 1627              		.cfi_endproc
 1628              	.LFE44:
 1630              		.section	.text.SetEPDblBuffAddr,"ax",%progbits
 1631              		.align	1
 1632              		.global	SetEPDblBuffAddr
 1633              		.syntax unified
 1634              		.thumb
 1635              		.thumb_func
 1636              		.fpu softvfp
 1638              	SetEPDblBuffAddr:
 1639              	.LVL104:
 1640              	.LFB45:
 563:usb_lib/usb_regs.c **** /*******************************************************************************
 564:usb_lib/usb_regs.c **** * Function Name  : SetEPDblBuffAddr
 565:usb_lib/usb_regs.c **** * Description    : Set the addresses of the buffer 0 and 1.
 566:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 567:usb_lib/usb_regs.c **** *                  wBuf0Addr: new address of buffer 0.
 568:usb_lib/usb_regs.c **** *                  wBuf1Addr: new address of buffer 1.
 569:usb_lib/usb_regs.c **** * Output         : None.
 570:usb_lib/usb_regs.c **** * Return         : None.
 571:usb_lib/usb_regs.c **** *******************************************************************************/
 572:usb_lib/usb_regs.c **** void SetEPDblBuffAddr(u8 bEpNum, u16 wBuf0Addr, u16 wBuf1Addr)
 573:usb_lib/usb_regs.c **** {
 1641              		.loc 1 573 1 is_stmt 1 view -0
 1642              		.cfi_startproc
 1643              		@ args = 0, pretend = 0, frame = 0
 1644              		@ frame_needed = 0, uses_anonymous_args = 0
 574:usb_lib/usb_regs.c ****   _SetEPDblBuffAddr(bEpNum, wBuf0Addr, wBuf1Addr);
 1645              		.loc 1 574 3 view .LVU253
 573:usb_lib/usb_regs.c ****   _SetEPDblBuffAddr(bEpNum, wBuf0Addr, wBuf1Addr);
 1646              		.loc 1 573 1 is_stmt 0 view .LVU254
 1647 0000 10B5     		push	{r4, lr}
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 4, -8
 1650              		.cfi_offset 14, -4
 1651              		.loc 1 574 3 view .LVU255
 1652 0002 0D4C     		ldr	r4, .L124
 1653 0004 4908     		lsrs	r1, r1, #1
 1654              	.LVL105:
 1655              		.loc 1 574 3 view .LVU256
 1656 0006 D4F8503C 		ldr	r3, [r4, #3152]
 1657 000a 4900     		lsls	r1, r1, #1
 1658 000c 9BB2     		uxth	r3, r3
 1659 000e 03EBC003 		add	r3, r3, r0, lsl #3
 1660 0012 03F10053 		add	r3, r3, #536870912
 1661 0016 03F54053 		add	r3, r3, #12288
 1662 001a 5B00     		lsls	r3, r3, #1
 1663 001c 1960     		str	r1, [r3]
 1664              		.loc 1 574 3 is_stmt 1 view .LVU257
 1665              		.loc 1 574 3 view .LVU258
 1666 001e D4F8503C 		ldr	r3, [r4, #3152]
 1667 0022 5208     		lsrs	r2, r2, #1
 1668              	.LVL106:
 1669              		.loc 1 574 3 is_stmt 0 view .LVU259
 1670 0024 9BB2     		uxth	r3, r3
 1671 0026 03EBC000 		add	r0, r3, r0, lsl #3
 1672              	.LVL107:
 1673              		.loc 1 574 3 view .LVU260
 1674 002a 044B     		ldr	r3, .L124+4
 1675 002c 5200     		lsls	r2, r2, #1
 1676 002e 0344     		add	r3, r3, r0
 1677 0030 5B00     		lsls	r3, r3, #1
 1678 0032 1A60     		str	r2, [r3]
 1679              		.loc 1 574 3 is_stmt 1 view .LVU261
 1680              		.loc 1 574 50 view .LVU262
 575:usb_lib/usb_regs.c **** }
 1681              		.loc 1 575 1 is_stmt 0 view .LVU263
 1682 0034 10BD     		pop	{r4, pc}
 1683              	.L125:
 1684 0036 00BF     		.align	2
 1685              	.L124:
 1686 0038 00500040 		.word	1073762304
 1687 003c 04300020 		.word	536883204
 1688              		.cfi_endproc
 1689              	.LFE45:
 1691              		.section	.text.SetEPDblBuf0Addr,"ax",%progbits
 1692              		.align	1
 1693              		.global	SetEPDblBuf0Addr
 1694              		.syntax unified
 1695              		.thumb
 1696              		.thumb_func
 1697              		.fpu softvfp
 1699              	SetEPDblBuf0Addr:
 1700              	.LFB68:
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
 1705 0000 FFF7FEBF 		b	SetEPTxAddr
 1706              		.cfi_endproc
 1707              	.LFE68:
 1709              		.section	.text.SetEPDblBuf1Addr,"ax",%progbits
 1710              		.align	1
 1711              		.global	SetEPDblBuf1Addr
 1712              		.syntax unified
 1713              		.thumb
 1714              		.thumb_func
 1715              		.fpu softvfp
 1717              	SetEPDblBuf1Addr:
 1718              	.LFB70:
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
 1721              		@ frame_needed = 0, uses_anonymous_args = 0
 1722              		@ link register save eliminated.
 1723 0000 FFF7FEBF 		b	SetEPRxAddr
 1724              		.cfi_endproc
 1725              	.LFE70:
 1727              		.section	.text.GetEPDblBuf0Addr,"ax",%progbits
 1728              		.align	1
 1729              		.global	GetEPDblBuf0Addr
 1730              		.syntax unified
 1731              		.thumb
 1732              		.thumb_func
 1733              		.fpu softvfp
 1735              	GetEPDblBuf0Addr:
 1736              	.LFB72:
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 0
 1739              		@ frame_needed = 0, uses_anonymous_args = 0
 1740              		@ link register save eliminated.
 1741 0000 FFF7FEBF 		b	GetEPTxAddr
 1742              		.cfi_endproc
 1743              	.LFE72:
 1745              		.section	.text.GetEPDblBuf1Addr,"ax",%progbits
 1746              		.align	1
 1747              		.global	GetEPDblBuf1Addr
 1748              		.syntax unified
 1749              		.thumb
 1750              		.thumb_func
 1751              		.fpu softvfp
 1753              	GetEPDblBuf1Addr:
 1754              	.LFB74:
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 0
 1757              		@ frame_needed = 0, uses_anonymous_args = 0
 1758              		@ link register save eliminated.
 1759 0000 FFF7FEBF 		b	GetEPRxAddr
 1760              		.cfi_endproc
 1761              	.LFE74:
 1763              		.section	.text.SetEPDblBuffCount,"ax",%progbits
 1764              		.align	1
 1765              		.global	SetEPDblBuffCount
 1766              		.syntax unified
 1767              		.thumb
 1768              		.thumb_func
 1769              		.fpu softvfp
 1771              	SetEPDblBuffCount:
 1772              	.LVL108:
 1773              	.LFB50:
 576:usb_lib/usb_regs.c **** /*******************************************************************************
 577:usb_lib/usb_regs.c **** * Function Name  : SetEPDblBuf0Addr
 578:usb_lib/usb_regs.c **** * Description    : Set the Buffer 1 address.
 579:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number
 580:usb_lib/usb_regs.c **** *                  wBuf0Addr: new address.
 581:usb_lib/usb_regs.c **** * Output         : None.
 582:usb_lib/usb_regs.c **** * Return         : None.
 583:usb_lib/usb_regs.c **** *******************************************************************************/
 584:usb_lib/usb_regs.c **** void SetEPDblBuf0Addr(u8 bEpNum, u16 wBuf0Addr)
 585:usb_lib/usb_regs.c **** {
 586:usb_lib/usb_regs.c ****   _SetEPDblBuf0Addr(bEpNum, wBuf0Addr);
 587:usb_lib/usb_regs.c **** }
 588:usb_lib/usb_regs.c **** /*******************************************************************************
 589:usb_lib/usb_regs.c **** * Function Name  : SetEPDblBuf1Addr
 590:usb_lib/usb_regs.c **** * Description    : Set the Buffer 1 address.
 591:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number
 592:usb_lib/usb_regs.c **** *                  wBuf1Addr: new address.
 593:usb_lib/usb_regs.c **** * Output         : None.
 594:usb_lib/usb_regs.c **** * Return         : None.
 595:usb_lib/usb_regs.c **** *******************************************************************************/
 596:usb_lib/usb_regs.c **** void SetEPDblBuf1Addr(u8 bEpNum, u16 wBuf1Addr)
 597:usb_lib/usb_regs.c **** {
 598:usb_lib/usb_regs.c ****   _SetEPDblBuf1Addr(bEpNum, wBuf1Addr);
 599:usb_lib/usb_regs.c **** }
 600:usb_lib/usb_regs.c **** /*******************************************************************************
 601:usb_lib/usb_regs.c **** * Function Name  : GetEPDblBuf0Addr
 602:usb_lib/usb_regs.c **** * Description    : Returns the address of the Buffer 0.
 603:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 604:usb_lib/usb_regs.c **** * Output         : None.
 605:usb_lib/usb_regs.c **** * Return         : None.
 606:usb_lib/usb_regs.c **** *******************************************************************************/
 607:usb_lib/usb_regs.c **** u16 GetEPDblBuf0Addr(u8 bEpNum)
 608:usb_lib/usb_regs.c **** {
 609:usb_lib/usb_regs.c ****   return(_GetEPDblBuf0Addr(bEpNum));
 610:usb_lib/usb_regs.c **** }
 611:usb_lib/usb_regs.c **** /*******************************************************************************
 612:usb_lib/usb_regs.c **** * Function Name  : GetEPDblBuf1Addr
 613:usb_lib/usb_regs.c **** * Description    : Returns the address of the Buffer 1.
 614:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 615:usb_lib/usb_regs.c **** * Output         : None.
 616:usb_lib/usb_regs.c **** * Return         : Address of the Buffer 1.
 617:usb_lib/usb_regs.c **** *******************************************************************************/
 618:usb_lib/usb_regs.c **** u16 GetEPDblBuf1Addr(u8 bEpNum)
 619:usb_lib/usb_regs.c **** {
 620:usb_lib/usb_regs.c ****   return(_GetEPDblBuf1Addr(bEpNum));
 621:usb_lib/usb_regs.c **** }
 622:usb_lib/usb_regs.c **** /*******************************************************************************
 623:usb_lib/usb_regs.c **** * Function Name  : SetEPDblBuffCount
 624:usb_lib/usb_regs.c **** * Description    : Set the number of bytes for a double Buffer
 625:usb_lib/usb_regs.c **** *                  endpoint.
 626:usb_lib/usb_regs.c **** * Input          : bEpNum,bDir, wCount
 627:usb_lib/usb_regs.c **** * Output         : None.
 628:usb_lib/usb_regs.c **** * Return         : None.
 629:usb_lib/usb_regs.c **** *******************************************************************************/
 630:usb_lib/usb_regs.c **** void SetEPDblBuffCount(u8 bEpNum, u8 bDir, u16 wCount)
 631:usb_lib/usb_regs.c **** {
 1774              		.loc 1 631 1 is_stmt 1 view -0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 0
 1777              		@ frame_needed = 0, uses_anonymous_args = 0
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1778              		.loc 1 632 3 view .LVU265
 1779 0000 0129     		cmp	r1, #1
 631:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1780              		.loc 1 631 1 is_stmt 0 view .LVU266
 1781 0002 10B5     		push	{r4, lr}
 1782              		.cfi_def_cfa_offset 8
 1783              		.cfi_offset 4, -8
 1784              		.cfi_offset 14, -4
 1785              		.loc 1 632 3 view .LVU267
 1786 0004 2DD1     		bne	.L131
 1787              	.LBB19:
 1788              		.loc 1 632 3 is_stmt 1 discriminator 1 view .LVU268
 1789 0006 274B     		ldr	r3, .L150
 1790 0008 2749     		ldr	r1, .L150+4
 1791              	.LVL109:
 1792              		.loc 1 632 3 is_stmt 0 discriminator 1 view .LVU269
 1793 000a D3F8503C 		ldr	r3, [r3, #3152]
 1794 000e C400     		lsls	r4, r0, #3
 1795 0010 9BB2     		uxth	r3, r3
 1796 0012 03EBC000 		add	r0, r3, r0, lsl #3
 1797              	.LVL110:
 1798              		.loc 1 632 3 discriminator 1 view .LVU270
 1799 0016 0144     		add	r1, r1, r0
 1800              	.LBB20:
 1801 0018 3E2A     		cmp	r2, #62
 1802              	.LBE20:
 1803 001a 4FEA4101 		lsl	r1, r1, #1
 1804              	.LVL111:
 1805              	.LBB21:
 1806              		.loc 1 632 3 is_stmt 1 discriminator 1 view .LVU271
 1807              		.loc 1 632 3 discriminator 1 view .LVU272
 1808 001e 1AD9     		bls	.L132
 1809              		.loc 1 632 3 discriminator 3 view .LVU273
 1810 0020 5309     		lsrs	r3, r2, #5
 1811              	.LVL112:
 1812              		.loc 1 632 3 discriminator 3 view .LVU274
 1813 0022 D006     		lsls	r0, r2, #27
 1814              		.loc 1 632 3 discriminator 3 view .LVU275
 1815 0024 04BF     		itt	eq
 1816 0026 03F1FF33 		addeq	r3, r3, #-1
 1817              	.LVL113:
 1818              		.loc 1 632 3 is_stmt 0 discriminator 3 view .LVU276
 1819 002a 9BB2     		uxtheq	r3, r3
 1820              	.LVL114:
 1821              		.loc 1 632 3 is_stmt 1 discriminator 3 view .LVU277
 1822 002c 9B02     		lsls	r3, r3, #10
 1823              	.LVL115:
 1824              		.loc 1 632 3 is_stmt 0 discriminator 3 view .LVU278
 1825 002e 43F40043 		orr	r3, r3, #32768
 1826              	.LVL116:
 1827              	.L148:
 1828              		.loc 1 632 3 discriminator 11 view .LVU279
 1829 0032 0B60     		str	r3, [r1]
 1830              	.LBE21:
 1831              	.LBE19:
 1832              		.loc 1 632 3 is_stmt 1 discriminator 11 view .LVU280
 1833              		.loc 1 632 3 discriminator 11 view .LVU281
 1834              	.LBB23:
 1835              		.loc 1 632 3 discriminator 11 view .LVU282
 1836 0034 1B4B     		ldr	r3, .L150
 1837              	.LBB24:
 1838 0036 3E2A     		cmp	r2, #62
 1839              	.LBE24:
 1840 0038 D3F8501C 		ldr	r1, [r3, #3152]
 1841              	.LVL117:
 1842              		.loc 1 632 3 is_stmt 0 discriminator 11 view .LVU283
 1843 003c 1B4B     		ldr	r3, .L150+8
 1844 003e 89B2     		uxth	r1, r1
 1845 0040 2144     		add	r1, r1, r4
 1846 0042 0B44     		add	r3, r3, r1
 1847 0044 4FEA4301 		lsl	r1, r3, #1
 1848              	.LVL118:
 1849              	.LBB25:
 1850              		.loc 1 632 3 is_stmt 1 discriminator 11 view .LVU284
 1851              		.loc 1 632 3 discriminator 11 view .LVU285
 1852 0048 21D8     		bhi	.L139
 1853              		.loc 1 632 3 discriminator 19 view .LVU286
 1854 004a 5308     		lsrs	r3, r2, #1
 1855              	.LVL119:
 1856              		.loc 1 632 3 discriminator 19 view .LVU287
 1857 004c D207     		lsls	r2, r2, #31
 1858              	.LVL120:
 1859              		.loc 1 632 3 discriminator 19 view .LVU288
 1860 004e 48BF     		it	mi
 1861 0050 0133     		addmi	r3, r3, #1
 1862              	.LVL121:
 1863              		.loc 1 632 3 discriminator 19 view .LVU289
 1864 0052 9B02     		lsls	r3, r3, #10
 1865              	.LVL122:
 1866              		.loc 1 632 3 is_stmt 0 discriminator 19 view .LVU290
 1867 0054 24E0     		b	.L149
 1868              	.LVL123:
 1869              	.L132:
 1870              		.loc 1 632 3 discriminator 19 view .LVU291
 1871              	.LBE25:
 1872              	.LBE23:
 1873              	.LBB27:
 1874              	.LBB22:
 1875              		.loc 1 632 3 is_stmt 1 discriminator 4 view .LVU292
 1876 0056 5308     		lsrs	r3, r2, #1
 1877              	.LVL124:
 1878              		.loc 1 632 3 discriminator 4 view .LVU293
 1879 0058 D007     		lsls	r0, r2, #31
 1880              		.loc 1 632 3 discriminator 4 view .LVU294
 1881 005a 48BF     		it	mi
 1882 005c 0133     		addmi	r3, r3, #1
 1883              	.LVL125:
 1884              		.loc 1 632 3 discriminator 4 view .LVU295
 1885 005e 9B02     		lsls	r3, r3, #10
 1886              	.LVL126:
 1887              		.loc 1 632 3 is_stmt 0 discriminator 4 view .LVU296
 1888 0060 E7E7     		b	.L148
 1889              	.LVL127:
 1890              	.L131:
 1891              		.loc 1 632 3 discriminator 4 view .LVU297
 1892              	.LBE22:
 1893              	.LBE27:
 1894              		.loc 1 632 3 is_stmt 1 discriminator 2 view .LVU298
 1895 0062 0229     		cmp	r1, #2
 1896 0064 12D1     		bne	.L130
 1897              		.loc 1 632 3 discriminator 13 view .LVU299
 1898 0066 0F4C     		ldr	r4, .L150
 1899 0068 0F4B     		ldr	r3, .L150+4
 1900 006a D4F8501C 		ldr	r1, [r4, #3152]
 1901              	.LVL128:
 1902              		.loc 1 632 3 is_stmt 0 discriminator 13 view .LVU300
 1903 006e 89B2     		uxth	r1, r1
 1904 0070 01EBC001 		add	r1, r1, r0, lsl #3
 1905 0074 0B44     		add	r3, r3, r1
 1906 0076 5B00     		lsls	r3, r3, #1
 1907 0078 1A60     		str	r2, [r3]
 1908              		.loc 1 632 3 is_stmt 1 discriminator 13 view .LVU301
 1909              		.loc 1 632 3 discriminator 13 view .LVU302
 1910              		.loc 1 632 3 discriminator 13 view .LVU303
 1911              		.loc 1 632 3 discriminator 13 view .LVU304
 1912 007a D4F8503C 		ldr	r3, [r4, #3152]
 1913 007e 9BB2     		uxth	r3, r3
 1914 0080 03EBC000 		add	r0, r3, r0, lsl #3
 1915              	.LVL129:
 1916              		.loc 1 632 3 is_stmt 0 discriminator 13 view .LVU305
 1917 0084 094B     		ldr	r3, .L150+8
 1918 0086 0344     		add	r3, r3, r0
 1919 0088 5B00     		lsls	r3, r3, #1
 1920 008a 1A60     		str	r2, [r3]
 1921              	.LVL130:
 1922              	.L130:
 633:usb_lib/usb_regs.c **** }
 1923              		.loc 1 633 1 view .LVU306
 1924 008c 10BD     		pop	{r4, pc}
 1925              	.LVL131:
 1926              	.L139:
 1927              	.LBB28:
 1928              	.LBB26:
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1929              		.loc 1 632 3 is_stmt 1 discriminator 18 view .LVU307
 1930 008e 5309     		lsrs	r3, r2, #5
 1931              	.LVL132:
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1932              		.loc 1 632 3 discriminator 18 view .LVU308
 1933 0090 D006     		lsls	r0, r2, #27
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1934              		.loc 1 632 3 discriminator 18 view .LVU309
 1935 0092 04BF     		itt	eq
 1936 0094 03F1FF33 		addeq	r3, r3, #-1
 1937              	.LVL133:
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1938              		.loc 1 632 3 is_stmt 0 discriminator 18 view .LVU310
 1939 0098 9BB2     		uxtheq	r3, r3
 1940              	.LVL134:
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1941              		.loc 1 632 3 is_stmt 1 discriminator 18 view .LVU311
 1942 009a 9B02     		lsls	r3, r3, #10
 1943              	.LVL135:
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1944              		.loc 1 632 3 is_stmt 0 discriminator 18 view .LVU312
 1945 009c 43F40043 		orr	r3, r3, #32768
 1946              	.LVL136:
 1947              	.L149:
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1948              		.loc 1 632 3 discriminator 26 view .LVU313
 1949 00a0 0B60     		str	r3, [r1]
 1950              	.LBE26:
 1951              	.LBE28:
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1952              		.loc 1 632 3 is_stmt 1 discriminator 26 view .LVU314
 632:usb_lib/usb_regs.c ****   _SetEPDblBuffCount(bEpNum, bDir, wCount);
 1953              		.loc 1 632 43 discriminator 26 view .LVU315
 1954              		.loc 1 633 1 is_stmt 0 discriminator 26 view .LVU316
 1955 00a2 F3E7     		b	.L130
 1956              	.L151:
 1957              		.align	2
 1958              	.L150:
 1959 00a4 00500040 		.word	1073762304
 1960 00a8 02300020 		.word	536883202
 1961 00ac 06300020 		.word	536883206
 1962              		.cfi_endproc
 1963              	.LFE50:
 1965              		.section	.text.SetEPDblBuf0Count,"ax",%progbits
 1966              		.align	1
 1967              		.global	SetEPDblBuf0Count
 1968              		.syntax unified
 1969              		.thumb
 1970              		.thumb_func
 1971              		.fpu softvfp
 1973              	SetEPDblBuf0Count:
 1974              	.LVL137:
 1975              	.LFB51:
 634:usb_lib/usb_regs.c **** /*******************************************************************************
 635:usb_lib/usb_regs.c **** * Function Name  : SetEPDblBuf0Count
 636:usb_lib/usb_regs.c **** * Description    : Set the number of bytes in the buffer 0 of a double Buffer
 637:usb_lib/usb_regs.c **** *                  endpoint.
 638:usb_lib/usb_regs.c **** * Input          : bEpNum, bDir,  wCount
 639:usb_lib/usb_regs.c **** * Output         : None.
 640:usb_lib/usb_regs.c **** * Return         : None.
 641:usb_lib/usb_regs.c **** *******************************************************************************/
 642:usb_lib/usb_regs.c **** void SetEPDblBuf0Count(u8 bEpNum, u8 bDir, u16 wCount)
 643:usb_lib/usb_regs.c **** {
 1976              		.loc 1 643 1 is_stmt 1 view -0
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 0
 1979              		@ frame_needed = 0, uses_anonymous_args = 0
 1980              		@ link register save eliminated.
 644:usb_lib/usb_regs.c ****   _SetEPDblBuf0Count(bEpNum, bDir, wCount);
 1981              		.loc 1 644 3 view .LVU318
 1982 0000 0129     		cmp	r1, #1
 1983 0002 1CD1     		bne	.L153
 1984              	.LBB29:
 1985              		.loc 1 644 3 discriminator 1 view .LVU319
 1986 0004 144B     		ldr	r3, .L162
 1987 0006 1549     		ldr	r1, .L162+4
 1988              	.LVL138:
 1989              		.loc 1 644 3 is_stmt 0 discriminator 1 view .LVU320
 1990 0008 D3F8503C 		ldr	r3, [r3, #3152]
 1991              	.LBB30:
 1992 000c 3E2A     		cmp	r2, #62
 1993              	.LBE30:
 1994 000e 9BB2     		uxth	r3, r3
 1995 0010 03EBC000 		add	r0, r3, r0, lsl #3
 1996              	.LVL139:
 1997              		.loc 1 644 3 discriminator 1 view .LVU321
 1998 0014 0144     		add	r1, r1, r0
 1999 0016 4FEA4101 		lsl	r1, r1, #1
 2000              	.LVL140:
 2001              	.LBB31:
 2002              		.loc 1 644 3 is_stmt 1 discriminator 1 view .LVU322
 2003              		.loc 1 644 3 discriminator 1 view .LVU323
 2004 001a 0AD9     		bls	.L154
 2005              		.loc 1 644 3 discriminator 3 view .LVU324
 2006 001c 5309     		lsrs	r3, r2, #5
 2007              	.LVL141:
 2008              		.loc 1 644 3 discriminator 3 view .LVU325
 2009 001e D006     		lsls	r0, r2, #27
 2010              		.loc 1 644 3 discriminator 3 view .LVU326
 2011 0020 04BF     		itt	eq
 2012 0022 03F1FF33 		addeq	r3, r3, #-1
 2013              	.LVL142:
 2014              		.loc 1 644 3 is_stmt 0 discriminator 3 view .LVU327
 2015 0026 9BB2     		uxtheq	r3, r3
 2016              	.LVL143:
 2017              		.loc 1 644 3 is_stmt 1 discriminator 3 view .LVU328
 2018 0028 9B02     		lsls	r3, r3, #10
 2019              	.LVL144:
 2020              		.loc 1 644 3 is_stmt 0 discriminator 3 view .LVU329
 2021 002a 43F40043 		orr	r3, r3, #32768
 2022              	.LVL145:
 2023              	.L161:
 2024              		.loc 1 644 3 discriminator 11 view .LVU330
 2025 002e 0B60     		str	r3, [r1]
 2026 0030 7047     		bx	lr
 2027              	.LVL146:
 2028              	.L154:
 2029              		.loc 1 644 3 is_stmt 1 discriminator 4 view .LVU331
 2030 0032 5308     		lsrs	r3, r2, #1
 2031              	.LVL147:
 2032              		.loc 1 644 3 discriminator 4 view .LVU332
 2033 0034 D207     		lsls	r2, r2, #31
 2034              	.LVL148:
 2035              		.loc 1 644 3 discriminator 4 view .LVU333
 2036 0036 48BF     		it	mi
 2037 0038 0133     		addmi	r3, r3, #1
 2038              	.LVL149:
 2039              		.loc 1 644 3 discriminator 4 view .LVU334
 2040 003a 9B02     		lsls	r3, r3, #10
 2041              	.LVL150:
 2042              		.loc 1 644 3 is_stmt 0 discriminator 4 view .LVU335
 2043 003c F7E7     		b	.L161
 2044              	.LVL151:
 2045              	.L153:
 2046              		.loc 1 644 3 discriminator 4 view .LVU336
 2047              	.LBE31:
 2048              	.LBE29:
 2049              		.loc 1 644 3 is_stmt 1 discriminator 2 view .LVU337
 2050 003e 0229     		cmp	r1, #2
 2051 0040 09D1     		bne	.L152
 2052              		.loc 1 644 3 discriminator 13 view .LVU338
 2053 0042 054B     		ldr	r3, .L162
 2054 0044 D3F8503C 		ldr	r3, [r3, #3152]
 2055 0048 9BB2     		uxth	r3, r3
 2056 004a 03EBC000 		add	r0, r3, r0, lsl #3
 2057              	.LVL152:
 2058              		.loc 1 644 3 is_stmt 0 discriminator 13 view .LVU339
 2059 004e 034B     		ldr	r3, .L162+4
 2060 0050 0344     		add	r3, r3, r0
 2061 0052 5B00     		lsls	r3, r3, #1
 2062 0054 1A60     		str	r2, [r3]
 2063              		.loc 1 644 43 is_stmt 1 discriminator 13 view .LVU340
 2064              	.L152:
 645:usb_lib/usb_regs.c **** }
 2065              		.loc 1 645 1 is_stmt 0 view .LVU341
 2066 0056 7047     		bx	lr
 2067              	.L163:
 2068              		.align	2
 2069              	.L162:
 2070 0058 00500040 		.word	1073762304
 2071 005c 02300020 		.word	536883202
 2072              		.cfi_endproc
 2073              	.LFE51:
 2075              		.section	.text.SetEPDblBuf1Count,"ax",%progbits
 2076              		.align	1
 2077              		.global	SetEPDblBuf1Count
 2078              		.syntax unified
 2079              		.thumb
 2080              		.thumb_func
 2081              		.fpu softvfp
 2083              	SetEPDblBuf1Count:
 2084              	.LVL153:
 2085              	.LFB52:
 646:usb_lib/usb_regs.c **** /*******************************************************************************
 647:usb_lib/usb_regs.c **** * Function Name  : SetEPDblBuf1Count
 648:usb_lib/usb_regs.c **** * Description    : Set the number of bytes in the buffer 0 of a double Buffer
 649:usb_lib/usb_regs.c **** *                  endpoint.
 650:usb_lib/usb_regs.c **** * Input          : bEpNum,  bDir,  wCount
 651:usb_lib/usb_regs.c **** * Output         : None.
 652:usb_lib/usb_regs.c **** * Return         : None.
 653:usb_lib/usb_regs.c **** *******************************************************************************/
 654:usb_lib/usb_regs.c **** void SetEPDblBuf1Count(u8 bEpNum, u8 bDir, u16 wCount)
 655:usb_lib/usb_regs.c **** {
 2086              		.loc 1 655 1 is_stmt 1 view -0
 2087              		.cfi_startproc
 2088              		@ args = 0, pretend = 0, frame = 0
 2089              		@ frame_needed = 0, uses_anonymous_args = 0
 2090              		@ link register save eliminated.
 656:usb_lib/usb_regs.c ****   _SetEPDblBuf1Count(bEpNum, bDir, wCount);
 2091              		.loc 1 656 3 view .LVU343
 2092 0000 0129     		cmp	r1, #1
 2093 0002 1CD1     		bne	.L165
 2094              	.LBB32:
 2095              		.loc 1 656 3 discriminator 1 view .LVU344
 2096 0004 144B     		ldr	r3, .L174
 2097 0006 1549     		ldr	r1, .L174+4
 2098              	.LVL154:
 2099              		.loc 1 656 3 is_stmt 0 discriminator 1 view .LVU345
 2100 0008 D3F8503C 		ldr	r3, [r3, #3152]
 2101              	.LBB33:
 2102 000c 3E2A     		cmp	r2, #62
 2103              	.LBE33:
 2104 000e 9BB2     		uxth	r3, r3
 2105 0010 03EBC000 		add	r0, r3, r0, lsl #3
 2106              	.LVL155:
 2107              		.loc 1 656 3 discriminator 1 view .LVU346
 2108 0014 0144     		add	r1, r1, r0
 2109 0016 4FEA4101 		lsl	r1, r1, #1
 2110              	.LVL156:
 2111              	.LBB34:
 2112              		.loc 1 656 3 is_stmt 1 discriminator 1 view .LVU347
 2113              		.loc 1 656 3 discriminator 1 view .LVU348
 2114 001a 0AD9     		bls	.L166
 2115              		.loc 1 656 3 discriminator 3 view .LVU349
 2116 001c 5309     		lsrs	r3, r2, #5
 2117              	.LVL157:
 2118              		.loc 1 656 3 discriminator 3 view .LVU350
 2119 001e D006     		lsls	r0, r2, #27
 2120              		.loc 1 656 3 discriminator 3 view .LVU351
 2121 0020 04BF     		itt	eq
 2122 0022 03F1FF33 		addeq	r3, r3, #-1
 2123              	.LVL158:
 2124              		.loc 1 656 3 is_stmt 0 discriminator 3 view .LVU352
 2125 0026 9BB2     		uxtheq	r3, r3
 2126              	.LVL159:
 2127              		.loc 1 656 3 is_stmt 1 discriminator 3 view .LVU353
 2128 0028 9B02     		lsls	r3, r3, #10
 2129              	.LVL160:
 2130              		.loc 1 656 3 is_stmt 0 discriminator 3 view .LVU354
 2131 002a 43F40043 		orr	r3, r3, #32768
 2132              	.LVL161:
 2133              	.L173:
 2134              		.loc 1 656 3 discriminator 11 view .LVU355
 2135 002e 0B60     		str	r3, [r1]
 2136 0030 7047     		bx	lr
 2137              	.LVL162:
 2138              	.L166:
 2139              		.loc 1 656 3 is_stmt 1 discriminator 4 view .LVU356
 2140 0032 5308     		lsrs	r3, r2, #1
 2141              	.LVL163:
 2142              		.loc 1 656 3 discriminator 4 view .LVU357
 2143 0034 D207     		lsls	r2, r2, #31
 2144              	.LVL164:
 2145              		.loc 1 656 3 discriminator 4 view .LVU358
 2146 0036 48BF     		it	mi
 2147 0038 0133     		addmi	r3, r3, #1
 2148              	.LVL165:
 2149              		.loc 1 656 3 discriminator 4 view .LVU359
 2150 003a 9B02     		lsls	r3, r3, #10
 2151              	.LVL166:
 2152              		.loc 1 656 3 is_stmt 0 discriminator 4 view .LVU360
 2153 003c F7E7     		b	.L173
 2154              	.LVL167:
 2155              	.L165:
 2156              		.loc 1 656 3 discriminator 4 view .LVU361
 2157              	.LBE34:
 2158              	.LBE32:
 2159              		.loc 1 656 3 is_stmt 1 discriminator 2 view .LVU362
 2160 003e 0229     		cmp	r1, #2
 2161 0040 09D1     		bne	.L164
 2162              		.loc 1 656 3 discriminator 13 view .LVU363
 2163 0042 054B     		ldr	r3, .L174
 2164 0044 D3F8503C 		ldr	r3, [r3, #3152]
 2165 0048 9BB2     		uxth	r3, r3
 2166 004a 03EBC000 		add	r0, r3, r0, lsl #3
 2167              	.LVL168:
 2168              		.loc 1 656 3 is_stmt 0 discriminator 13 view .LVU364
 2169 004e 034B     		ldr	r3, .L174+4
 2170 0050 0344     		add	r3, r3, r0
 2171 0052 5B00     		lsls	r3, r3, #1
 2172 0054 1A60     		str	r2, [r3]
 2173              		.loc 1 656 43 is_stmt 1 discriminator 13 view .LVU365
 2174              	.L164:
 657:usb_lib/usb_regs.c **** }
 2175              		.loc 1 657 1 is_stmt 0 view .LVU366
 2176 0056 7047     		bx	lr
 2177              	.L175:
 2178              		.align	2
 2179              	.L174:
 2180 0058 00500040 		.word	1073762304
 2181 005c 06300020 		.word	536883206
 2182              		.cfi_endproc
 2183              	.LFE52:
 2185              		.section	.text.GetEPDblBuf0Count,"ax",%progbits
 2186              		.align	1
 2187              		.global	GetEPDblBuf0Count
 2188              		.syntax unified
 2189              		.thumb
 2190              		.thumb_func
 2191              		.fpu softvfp
 2193              	GetEPDblBuf0Count:
 2194              	.LFB76:
 2195              		.cfi_startproc
 2196              		@ args = 0, pretend = 0, frame = 0
 2197              		@ frame_needed = 0, uses_anonymous_args = 0
 2198              		@ link register save eliminated.
 2199 0000 FFF7FEBF 		b	GetEPTxCount
 2200              		.cfi_endproc
 2201              	.LFE76:
 2203              		.section	.text.GetEPDblBuf1Count,"ax",%progbits
 2204              		.align	1
 2205              		.global	GetEPDblBuf1Count
 2206              		.syntax unified
 2207              		.thumb
 2208              		.thumb_func
 2209              		.fpu softvfp
 2211              	GetEPDblBuf1Count:
 2212              	.LFB78:
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 0
 2215              		@ frame_needed = 0, uses_anonymous_args = 0
 2216              		@ link register save eliminated.
 2217 0000 FFF7FEBF 		b	GetEPRxCount
 2218              		.cfi_endproc
 2219              	.LFE78:
 2221              		.section	.text.GetEPDblBufDir,"ax",%progbits
 2222              		.align	1
 2223              		.global	GetEPDblBufDir
 2224              		.syntax unified
 2225              		.thumb
 2226              		.thumb_func
 2227              		.fpu softvfp
 2229              	GetEPDblBufDir:
 2230              	.LVL169:
 2231              	.LFB55:
 658:usb_lib/usb_regs.c **** /*******************************************************************************
 659:usb_lib/usb_regs.c **** * Function Name  : GetEPDblBuf0Count
 660:usb_lib/usb_regs.c **** * Description    : Returns the number of byte received in the buffer 0 of a double
 661:usb_lib/usb_regs.c **** *                  Buffer endpoint.
 662:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 663:usb_lib/usb_regs.c **** * Output         : None.
 664:usb_lib/usb_regs.c **** * Return         : Endpoint Buffer 0 count
 665:usb_lib/usb_regs.c **** *******************************************************************************/
 666:usb_lib/usb_regs.c **** u16 GetEPDblBuf0Count(u8 bEpNum)
 667:usb_lib/usb_regs.c **** {
 668:usb_lib/usb_regs.c ****   return(_GetEPDblBuf0Count(bEpNum));
 669:usb_lib/usb_regs.c **** }
 670:usb_lib/usb_regs.c **** /*******************************************************************************
 671:usb_lib/usb_regs.c **** * Function Name  : GetEPDblBuf1Count
 672:usb_lib/usb_regs.c **** * Description    : Returns the number of data received in the buffer 1 of a double
 673:usb_lib/usb_regs.c **** *                  Buffer endpoint.
 674:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 675:usb_lib/usb_regs.c **** * Output         : None.
 676:usb_lib/usb_regs.c **** * Return         : Endpoint Buffer 1 count.
 677:usb_lib/usb_regs.c **** *******************************************************************************/
 678:usb_lib/usb_regs.c **** u16 GetEPDblBuf1Count(u8 bEpNum)
 679:usb_lib/usb_regs.c **** {
 680:usb_lib/usb_regs.c ****   return(_GetEPDblBuf1Count(bEpNum));
 681:usb_lib/usb_regs.c **** }
 682:usb_lib/usb_regs.c **** /*******************************************************************************
 683:usb_lib/usb_regs.c **** * Function Name  : GetEPDblBufDir
 684:usb_lib/usb_regs.c **** * Description    : gets direction of the double buffered endpoint
 685:usb_lib/usb_regs.c **** * Input          : bEpNum: Endpoint Number.
 686:usb_lib/usb_regs.c **** * Output         : None.
 687:usb_lib/usb_regs.c **** * Return         : EP_DBUF_OUT, EP_DBUF_IN,
 688:usb_lib/usb_regs.c **** *                  EP_DBUF_ERR if the endpoint counter not yet programmed.
 689:usb_lib/usb_regs.c **** *******************************************************************************/
 690:usb_lib/usb_regs.c **** EP_DBUF_DIR GetEPDblBufDir(u8 bEpNum)
 691:usb_lib/usb_regs.c **** {
 2232              		.loc 1 691 1 is_stmt 1 view -0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 0, uses_anonymous_args = 0
 692:usb_lib/usb_regs.c ****   if ((u16)(*_pEPRxCount(bEpNum) & 0xFC00) != 0)
 2236              		.loc 1 692 3 view .LVU368
 2237              		.loc 1 692 14 is_stmt 0 view .LVU369
 2238 0000 0F49     		ldr	r1, .L182
 691:usb_lib/usb_regs.c ****   if ((u16)(*_pEPRxCount(bEpNum) & 0xFC00) != 0)
 2239              		.loc 1 691 1 view .LVU370
 2240 0002 10B5     		push	{r4, lr}
 2241              		.cfi_def_cfa_offset 8
 2242              		.cfi_offset 4, -8
 2243              		.cfi_offset 14, -4
 2244              		.loc 1 692 14 view .LVU371
 2245 0004 D1F8503C 		ldr	r3, [r1, #3152]
 2246 0008 C400     		lsls	r4, r0, #3
 2247 000a 9BB2     		uxth	r3, r3
 2248 000c 03EBC000 		add	r0, r3, r0, lsl #3
 2249              	.LVL170:
 2250              		.loc 1 692 14 view .LVU372
 2251 0010 0C4B     		ldr	r3, .L182+4
 2252 0012 0344     		add	r3, r3, r0
 2253 0014 5B00     		lsls	r3, r3, #1
 2254              		.loc 1 692 13 view .LVU373
 2255 0016 1B68     		ldr	r3, [r3]
 2256              		.loc 1 692 6 view .LVU374
 2257 0018 13F47C4F 		tst	r3, #64512
 2258 001c 0ED1     		bne	.L180
 693:usb_lib/usb_regs.c ****     return(EP_DBUF_OUT);
 694:usb_lib/usb_regs.c ****   else if (((u16)(*_pEPTxCount(bEpNum)) & 0x03FF) != 0)
 2259              		.loc 1 694 8 is_stmt 1 view .LVU375
 2260              		.loc 1 694 20 is_stmt 0 view .LVU376
 2261 001e D1F8502C 		ldr	r2, [r1, #3152]
 2262 0022 094B     		ldr	r3, .L182+8
 2263 0024 92B2     		uxth	r2, r2
 2264 0026 2244     		add	r2, r2, r4
 2265 0028 1344     		add	r3, r3, r2
 2266 002a 5B00     		lsls	r3, r3, #1
 2267              		.loc 1 694 19 view .LVU377
 2268 002c 1B68     		ldr	r3, [r3]
 2269              		.loc 1 694 41 view .LVU378
 2270 002e C3F30903 		ubfx	r3, r3, #0, #10
 695:usb_lib/usb_regs.c ****     return(EP_DBUF_IN);
 696:usb_lib/usb_regs.c ****   else
 697:usb_lib/usb_regs.c ****     return(EP_DBUF_ERR);
 2271              		.loc 1 697 11 view .LVU379
 2272 0032 002B     		cmp	r3, #0
 2273 0034 14BF     		ite	ne
 2274 0036 0220     		movne	r0, #2
 2275 0038 0020     		moveq	r0, #0
 2276              	.L179:
 698:usb_lib/usb_regs.c **** }
 2277              		.loc 1 698 1 view .LVU380
 2278 003a 10BD     		pop	{r4, pc}
 2279              	.L180:
 693:usb_lib/usb_regs.c ****     return(EP_DBUF_OUT);
 2280              		.loc 1 693 11 view .LVU381
 2281 003c 0120     		movs	r0, #1
 2282 003e FCE7     		b	.L179
 2283              	.L183:
 2284              		.align	2
 2285              	.L182:
 2286 0040 00500040 		.word	1073762304
 2287 0044 06300020 		.word	536883206
 2288 0048 02300020 		.word	536883202
 2289              		.cfi_endproc
 2290              	.LFE55:
 2292              		.section	.text.FreeUserBuffer,"ax",%progbits
 2293              		.align	1
 2294              		.global	FreeUserBuffer
 2295              		.syntax unified
 2296              		.thumb
 2297              		.thumb_func
 2298              		.fpu softvfp
 2300              	FreeUserBuffer:
 2301              	.LVL171:
 2302              	.LFB56:
 699:usb_lib/usb_regs.c **** /*******************************************************************************
 700:usb_lib/usb_regs.c **** * Function Name  : FreeUserBuffer
 701:usb_lib/usb_regs.c **** * Description    : free buffer used from the application realizing it to the line
 702:usb_lib/usb_regs.c ****                    toggles bit SW_BUF in the double buffered endpoint register
 703:usb_lib/usb_regs.c **** * Input          : bEpNum, bDir
 704:usb_lib/usb_regs.c **** * Output         : None.
 705:usb_lib/usb_regs.c **** * Return         : None.
 706:usb_lib/usb_regs.c **** *******************************************************************************/
 707:usb_lib/usb_regs.c **** void FreeUserBuffer(u8 bEpNum, u8 bDir)
 708:usb_lib/usb_regs.c **** {
 2303              		.loc 1 708 1 is_stmt 1 view -0
 2304              		.cfi_startproc
 2305              		@ args = 0, pretend = 0, frame = 0
 2306              		@ frame_needed = 0, uses_anonymous_args = 0
 2307              		@ link register save eliminated.
 709:usb_lib/usb_regs.c ****   if (bDir == EP_DBUF_OUT)
 2308              		.loc 1 709 3 view .LVU383
 2309              		.loc 1 709 6 is_stmt 0 view .LVU384
 2310 0000 0129     		cmp	r1, #1
 2311 0002 0FD1     		bne	.L185
 710:usb_lib/usb_regs.c ****   { /* OUT double buffered endpoint */
 711:usb_lib/usb_regs.c ****     _ToggleDTOG_TX(bEpNum);
 2312              		.loc 1 711 5 is_stmt 1 view .LVU385
 2313 0004 8000     		lsls	r0, r0, #2
 2314              	.LVL172:
 2315              		.loc 1 711 5 is_stmt 0 view .LVU386
 2316 0006 00F18040 		add	r0, r0, #1073741824
 2317 000a 00F5B840 		add	r0, r0, #23552
 2318 000e 0368     		ldr	r3, [r0]
 2319 0010 23F4E043 		bic	r3, r3, #28672
 2320 0014 23F07003 		bic	r3, r3, #112
 2321 0018 1B04     		lsls	r3, r3, #16
 2322 001a 1B0C     		lsrs	r3, r3, #16
 2323 001c 43F04003 		orr	r3, r3, #64
 2324              	.L187:
 712:usb_lib/usb_regs.c ****   }
 713:usb_lib/usb_regs.c ****   else if (bDir == EP_DBUF_IN)
 714:usb_lib/usb_regs.c ****   { /* IN double buffered endpoint */
 715:usb_lib/usb_regs.c ****     _ToggleDTOG_RX(bEpNum);
 2325              		.loc 1 715 5 view .LVU387
 2326 0020 0360     		str	r3, [r0]
 2327              	.L184:
 716:usb_lib/usb_regs.c ****   }
 717:usb_lib/usb_regs.c **** }
 2328              		.loc 1 717 1 view .LVU388
 2329 0022 7047     		bx	lr
 2330              	.LVL173:
 2331              	.L185:
 713:usb_lib/usb_regs.c ****   { /* IN double buffered endpoint */
 2332              		.loc 1 713 8 is_stmt 1 view .LVU389
 713:usb_lib/usb_regs.c ****   { /* IN double buffered endpoint */
 2333              		.loc 1 713 11 is_stmt 0 view .LVU390
 2334 0024 0229     		cmp	r1, #2
 2335 0026 FCD1     		bne	.L184
 715:usb_lib/usb_regs.c ****   }
 2336              		.loc 1 715 5 is_stmt 1 view .LVU391
 2337 0028 8000     		lsls	r0, r0, #2
 2338              	.LVL174:
 715:usb_lib/usb_regs.c ****   }
 2339              		.loc 1 715 5 is_stmt 0 view .LVU392
 2340 002a 00F18040 		add	r0, r0, #1073741824
 2341 002e 00F5B840 		add	r0, r0, #23552
 2342 0032 0368     		ldr	r3, [r0]
 2343 0034 23F4E043 		bic	r3, r3, #28672
 2344 0038 23F07003 		bic	r3, r3, #112
 2345 003c 1B04     		lsls	r3, r3, #16
 2346 003e 1B0C     		lsrs	r3, r3, #16
 2347 0040 43F48043 		orr	r3, r3, #16384
 2348 0044 ECE7     		b	.L187
 2349              		.cfi_endproc
 2350              	.LFE56:
 2352              		.section	.text.ToWord,"ax",%progbits
 2353              		.align	1
 2354              		.global	ToWord
 2355              		.syntax unified
 2356              		.thumb
 2357              		.thumb_func
 2358              		.fpu softvfp
 2360              	ToWord:
 2361              	.LVL175:
 2362              	.LFB57:
 718:usb_lib/usb_regs.c **** 
 719:usb_lib/usb_regs.c **** /*******************************************************************************
 720:usb_lib/usb_regs.c **** * Function Name  : ToWord
 721:usb_lib/usb_regs.c **** * Description    : merge two byte in a word.
 722:usb_lib/usb_regs.c **** * Input          : bh: byte high, bl: bytes low.
 723:usb_lib/usb_regs.c **** * Output         : None.
 724:usb_lib/usb_regs.c **** * Return         : resulted word.
 725:usb_lib/usb_regs.c **** *******************************************************************************/
 726:usb_lib/usb_regs.c **** u16 ToWord(u8 bh, u8 bl)
 727:usb_lib/usb_regs.c **** {
 2363              		.loc 1 727 1 is_stmt 1 view -0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367              		@ link register save eliminated.
 728:usb_lib/usb_regs.c ****   u16 wRet;
 2368              		.loc 1 728 3 view .LVU394
 729:usb_lib/usb_regs.c ****   wRet = (u16)bl | ((u16)bh << 8);
 2369              		.loc 1 729 3 view .LVU395
 730:usb_lib/usb_regs.c ****   return(wRet);
 2370              		.loc 1 730 3 view .LVU396
 731:usb_lib/usb_regs.c **** }
 2371              		.loc 1 731 1 is_stmt 0 view .LVU397
 2372 0000 41EA0020 		orr	r0, r1, r0, lsl #8
 2373              	.LVL176:
 2374              		.loc 1 731 1 view .LVU398
 2375 0004 7047     		bx	lr
 2376              		.cfi_endproc
 2377              	.LFE57:
 2379              		.section	.text.ByteSwap,"ax",%progbits
 2380              		.align	1
 2381              		.global	ByteSwap
 2382              		.syntax unified
 2383              		.thumb
 2384              		.thumb_func
 2385              		.fpu softvfp
 2387              	ByteSwap:
 2388              	.LVL177:
 2389              	.LFB58:
 732:usb_lib/usb_regs.c **** /*******************************************************************************
 733:usb_lib/usb_regs.c **** * Function Name  : ByteSwap
 734:usb_lib/usb_regs.c **** * Description    : Swap two byte in a word.
 735:usb_lib/usb_regs.c **** * Input          : wSwW: word to Swap.
 736:usb_lib/usb_regs.c **** * Output         : None.
 737:usb_lib/usb_regs.c **** * Return         : resulted word.
 738:usb_lib/usb_regs.c **** *******************************************************************************/
 739:usb_lib/usb_regs.c **** u16 ByteSwap(u16 wSwW)
 740:usb_lib/usb_regs.c **** {
 2390              		.loc 1 740 1 is_stmt 1 view -0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 0
 2393              		@ frame_needed = 0, uses_anonymous_args = 0
 2394              		@ link register save eliminated.
 741:usb_lib/usb_regs.c ****   u8 bTemp;
 2395              		.loc 1 741 3 view .LVU400
 742:usb_lib/usb_regs.c ****   u16 wRet;
 2396              		.loc 1 742 3 view .LVU401
 743:usb_lib/usb_regs.c ****   bTemp = (u8)(wSwW & 0xff);
 2397              		.loc 1 743 3 view .LVU402
 744:usb_lib/usb_regs.c ****   wRet =  (wSwW >> 8) | ((u16)bTemp << 8);
 2398              		.loc 1 744 3 view .LVU403
 745:usb_lib/usb_regs.c ****   return(wRet);
 2399              		.loc 1 745 3 view .LVU404
 2400              		.loc 1 745 9 is_stmt 0 view .LVU405
 2401 0000 40BA     		rev16	r0, r0
 2402              	.LVL178:
 746:usb_lib/usb_regs.c **** }
 2403              		.loc 1 746 1 view .LVU406
 2404 0002 80B2     		uxth	r0, r0
 2405 0004 7047     		bx	lr
 2406              		.cfi_endproc
 2407              	.LFE58:
 2409              		.text
 2410              	.Letext0:
 2411              		.file 2 "usb_lib/usb_type.h"
 2412              		.file 3 "usb_lib/usb_regs.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_regs.c
D:\QMK_MSYS\tmp\ccq1qPx8.s:16     .text.SetCNTR:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:24     .text.SetCNTR:0000000000000000 SetCNTR
D:\QMK_MSYS\tmp\ccq1qPx8.s:41     .text.SetCNTR:0000000000000008 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:46     .text.GetCNTR:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:53     .text.GetCNTR:0000000000000000 GetCNTR
D:\QMK_MSYS\tmp\ccq1qPx8.s:70     .text.GetCNTR:000000000000000c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:75     .text.SetISTR:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:82     .text.SetISTR:0000000000000000 SetISTR
D:\QMK_MSYS\tmp\ccq1qPx8.s:98     .text.SetISTR:0000000000000008 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:103    .text.GetISTR:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:110    .text.GetISTR:0000000000000000 GetISTR
D:\QMK_MSYS\tmp\ccq1qPx8.s:127    .text.GetISTR:000000000000000c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:132    .text.GetFNR:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:139    .text.GetFNR:0000000000000000 GetFNR
D:\QMK_MSYS\tmp\ccq1qPx8.s:156    .text.GetFNR:000000000000000c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:161    .text.SetDADDR:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:168    .text.SetDADDR:0000000000000000 SetDADDR
D:\QMK_MSYS\tmp\ccq1qPx8.s:184    .text.SetDADDR:0000000000000008 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:189    .text.GetDADDR:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:196    .text.GetDADDR:0000000000000000 GetDADDR
D:\QMK_MSYS\tmp\ccq1qPx8.s:213    .text.GetDADDR:000000000000000c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:218    .text.SetBTABLE:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:225    .text.SetBTABLE:0000000000000000 SetBTABLE
D:\QMK_MSYS\tmp\ccq1qPx8.s:245    .text.SetBTABLE:0000000000000010 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:250    .text.GetBTABLE:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:257    .text.GetBTABLE:0000000000000000 GetBTABLE
D:\QMK_MSYS\tmp\ccq1qPx8.s:274    .text.GetBTABLE:000000000000000c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:279    .text.SetENDPOINT:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:286    .text.SetENDPOINT:0000000000000000 SetENDPOINT
D:\QMK_MSYS\tmp\ccq1qPx8.s:307    .text.GetENDPOINT:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:314    .text.GetENDPOINT:0000000000000000 GetENDPOINT
D:\QMK_MSYS\tmp\ccq1qPx8.s:337    .text.SetEPType:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:344    .text.SetEPType:0000000000000000 SetEPType
D:\QMK_MSYS\tmp\ccq1qPx8.s:370    .text.GetEPType:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:377    .text.GetEPType:0000000000000000 GetEPType
D:\QMK_MSYS\tmp\ccq1qPx8.s:400    .text.SetEPTxStatus:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:407    .text.SetEPTxStatus:0000000000000000 SetEPTxStatus
D:\QMK_MSYS\tmp\ccq1qPx8.s:450    .text.SetEPRxStatus:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:457    .text.SetEPRxStatus:0000000000000000 SetEPRxStatus
D:\QMK_MSYS\tmp\ccq1qPx8.s:500    .text.SetDouBleBuffEPStall:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:507    .text.SetDouBleBuffEPStall:0000000000000000 SetDouBleBuffEPStall
D:\QMK_MSYS\tmp\ccq1qPx8.s:569    .text.GetEPTxStatus:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:576    .text.GetEPTxStatus:0000000000000000 GetEPTxStatus
D:\QMK_MSYS\tmp\ccq1qPx8.s:599    .text.GetEPRxStatus:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:606    .text.GetEPRxStatus:0000000000000000 GetEPRxStatus
D:\QMK_MSYS\tmp\ccq1qPx8.s:629    .text.SetEPTxValid:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:636    .text.SetEPTxValid:0000000000000000 SetEPTxValid
D:\QMK_MSYS\tmp\ccq1qPx8.s:674    .text.SetEPRxValid:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:681    .text.SetEPRxValid:0000000000000000 SetEPRxValid
D:\QMK_MSYS\tmp\ccq1qPx8.s:719    .text.SetEP_KIND:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:726    .text.SetEP_KIND:0000000000000000 SetEP_KIND
D:\QMK_MSYS\tmp\ccq1qPx8.s:752    .text.ClearEP_KIND:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:759    .text.ClearEP_KIND:0000000000000000 ClearEP_KIND
D:\QMK_MSYS\tmp\ccq1qPx8.s:785    .text.Clear_Status_Out:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:792    .text.Clear_Status_Out:0000000000000000 Clear_Status_Out
D:\QMK_MSYS\tmp\ccq1qPx8.s:803    .text.Set_Status_Out:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:810    .text.Set_Status_Out:0000000000000000 Set_Status_Out
D:\QMK_MSYS\tmp\ccq1qPx8.s:821    .text.SetEPDoubleBuff:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:828    .text.SetEPDoubleBuff:0000000000000000 SetEPDoubleBuff
D:\QMK_MSYS\tmp\ccq1qPx8.s:839    .text.ClearEPDoubleBuff:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:846    .text.ClearEPDoubleBuff:0000000000000000 ClearEPDoubleBuff
D:\QMK_MSYS\tmp\ccq1qPx8.s:857    .text.GetTxStallStatus:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:864    .text.GetTxStallStatus:0000000000000000 GetTxStallStatus
D:\QMK_MSYS\tmp\ccq1qPx8.s:890    .text.GetRxStallStatus:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:897    .text.GetRxStallStatus:0000000000000000 GetRxStallStatus
D:\QMK_MSYS\tmp\ccq1qPx8.s:923    .text.ClearEP_CTR_RX:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:930    .text.ClearEP_CTR_RX:0000000000000000 ClearEP_CTR_RX
D:\QMK_MSYS\tmp\ccq1qPx8.s:955    .text.ClearEP_CTR_TX:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:962    .text.ClearEP_CTR_TX:0000000000000000 ClearEP_CTR_TX
D:\QMK_MSYS\tmp\ccq1qPx8.s:988    .text.ToggleDTOG_RX:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:995    .text.ToggleDTOG_RX:0000000000000000 ToggleDTOG_RX
D:\QMK_MSYS\tmp\ccq1qPx8.s:1022   .text.ToggleDTOG_TX:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1029   .text.ToggleDTOG_TX:0000000000000000 ToggleDTOG_TX
D:\QMK_MSYS\tmp\ccq1qPx8.s:1056   .text.ClearDTOG_RX:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1063   .text.ClearDTOG_RX:0000000000000000 ClearDTOG_RX
D:\QMK_MSYS\tmp\ccq1qPx8.s:1095   .text.ClearDTOG_TX:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1102   .text.ClearDTOG_TX:0000000000000000 ClearDTOG_TX
D:\QMK_MSYS\tmp\ccq1qPx8.s:1134   .text.SetEPAddress:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1141   .text.SetEPAddress:0000000000000000 SetEPAddress
D:\QMK_MSYS\tmp\ccq1qPx8.s:1168   .text.GetEPAddress:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1175   .text.GetEPAddress:0000000000000000 GetEPAddress
D:\QMK_MSYS\tmp\ccq1qPx8.s:1198   .text.SetEPTxAddr:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1205   .text.SetEPTxAddr:0000000000000000 SetEPTxAddr
D:\QMK_MSYS\tmp\ccq1qPx8.s:1233   .text.SetEPTxAddr:0000000000000020 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1238   .text.SetEPRxAddr:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1245   .text.SetEPRxAddr:0000000000000000 SetEPRxAddr
D:\QMK_MSYS\tmp\ccq1qPx8.s:1273   .text.SetEPRxAddr:000000000000001c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1279   .text.GetEPTxAddr:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1286   .text.GetEPTxAddr:0000000000000000 GetEPTxAddr
D:\QMK_MSYS\tmp\ccq1qPx8.s:1312   .text.GetEPTxAddr:000000000000001c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1317   .text.GetEPRxAddr:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1324   .text.GetEPRxAddr:0000000000000000 GetEPRxAddr
D:\QMK_MSYS\tmp\ccq1qPx8.s:1350   .text.GetEPRxAddr:0000000000000018 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1356   .text.SetEPTxCount:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1363   .text.SetEPTxCount:0000000000000000 SetEPTxCount
D:\QMK_MSYS\tmp\ccq1qPx8.s:1387   .text.SetEPTxCount:0000000000000018 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1393   .text.SetEPCountRxReg:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1400   .text.SetEPCountRxReg:0000000000000000 SetEPCountRxReg
D:\QMK_MSYS\tmp\ccq1qPx8.s:1461   .text.SetEPRxCount:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1468   .text.SetEPRxCount:0000000000000000 SetEPRxCount
D:\QMK_MSYS\tmp\ccq1qPx8.s:1545   .text.SetEPRxCount:000000000000003c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1553   .text.GetEPTxCount:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1560   .text.GetEPTxCount:0000000000000000 GetEPTxCount
D:\QMK_MSYS\tmp\ccq1qPx8.s:1586   .text.GetEPTxCount:000000000000001c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1592   .text.GetEPRxCount:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1599   .text.GetEPRxCount:0000000000000000 GetEPRxCount
D:\QMK_MSYS\tmp\ccq1qPx8.s:1625   .text.GetEPRxCount:000000000000001c $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1631   .text.SetEPDblBuffAddr:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1638   .text.SetEPDblBuffAddr:0000000000000000 SetEPDblBuffAddr
D:\QMK_MSYS\tmp\ccq1qPx8.s:1686   .text.SetEPDblBuffAddr:0000000000000038 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1692   .text.SetEPDblBuf0Addr:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1699   .text.SetEPDblBuf0Addr:0000000000000000 SetEPDblBuf0Addr
D:\QMK_MSYS\tmp\ccq1qPx8.s:1710   .text.SetEPDblBuf1Addr:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1717   .text.SetEPDblBuf1Addr:0000000000000000 SetEPDblBuf1Addr
D:\QMK_MSYS\tmp\ccq1qPx8.s:1728   .text.GetEPDblBuf0Addr:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1735   .text.GetEPDblBuf0Addr:0000000000000000 GetEPDblBuf0Addr
D:\QMK_MSYS\tmp\ccq1qPx8.s:1746   .text.GetEPDblBuf1Addr:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1753   .text.GetEPDblBuf1Addr:0000000000000000 GetEPDblBuf1Addr
D:\QMK_MSYS\tmp\ccq1qPx8.s:1764   .text.SetEPDblBuffCount:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1771   .text.SetEPDblBuffCount:0000000000000000 SetEPDblBuffCount
D:\QMK_MSYS\tmp\ccq1qPx8.s:1959   .text.SetEPDblBuffCount:00000000000000a4 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:1966   .text.SetEPDblBuf0Count:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:1973   .text.SetEPDblBuf0Count:0000000000000000 SetEPDblBuf0Count
D:\QMK_MSYS\tmp\ccq1qPx8.s:2070   .text.SetEPDblBuf0Count:0000000000000058 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:2076   .text.SetEPDblBuf1Count:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:2083   .text.SetEPDblBuf1Count:0000000000000000 SetEPDblBuf1Count
D:\QMK_MSYS\tmp\ccq1qPx8.s:2180   .text.SetEPDblBuf1Count:0000000000000058 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:2186   .text.GetEPDblBuf0Count:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:2193   .text.GetEPDblBuf0Count:0000000000000000 GetEPDblBuf0Count
D:\QMK_MSYS\tmp\ccq1qPx8.s:2204   .text.GetEPDblBuf1Count:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:2211   .text.GetEPDblBuf1Count:0000000000000000 GetEPDblBuf1Count
D:\QMK_MSYS\tmp\ccq1qPx8.s:2222   .text.GetEPDblBufDir:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:2229   .text.GetEPDblBufDir:0000000000000000 GetEPDblBufDir
D:\QMK_MSYS\tmp\ccq1qPx8.s:2286   .text.GetEPDblBufDir:0000000000000040 $d
D:\QMK_MSYS\tmp\ccq1qPx8.s:2293   .text.FreeUserBuffer:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:2300   .text.FreeUserBuffer:0000000000000000 FreeUserBuffer
D:\QMK_MSYS\tmp\ccq1qPx8.s:2353   .text.ToWord:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:2360   .text.ToWord:0000000000000000 ToWord
D:\QMK_MSYS\tmp\ccq1qPx8.s:2380   .text.ByteSwap:0000000000000000 $t
D:\QMK_MSYS\tmp\ccq1qPx8.s:2387   .text.ByteSwap:0000000000000000 ByteSwap

NO UNDEFINED SYMBOLS
