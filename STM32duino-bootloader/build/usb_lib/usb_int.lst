   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usb_int.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.CTR_LP,"ax",%progbits
  16              		.align	1
  17              		.global	CTR_LP
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	CTR_LP:
  25              	.LFB0:
  26              		.file 1 "usb_lib/usb_int.c"
   1:usb_lib/usb_int.c **** /******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
   2:usb_lib/usb_int.c **** * File Name          : usb_int.c
   3:usb_lib/usb_int.c **** * Author             : MCD Application Team
   4:usb_lib/usb_int.c **** * Version            : V2.2.1
   5:usb_lib/usb_int.c **** * Date               : 09/22/2008
   6:usb_lib/usb_int.c **** * Description        : Endpoint CTR (Low and High) interrupt's service routines
   7:usb_lib/usb_int.c **** ********************************************************************************
   8:usb_lib/usb_int.c **** * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
   9:usb_lib/usb_int.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  10:usb_lib/usb_int.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  11:usb_lib/usb_int.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  12:usb_lib/usb_int.c **** * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  13:usb_lib/usb_int.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  14:usb_lib/usb_int.c **** *******************************************************************************/
  15:usb_lib/usb_int.c **** 
  16:usb_lib/usb_int.c **** /* Includes ------------------------------------------------------------------*/
  17:usb_lib/usb_int.c **** #include "usb_lib.h"
  18:usb_lib/usb_int.c **** 
  19:usb_lib/usb_int.c **** /* Private typedef -----------------------------------------------------------*/
  20:usb_lib/usb_int.c **** /* Private define ------------------------------------------------------------*/
  21:usb_lib/usb_int.c **** /* Private macro -------------------------------------------------------------*/
  22:usb_lib/usb_int.c **** /* Private variables ---------------------------------------------------------*/
  23:usb_lib/usb_int.c **** u16 SaveRState;
  24:usb_lib/usb_int.c **** u16 SaveTState;
  25:usb_lib/usb_int.c **** 
  26:usb_lib/usb_int.c **** /* Extern variables ----------------------------------------------------------*/
  27:usb_lib/usb_int.c **** extern void (*pEpInt_IN[7])(void);    /*  Handles IN  interrupts   */
  28:usb_lib/usb_int.c **** extern void (*pEpInt_OUT[7])(void);   /*  Handles OUT interrupts   */
  29:usb_lib/usb_int.c **** 
  30:usb_lib/usb_int.c **** /* Private function prototypes -----------------------------------------------*/
  31:usb_lib/usb_int.c **** /* Private functions ---------------------------------------------------------*/
  32:usb_lib/usb_int.c **** 
  33:usb_lib/usb_int.c **** /*******************************************************************************
  34:usb_lib/usb_int.c **** * Function Name  : CTR_LP.
  35:usb_lib/usb_int.c **** * Description    : Low priority Endpoint Correct Transfer interrupt's service
  36:usb_lib/usb_int.c **** *                  routine.
  37:usb_lib/usb_int.c **** * Input          : None.
  38:usb_lib/usb_int.c **** * Output         : None.
  39:usb_lib/usb_int.c **** * Return         : None.
  40:usb_lib/usb_int.c **** *******************************************************************************/
  41:usb_lib/usb_int.c **** void CTR_LP(void)
  42:usb_lib/usb_int.c **** {
  27              		.loc 1 42 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  43:usb_lib/usb_int.c ****   u32 wEPVal = 0;
  31              		.loc 1 43 3 view .LVU1
  32              	.LVL0:
  44:usb_lib/usb_int.c ****   /* stay in loop while pending ints */
  45:usb_lib/usb_int.c ****   while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
  33              		.loc 1 45 3 view .LVU2
  42:usb_lib/usb_int.c ****   u32 wEPVal = 0;
  34              		.loc 1 42 1 is_stmt 0 view .LVU3
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 4, -24
  38              		.cfi_offset 5, -20
  39              		.cfi_offset 6, -16
  40              		.cfi_offset 7, -12
  41              		.cfi_offset 8, -8
  42              		.cfi_offset 14, -4
  43              		.loc 1 45 20 view .LVU4
  44 0004 5B4C     		ldr	r4, .L101
  46:usb_lib/usb_int.c ****   {
  47:usb_lib/usb_int.c ****     _SetISTR((u16)CLR_CTR); /* clear CTR flag */
  48:usb_lib/usb_int.c ****     /* extract highest priority endpoint number */
  49:usb_lib/usb_int.c ****     EPindex = (u8)(wIstr & ISTR_EP_ID);
  45              		.loc 1 49 13 view .LVU5
  46 0006 DFF87081 		ldr	r8, .L101+4
  47              	.LVL1:
  48              	.L2:
  45:usb_lib/usb_int.c ****   {
  49              		.loc 1 45 9 is_stmt 1 view .LVU6
  45:usb_lib/usb_int.c ****   {
  50              		.loc 1 45 20 is_stmt 0 view .LVU7
  51 000a D4F8443C 		ldr	r3, [r4, #3140]
  45:usb_lib/usb_int.c ****   {
  52              		.loc 1 45 18 view .LVU8
  53 000e 5B4A     		ldr	r2, .L101+8
  45:usb_lib/usb_int.c ****   {
  54              		.loc 1 45 20 view .LVU9
  55 0010 99B2     		uxth	r1, r3
  45:usb_lib/usb_int.c ****   {
  56              		.loc 1 45 9 view .LVU10
  57 0012 1B04     		lsls	r3, r3, #16
  45:usb_lib/usb_int.c ****   {
  58              		.loc 1 45 18 view .LVU11
  59 0014 1180     		strh	r1, [r2]	@ movhi
  45:usb_lib/usb_int.c ****   {
  60              		.loc 1 45 9 view .LVU12
  61 0016 5DD5     		bpl	.L1
  47:usb_lib/usb_int.c ****     /* extract highest priority endpoint number */
  62              		.loc 1 47 5 is_stmt 1 view .LVU13
  63 0018 47F6FF73 		movw	r3, #32767
  64 001c C4F8443C 		str	r3, [r4, #3140]
  65              		.loc 1 49 5 view .LVU14
  66              		.loc 1 49 26 is_stmt 0 view .LVU15
  67 0020 1388     		ldrh	r3, [r2]
  68              		.loc 1 49 15 view .LVU16
  69 0022 03F00F03 		and	r3, r3, #15
  70              		.loc 1 49 13 view .LVU17
  71 0026 88F80030 		strb	r3, [r8]
  50:usb_lib/usb_int.c ****     if (EPindex == 0)
  72              		.loc 1 50 5 is_stmt 1 view .LVU18
  73              		.loc 1 50 8 is_stmt 0 view .LVU19
  74 002a 002B     		cmp	r3, #0
  75 002c 73D1     		bne	.L3
  51:usb_lib/usb_int.c ****     {
  52:usb_lib/usb_int.c ****       /* Decode and service control endpoint interrupt */
  53:usb_lib/usb_int.c ****       /* calling related service routine */
  54:usb_lib/usb_int.c ****       /* (Setup0_Process, In0_Process, Out0_Process) */
  55:usb_lib/usb_int.c **** 
  56:usb_lib/usb_int.c ****       /* save RX & TX status */
  57:usb_lib/usb_int.c ****       /* and set both to NAK */
  58:usb_lib/usb_int.c ****       SaveRState = _GetEPRxStatus(ENDP0);
  76              		.loc 1 58 7 is_stmt 1 view .LVU20
  77              		.loc 1 58 20 is_stmt 0 view .LVU21
  78 002e D4F8003C 		ldr	r3, [r4, #3072]
  79              		.loc 1 58 18 view .LVU22
  80 0032 534E     		ldr	r6, .L101+12
  81              		.loc 1 58 20 view .LVU23
  82 0034 03F44053 		and	r3, r3, #12288
  83              		.loc 1 58 18 view .LVU24
  84 0038 3380     		strh	r3, [r6]	@ movhi
  59:usb_lib/usb_int.c ****       SaveTState = _GetEPTxStatus(ENDP0);
  85              		.loc 1 59 7 is_stmt 1 view .LVU25
  86              		.loc 1 59 20 is_stmt 0 view .LVU26
  87 003a D4F8003C 		ldr	r3, [r4, #3072]
  88              		.loc 1 59 18 view .LVU27
  89 003e 514D     		ldr	r5, .L101+16
  90              		.loc 1 59 20 view .LVU28
  91 0040 03F03003 		and	r3, r3, #48
  92              		.loc 1 59 18 view .LVU29
  93 0044 2B80     		strh	r3, [r5]	@ movhi
  94              	.LBB2:
  60:usb_lib/usb_int.c ****       _SetEPRxStatus(ENDP0, EP_RX_NAK);
  95              		.loc 1 60 7 is_stmt 1 view .LVU30
  96              		.loc 1 60 7 view .LVU31
  97 0046 504F     		ldr	r7, .L101+20
  98 0048 D4F8003C 		ldr	r3, [r4, #3072]
  99 004c 3B40     		ands	r3, r3, r7
 100 004e 9BB2     		uxth	r3, r3
 101              	.LVL2:
 102              		.loc 1 60 7 view .LVU32
 103              		.loc 1 60 7 view .LVU33
 104              		.loc 1 60 7 view .LVU34
 105              		.loc 1 60 7 view .LVU35
 106 0050 83F40053 		eor	r3, r3, #8192
 107              	.LVL3:
 108              		.loc 1 60 7 is_stmt 0 view .LVU36
 109 0054 C4F8003C 		str	r3, [r4, #3072]
 110              	.LBE2:
 111              		.loc 1 60 39 is_stmt 1 view .LVU37
 112              	.LBB3:
  61:usb_lib/usb_int.c ****       _SetEPTxStatus(ENDP0, EP_TX_NAK);
 113              		.loc 1 61 7 view .LVU38
 114              		.loc 1 61 7 view .LVU39
 115 0058 D4F8003C 		ldr	r3, [r4, #3072]
 116              	.LVL4:
 117              		.loc 1 61 7 is_stmt 0 view .LVU40
 118 005c 23F4E043 		bic	r3, r3, #28672
 119 0060 23F04003 		bic	r3, r3, #64
 120 0064 9BB2     		uxth	r3, r3
 121              	.LVL5:
 122              		.loc 1 61 7 is_stmt 1 view .LVU41
 123              		.loc 1 61 7 view .LVU42
 124              		.loc 1 61 7 view .LVU43
 125              		.loc 1 61 7 view .LVU44
 126 0066 83F02003 		eor	r3, r3, #32
 127              	.LVL6:
 128              		.loc 1 61 7 is_stmt 0 view .LVU45
 129 006a C4F8003C 		str	r3, [r4, #3072]
 130              	.LVL7:
 131              		.loc 1 61 7 view .LVU46
 132              	.LBE3:
 133              		.loc 1 61 39 is_stmt 1 view .LVU47
  62:usb_lib/usb_int.c **** 
  63:usb_lib/usb_int.c **** 
  64:usb_lib/usb_int.c ****       /* DIR bit = origin of the interrupt */
  65:usb_lib/usb_int.c **** 
  66:usb_lib/usb_int.c ****       if ((wIstr & ISTR_DIR) == 0)
 134              		.loc 1 66 7 view .LVU48
 135              		.loc 1 66 18 is_stmt 0 view .LVU49
 136 006e 1388     		ldrh	r3, [r2]
 137              	.LVL8:
 138              		.loc 1 66 10 view .LVU50
 139 0070 13F0100F 		tst	r3, #16
  67:usb_lib/usb_int.c ****       {
  68:usb_lib/usb_int.c ****         /* DIR = 0 */
  69:usb_lib/usb_int.c **** 
  70:usb_lib/usb_int.c ****         /* DIR = 0      => IN  int */
  71:usb_lib/usb_int.c ****         /* DIR = 0 implies that (EP_CTR_TX = 1) always  */
  72:usb_lib/usb_int.c **** 
  73:usb_lib/usb_int.c **** 
  74:usb_lib/usb_int.c ****         _ClearEP_CTR_TX(ENDP0);
 140              		.loc 1 74 9 view .LVU51
 141 0074 D4F8003C 		ldr	r3, [r4, #3072]
  66:usb_lib/usb_int.c ****       {
 142              		.loc 1 66 10 view .LVU52
 143 0078 2ED1     		bne	.L4
 144              	.L100:
  75:usb_lib/usb_int.c ****         In0_Process();
  76:usb_lib/usb_int.c **** 
  77:usb_lib/usb_int.c ****            /* before terminate set Tx & Rx status */
  78:usb_lib/usb_int.c ****           _SetEPRxStatus(ENDP0, SaveRState);
  79:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
  80:usb_lib/usb_int.c ****           return;
  81:usb_lib/usb_int.c ****       }
  82:usb_lib/usb_int.c ****       else
  83:usb_lib/usb_int.c ****       {
  84:usb_lib/usb_int.c ****         /* DIR = 1 */
  85:usb_lib/usb_int.c **** 
  86:usb_lib/usb_int.c ****         /* DIR = 1 & CTR_RX       => SETUP or OUT int */
  87:usb_lib/usb_int.c ****         /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */
  88:usb_lib/usb_int.c **** 
  89:usb_lib/usb_int.c ****         wEPVal = _GetENDPOINT(ENDP0);
  90:usb_lib/usb_int.c ****         if ((wEPVal & EP_CTR_TX) != 0)
  91:usb_lib/usb_int.c ****         {
  92:usb_lib/usb_int.c ****           _ClearEP_CTR_TX(ENDP0);
 145              		.loc 1 92 11 view .LVU53
 146 007a 23F4E143 		bic	r3, r3, #28800
 147 007e 23F07003 		bic	r3, r3, #112
 148 0082 1B04     		lsls	r3, r3, #16
 149 0084 1B0C     		lsrs	r3, r3, #16
 150 0086 C4F8003C 		str	r3, [r4, #3072]
 151              	.LVL9:
  93:usb_lib/usb_int.c ****           In0_Process();
 152              		.loc 1 93 11 is_stmt 1 view .LVU54
 153 008a FFF7FEFF 		bl	In0_Process
 154              	.LVL10:
 155              	.LBB4:
  94:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
  95:usb_lib/usb_int.c ****           _SetEPRxStatus(ENDP0, SaveRState);
 156              		.loc 1 95 11 view .LVU55
 157              		.loc 1 95 11 view .LVU56
 158              	.L97:
 159              	.LBE4:
 160              	.LBB5:
  96:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
  97:usb_lib/usb_int.c ****           return;
  98:usb_lib/usb_int.c ****         }
  99:usb_lib/usb_int.c ****         else if ((wEPVal &EP_SETUP) != 0)
 100:usb_lib/usb_int.c ****         {
 101:usb_lib/usb_int.c ****           _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
 102:usb_lib/usb_int.c ****           Setup0_Process();
 103:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
 104:usb_lib/usb_int.c ****           _SetEPRxStatus(ENDP0, SaveRState);
 105:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
 106:usb_lib/usb_int.c ****           return;
 107:usb_lib/usb_int.c ****         }
 108:usb_lib/usb_int.c **** 
 109:usb_lib/usb_int.c ****         else if ((wEPVal & EP_CTR_RX) != 0)
 110:usb_lib/usb_int.c ****         {
 111:usb_lib/usb_int.c ****           _ClearEP_CTR_RX(ENDP0);
 112:usb_lib/usb_int.c ****           Out0_Process();
 113:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
 114:usb_lib/usb_int.c ****           _SetEPRxStatus(ENDP0, SaveRState);
 161              		.loc 1 114 11 view .LVU57
 162              		.loc 1 114 11 view .LVU58
 163 008e D4F8003C 		ldr	r3, [r4, #3072]
 164 0092 3288     		ldrh	r2, [r6]
 165 0094 3B40     		ands	r3, r3, r7
 166 0096 9BB2     		uxth	r3, r3
 167              	.LVL11:
 168              		.loc 1 114 11 view .LVU59
 169 0098 D704     		lsls	r7, r2, #19
 170              		.loc 1 114 11 view .LVU60
 171 009a 48BF     		it	mi
 172 009c 83F48053 		eormi	r3, r3, #4096
 173              	.LVL12:
 174              		.loc 1 114 11 view .LVU61
 175 00a0 9604     		lsls	r6, r2, #18
 176              		.loc 1 114 11 view .LVU62
 177 00a2 344A     		ldr	r2, .L101
 178 00a4 48BF     		it	mi
 179 00a6 83F40053 		eormi	r3, r3, #8192
 180              	.LVL13:
 181              		.loc 1 114 11 view .LVU63
 182 00aa C2F8003C 		str	r3, [r2, #3072]
 183              	.LBE5:
 184              		.loc 1 114 44 view .LVU64
 185              	.LBB6:
 115:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
 186              		.loc 1 115 11 view .LVU65
 187              		.loc 1 115 11 view .LVU66
 188 00ae D2F8003C 		ldr	r3, [r2, #3072]
 189              	.LVL14:
 190              		.loc 1 115 11 is_stmt 0 view .LVU67
 191 00b2 2A88     		ldrh	r2, [r5]
 192              	.LVL15:
 193              		.loc 1 115 11 view .LVU68
 194 00b4 23F4E043 		bic	r3, r3, #28672
 195 00b8 23F04003 		bic	r3, r3, #64
 196 00bc 9BB2     		uxth	r3, r3
 197              	.LVL16:
 198              		.loc 1 115 11 is_stmt 1 view .LVU69
 199 00be D406     		lsls	r4, r2, #27
 200              	.LVL17:
 201              		.loc 1 115 11 view .LVU70
 202 00c0 48BF     		it	mi
 203 00c2 83F01003 		eormi	r3, r3, #16
 204              	.LVL18:
 205              		.loc 1 115 11 view .LVU71
 206 00c6 9006     		lsls	r0, r2, #26
 207              		.loc 1 115 11 view .LVU72
 208 00c8 2A4A     		ldr	r2, .L101
 209 00ca 48BF     		it	mi
 210 00cc 83F02003 		eormi	r3, r3, #32
 211              	.LVL19:
 212              		.loc 1 115 11 view .LVU73
 213 00d0 C2F8003C 		str	r3, [r2, #3072]
 214              	.LVL20:
 215              		.loc 1 115 11 is_stmt 0 view .LVU74
 216              	.LBE6:
 217              		.loc 1 115 44 is_stmt 1 view .LVU75
 116:usb_lib/usb_int.c ****           return;
 218              		.loc 1 116 11 view .LVU76
 219              	.L1:
 117:usb_lib/usb_int.c ****         }
 118:usb_lib/usb_int.c ****       }
 119:usb_lib/usb_int.c ****     }/* if(EPindex == 0) */
 120:usb_lib/usb_int.c ****     else
 121:usb_lib/usb_int.c ****     {
 122:usb_lib/usb_int.c ****       /* Decode and service non control endpoints interrupt  */
 123:usb_lib/usb_int.c **** 
 124:usb_lib/usb_int.c ****       /* process related endpoint register */
 125:usb_lib/usb_int.c ****       wEPVal = _GetENDPOINT(EPindex);
 126:usb_lib/usb_int.c ****       if ((wEPVal & EP_CTR_RX) != 0)
 127:usb_lib/usb_int.c ****       {
 128:usb_lib/usb_int.c ****         /* clear int flag */
 129:usb_lib/usb_int.c ****         _ClearEP_CTR_RX(EPindex);
 130:usb_lib/usb_int.c **** 
 131:usb_lib/usb_int.c ****         /* call OUT service function */
 132:usb_lib/usb_int.c ****         (*pEpInt_OUT[EPindex-1])();
 133:usb_lib/usb_int.c **** 
 134:usb_lib/usb_int.c ****       } /* if((wEPVal & EP_CTR_RX) */
 135:usb_lib/usb_int.c **** 
 136:usb_lib/usb_int.c ****       if ((wEPVal & EP_CTR_TX) != 0)
 137:usb_lib/usb_int.c ****       {
 138:usb_lib/usb_int.c ****         /* clear int flag */
 139:usb_lib/usb_int.c ****         _ClearEP_CTR_TX(EPindex);
 140:usb_lib/usb_int.c **** 
 141:usb_lib/usb_int.c ****         /* call IN service function */
 142:usb_lib/usb_int.c ****         (*pEpInt_IN[EPindex-1])();
 143:usb_lib/usb_int.c ****       } /* if((wEPVal & EP_CTR_TX) != 0) */
 144:usb_lib/usb_int.c **** 
 145:usb_lib/usb_int.c ****     }/* if(EPindex == 0) else */
 146:usb_lib/usb_int.c **** 
 147:usb_lib/usb_int.c ****   }/* while(...) */
 148:usb_lib/usb_int.c **** }
 220              		.loc 1 148 1 is_stmt 0 view .LVU77
 221 00d4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 222              	.LVL21:
 223              	.L4:
  89:usb_lib/usb_int.c ****         if ((wEPVal & EP_CTR_TX) != 0)
 224              		.loc 1 89 9 is_stmt 1 view .LVU78
  90:usb_lib/usb_int.c ****         {
 225              		.loc 1 90 9 view .LVU79
  90:usb_lib/usb_int.c ****         {
 226              		.loc 1 90 12 is_stmt 0 view .LVU80
 227 00d8 1906     		lsls	r1, r3, #24
 228 00da 02D5     		bpl	.L10
  92:usb_lib/usb_int.c ****           In0_Process();
 229              		.loc 1 92 11 is_stmt 1 view .LVU81
 230 00dc D4F8003C 		ldr	r3, [r4, #3072]
 231              	.LVL22:
  92:usb_lib/usb_int.c ****           In0_Process();
 232              		.loc 1 92 11 is_stmt 0 view .LVU82
 233 00e0 CBE7     		b	.L100
 234              	.LVL23:
 235              	.L10:
  99:usb_lib/usb_int.c ****         {
 236              		.loc 1 99 14 is_stmt 1 view .LVU83
  99:usb_lib/usb_int.c ****         {
 237              		.loc 1 99 17 is_stmt 0 view .LVU84
 238 00e2 1A05     		lsls	r2, r3, #20
 239 00e4 0AD5     		bpl	.L15
 101:usb_lib/usb_int.c ****           Setup0_Process();
 240              		.loc 1 101 11 is_stmt 1 view .LVU85
 241 00e6 D4F8003C 		ldr	r3, [r4, #3072]
 242              	.LVL24:
 101:usb_lib/usb_int.c ****           Setup0_Process();
 243              		.loc 1 101 11 is_stmt 0 view .LVU86
 244 00ea 23F07003 		bic	r3, r3, #112
 245 00ee 1B05     		lsls	r3, r3, #20
 246 00f0 1B0D     		lsrs	r3, r3, #20
 247 00f2 C4F8003C 		str	r3, [r4, #3072]
 248              	.LVL25:
 102:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
 249              		.loc 1 102 11 is_stmt 1 view .LVU87
 250 00f6 FFF7FEFF 		bl	Setup0_Process
 251              	.LVL26:
 252              	.LBB7:
 104:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
 253              		.loc 1 104 11 view .LVU88
 104:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
 254              		.loc 1 104 11 view .LVU89
 255 00fa C8E7     		b	.L97
 256              	.LVL27:
 257              	.L15:
 104:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
 258              		.loc 1 104 11 is_stmt 0 view .LVU90
 259              	.LBE7:
 109:usb_lib/usb_int.c ****         {
 260              		.loc 1 109 14 is_stmt 1 view .LVU91
 109:usb_lib/usb_int.c ****         {
 261              		.loc 1 109 17 is_stmt 0 view .LVU92
 262 00fc 1B04     		lsls	r3, r3, #16
 263              	.LVL28:
 109:usb_lib/usb_int.c ****         {
 264              		.loc 1 109 17 view .LVU93
 265 00fe 84D5     		bpl	.L2
 111:usb_lib/usb_int.c ****           Out0_Process();
 266              		.loc 1 111 11 is_stmt 1 view .LVU94
 267 0100 D4F8003C 		ldr	r3, [r4, #3072]
 268 0104 23F07003 		bic	r3, r3, #112
 269 0108 1B05     		lsls	r3, r3, #20
 270 010a 1B0D     		lsrs	r3, r3, #20
 271 010c C4F8003C 		str	r3, [r4, #3072]
 272              	.LVL29:
 112:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
 273              		.loc 1 112 11 view .LVU95
 274 0110 FFF7FEFF 		bl	Out0_Process
 275              	.LVL30:
 276 0114 BBE7     		b	.L97
 277              	.L3:
 125:usb_lib/usb_int.c ****       if ((wEPVal & EP_CTR_RX) != 0)
 278              		.loc 1 125 7 view .LVU96
 125:usb_lib/usb_int.c ****       if ((wEPVal & EP_CTR_RX) != 0)
 279              		.loc 1 125 16 is_stmt 0 view .LVU97
 280 0116 9B00     		lsls	r3, r3, #2
 281 0118 03F18043 		add	r3, r3, #1073741824
 282 011c 03F5B843 		add	r3, r3, #23552
 283 0120 1D68     		ldr	r5, [r3]
 284              	.LVL31:
 126:usb_lib/usb_int.c ****       {
 285              		.loc 1 126 7 is_stmt 1 view .LVU98
 126:usb_lib/usb_int.c ****       {
 286              		.loc 1 126 10 is_stmt 0 view .LVU99
 287 0122 2904     		lsls	r1, r5, #16
 288 0124 0CD5     		bpl	.L26
 129:usb_lib/usb_int.c **** 
 289              		.loc 1 129 9 is_stmt 1 view .LVU100
 290 0126 1A68     		ldr	r2, [r3]
 291 0128 22F07002 		bic	r2, r2, #112
 292 012c 1205     		lsls	r2, r2, #20
 293 012e 120D     		lsrs	r2, r2, #20
 294 0130 1A60     		str	r2, [r3]
 132:usb_lib/usb_int.c **** 
 295              		.loc 1 132 9 view .LVU101
 132:usb_lib/usb_int.c **** 
 296              		.loc 1 132 29 is_stmt 0 view .LVU102
 297 0132 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 132:usb_lib/usb_int.c **** 
 298              		.loc 1 132 10 view .LVU103
 299 0136 154A     		ldr	r2, .L101+24
 300 0138 013B     		subs	r3, r3, #1
 301 013a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 302 013e 9847     		blx	r3
 303              	.LVL32:
 304              	.L26:
 136:usb_lib/usb_int.c ****       {
 305              		.loc 1 136 7 is_stmt 1 view .LVU104
 136:usb_lib/usb_int.c ****       {
 306              		.loc 1 136 10 is_stmt 0 view .LVU105
 307 0140 2A06     		lsls	r2, r5, #24
 308 0142 7FF562AF 		bpl	.L2
 139:usb_lib/usb_int.c **** 
 309              		.loc 1 139 9 is_stmt 1 view .LVU106
 310 0146 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 311 014a 9B00     		lsls	r3, r3, #2
 312 014c 03F18043 		add	r3, r3, #1073741824
 313 0150 03F5B843 		add	r3, r3, #23552
 314 0154 1A68     		ldr	r2, [r3]
 315 0156 22F4E142 		bic	r2, r2, #28800
 316 015a 22F07002 		bic	r2, r2, #112
 317 015e 1204     		lsls	r2, r2, #16
 318 0160 120C     		lsrs	r2, r2, #16
 319 0162 1A60     		str	r2, [r3]
 142:usb_lib/usb_int.c ****       } /* if((wEPVal & EP_CTR_TX) != 0) */
 320              		.loc 1 142 9 view .LVU107
 142:usb_lib/usb_int.c ****       } /* if((wEPVal & EP_CTR_TX) != 0) */
 321              		.loc 1 142 28 is_stmt 0 view .LVU108
 322 0164 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 142:usb_lib/usb_int.c ****       } /* if((wEPVal & EP_CTR_TX) != 0) */
 323              		.loc 1 142 10 view .LVU109
 324 0168 094A     		ldr	r2, .L101+28
 325 016a 013B     		subs	r3, r3, #1
 326 016c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 327 0170 9847     		blx	r3
 328              	.LVL33:
 329 0172 4AE7     		b	.L2
 330              	.L102:
 331              		.align	2
 332              	.L101:
 333 0174 00500040 		.word	1073762304
 334 0178 00000000 		.word	EPindex
 335 017c 00000000 		.word	wIstr
 336 0180 00000000 		.word	.LANCHOR0
 337 0184 00000000 		.word	.LANCHOR1
 338 0188 8FBFFFFF 		.word	-16497
 339 018c 00000000 		.word	pEpInt_OUT
 340 0190 00000000 		.word	pEpInt_IN
 341              		.cfi_endproc
 342              	.LFE0:
 344              		.section	.text.CTR_HP,"ax",%progbits
 345              		.align	1
 346              		.global	CTR_HP
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu softvfp
 352              	CTR_HP:
 353              	.LFB1:
 149:usb_lib/usb_int.c **** 
 150:usb_lib/usb_int.c **** /*******************************************************************************
 151:usb_lib/usb_int.c **** * Function Name  : CTR_HP.
 152:usb_lib/usb_int.c **** * Description    : High Priority Endpoint Correct Transfer interrupt's service
 153:usb_lib/usb_int.c **** *                  routine.
 154:usb_lib/usb_int.c **** * Input          : None.
 155:usb_lib/usb_int.c **** * Output         : None.
 156:usb_lib/usb_int.c **** * Return         : None.
 157:usb_lib/usb_int.c **** *******************************************************************************/
 158:usb_lib/usb_int.c **** void CTR_HP(void)
 159:usb_lib/usb_int.c **** {
 354              		.loc 1 159 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 160:usb_lib/usb_int.c ****   u32 wEPVal = 0;
 358              		.loc 1 160 3 view .LVU111
 359              	.LVL34:
 161:usb_lib/usb_int.c **** 
 162:usb_lib/usb_int.c ****   while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 360              		.loc 1 162 3 view .LVU112
 159:usb_lib/usb_int.c ****   u32 wEPVal = 0;
 361              		.loc 1 159 1 is_stmt 0 view .LVU113
 362 0000 70B5     		push	{r4, r5, r6, lr}
 363              		.cfi_def_cfa_offset 16
 364              		.cfi_offset 4, -16
 365              		.cfi_offset 5, -12
 366              		.cfi_offset 6, -8
 367              		.cfi_offset 14, -4
 368              		.loc 1 162 20 view .LVU114
 369 0002 1A4E     		ldr	r6, .L112
 370              		.loc 1 162 18 view .LVU115
 371 0004 1A4D     		ldr	r5, .L112+4
 163:usb_lib/usb_int.c ****   {
 164:usb_lib/usb_int.c ****     _SetISTR((u16)CLR_CTR); /* clear CTR flag */
 165:usb_lib/usb_int.c ****     /* extract highest priority endpoint number */
 166:usb_lib/usb_int.c ****     EPindex = (u8)(wIstr & ISTR_EP_ID);
 372              		.loc 1 166 13 view .LVU116
 373 0006 1B4C     		ldr	r4, .L112+8
 374              	.LVL35:
 375              	.L104:
 162:usb_lib/usb_int.c ****   {
 376              		.loc 1 162 9 is_stmt 1 view .LVU117
 162:usb_lib/usb_int.c ****   {
 377              		.loc 1 162 20 is_stmt 0 view .LVU118
 378 0008 D6F8443C 		ldr	r3, [r6, #3140]
 379 000c 9AB2     		uxth	r2, r3
 162:usb_lib/usb_int.c ****   {
 380              		.loc 1 162 9 view .LVU119
 381 000e 1B04     		lsls	r3, r3, #16
 162:usb_lib/usb_int.c ****   {
 382              		.loc 1 162 18 view .LVU120
 383 0010 2A80     		strh	r2, [r5]	@ movhi
 162:usb_lib/usb_int.c ****   {
 384              		.loc 1 162 9 view .LVU121
 385 0012 00D4     		bmi	.L107
 167:usb_lib/usb_int.c ****     /* process related endpoint register */
 168:usb_lib/usb_int.c ****     wEPVal = _GetENDPOINT(EPindex);
 169:usb_lib/usb_int.c ****     if ((wEPVal & EP_CTR_RX) != 0)
 170:usb_lib/usb_int.c ****     {
 171:usb_lib/usb_int.c ****       /* clear int flag */
 172:usb_lib/usb_int.c ****       _ClearEP_CTR_RX(EPindex);
 173:usb_lib/usb_int.c **** 
 174:usb_lib/usb_int.c ****       /* call OUT service function */
 175:usb_lib/usb_int.c ****       (*pEpInt_OUT[EPindex-1])();
 176:usb_lib/usb_int.c **** 
 177:usb_lib/usb_int.c ****     } /* if((wEPVal & EP_CTR_RX) */
 178:usb_lib/usb_int.c ****     else if ((wEPVal & EP_CTR_TX) != 0)
 179:usb_lib/usb_int.c ****     {
 180:usb_lib/usb_int.c ****       /* clear int flag */
 181:usb_lib/usb_int.c ****       _ClearEP_CTR_TX(EPindex);
 182:usb_lib/usb_int.c **** 
 183:usb_lib/usb_int.c ****       /* call IN service function */
 184:usb_lib/usb_int.c ****       (*pEpInt_IN[EPindex-1])();
 185:usb_lib/usb_int.c **** 
 186:usb_lib/usb_int.c **** 
 187:usb_lib/usb_int.c ****     } /* if((wEPVal & EP_CTR_TX) != 0) */
 188:usb_lib/usb_int.c **** 
 189:usb_lib/usb_int.c ****   }/* while(...) */
 190:usb_lib/usb_int.c **** }
 386              		.loc 1 190 1 view .LVU122
 387 0014 70BD     		pop	{r4, r5, r6, pc}
 388              	.L107:
 164:usb_lib/usb_int.c ****     /* extract highest priority endpoint number */
 389              		.loc 1 164 5 is_stmt 1 view .LVU123
 390 0016 47F6FF73 		movw	r3, #32767
 391 001a C6F8443C 		str	r3, [r6, #3140]
 166:usb_lib/usb_int.c ****     /* process related endpoint register */
 392              		.loc 1 166 5 view .LVU124
 166:usb_lib/usb_int.c ****     /* process related endpoint register */
 393              		.loc 1 166 26 is_stmt 0 view .LVU125
 394 001e 2B88     		ldrh	r3, [r5]
 166:usb_lib/usb_int.c ****     /* process related endpoint register */
 395              		.loc 1 166 15 view .LVU126
 396 0020 03F00F03 		and	r3, r3, #15
 166:usb_lib/usb_int.c ****     /* process related endpoint register */
 397              		.loc 1 166 13 view .LVU127
 398 0024 2370     		strb	r3, [r4]
 168:usb_lib/usb_int.c ****     if ((wEPVal & EP_CTR_RX) != 0)
 399              		.loc 1 168 5 is_stmt 1 view .LVU128
 168:usb_lib/usb_int.c ****     if ((wEPVal & EP_CTR_RX) != 0)
 400              		.loc 1 168 14 is_stmt 0 view .LVU129
 401 0026 9B00     		lsls	r3, r3, #2
 402 0028 03F18043 		add	r3, r3, #1073741824
 403 002c 03F5B843 		add	r3, r3, #23552
 404 0030 1A68     		ldr	r2, [r3]
 405              	.LVL36:
 169:usb_lib/usb_int.c ****     {
 406              		.loc 1 169 5 is_stmt 1 view .LVU130
 169:usb_lib/usb_int.c ****     {
 407              		.loc 1 169 8 is_stmt 0 view .LVU131
 408 0032 1104     		lsls	r1, r2, #16
 409 0034 0CD5     		bpl	.L105
 172:usb_lib/usb_int.c **** 
 410              		.loc 1 172 7 is_stmt 1 view .LVU132
 411 0036 1A68     		ldr	r2, [r3]
 412              	.LVL37:
 172:usb_lib/usb_int.c **** 
 413              		.loc 1 172 7 is_stmt 0 view .LVU133
 414 0038 22F07002 		bic	r2, r2, #112
 415 003c 1205     		lsls	r2, r2, #20
 416 003e 120D     		lsrs	r2, r2, #20
 417 0040 1A60     		str	r2, [r3]
 175:usb_lib/usb_int.c **** 
 418              		.loc 1 175 7 is_stmt 1 view .LVU134
 175:usb_lib/usb_int.c **** 
 419              		.loc 1 175 27 is_stmt 0 view .LVU135
 420 0042 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 175:usb_lib/usb_int.c **** 
 421              		.loc 1 175 8 view .LVU136
 422 0044 0C4A     		ldr	r2, .L112+12
 423 0046 013B     		subs	r3, r3, #1
 424              	.L111:
 184:usb_lib/usb_int.c **** 
 425              		.loc 1 184 8 view .LVU137
 426 0048 52F82330 		ldr	r3, [r2, r3, lsl #2]
 427 004c 9847     		blx	r3
 428              	.LVL38:
 429 004e DBE7     		b	.L104
 430              	.LVL39:
 431              	.L105:
 178:usb_lib/usb_int.c ****     {
 432              		.loc 1 178 10 is_stmt 1 view .LVU138
 178:usb_lib/usb_int.c ****     {
 433              		.loc 1 178 13 is_stmt 0 view .LVU139
 434 0050 1206     		lsls	r2, r2, #24
 435              	.LVL40:
 178:usb_lib/usb_int.c ****     {
 436              		.loc 1 178 13 view .LVU140
 437 0052 D9D5     		bpl	.L104
 181:usb_lib/usb_int.c **** 
 438              		.loc 1 181 7 is_stmt 1 view .LVU141
 439 0054 1A68     		ldr	r2, [r3]
 440 0056 22F4E142 		bic	r2, r2, #28800
 441 005a 22F07002 		bic	r2, r2, #112
 442 005e 1204     		lsls	r2, r2, #16
 443 0060 120C     		lsrs	r2, r2, #16
 444 0062 1A60     		str	r2, [r3]
 184:usb_lib/usb_int.c **** 
 445              		.loc 1 184 7 view .LVU142
 184:usb_lib/usb_int.c **** 
 446              		.loc 1 184 26 is_stmt 0 view .LVU143
 447 0064 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 184:usb_lib/usb_int.c **** 
 448              		.loc 1 184 8 view .LVU144
 449 0066 054A     		ldr	r2, .L112+16
 450 0068 013B     		subs	r3, r3, #1
 451 006a EDE7     		b	.L111
 452              	.L113:
 453              		.align	2
 454              	.L112:
 455 006c 00500040 		.word	1073762304
 456 0070 00000000 		.word	wIstr
 457 0074 00000000 		.word	EPindex
 458 0078 00000000 		.word	pEpInt_OUT
 459 007c 00000000 		.word	pEpInt_IN
 460              		.cfi_endproc
 461              	.LFE1:
 463              		.global	SaveTState
 464              		.global	SaveRState
 465              		.section	.bss.SaveRState,"aw",%nobits
 466              		.align	1
 467              		.set	.LANCHOR0,. + 0
 470              	SaveRState:
 471 0000 0000     		.space	2
 472              		.section	.bss.SaveTState,"aw",%nobits
 473              		.align	1
 474              		.set	.LANCHOR1,. + 0
 477              	SaveTState:
 478 0000 0000     		.space	2
 479              		.text
 480              	.Letext0:
 481              		.file 2 "usb_lib/usb_type.h"
 482              		.file 3 "usb_lib/usb_regs.h"
 483              		.file 4 "usb_lib/usb_core.h"
 484              		.file 5 "usb_lib/usb_init.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_int.c
D:\QMK_MSYS\tmp\ccZ0nyHD.s:16     .text.CTR_LP:0000000000000000 $t
D:\QMK_MSYS\tmp\ccZ0nyHD.s:24     .text.CTR_LP:0000000000000000 CTR_LP
D:\QMK_MSYS\tmp\ccZ0nyHD.s:333    .text.CTR_LP:0000000000000174 $d
D:\QMK_MSYS\tmp\ccZ0nyHD.s:345    .text.CTR_HP:0000000000000000 $t
D:\QMK_MSYS\tmp\ccZ0nyHD.s:352    .text.CTR_HP:0000000000000000 CTR_HP
D:\QMK_MSYS\tmp\ccZ0nyHD.s:455    .text.CTR_HP:000000000000006c $d
D:\QMK_MSYS\tmp\ccZ0nyHD.s:477    .bss.SaveTState:0000000000000000 SaveTState
D:\QMK_MSYS\tmp\ccZ0nyHD.s:470    .bss.SaveRState:0000000000000000 SaveRState
D:\QMK_MSYS\tmp\ccZ0nyHD.s:466    .bss.SaveRState:0000000000000000 $d
D:\QMK_MSYS\tmp\ccZ0nyHD.s:473    .bss.SaveTState:0000000000000000 $d

UNDEFINED SYMBOLS
In0_Process
Setup0_Process
Out0_Process
EPindex
wIstr
pEpInt_OUT
pEpInt_IN
