
build/maple_boot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000f0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .flashtext    00000000  080000f0  080000f0  000202c8  2**0
                  CONTENTS
  2 .text         000017b4  080000f0  080000f0  000100f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         000002c8  20000000  080018a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000000  200002c8  08001b6c  00000000  2**0
                  ALLOC
  5 .bss.ResumeS  00000002  200002c8  08001b6c  000202c8  2**0
                  ALLOC
  6 .bss.bDeviceState 00000004  200002cc  08001b70  000202c8  2**2
                  ALLOC
  7 .bss.bIntPackSOF 00000001  200002d0  08001b74  000202c8  2**0
                  ALLOC
  8 .bss.wIstr    00000002  200002d2  08001b76  000202c8  2**1
                  ALLOC
  9 .bss.wTransferSize 00000004  200002d4  08001b78  000202c8  2**2
                  ALLOC
 10 .bss.code_copy_lock 00000001  200002d8  08001b7c  000202c8  2**0
                  ALLOC
 11 .bss.dfuAppStatus 00000006  200002d9  08001b7d  000202c8  2**0
                  ALLOC
 12 .bss.dfuBusy  00000001  200002df  08001b83  000202c8  2**0
                  ALLOC
 13 .bss.recvBuffer 00000800  200002e0  08001b84  000202c8  2**2
                  ALLOC
 14 .bss.thisBlockLen 00000002  20000ae0  08002384  000202c8  2**1
                  ALLOC
 15 .bss.uploadBlockLen 00000002  20000ae2  08002386  000202c8  2**1
                  ALLOC
 16 .bss.userFirmwareLen 00000004  20000ae4  08002388  000202c8  2**2
                  ALLOC
 17 .bss.userUploadType 00000001  20000ae8  0800238c  000202c8  2**0
                  ALLOC
 18 .bss.SaveRState 00000002  20000aea  0800238e  000202c8  2**1
                  ALLOC
 19 .bss.SaveTState 00000002  20000aec  08002390  000202c8  2**1
                  ALLOC
 20 .bss.Device_Info 0000001c  20000af0  08002394  000202c8  2**2
                  ALLOC
 21 .bss.EPindex  00000001  20000b0c  080023b0  000202c8  2**0
                  ALLOC
 22 .bss.pInformation 00000004  20000b10  080023b4  000202c8  2**2
                  ALLOC
 23 .bss.pProperty 00000004  20000b14  080023b8  000202c8  2**2
                  ALLOC
 24 .bss.pUser_Standard_Requests 00000004  20000b18  080023bc  000202c8  2**2
                  ALLOC
 25 .bss.wInterrupt_Mask 00000002  20000b1c  080023c0  000202c8  2**1
                  ALLOC
 26 .bss.Data_Mul_MaxPacketSize 00000001  20000b1e  080023c2  000202c8  2**0
                  ALLOC
 27 .bss.StatusInfo 00000002  20000b20  080023c4  000202c8  2**1
                  ALLOC
 28 ._usrstack    00000102  20000b22  080023c6  000202c8  2**0
                  ALLOC
 29 .comment      00000012  00000000  00000000  000202c8  2**0
                  CONTENTS, READONLY
 30 .ARM.attributes 0000002f  00000000  00000000  000202da  2**0
                  CONTENTS, READONLY
 31 .debug_aranges 00000550  00000000  00000000  00020310  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_info   00004b4c  00000000  00000000  00020860  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 33 .debug_abbrev 000015b5  00000000  00000000  000253ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 34 .debug_line   0000306a  00000000  00000000  00026961  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 35 .debug_frame  00000be8  00000000  00000000  000299cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 36 .debug_str    0000183b  00000000  00000000  0002a5b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 37 .debug_loc    0000276c  00000000  00000000  0002bdef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 38 .debug_ranges 000006e8  00000000  00000000  0002e560  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20002800 	andcs	r2, r0, r0, lsl #16
 8000004:	080000f1 	stmdaeq	r0, {r0, r4, r5, r6, r7}
 8000008:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 800000c:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000010:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000014:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000018:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
	...
 800002c:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000030:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 800003c:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000040:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000044:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000048:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 800004c:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000050:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000054:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000058:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 800005c:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000060:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000064:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000068:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 800006c:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000070:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000074:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000078:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 800007c:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000080:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000084:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000088:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 800008c:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000090:	08000521 	stmdaeq	r0, {r0, r5, r8, sl}
 8000094:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 8000098:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 800009c:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000a0:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000a4:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000a8:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000ac:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000b0:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000b4:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000b8:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000bc:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000c0:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000c4:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000c8:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000cc:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000d0:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000d4:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000d8:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000dc:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000e0:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000e4:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000e8:	08000131 	stmdaeq	r0, {r0, r4, r5, r8}
 80000ec:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

080000f0 <Reset_Handler>:
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 80000f0:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 80000f2:	e003      	b.n	80000fc <LoopCopyDataInit>

080000f4 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 80000f4:	4b09      	ldr	r3, [pc, #36]	; (800011c <LoopFillZerobss+0xc>)
	ldr	r3, [r3, r1]
 80000f6:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 80000f8:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 80000fa:	3104      	adds	r1, #4

080000fc <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 80000fc:	4808      	ldr	r0, [pc, #32]	; (8000120 <LoopFillZerobss+0x10>)
	ldr	r3, =_edata
 80000fe:	4b09      	ldr	r3, [pc, #36]	; (8000124 <LoopFillZerobss+0x14>)
	adds	r2, r0, r1
 8000100:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8000102:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8000104:	d3f6      	bcc.n	80000f4 <CopyDataInit>
	ldr	r2, =_sbss
 8000106:	4a08      	ldr	r2, [pc, #32]	; (8000128 <LoopFillZerobss+0x18>)
	b	LoopFillZerobss
 8000108:	e002      	b.n	8000110 <LoopFillZerobss>

0800010a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 800010a:	2300      	movs	r3, #0
	str	r3, [r2], #4
 800010c:	f842 3b04 	str.w	r3, [r2], #4

08000110 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8000110:	4b06      	ldr	r3, [pc, #24]	; (800012c <LoopFillZerobss+0x1c>)
	cmp	r2, r3
 8000112:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8000114:	d3f9      	bcc.n	800010a <FillZerobss>
/* Call the application's entry point.*/
	bl	main
 8000116:	f000 fa69 	bl	80005ec <main>
	bx	lr
 800011a:	4770      	bx	lr
	ldr	r3, =_sidata
 800011c:	080018a4 	stmdaeq	r0, {r2, r5, r7, fp, ip}
	ldr	r0, =_sdata
 8000120:	20000000 	andcs	r0, r0, r0
	ldr	r3, =_edata
 8000124:	200002c8 	andcs	r0, r0, r8, asr #5
	ldr	r2, =_sbss
 8000128:	200002c8 	andcs	r0, r0, r8, asr #5
	ldr	r3, = _ebss
 800012c:	200002c8 	andcs	r0, r0, r8, asr #5

08000130 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8000130:	e7fe      	b.n	8000130 <ADC1_2_IRQHandler>

08000132 <usbStatusIn>:
    bDeviceState = ATTACHED;
    SetDeviceAddress(0); /* different than usbSetDeviceAddr! comes from usb_core */
}

void usbStatusIn(void) {
}
 8000132:	4770      	bx	lr

08000134 <usbGetInterfaceSetting>:
RESULT usbGetInterfaceSetting(u8 interface, u8 altSetting) {
    /* alt setting 0 -> program RAM, alt setting 1 -> FLASH */
    if (interface > NUM_ALT_SETTINGS) {
        return USB_UNSUPPORT;
    } else {
        return USB_SUCCESS;
 8000134:	2803      	cmp	r0, #3
    }
}
 8000136:	bf8c      	ite	hi
 8000138:	2002      	movhi	r0, #2
 800013a:	2000      	movls	r0, #0
 800013c:	4770      	bx	lr
	...

08000140 <usbSetConfiguration>:
void usbGetConfiguration(void) {
    /* nothing process */
}

void usbSetConfiguration(void) {
    if (pInformation->Current_Configuration != 0) {
 8000140:	4b03      	ldr	r3, [pc, #12]	; (8000150 <usbSetConfiguration+0x10>)
 8000142:	681b      	ldr	r3, [r3, #0]
 8000144:	7a9b      	ldrb	r3, [r3, #10]
 8000146:	b113      	cbz	r3, 800014e <usbSetConfiguration+0xe>
        bDeviceState = CONFIGURED;
 8000148:	2205      	movs	r2, #5
 800014a:	4b02      	ldr	r3, [pc, #8]	; (8000154 <usbSetConfiguration+0x14>)
 800014c:	601a      	str	r2, [r3, #0]
    }
}
 800014e:	4770      	bx	lr
 8000150:	20000b10 	andcs	r0, r0, r0, lsl fp
 8000154:	200002cc 	andcs	r0, r0, ip, asr #5

08000158 <usbSetDeviceAddress>:
void usbSetDeviceFeature(void) {
    /* nothing process */
}

void usbSetDeviceAddress(void) {
    bDeviceState = ADDRESSED;
 8000158:	2204      	movs	r2, #4
 800015a:	4b01      	ldr	r3, [pc, #4]	; (8000160 <usbSetDeviceAddress+0x8>)
 800015c:	601a      	str	r2, [r3, #0]
}
 800015e:	4770      	bx	lr
 8000160:	200002cc 	andcs	r0, r0, ip, asr #5

08000164 <usbReset>:
void usbReset(void) {
 8000164:	b510      	push	{r4, lr}
    pInformation->Current_Configuration = 0;
 8000166:	2400      	movs	r4, #0
    dfuUpdateByReset();
 8000168:	f000 fc3a 	bl	80009e0 <dfuUpdateByReset>
    pInformation->Current_Configuration = 0;
 800016c:	4b23      	ldr	r3, [pc, #140]	; (80001fc <usbReset+0x98>)
    pInformation->Current_Feature = usbConfigDescriptorDFU.Descriptor[7];
 800016e:	4a24      	ldr	r2, [pc, #144]	; (8000200 <usbReset+0x9c>)
    pInformation->Current_Configuration = 0;
 8000170:	681b      	ldr	r3, [r3, #0]
    pInformation->Current_Feature = usbConfigDescriptorDFU.Descriptor[7];
 8000172:	6812      	ldr	r2, [r2, #0]
    pInformation->Current_Configuration = 0;
 8000174:	729c      	strb	r4, [r3, #10]
    pInformation->Current_Feature = usbConfigDescriptorDFU.Descriptor[7];
 8000176:	79d2      	ldrb	r2, [r2, #7]
    Clear_Status_Out(ENDP0);
 8000178:	4620      	mov	r0, r4
    pInformation->Current_Feature = usbConfigDescriptorDFU.Descriptor[7];
 800017a:	725a      	strb	r2, [r3, #9]
    _SetBTABLE(BTABLE_ADDRESS);
 800017c:	4a21      	ldr	r2, [pc, #132]	; (8000204 <usbReset+0xa0>)
 800017e:	f8c2 4c50 	str.w	r4, [r2, #3152]	; 0xc50
    _SetEPType(ENDP0, EP_CONTROL);
 8000182:	f8d2 3c00 	ldr.w	r3, [r2, #3072]	; 0xc00
 8000186:	f423 43ec 	bic.w	r3, r3, #30208	; 0x7600
 800018a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800018e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000192:	b29b      	uxth	r3, r3
 8000194:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
    _SetEPTxStatus(ENDP0, EP_TX_STALL);
 8000198:	f8d2 3c00 	ldr.w	r3, [r2, #3072]	; 0xc00
 800019c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80001a0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80001a4:	b29b      	uxth	r3, r3
 80001a6:	f083 0310 	eor.w	r3, r3, #16
 80001aa:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
    _SetEPRxAddr(ENDP0, ENDP0_RXADDR);
 80001ae:	f8d2 1c50 	ldr.w	r1, [r2, #3152]	; 0xc50
 80001b2:	4b15      	ldr	r3, [pc, #84]	; (8000208 <usbReset+0xa4>)
 80001b4:	b289      	uxth	r1, r1
 80001b6:	440b      	add	r3, r1
 80001b8:	2140      	movs	r1, #64	; 0x40
 80001ba:	005b      	lsls	r3, r3, #1
 80001bc:	6019      	str	r1, [r3, #0]
    _SetEPTxAddr(ENDP0, ENDP0_TXADDR);
 80001be:	f8d2 3c50 	ldr.w	r3, [r2, #3152]	; 0xc50
 80001c2:	2280      	movs	r2, #128	; 0x80
 80001c4:	b29b      	uxth	r3, r3
 80001c6:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
 80001ca:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80001ce:	005b      	lsls	r3, r3, #1
 80001d0:	601a      	str	r2, [r3, #0]
    Clear_Status_Out(ENDP0);
 80001d2:	f000 fdf1 	bl	8000db8 <Clear_Status_Out>
    SetEPRxCount(ENDP0, pProperty->MaxPacketSize);
 80001d6:	4b0d      	ldr	r3, [pc, #52]	; (800020c <usbReset+0xa8>)
 80001d8:	4620      	mov	r0, r4
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	f893 1030 	ldrb.w	r1, [r3, #48]	; 0x30
 80001e0:	f000 fe42 	bl	8000e68 <SetEPRxCount>
    SetEPRxValid(ENDP0);
 80001e4:	4620      	mov	r0, r4
 80001e6:	f000 fdca 	bl	8000d7e <SetEPRxValid>
    bDeviceState = ATTACHED;
 80001ea:	2201      	movs	r2, #1
 80001ec:	4b08      	ldr	r3, [pc, #32]	; (8000210 <usbReset+0xac>)
    SetDeviceAddress(0); /* different than usbSetDeviceAddr! comes from usb_core */
 80001ee:	4620      	mov	r0, r4
}
 80001f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bDeviceState = ATTACHED;
 80001f4:	601a      	str	r2, [r3, #0]
    SetDeviceAddress(0); /* different than usbSetDeviceAddr! comes from usb_core */
 80001f6:	f001 baeb 	b.w	80017d0 <SetDeviceAddress>
 80001fa:	bf00      	nop
 80001fc:	20000b10 	andcs	r0, r0, r0, lsl fp
 8000200:	20000270 	andcs	r0, r0, r0, ror r2
 8000204:	40005000 	andmi	r5, r0, r0
 8000208:	20003004 	andcs	r3, r0, r4
 800020c:	20000b14 	andcs	r0, r0, r4, lsl fp
 8000210:	200002cc 	andcs	r0, r0, ip, asr #5

08000214 <usbGetDeviceDescriptor>:
    return Standard_GetDescriptorData(len, &usbDeviceDescriptorDFU);
 8000214:	4901      	ldr	r1, [pc, #4]	; (800021c <usbGetDeviceDescriptor+0x8>)
 8000216:	f001 b8e3 	b.w	80013e0 <Standard_GetDescriptorData>
 800021a:	bf00      	nop
 800021c:	20000278 	andcs	r0, r0, r8, ror r2

08000220 <usbGetConfigDescriptor>:
    return Standard_GetDescriptorData(len, &usbConfigDescriptorDFU);
 8000220:	4901      	ldr	r1, [pc, #4]	; (8000228 <usbGetConfigDescriptor+0x8>)
 8000222:	f001 b8dd 	b.w	80013e0 <Standard_GetDescriptorData>
 8000226:	bf00      	nop
 8000228:	20000270 	andcs	r0, r0, r0, ror r2

0800022c <usbGetStringDescriptor>:
    u8 strIndex = pInformation->USBwValue0;
 800022c:	4b05      	ldr	r3, [pc, #20]	; (8000244 <usbGetStringDescriptor+0x18>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	789b      	ldrb	r3, [r3, #2]
    if (strIndex > STR_DESC_LEN) {
 8000232:	2b07      	cmp	r3, #7
 8000234:	d804      	bhi.n	8000240 <usbGetStringDescriptor+0x14>
        return Standard_GetDescriptorData(len, &usbStringDescriptor[strIndex]);
 8000236:	4904      	ldr	r1, [pc, #16]	; (8000248 <usbGetStringDescriptor+0x1c>)
 8000238:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800023c:	f001 b8d0 	b.w	80013e0 <Standard_GetDescriptorData>
}
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	20000b10 	andcs	r0, r0, r0, lsl fp
 8000248:	20000288 	andcs	r0, r0, r8, lsl #5

0800024c <usbGetFunctionalDescriptor>:
    return Standard_GetDescriptorData(len, &usbFunctionalDescriptor);
 800024c:	4901      	ldr	r1, [pc, #4]	; (8000254 <usbGetFunctionalDescriptor+0x8>)
 800024e:	f001 b8c7 	b.w	80013e0 <Standard_GetDescriptorData>
 8000252:	bf00      	nop
 8000254:	20000280 	andcs	r0, r0, r0, lsl #5

08000258 <usbDataSetup>:
RESULT usbDataSetup(u8 request) {
 8000258:	b538      	push	{r3, r4, r5, lr}
    if ((pInformation->USBbmRequestType & (REQUEST_TYPE | RECIPIENT)) == (CLASS_REQUEST | INTERFACE_RECIPIENT)) {
 800025a:	4d17      	ldr	r5, [pc, #92]	; (80002b8 <usbDataSetup+0x60>)
RESULT usbDataSetup(u8 request) {
 800025c:	4604      	mov	r4, r0
    if ((pInformation->USBbmRequestType & (REQUEST_TYPE | RECIPIENT)) == (CLASS_REQUEST | INTERFACE_RECIPIENT)) {
 800025e:	682b      	ldr	r3, [r5, #0]
 8000260:	781b      	ldrb	r3, [r3, #0]
 8000262:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000266:	2b21      	cmp	r3, #33	; 0x21
 8000268:	d001      	beq.n	800026e <usbDataSetup+0x16>
        if (dfuUpdateByRequest()) {
 800026a:	2002      	movs	r0, #2
 800026c:	e01c      	b.n	80002a8 <usbDataSetup+0x50>
 800026e:	f000 fc4f 	bl	8000b10 <dfuUpdateByRequest>
 8000272:	2800      	cmp	r0, #0
 8000274:	d0f9      	beq.n	800026a <usbDataSetup+0x12>
            switch (request) {
 8000276:	1e60      	subs	r0, r4, #1
 8000278:	2804      	cmp	r0, #4
 800027a:	d8f6      	bhi.n	800026a <usbDataSetup+0x12>
 800027c:	a301      	add	r3, pc, #4	; (adr r3, 8000284 <usbDataSetup+0x2c>)
 800027e:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
 8000282:	bf00      	nop
 8000284:	080002ab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r9}
 8000288:	080002af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9}
 800028c:	080002b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r9}
 8000290:	0800026b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9}
 8000294:	08000299 	stmdaeq	r0, {r0, r3, r4, r7, r9}
        if (dfuUpdateByRequest()) {
 8000298:	4b08      	ldr	r3, [pc, #32]	; (80002bc <usbDataSetup+0x64>)
        pInformation->Ctrl_Info.Usb_wOffset = 0;
 800029a:	2400      	movs	r4, #0
        pInformation->Ctrl_Info.CopyData = CopyRoutine;
 800029c:	682a      	ldr	r2, [r5, #0]
        (*CopyRoutine)(0);
 800029e:	4620      	mov	r0, r4
        pInformation->Ctrl_Info.CopyData = CopyRoutine;
 80002a0:	6193      	str	r3, [r2, #24]
        pInformation->Ctrl_Info.Usb_wOffset = 0;
 80002a2:	8254      	strh	r4, [r2, #18]
        (*CopyRoutine)(0);
 80002a4:	4798      	blx	r3
        return USB_SUCCESS;
 80002a6:	4620      	mov	r0, r4
}
 80002a8:	bd38      	pop	{r3, r4, r5, pc}
                CopyRoutine = dfuCopyDNLOAD;
 80002aa:	4b05      	ldr	r3, [pc, #20]	; (80002c0 <usbDataSetup+0x68>)
                break;
 80002ac:	e7f5      	b.n	800029a <usbDataSetup+0x42>
                CopyRoutine = dfuCopyUPLOAD;
 80002ae:	4b05      	ldr	r3, [pc, #20]	; (80002c4 <usbDataSetup+0x6c>)
                break;
 80002b0:	e7f3      	b.n	800029a <usbDataSetup+0x42>
                CopyRoutine = dfuCopyStatus;
 80002b2:	4b05      	ldr	r3, [pc, #20]	; (80002c8 <usbDataSetup+0x70>)
 80002b4:	e7f1      	b.n	800029a <usbDataSetup+0x42>
 80002b6:	bf00      	nop
 80002b8:	20000b10 	andcs	r0, r0, r0, lsl fp
 80002bc:	08000a25 	stmdaeq	r0, {r0, r2, r5, r9, fp}
 80002c0:	08000a55 	stmdaeq	r0, {r0, r2, r4, r6, r9, fp}
 80002c4:	08000a7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, fp}
 80002c8:	08000a3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, fp}

080002cc <usbNoDataSetup>:
RESULT usbNoDataSetup(u8 request) {
 80002cc:	b508      	push	{r3, lr}
    if ((pInformation->USBbmRequestType & (REQUEST_TYPE | RECIPIENT)) == (CLASS_REQUEST | INTERFACE_RECIPIENT)) {
 80002ce:	4b07      	ldr	r3, [pc, #28]	; (80002ec <usbNoDataSetup+0x20>)
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	781b      	ldrb	r3, [r3, #0]
 80002d4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80002d8:	2b21      	cmp	r3, #33	; 0x21
 80002da:	d001      	beq.n	80002e0 <usbNoDataSetup+0x14>
    return USB_UNSUPPORT;
 80002dc:	2002      	movs	r0, #2
}
 80002de:	bd08      	pop	{r3, pc}
        if (dfuUpdateByRequest()) {
 80002e0:	f000 fc16 	bl	8000b10 <dfuUpdateByRequest>
 80002e4:	2800      	cmp	r0, #0
 80002e6:	d0f9      	beq.n	80002dc <usbNoDataSetup+0x10>
            return USB_SUCCESS;
 80002e8:	2000      	movs	r0, #0
 80002ea:	e7f8      	b.n	80002de <usbNoDataSetup+0x12>
 80002ec:	20000b10 	andcs	r0, r0, r0, lsl fp

080002f0 <usbSetDeviceFeature>:
 80002f0:	4770      	bx	lr

080002f2 <nothingProc>:
 80002f2:	4770      	bx	lr

080002f4 <usbStatusOut>:
 80002f4:	4770      	bx	lr

080002f6 <usbGetConfiguration>:
 80002f6:	4770      	bx	lr

080002f8 <usbGetInterface>:
 80002f8:	4770      	bx	lr

080002fa <usbSetInterface>:
 80002fa:	4770      	bx	lr

080002fc <usbGetStatus>:
 80002fc:	4770      	bx	lr

080002fe <usbClearFeature>:
 80002fe:	4770      	bx	lr

08000300 <usbSetEndpointFeature>:
 8000300:	4770      	bx	lr
	...

08000304 <setupUSB>:
void setupUSB (void) {
 8000304:	b537      	push	{r0, r1, r2, r4, r5, lr}
    SET_REG(GPIO_CR(USB_DISC_BANK,USB_DISC_PIN),(GET_REG(GPIO_CR(USB_DISC_BANK,USB_DISC_PIN)) & crMask(USB_DISC_PIN)) | CR_OUTPUT_PP << CR_SHITF(USB_DISC_PIN));
 8000306:	4d1b      	ldr	r5, [pc, #108]	; (8000374 <setupUSB+0x70>)
 8000308:	200c      	movs	r0, #12
 800030a:	f8d5 4804 	ldr.w	r4, [r5, #2052]	; 0x804
 800030e:	f000 fb19 	bl	8000944 <crMask>
 8000312:	4004      	ands	r4, r0
 8000314:	f444 3480 	orr.w	r4, r4, #65536	; 0x10000
    gpio_write_bit(USB_DISC_BANK,USB_DISC_PIN,0);  /* present ourselves to the host */
 8000318:	2200      	movs	r2, #0
 800031a:	210c      	movs	r1, #12
 800031c:	4816      	ldr	r0, [pc, #88]	; (8000378 <setupUSB+0x74>)
    SET_REG(GPIO_CR(USB_DISC_BANK,USB_DISC_PIN),(GET_REG(GPIO_CR(USB_DISC_BANK,USB_DISC_PIN)) & crMask(USB_DISC_PIN)) | CR_OUTPUT_PP << CR_SHITF(USB_DISC_PIN));
 800031e:	f8c5 4804 	str.w	r4, [r5, #2052]	; 0x804
    gpio_write_bit(USB_DISC_BANK,USB_DISC_PIN,0);  /* present ourselves to the host */
 8000322:	f000 f9a7 	bl	8000674 <gpio_write_bit>
    for(delay = 0;delay<512;delay++);
 8000326:	2300      	movs	r3, #0
 8000328:	9301      	str	r3, [sp, #4]
 800032a:	9b01      	ldr	r3, [sp, #4]
 800032c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000330:	d31d      	bcc.n	800036e <setupUSB+0x6a>
    SET_REG(GPIO_CR(USB_DISC_BANK,USB_DISC_PIN),
 8000332:	200c      	movs	r0, #12
 8000334:	f8d5 4804 	ldr.w	r4, [r5, #2052]	; 0x804
 8000338:	f000 fb04 	bl	8000944 <crMask>
 800033c:	4004      	ands	r4, r0
 800033e:	f444 2480 	orr.w	r4, r4, #262144	; 0x40000
 8000342:	f8c5 4804 	str.w	r4, [r5, #2052]	; 0x804
    wTransferSize=getFlashPageSize();
 8000346:	f000 fb11 	bl	800096c <getFlashPageSize>
 800034a:	4b0c      	ldr	r3, [pc, #48]	; (800037c <setupUSB+0x78>)
    u8_usbConfigDescriptorDFU[41]=(wTransferSize & 0x00FF);
 800034c:	b2c2      	uxtb	r2, r0
    wTransferSize=getFlashPageSize();
 800034e:	6018      	str	r0, [r3, #0]
    u8_usbConfigDescriptorDFU[41]=(wTransferSize & 0x00FF);
 8000350:	4b0b      	ldr	r3, [pc, #44]	; (8000380 <setupUSB+0x7c>)
    u8_usbConfigDescriptorDFU[42]=(wTransferSize & 0xFF00)>>8;
 8000352:	f3c0 2007 	ubfx	r0, r0, #8, #8
    u8_usbConfigDescriptorDFU[41]=(wTransferSize & 0x00FF);
 8000356:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
    u8_usbConfigDescriptorDFU[42]=(wTransferSize & 0xFF00)>>8;
 800035a:	f883 002a 	strb.w	r0, [r3, #42]	; 0x2a
    u8_usbFunctionalDescriptor[5]=(wTransferSize & 0x00FF);
 800035e:	4b09      	ldr	r3, [pc, #36]	; (8000384 <setupUSB+0x80>)
 8000360:	715a      	strb	r2, [r3, #5]
    u8_usbFunctionalDescriptor[6]=(wTransferSize & 0xFF00)>>8;
 8000362:	7198      	strb	r0, [r3, #6]
}
 8000364:	b003      	add	sp, #12
 8000366:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    USB_Init();
 800036a:	f000 be69 	b.w	8001040 <USB_Init>
    for(delay = 0;delay<512;delay++);
 800036e:	9b01      	ldr	r3, [sp, #4]
 8000370:	3301      	adds	r3, #1
 8000372:	e7d9      	b.n	8000328 <setupUSB+0x24>
 8000374:	40010000 	andmi	r0, r1, r0
 8000378:	40010800 	andmi	r0, r1, r0, lsl #16
 800037c:	200002d4 	ldrdcs	r0, [r0], -r4
 8000380:	20000094 	mulcs	r0, r4, r0
 8000384:	200000d3 	ldrdcs	r0, [r0], -r3

08000388 <usbSuspend>:
    wCNTR = _GetCNTR();
 8000388:	4a05      	ldr	r2, [pc, #20]	; (80003a0 <usbSuspend+0x18>)
 800038a:	f8d2 3c40 	ldr.w	r3, [r2, #3136]	; 0xc40
 800038e:	b29b      	uxth	r3, r3
    _SetCNTR(wCNTR);
 8000390:	f043 030c 	orr.w	r3, r3, #12
 8000394:	f8c2 3c40 	str.w	r3, [r2, #3136]	; 0xc40
    bDeviceState = SUSPENDED;
 8000398:	2203      	movs	r2, #3
 800039a:	4b02      	ldr	r3, [pc, #8]	; (80003a4 <usbSuspend+0x1c>)
 800039c:	601a      	str	r2, [r3, #0]
}
 800039e:	4770      	bx	lr
 80003a0:	40005000 	andmi	r5, r0, r0
 80003a4:	200002cc 	andcs	r0, r0, ip, asr #5

080003a8 <usbResumeInit>:
    _SetCNTR(wCNTR);
 80003a8:	f64f 72fb 	movw	r2, #65531	; 0xfffb
    wCNTR = _GetCNTR();
 80003ac:	4b05      	ldr	r3, [pc, #20]	; (80003c4 <usbResumeInit+0x1c>)
 80003ae:	f8d3 1c40 	ldr.w	r1, [r3, #3136]	; 0xc40
    _SetCNTR(wCNTR);
 80003b2:	400a      	ands	r2, r1
 80003b4:	f8c3 2c40 	str.w	r2, [r3, #3136]	; 0xc40
    _SetCNTR(ISR_MSK);
 80003b8:	f44f 423f 	mov.w	r2, #48896	; 0xbf00
 80003bc:	f8c3 2c40 	str.w	r2, [r3, #3136]	; 0xc40
}
 80003c0:	4770      	bx	lr
 80003c2:	bf00      	nop
 80003c4:	40005000 	andmi	r5, r0, r0

080003c8 <usbResume>:
void usbResume(RESUME_STATE eResumeSetVal) {
 80003c8:	b510      	push	{r4, lr}
 80003ca:	4c1f      	ldr	r4, [pc, #124]	; (8000448 <usbResume+0x80>)
    if (eResumeSetVal != RESUME_ESOF)
 80003cc:	2807      	cmp	r0, #7
        ResumeS.eState = eResumeSetVal;
 80003ce:	bf18      	it	ne
 80003d0:	7020      	strbne	r0, [r4, #0]
    switch (ResumeS.eState) {
 80003d2:	7823      	ldrb	r3, [r4, #0]
 80003d4:	2b05      	cmp	r3, #5
 80003d6:	d806      	bhi.n	80003e6 <usbResume+0x1e>
 80003d8:	e8df f003 	tbb	[pc, r3]
 80003dc:	100b0703 	andne	r0, fp, r3, lsl #14
 80003e0:	f7ff2518 			; <UNDEFINED> instruction: 0xf7ff2518
        usbResumeInit();
 80003e4:	ffe1 2306 	vsubw.u32	q9, <illegal reg q0.5>, d6
        ResumeS.eState = RESUME_OFF;
 80003e8:	e006      	b.n	80003f8 <usbResume+0x30>
        usbResumeInit();
 80003ea:	f7ff ffdd 	bl	80003a8 <usbResumeInit>
            ResumeS.eState = RESUME_START;
 80003ee:	2304      	movs	r3, #4
 80003f0:	e002      	b.n	80003f8 <usbResume+0x30>
        ResumeS.bESOFcnt = 2;
 80003f2:	2302      	movs	r3, #2
 80003f4:	7063      	strb	r3, [r4, #1]
        ResumeS.eState = RESUME_WAIT;
 80003f6:	2303      	movs	r3, #3
        ResumeS.eState = RESUME_OFF;
 80003f8:	7023      	strb	r3, [r4, #0]
}
 80003fa:	e006      	b.n	800040a <usbResume+0x42>
        ResumeS.bESOFcnt--;
 80003fc:	7863      	ldrb	r3, [r4, #1]
 80003fe:	3b01      	subs	r3, #1
 8000400:	b2db      	uxtb	r3, r3
 8000402:	7063      	strb	r3, [r4, #1]
        if (ResumeS.bESOFcnt == 0)
 8000404:	7863      	ldrb	r3, [r4, #1]
 8000406:	2b00      	cmp	r3, #0
 8000408:	d0f1      	beq.n	80003ee <usbResume+0x26>
}
 800040a:	bd10      	pop	{r4, pc}
        wCNTR = _GetCNTR();
 800040c:	4a0f      	ldr	r2, [pc, #60]	; (800044c <usbResume+0x84>)
 800040e:	f8d2 3c40 	ldr.w	r3, [r2, #3136]	; 0xc40
 8000412:	b29b      	uxth	r3, r3
        _SetCNTR(wCNTR);
 8000414:	f043 0310 	orr.w	r3, r3, #16
 8000418:	f8c2 3c40 	str.w	r3, [r2, #3136]	; 0xc40
        ResumeS.eState = RESUME_ON;
 800041c:	2305      	movs	r3, #5
 800041e:	7023      	strb	r3, [r4, #0]
        ResumeS.bESOFcnt = 10;
 8000420:	230a      	movs	r3, #10
 8000422:	7063      	strb	r3, [r4, #1]
        break;
 8000424:	e7f1      	b.n	800040a <usbResume+0x42>
        ResumeS.bESOFcnt--;
 8000426:	7863      	ldrb	r3, [r4, #1]
 8000428:	3b01      	subs	r3, #1
 800042a:	b2db      	uxtb	r3, r3
 800042c:	7063      	strb	r3, [r4, #1]
        if (ResumeS.bESOFcnt == 0) {
 800042e:	7863      	ldrb	r3, [r4, #1]
 8000430:	2b00      	cmp	r3, #0
 8000432:	d1ea      	bne.n	800040a <usbResume+0x42>
            _SetCNTR(wCNTR);
 8000434:	f64f 73ef 	movw	r3, #65519	; 0xffef
            wCNTR = _GetCNTR();
 8000438:	4a04      	ldr	r2, [pc, #16]	; (800044c <usbResume+0x84>)
 800043a:	f8d2 1c40 	ldr.w	r1, [r2, #3136]	; 0xc40
            _SetCNTR(wCNTR);
 800043e:	400b      	ands	r3, r1
 8000440:	f8c2 3c40 	str.w	r3, [r2, #3136]	; 0xc40
            ResumeS.eState = RESUME_OFF;
 8000444:	e7cf      	b.n	80003e6 <usbResume+0x1e>
 8000446:	bf00      	nop
 8000448:	200002c8 	andcs	r0, r0, r8, asr #5
 800044c:	40005000 	andmi	r5, r0, r0

08000450 <usbPowerOn>:
    _SetCNTR(wRegVal);
 8000450:	2201      	movs	r2, #1
 8000452:	4b07      	ldr	r3, [pc, #28]	; (8000470 <usbPowerOn+0x20>)
    _SetCNTR(wInterrupt_Mask);
 8000454:	2000      	movs	r0, #0
    _SetCNTR(wRegVal);
 8000456:	f8c3 2c40 	str.w	r2, [r3, #3136]	; 0xc40
    wInterrupt_Mask = CNTR_RESETM | CNTR_SUSPM | CNTR_WKUPM; /* the bare minimum */
 800045a:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 800045e:	4905      	ldr	r1, [pc, #20]	; (8000474 <usbPowerOn+0x24>)
    _SetCNTR(wInterrupt_Mask);
 8000460:	f8c3 0c40 	str.w	r0, [r3, #3136]	; 0xc40
    _SetISTR(0);
 8000464:	f8c3 0c44 	str.w	r0, [r3, #3140]	; 0xc44
    wInterrupt_Mask = CNTR_RESETM | CNTR_SUSPM | CNTR_WKUPM; /* the bare minimum */
 8000468:	800a      	strh	r2, [r1, #0]
    _SetCNTR(wInterrupt_Mask);
 800046a:	f8c3 2c40 	str.w	r2, [r3, #3136]	; 0xc40
}
 800046e:	4770      	bx	lr
 8000470:	40005000 	andmi	r5, r0, r0
 8000474:	20000b1c 	andcs	r0, r0, ip, lsl fp

08000478 <usbPowerOff>:
    _SetCNTR(CNTR_FRES);
 8000478:	2201      	movs	r2, #1
 800047a:	4b05      	ldr	r3, [pc, #20]	; (8000490 <usbPowerOff+0x18>)
    _SetISTR(0);
 800047c:	2000      	movs	r0, #0
    _SetCNTR(CNTR_FRES);
 800047e:	f8c3 2c40 	str.w	r2, [r3, #3136]	; 0xc40
    _SetCNTR(CNTR_FRES + CNTR_PDWN);
 8000482:	2203      	movs	r2, #3
    _SetISTR(0);
 8000484:	f8c3 0c44 	str.w	r0, [r3, #3140]	; 0xc44
    _SetCNTR(CNTR_FRES + CNTR_PDWN);
 8000488:	f8c3 2c40 	str.w	r2, [r3, #3136]	; 0xc40
}
 800048c:	4770      	bx	lr
 800048e:	bf00      	nop
 8000490:	40005000 	andmi	r5, r0, r0

08000494 <usbDsbBus>:
usbPowerOff();
 8000494:	f7ff bff0 	b.w	8000478 <usbPowerOff>

08000498 <usbEnbISR>:

void usbEnbISR(void) {
    NVIC_InitTypeDef NVIC_InitStructure;


    NVIC_InitStructure.NVIC_IRQChannel = USB_LP_IRQ;
 8000498:	2314      	movs	r3, #20
void usbEnbISR(void) {
 800049a:	b507      	push	{r0, r1, r2, lr}
    NVIC_InitStructure.NVIC_IRQChannel = USB_LP_IRQ;
 800049c:	f88d 3004 	strb.w	r3, [sp, #4]
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80004a0:	2300      	movs	r3, #0
 80004a2:	f88d 3005 	strb.w	r3, [sp, #5]
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 80004a6:	f88d 3006 	strb.w	r3, [sp, #6]
    NVIC_InitStructure.NVIC_IRQChannelCmd = TRUE;
 80004aa:	2301      	movs	r3, #1
    nvicInit(&NVIC_InitStructure);
 80004ac:	a801      	add	r0, sp, #4
    NVIC_InitStructure.NVIC_IRQChannelCmd = TRUE;
 80004ae:	f88d 3007 	strb.w	r3, [sp, #7]
    nvicInit(&NVIC_InitStructure);
 80004b2:	f000 f997 	bl	80007e4 <nvicInit>
}
 80004b6:	b003      	add	sp, #12
 80004b8:	f85d fb04 	ldr.w	pc, [sp], #4

080004bc <usbInit>:
void usbInit(void) {
 80004bc:	b510      	push	{r4, lr}
    pInformation->Current_Configuration = 0;
 80004be:	2400      	movs	r4, #0
    dfuInit();
 80004c0:	f000 fa60 	bl	8000984 <dfuInit>
    pInformation->Current_Configuration = 0;
 80004c4:	4b09      	ldr	r3, [pc, #36]	; (80004ec <usbInit+0x30>)
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	729c      	strb	r4, [r3, #10]
    usbPowerOn();
 80004ca:	f7ff ffc1 	bl	8000450 <usbPowerOn>
    wInterrupt_Mask = ISR_MSK;
 80004ce:	f44f 423f 	mov.w	r2, #48896	; 0xbf00
    _SetISTR(0);
 80004d2:	4b07      	ldr	r3, [pc, #28]	; (80004f0 <usbInit+0x34>)
    wInterrupt_Mask = ISR_MSK;
 80004d4:	4907      	ldr	r1, [pc, #28]	; (80004f4 <usbInit+0x38>)
    _SetISTR(0);
 80004d6:	f8c3 4c44 	str.w	r4, [r3, #3140]	; 0xc44
    wInterrupt_Mask = ISR_MSK;
 80004da:	800a      	strh	r2, [r1, #0]
    _SetCNTR(wInterrupt_Mask);
 80004dc:	f8c3 2c40 	str.w	r2, [r3, #3136]	; 0xc40
    usbEnbISR(); /* configure the cortex M3 private peripheral NVIC */
 80004e0:	f7ff ffda 	bl	8000498 <usbEnbISR>
    bDeviceState = UNCONNECTED;
 80004e4:	4b04      	ldr	r3, [pc, #16]	; (80004f8 <usbInit+0x3c>)
 80004e6:	601c      	str	r4, [r3, #0]
}
 80004e8:	bd10      	pop	{r4, pc}
 80004ea:	bf00      	nop
 80004ec:	20000b10 	andcs	r0, r0, r0, lsl fp
 80004f0:	40005000 	andmi	r5, r0, r0
 80004f4:	20000b1c 	andcs	r0, r0, ip, lsl fp
 80004f8:	200002cc 	andcs	r0, r0, ip, asr #5

080004fc <usbDsbISR>:

void usbDsbISR(void) {
    NVIC_InitTypeDef NVIC_InitStructure;
    NVIC_InitStructure.NVIC_IRQChannel = USB_LP_IRQ;
 80004fc:	2314      	movs	r3, #20
void usbDsbISR(void) {
 80004fe:	b507      	push	{r0, r1, r2, lr}
    NVIC_InitStructure.NVIC_IRQChannel = USB_LP_IRQ;
 8000500:	f88d 3004 	strb.w	r3, [sp, #4]
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8000504:	2300      	movs	r3, #0
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = FALSE;
    nvicInit(&NVIC_InitStructure);
 8000506:	a801      	add	r0, sp, #4
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8000508:	f88d 3005 	strb.w	r3, [sp, #5]
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 800050c:	f88d 3006 	strb.w	r3, [sp, #6]
    NVIC_InitStructure.NVIC_IRQChannelCmd = FALSE;
 8000510:	f88d 3007 	strb.w	r3, [sp, #7]
    nvicInit(&NVIC_InitStructure);
 8000514:	f000 f966 	bl	80007e4 <nvicInit>
}
 8000518:	b003      	add	sp, #12
 800051a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08000520 <USB_LP_CAN1_RX0_IRQHandler>:

void USB_LP_CAN1_RX0_IRQHandler(void) {
    wIstr = _GetISTR();
 8000520:	4a2d      	ldr	r2, [pc, #180]	; (80005d8 <USB_LP_CAN1_RX0_IRQHandler+0xb8>)
void USB_LP_CAN1_RX0_IRQHandler(void) {
 8000522:	b538      	push	{r3, r4, r5, lr}
    wIstr = _GetISTR();
 8000524:	f8d2 3c44 	ldr.w	r3, [r2, #3140]	; 0xc44
 8000528:	4c2c      	ldr	r4, [pc, #176]	; (80005dc <USB_LP_CAN1_RX0_IRQHandler+0xbc>)
 800052a:	b29b      	uxth	r3, r3

    /* go nuts with the preproc switches since this is an ISTR and must be FAST */
#if (ISR_MSK & ISTR_RESET)
    if (wIstr & ISTR_RESET & wInterrupt_Mask) {
 800052c:	4d2c      	ldr	r5, [pc, #176]	; (80005e0 <USB_LP_CAN1_RX0_IRQHandler+0xc0>)
    wIstr = _GetISTR();
 800052e:	8023      	strh	r3, [r4, #0]
    if (wIstr & ISTR_RESET & wInterrupt_Mask) {
 8000530:	8829      	ldrh	r1, [r5, #0]
 8000532:	8823      	ldrh	r3, [r4, #0]
 8000534:	400b      	ands	r3, r1
 8000536:	0559      	lsls	r1, r3, #21
 8000538:	d506      	bpl.n	8000548 <USB_LP_CAN1_RX0_IRQHandler+0x28>
        _SetISTR((u16)CLR_RESET);
 800053a:	f64f 33ff 	movw	r3, #64511	; 0xfbff
 800053e:	f8c2 3c44 	str.w	r3, [r2, #3140]	; 0xc44
        Device_Property.Reset();
 8000542:	4b28      	ldr	r3, [pc, #160]	; (80005e4 <USB_LP_CAN1_RX0_IRQHandler+0xc4>)
 8000544:	685b      	ldr	r3, [r3, #4]
 8000546:	4798      	blx	r3
    }
#endif


#if (ISR_MSK & ISTR_ERR)
    if (wIstr & ISTR_ERR & wInterrupt_Mask) {
 8000548:	8822      	ldrh	r2, [r4, #0]
 800054a:	882b      	ldrh	r3, [r5, #0]
 800054c:	401a      	ands	r2, r3
 800054e:	0492      	lsls	r2, r2, #18
        _SetISTR((u16)CLR_ERR);
 8000550:	bf42      	ittt	mi
 8000552:	f64d 71ff 	movwmi	r1, #57343	; 0xdfff
 8000556:	4a20      	ldrmi	r2, [pc, #128]	; (80005d8 <USB_LP_CAN1_RX0_IRQHandler+0xb8>)
 8000558:	f8c2 1c44 	strmi.w	r1, [r2, #3140]	; 0xc44
    }
#endif


#if (ISR_MSK & ISTR_WKUP)
    if (wIstr & ISTR_WKUP & wInterrupt_Mask) {
 800055c:	8822      	ldrh	r2, [r4, #0]
 800055e:	4013      	ands	r3, r2
 8000560:	04db      	lsls	r3, r3, #19
 8000562:	d507      	bpl.n	8000574 <USB_LP_CAN1_RX0_IRQHandler+0x54>
        _SetISTR((u16)CLR_WKUP);
 8000564:	f64e 72ff 	movw	r2, #61439	; 0xefff
 8000568:	4b1b      	ldr	r3, [pc, #108]	; (80005d8 <USB_LP_CAN1_RX0_IRQHandler+0xb8>)
        usbResume(RESUME_EXTERNAL);
 800056a:	2000      	movs	r0, #0
        _SetISTR((u16)CLR_WKUP);
 800056c:	f8c3 2c44 	str.w	r2, [r3, #3140]	; 0xc44
        usbResume(RESUME_EXTERNAL);
 8000570:	f7ff ff2a 	bl	80003c8 <usbResume>
    }
#endif

    /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
#if (ISR_MSK & ISTR_SUSP)
    if (wIstr & ISTR_SUSP & wInterrupt_Mask) {
 8000574:	8823      	ldrh	r3, [r4, #0]
 8000576:	882a      	ldrh	r2, [r5, #0]
 8000578:	4013      	ands	r3, r2
 800057a:	0518      	lsls	r0, r3, #20
 800057c:	d506      	bpl.n	800058c <USB_LP_CAN1_RX0_IRQHandler+0x6c>

        /* check if SUSPEND is possible */
        if (F_SUSPEND_ENABLED) {
            usbSuspend();
 800057e:	f7ff ff03 	bl	8000388 <usbSuspend>
        } else {
            /* if not possible then resume after xx ms */
            usbResume(RESUME_LATER);
        }
        /* clear of the ISTR bit must be done after setting of CNTR_FSUSP */
        _SetISTR((u16)CLR_SUSP);
 8000582:	f24f 72ff 	movw	r2, #63487	; 0xf7ff
 8000586:	4b14      	ldr	r3, [pc, #80]	; (80005d8 <USB_LP_CAN1_RX0_IRQHandler+0xb8>)
 8000588:	f8c3 2c44 	str.w	r2, [r3, #3140]	; 0xc44
    }
#endif


#if (ISR_MSK & ISTR_SOF)
    if (wIstr & ISTR_SOF & wInterrupt_Mask) {
 800058c:	8823      	ldrh	r3, [r4, #0]
 800058e:	882a      	ldrh	r2, [r5, #0]
 8000590:	4013      	ands	r3, r2
 8000592:	0599      	lsls	r1, r3, #22
 8000594:	d509      	bpl.n	80005aa <USB_LP_CAN1_RX0_IRQHandler+0x8a>
        _SetISTR((u16)CLR_SOF);
 8000596:	f64f 51ff 	movw	r1, #65023	; 0xfdff
 800059a:	4b0f      	ldr	r3, [pc, #60]	; (80005d8 <USB_LP_CAN1_RX0_IRQHandler+0xb8>)
 800059c:	f8c3 1c44 	str.w	r1, [r3, #3140]	; 0xc44
        bIntPackSOF++;
 80005a0:	4911      	ldr	r1, [pc, #68]	; (80005e8 <USB_LP_CAN1_RX0_IRQHandler+0xc8>)
 80005a2:	780b      	ldrb	r3, [r1, #0]
 80005a4:	3301      	adds	r3, #1
 80005a6:	b2db      	uxtb	r3, r3
 80005a8:	700b      	strb	r3, [r1, #0]
    }
#endif


#if (ISR_MSK & ISTR_ESOF)
    if (wIstr & ISTR_ESOF & wInterrupt_Mask) {
 80005aa:	8823      	ldrh	r3, [r4, #0]
 80005ac:	401a      	ands	r2, r3
 80005ae:	05d2      	lsls	r2, r2, #23
 80005b0:	d507      	bpl.n	80005c2 <USB_LP_CAN1_RX0_IRQHandler+0xa2>
        _SetISTR((u16)CLR_ESOF);
 80005b2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80005b6:	4b08      	ldr	r3, [pc, #32]	; (80005d8 <USB_LP_CAN1_RX0_IRQHandler+0xb8>)
        /* resume handling timing is made with ESOFs */
        usbResume(RESUME_ESOF); /* request without change of the machine state */
 80005b8:	2007      	movs	r0, #7
        _SetISTR((u16)CLR_ESOF);
 80005ba:	f8c3 2c44 	str.w	r2, [r3, #3140]	; 0xc44
        usbResume(RESUME_ESOF); /* request without change of the machine state */
 80005be:	f7ff ff03 	bl	80003c8 <usbResume>
    }
#endif

    /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
#if (ISR_MSK & ISTR_CTR)
    if (wIstr & ISTR_CTR & wInterrupt_Mask) {
 80005c2:	8823      	ldrh	r3, [r4, #0]
 80005c4:	882a      	ldrh	r2, [r5, #0]
 80005c6:	4013      	ands	r3, r2
 80005c8:	041b      	lsls	r3, r3, #16
 80005ca:	d503      	bpl.n	80005d4 <USB_LP_CAN1_RX0_IRQHandler+0xb4>
        /* clear of the CTR flag into the sub */
        CTR_LP(); /* low priority ISR defined in the usb core lib */
    }
#endif

}
 80005cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        CTR_LP(); /* low priority ISR defined in the usb core lib */
 80005d0:	f000 bc6c 	b.w	8000eac <CTR_LP>
}
 80005d4:	bd38      	pop	{r3, r4, r5, pc}
 80005d6:	bf00      	nop
 80005d8:	40005000 	andmi	r5, r0, r0
 80005dc:	200002d2 	ldrdcs	r0, [r0], -r2
 80005e0:	20000b1c 	andcs	r0, r0, ip, lsl fp
 80005e4:	20000000 	andcs	r0, r0, r0
 80005e8:	200002d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>

080005ec <main>:
#include "common.h"
#include "dfu.h"
extern volatile dfuUploadTypes_t userUploadType;

int main()
{
 80005ec:	b538      	push	{r3, r4, r5, lr}
    bool no_user_jump = FALSE;
    bool dont_wait=FALSE;

    systemReset(); // peripherals but not PC
 80005ee:	f000 f84d 	bl	800068c <systemReset>
    setupCLK();
 80005f2:	f000 f869 	bl	80006c8 <setupCLK>
    setupLEDAndButton();
 80005f6:	f000 f895 	bl	8000724 <setupLEDAndButton>
    setupUSB();
 80005fa:	f7ff fe83 	bl	8000304 <setupUSB>
    setupFLASH();
 80005fe:	f000 f893 	bl	8000728 <setupFLASH>

    switch(checkAndClearBootloaderFlag())
 8000602:	f000 f8cb 	bl	800079c <checkAndClearBootloaderFlag>
 8000606:	2801      	cmp	r0, #1
 8000608:	4604      	mov	r4, r0
 800060a:	d00a      	beq.n	8000622 <main+0x36>
 800060c:	2802      	cmp	r0, #2
 800060e:	d00c      	beq.n	800062a <main+0x3e>
				#if defined(LED_BANK) && defined(LED_PIN) && defined(LED_ON_STATE)
							strobePin(LED_BANK, LED_PIN, STARTUP_BLINKS, BLINK_FAST,LED_ON_STATE);
				#endif
			#endif            

            if (!checkUserCode(USER_CODE_FLASH0X8005000) && !checkUserCode(USER_CODE_FLASH0X8002000))
 8000610:	4816      	ldr	r0, [pc, #88]	; (800066c <main+0x80>)
 8000612:	f000 f897 	bl	8000744 <checkUserCode>
 8000616:	b188      	cbz	r0, 800063c <main+0x50>
            {
                no_user_jump = TRUE;
            }
            else if (readButtonState())
 8000618:	f000 f836 	bl	8000688 <readButtonState>
            {
				no_user_jump = TRUE;
 800061c:	1e04      	subs	r4, r0, #0
 800061e:	bf18      	it	ne
 8000620:	2401      	movne	r4, #1
                no_user_jump = TRUE;
 8000622:	2500      	movs	r5, #0

    if (!dont_wait)
    {
        int delay_count = 0;

        while ((delay_count++ < BOOTLOADER_WAIT) || no_user_jump)
 8000624:	2d1d      	cmp	r5, #29
 8000626:	d910      	bls.n	800064a <main+0x5e>
 8000628:	b97c      	cbnz	r4, 800064a <main+0x5e>
                dfuFinishUpload(); // systemHardReset from DFU once done
            }
        }
    }

    if (checkUserCode(USER_CODE_FLASH0X8002000))
 800062a:	4811      	ldr	r0, [pc, #68]	; (8000670 <main+0x84>)
 800062c:	f000 f88a 	bl	8000744 <checkUserCode>
 8000630:	b190      	cbz	r0, 8000658 <main+0x6c>
    {
        jumpToUser(USER_CODE_FLASH0X8002000);
 8000632:	480f      	ldr	r0, [pc, #60]	; (8000670 <main+0x84>)
    }
    else
    {
        if (checkUserCode(USER_CODE_FLASH0X8005000))
        {
            jumpToUser(USER_CODE_FLASH0X8005000);
 8000634:	f000 f91e 	bl	8000874 <jumpToUser>
            systemHardReset();
        }
    }

    return 0;// Added to please the compiler
}
 8000638:	2000      	movs	r0, #0
 800063a:	bd38      	pop	{r3, r4, r5, pc}
            if (!checkUserCode(USER_CODE_FLASH0X8005000) && !checkUserCode(USER_CODE_FLASH0X8002000))
 800063c:	480c      	ldr	r0, [pc, #48]	; (8000670 <main+0x84>)
 800063e:	f000 f881 	bl	8000744 <checkUserCode>
 8000642:	2800      	cmp	r0, #0
 8000644:	d1e8      	bne.n	8000618 <main+0x2c>
                no_user_jump = TRUE;
 8000646:	2401      	movs	r4, #1
 8000648:	e7eb      	b.n	8000622 <main+0x36>
            if (dfuUploadStarted())
 800064a:	f000 fb7b 	bl	8000d44 <dfuUploadStarted>
 800064e:	b108      	cbz	r0, 8000654 <main+0x68>
                dfuFinishUpload(); // systemHardReset from DFU once done
 8000650:	f000 fb7e 	bl	8000d50 <dfuFinishUpload>
 8000654:	3501      	adds	r5, #1
 8000656:	e7e5      	b.n	8000624 <main+0x38>
        if (checkUserCode(USER_CODE_FLASH0X8005000))
 8000658:	4804      	ldr	r0, [pc, #16]	; (800066c <main+0x80>)
 800065a:	f000 f873 	bl	8000744 <checkUserCode>
 800065e:	b108      	cbz	r0, 8000664 <main+0x78>
            jumpToUser(USER_CODE_FLASH0X8005000);
 8000660:	4802      	ldr	r0, [pc, #8]	; (800066c <main+0x80>)
 8000662:	e7e7      	b.n	8000634 <main+0x48>
            systemHardReset();
 8000664:	f000 f91a 	bl	800089c <systemHardReset>
 8000668:	e7e6      	b.n	8000638 <main+0x4c>
 800066a:	bf00      	nop
 800066c:	08005000 	stmdaeq	r0, {ip, lr}
 8000670:	08002000 	stmdaeq	r0, {sp}

08000674 <gpio_write_bit>:
    u32 pinMask = 0x1 << (16 + pin);
    SET_REG(GPIO_BSRR(bank), pinMask);
}
*/
void gpio_write_bit(u32 bank, u8 pin, u8 val) {
    val = !val;          // "set" bits are lower than "reset" bits
 8000674:	fab2 f282 	clz	r2, r2
    SET_REG(GPIO_BSRR(bank), (1U << pin) << (16 * val));
 8000678:	2301      	movs	r3, #1
    val = !val;          // "set" bits are lower than "reset" bits
 800067a:	0952      	lsrs	r2, r2, #5
    SET_REG(GPIO_BSRR(bank), (1U << pin) << (16 * val));
 800067c:	408b      	lsls	r3, r1
 800067e:	0112      	lsls	r2, r2, #4
 8000680:	fa03 f202 	lsl.w	r2, r3, r2
 8000684:	6102      	str	r2, [r0, #16]
}
 8000686:	4770      	bx	lr

08000688 <readButtonState>:
    {
        state=!state;
    }
#endif
    return state;
}
 8000688:	2000      	movs	r0, #0
 800068a:	4770      	bx	lr

0800068c <systemReset>:
        gpio_write_bit( bank,pin,1-onState);
    }
}

void systemReset(void) {
    SET_REG(RCC_CR, GET_REG(RCC_CR)     | 0x00000001);
 800068c:	4b0c      	ldr	r3, [pc, #48]	; (80006c0 <systemReset+0x34>)
 800068e:	681a      	ldr	r2, [r3, #0]
 8000690:	f042 0201 	orr.w	r2, r2, #1
 8000694:	601a      	str	r2, [r3, #0]
    SET_REG(RCC_CFGR, GET_REG(RCC_CFGR) & 0xF8FF0000);
 8000696:	6859      	ldr	r1, [r3, #4]
 8000698:	4a0a      	ldr	r2, [pc, #40]	; (80006c4 <systemReset+0x38>)
 800069a:	400a      	ands	r2, r1
 800069c:	605a      	str	r2, [r3, #4]
    SET_REG(RCC_CR, GET_REG(RCC_CR)     & 0xFEF6FFFF);
 800069e:	681a      	ldr	r2, [r3, #0]
 80006a0:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80006a4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80006a8:	601a      	str	r2, [r3, #0]
    SET_REG(RCC_CR, GET_REG(RCC_CR)     & 0xFFFBFFFF);
 80006aa:	681a      	ldr	r2, [r3, #0]
 80006ac:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80006b0:	601a      	str	r2, [r3, #0]
    SET_REG(RCC_CFGR, GET_REG(RCC_CFGR) & 0xFF80FFFF);
 80006b2:	685a      	ldr	r2, [r3, #4]
 80006b4:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 80006b8:	605a      	str	r2, [r3, #4]

    SET_REG(RCC_CIR, 0x00000000);  /* disable all RCC interrupts */
 80006ba:	2200      	movs	r2, #0
 80006bc:	609a      	str	r2, [r3, #8]
}
 80006be:	4770      	bx	lr
 80006c0:	40021000 	andmi	r1, r2, r0
 80006c4:	f8ff0000 			; <UNDEFINED> instruction: 0xf8ff0000

080006c8 <setupCLK>:

void setupCLK(void) {
    unsigned int StartUpCounter=0;
    /* enable HSE */
    SET_REG(RCC_CR, GET_REG(RCC_CR) | 0x00010001);
 80006c8:	4b14      	ldr	r3, [pc, #80]	; (800071c <setupCLK+0x54>)
 80006ca:	681a      	ldr	r2, [r3, #0]
 80006cc:	f042 1201 	orr.w	r2, r2, #65537	; 0x10001
 80006d0:	601a      	str	r2, [r3, #0]
    while ((GET_REG(RCC_CR) & 0x00020000) == 0); /* for it to come on */
 80006d2:	681a      	ldr	r2, [r3, #0]
 80006d4:	0391      	lsls	r1, r2, #14
 80006d6:	d5fc      	bpl.n	80006d2 <setupCLK+0xa>

    /* enable flash prefetch buffer */
    SET_REG(FLASH_ACR, 0x00000012);
 80006d8:	2112      	movs	r1, #18
 80006da:	4a11      	ldr	r2, [pc, #68]	; (8000720 <setupCLK+0x58>)
 80006dc:	6011      	str	r1, [r2, #0]

    /* Configure PLL */
#if defined XTAL16M
    // 16 MHz crystal  (using the Bit 17 PLLXTPRE=1 => HSE clock divided by 2 before PLL entry)
    SET_REG(RCC_CFGR, GET_REG(RCC_CFGR) | 0x001F0400); /* pll=72Mhz(x9/2),APB1=36Mhz,AHB=72Mhz */
 80006de:	685a      	ldr	r2, [r3, #4]
 80006e0:	f442 12f8 	orr.w	r2, r2, #2031616	; 0x1f0000
 80006e4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80006e8:	605a      	str	r2, [r3, #4]
#else
    // 8 MHz crystal default
    SET_REG(RCC_CFGR, GET_REG(RCC_CFGR) | 0x001D0400); /* pll=72Mhz(x9),APB1=36Mhz,AHB=72Mhz */
#endif

    SET_REG(RCC_CR, GET_REG(RCC_CR)     | 0x01000000); /* enable the pll */
 80006ea:	681a      	ldr	r2, [r3, #0]
 80006ec:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80006f0:	601a      	str	r2, [r3, #0]

#if !defined  (HSE_STARTUP_TIMEOUT)
#define HSE_STARTUP_TIMEOUT    ((unsigned int)0x0500)   /*!< Time out for HSE start up */
#endif /* HSE_STARTUP_TIMEOUT */

    while ((GET_REG(RCC_CR) & 0x03000000) == 0 && StartUpCounter < HSE_STARTUP_TIMEOUT)
 80006f2:	681a      	ldr	r2, [r3, #0]
 80006f4:	f012 7f40 	tst.w	r2, #50331648	; 0x3000000
 80006f8:	d0fb      	beq.n	80006f2 <setupCLK+0x2a>
        // HSE has not started. Try restarting the processor
        systemHardReset();
    }

    /* Set SYSCLK as PLL */
    SET_REG(RCC_CFGR, GET_REG(RCC_CFGR) | 0x00000002);
 80006fa:	685a      	ldr	r2, [r3, #4]
 80006fc:	f042 0202 	orr.w	r2, r2, #2
 8000700:	605a      	str	r2, [r3, #4]
    while ((GET_REG(RCC_CFGR) & 0x00000008) == 0); /* wait for it to come on */
 8000702:	685a      	ldr	r2, [r3, #4]
 8000704:	0712      	lsls	r2, r2, #28
 8000706:	d5fc      	bpl.n	8000702 <setupCLK+0x3a>

    pRCC->APB2ENR |= 0B111111100;// Enable All GPIO channels (A to G)
 8000708:	699a      	ldr	r2, [r3, #24]
 800070a:	f442 72fe 	orr.w	r2, r2, #508	; 0x1fc
 800070e:	619a      	str	r2, [r3, #24]
    pRCC->APB1ENR |= RCC_APB1ENR_USB_CLK;
 8000710:	69da      	ldr	r2, [r3, #28]
 8000712:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000716:	61da      	str	r2, [r3, #28]
}
 8000718:	4770      	bx	lr
 800071a:	bf00      	nop
 800071c:	40021000 	andmi	r1, r2, r0
 8000720:	40022000 	andmi	r2, r2, r0

08000724 <setupLEDAndButton>:
    gpio_write_bit(BUTTON_BANK, BUTTON_PIN,1-BUTTON_PRESSED_STATE);// set pulldown resistor in case there is no button.
#endif
#if defined(LED_BANK) && defined(LED_PIN) && defined(LED_ON_STATE)
    SET_REG(GPIO_CR(LED_BANK,LED_PIN),(GET_REG(GPIO_CR(LED_BANK,LED_PIN)) & crMask(LED_PIN)) | CR_OUTPUT_PP << CR_SHITF(LED_PIN));
#endif
}
 8000724:	4770      	bx	lr
	...

08000728 <setupFLASH>:

void setupFLASH() {
    /* configure the HSI oscillator */
    if ((pRCC->CR & 0x01) == 0x00) {
 8000728:	4b05      	ldr	r3, [pc, #20]	; (8000740 <setupFLASH+0x18>)
 800072a:	681a      	ldr	r2, [r3, #0]
 800072c:	07d1      	lsls	r1, r2, #31
        u32 rwmVal = pRCC->CR;
 800072e:	bf5e      	ittt	pl
 8000730:	681a      	ldrpl	r2, [r3, #0]
        rwmVal |= 0x01;
 8000732:	f042 0201 	orrpl.w	r2, r2, #1
        pRCC->CR = rwmVal;
 8000736:	601a      	strpl	r2, [r3, #0]
    }

    /* wait for it to come on */
    while ((pRCC->CR & 0x02) == 0x00) {}
 8000738:	681a      	ldr	r2, [r3, #0]
 800073a:	0792      	lsls	r2, r2, #30
 800073c:	d5fc      	bpl.n	8000738 <setupFLASH+0x10>
}
 800073e:	4770      	bx	lr
 8000740:	40021000 	andmi	r1, r2, r0

08000744 <checkUserCode>:

bool checkUserCode(u32 usrAddr) {
    u32 sp = *(vu32 *) usrAddr;
 8000744:	6803      	ldr	r3, [r0, #0]

    if ((sp & 0x2FFE0000) == 0x20000000) {
 8000746:	4803      	ldr	r0, [pc, #12]	; (8000754 <checkUserCode+0x10>)
 8000748:	4018      	ands	r0, r3
        return (TRUE);
    } else {
        return (FALSE);
    }
}
 800074a:	f100 4360 	add.w	r3, r0, #3758096384	; 0xe0000000
 800074e:	4258      	negs	r0, r3
 8000750:	4158      	adcs	r0, r3
 8000752:	4770      	bx	lr
 8000754:	2ffe0000 	svccs	0x00fe0000

08000758 <setMspAndJump>:
    typedef void (*funcPtr)(void);
    u32 jumpAddr = *(vu32 *)(usrAddr + 0x04); /* reset ptr in vector table */

    funcPtr usrMain = (funcPtr) jumpAddr;

    SET_REG(SCB_VTOR, (vu32) (usrAddr));
 8000758:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
    u32 jumpAddr = *(vu32 *)(usrAddr + 0x04); /* reset ptr in vector table */
 800075c:	6843      	ldr	r3, [r0, #4]
    SET_REG(SCB_VTOR, (vu32) (usrAddr));
 800075e:	f8c2 0d08 	str.w	r0, [r2, #3336]	; 0xd08

    asm volatile("msr msp, %0"::"g"(*(volatile u32 *)usrAddr));
 8000762:	6802      	ldr	r2, [r0, #0]
 8000764:	f382 8808 	msr	MSP, r2

    usrMain();                                /* go! */
 8000768:	4718      	bx	r3
	...

0800076c <bkp10Write>:
}

void bkp10Write(u16 value)
{
        // Enable clocks for the backup domain registers
        pRCC->APB1ENR |= (RCC_APB1ENR_PWR_CLK | RCC_APB1ENR_BKP_CLK);
 800076c:	4a08      	ldr	r2, [pc, #32]	; (8000790 <bkp10Write+0x24>)
 800076e:	69d3      	ldr	r3, [r2, #28]
 8000770:	f043 53c0 	orr.w	r3, r3, #402653184	; 0x18000000
 8000774:	61d3      	str	r3, [r2, #28]

        // Disable backup register write protection
        pPWR->CR |= PWR_CR_DBP;
 8000776:	4b07      	ldr	r3, [pc, #28]	; (8000794 <bkp10Write+0x28>)
 8000778:	681a      	ldr	r2, [r3, #0]
 800077a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800077e:	601a      	str	r2, [r3, #0]

        // store value in pBK DR10
        pBKP->DR10 = value;
 8000780:	4a05      	ldr	r2, [pc, #20]	; (8000798 <bkp10Write+0x2c>)
 8000782:	8510      	strh	r0, [r2, #40]	; 0x28

        // Re-enable backup register write protection
        pPWR->CR &=~ PWR_CR_DBP;
 8000784:	681a      	ldr	r2, [r3, #0]
 8000786:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800078a:	601a      	str	r2, [r3, #0]
}
 800078c:	4770      	bx	lr
 800078e:	bf00      	nop
 8000790:	40021000 	andmi	r1, r2, r0
 8000794:	40007000 	andmi	r7, r0, r0
 8000798:	40006c00 	andmi	r6, r0, r0, lsl #24

0800079c <checkAndClearBootloaderFlag>:
    bool flagSet = 0x00;// Flag not used

    // Enable clocks for the backup domain registers
    pRCC->APB1ENR |= (RCC_APB1ENR_PWR_CLK | RCC_APB1ENR_BKP_CLK);

    switch (pBKP->DR10)
 800079c:	f244 224c 	movw	r2, #16972	; 0x424c
    pRCC->APB1ENR |= (RCC_APB1ENR_PWR_CLK | RCC_APB1ENR_BKP_CLK);
 80007a0:	490e      	ldr	r1, [pc, #56]	; (80007dc <checkAndClearBootloaderFlag+0x40>)
{
 80007a2:	b510      	push	{r4, lr}
    pRCC->APB1ENR |= (RCC_APB1ENR_PWR_CLK | RCC_APB1ENR_BKP_CLK);
 80007a4:	69cb      	ldr	r3, [r1, #28]
 80007a6:	f043 53c0 	orr.w	r3, r3, #402653184	; 0x18000000
 80007aa:	61cb      	str	r3, [r1, #28]
    switch (pBKP->DR10)
 80007ac:	4b0c      	ldr	r3, [pc, #48]	; (80007e0 <checkAndClearBootloaderFlag+0x44>)
 80007ae:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80007b0:	b29b      	uxth	r3, r3
 80007b2:	4293      	cmp	r3, r2
 80007b4:	d00d      	beq.n	80007d2 <checkAndClearBootloaderFlag+0x36>
 80007b6:	f244 224d 	movw	r2, #16973	; 0x424d
 80007ba:	4293      	cmp	r3, r2
 80007bc:	d10b      	bne.n	80007d6 <checkAndClearBootloaderFlag+0x3a>
    {
        case RTC_BOOTLOADER_FLAG:
            flagSet = 0x01;
            break;
        case RTC_BOOTLOADER_JUST_UPLOADED:
            flagSet = 0x02;
 80007be:	2402      	movs	r4, #2
            break;
    }

    if (flagSet!=0x00)
    {
        bkp10Write(0x0000);// Clear the flag
 80007c0:	2000      	movs	r0, #0
 80007c2:	f7ff ffd3 	bl	800076c <bkp10Write>
        // Disable clocks
        pRCC->APB1ENR &= ~(RCC_APB1ENR_PWR_CLK | RCC_APB1ENR_BKP_CLK);
 80007c6:	69cb      	ldr	r3, [r1, #28]
 80007c8:	f023 53c0 	bic.w	r3, r3, #402653184	; 0x18000000
 80007cc:	61cb      	str	r3, [r1, #28]
    }



    return flagSet;
}
 80007ce:	4620      	mov	r0, r4
 80007d0:	bd10      	pop	{r4, pc}
    switch (pBKP->DR10)
 80007d2:	2401      	movs	r4, #1
 80007d4:	e7f4      	b.n	80007c0 <checkAndClearBootloaderFlag+0x24>
 80007d6:	2400      	movs	r4, #0
 80007d8:	e7f9      	b.n	80007ce <checkAndClearBootloaderFlag+0x32>
 80007da:	bf00      	nop
 80007dc:	40021000 	andmi	r1, r2, r0
 80007e0:	40006c00 	andmi	r6, r0, r0, lsl #24

080007e4 <nvicInit>:
    SCB_TypeDef *rSCB = (SCB_TypeDef *) SCB_BASE;
    NVIC_TypeDef *rNVIC = (NVIC_TypeDef *) NVIC_BASE;


    /* Compute the Corresponding IRQ Priority --------------------------------*/
    tmppriority = (0x700 - (rSCB->AIRCR & (u32)0x700)) >> 0x08;
 80007e4:	4b18      	ldr	r3, [pc, #96]	; (8000848 <nvicInit+0x64>)
void nvicInit(NVIC_InitTypeDef *NVIC_InitStruct) {
 80007e6:	b530      	push	{r4, r5, lr}
    tmppriority = (0x700 - (rSCB->AIRCR & (u32)0x700)) >> 0x08;
 80007e8:	68da      	ldr	r2, [r3, #12]
    tmppre = (0x4 - tmppriority);
    tmpsub = tmpsub >> tmppriority;
 80007ea:	240f      	movs	r4, #15
    tmppriority = (0x700 - (rSCB->AIRCR & (u32)0x700)) >> 0x08;
 80007ec:	43d2      	mvns	r2, r2
 80007ee:	f3c2 2202 	ubfx	r2, r2, #8, #3
    tmppre = (0x4 - tmppriority);
 80007f2:	f1c2 0104 	rsb	r1, r2, #4
    tmpsub = tmpsub >> tmppriority;
 80007f6:	fa24 f202 	lsr.w	r2, r4, r2

    tmppriority = tmppriority << 0x04;
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);

    tmpreg = rNVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)];
    tmpmask = (u32)0xFF << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 80007fa:	24ff      	movs	r4, #255	; 0xff
    tmppriority = (u32)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 80007fc:	7843      	ldrb	r3, [r0, #1]
 80007fe:	fa03 f101 	lsl.w	r1, r3, r1
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
 8000802:	7883      	ldrb	r3, [r0, #2]
 8000804:	4013      	ands	r3, r2
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 8000806:	7802      	ldrb	r2, [r0, #0]
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
 8000808:	430b      	orrs	r3, r1
    tmppriority = tmppriority << 0x04;
 800080a:	f002 01fc 	and.w	r1, r2, #252	; 0xfc
 800080e:	f101 4160 	add.w	r1, r1, #3758096384	; 0xe0000000
 8000812:	f501 4161 	add.w	r1, r1, #57600	; 0xe100
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 8000816:	f002 0003 	and.w	r0, r2, #3
    tmpreg = rNVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)];
 800081a:	f8d1 5300 	ldr.w	r5, [r1, #768]	; 0x300
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 800081e:	00c0      	lsls	r0, r0, #3
    tmppriority = tmppriority << 0x04;
 8000820:	011b      	lsls	r3, r3, #4
    tmppriority = ((u32)tmppriority) << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 8000822:	4083      	lsls	r3, r0
 8000824:	406b      	eors	r3, r5
    tmpmask = (u32)0xFF << ((NVIC_InitStruct->NVIC_IRQChannel & (u8)0x03) * 0x08);
 8000826:	fa04 f000 	lsl.w	r0, r4, r0
 800082a:	4003      	ands	r3, r0
    tmpreg &= ~tmpmask;
    tmppriority &= tmpmask;
    tmpreg |= tmppriority;
 800082c:	406b      	eors	r3, r5

    rNVIC->IPR[(NVIC_InitStruct->NVIC_IRQChannel >> 0x02)] = tmpreg;
 800082e:	f8c1 3300 	str.w	r3, [r1, #768]	; 0x300

    /* Enable the Selected IRQ Channels --------------------------------------*/
    rNVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
        (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
 8000832:	2301      	movs	r3, #1
    rNVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
 8000834:	0951      	lsrs	r1, r2, #5
        (u32)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (u8)0x1F);
 8000836:	f002 021f 	and.w	r2, r2, #31
 800083a:	fa03 f202 	lsl.w	r2, r3, r2
    rNVIC->ISER[(NVIC_InitStruct->NVIC_IRQChannel >> 0x05)] =
 800083e:	4b03      	ldr	r3, [pc, #12]	; (800084c <nvicInit+0x68>)
 8000840:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
}
 8000844:	bd30      	pop	{r4, r5, pc}
 8000846:	bf00      	nop
 8000848:	e000ed00 	and	lr, r0, r0, lsl #26
 800084c:	e000e100 	and	lr, r0, r0, lsl #2

08000850 <nvicDisableInterrupts>:

void nvicDisableInterrupts() {
    NVIC_TypeDef *rNVIC = (NVIC_TypeDef *) NVIC_BASE;
    rNVIC->ICER[0] = 0xFFFFFFFF;
 8000850:	f04f 32ff 	mov.w	r2, #4294967295
 8000854:	4b06      	ldr	r3, [pc, #24]	; (8000870 <nvicDisableInterrupts+0x20>)
 8000856:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    rNVIC->ICER[1] = 0xFFFFFFFF;
 800085a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    rNVIC->ICPR[0] = 0xFFFFFFFF;
 800085e:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    rNVIC->ICPR[1] = 0xFFFFFFFF;
 8000862:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184

    SET_REG(STK_CTRL, 0x04); /* disable the systick, which operates separately from nvic */
 8000866:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800086a:	2204      	movs	r2, #4
 800086c:	611a      	str	r2, [r3, #16]
}
 800086e:	4770      	bx	lr
 8000870:	e000e100 	and	lr, r0, r0, lsl #2

08000874 <jumpToUser>:

void flashLock() {
    /* take down the HSI oscillator? it may be in use elsewhere */

    /* ensure all FPEC functions disabled and lock the FPEC */
    SET_REG(FLASH_CR, 0x00000080);
 8000874:	2280      	movs	r2, #128	; 0x80
void jumpToUser(u32 usrAddr) {
 8000876:	b510      	push	{r4, lr}
 8000878:	4604      	mov	r4, r0
    SET_REG(FLASH_CR, 0x00000080);
 800087a:	4b07      	ldr	r3, [pc, #28]	; (8000898 <jumpToUser+0x24>)
 800087c:	611a      	str	r2, [r3, #16]
    usbDsbISR();
 800087e:	f7ff fe3d 	bl	80004fc <usbDsbISR>
    nvicDisableInterrupts();
 8000882:	f7ff ffe5 	bl	8000850 <nvicDisableInterrupts>
    usbDsbBus();
 8000886:	f7ff fe05 	bl	8000494 <usbDsbBus>
    systemReset(); // resets clocks and periphs, not core regs
 800088a:	f7ff feff 	bl	800068c <systemReset>
    setMspAndJump(usrAddr);
 800088e:	4620      	mov	r0, r4
}
 8000890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setMspAndJump(usrAddr);
 8000894:	f7ff bf60 	b.w	8000758 <setMspAndJump>
 8000898:	40022000 	andmi	r2, r2, r0

0800089c <systemHardReset>:
    rSCB->AIRCR = (u32)AIRCR_RESET_REQ;
 800089c:	4b02      	ldr	r3, [pc, #8]	; (80008a8 <systemHardReset+0xc>)
 800089e:	4a03      	ldr	r2, [pc, #12]	; (80008ac <systemHardReset+0x10>)
 80008a0:	60da      	str	r2, [r3, #12]
        asm volatile("nop");
 80008a2:	bf00      	nop
    while (1) {
 80008a4:	e7fd      	b.n	80008a2 <systemHardReset+0x6>
 80008a6:	bf00      	nop
 80008a8:	e000ed00 	and	lr, r0, r0, lsl #26
 80008ac:	05fa0004 	ldrbeq	r0, [sl, #4]!

080008b0 <flashErasePage>:
    u32 rwmVal = GET_REG(FLASH_CR);
 80008b0:	4b08      	ldr	r3, [pc, #32]	; (80008d4 <flashErasePage+0x24>)
 80008b2:	691a      	ldr	r2, [r3, #16]
    SET_REG(FLASH_CR, rwmVal);
 80008b4:	2202      	movs	r2, #2
 80008b6:	611a      	str	r2, [r3, #16]
    while (GET_REG(FLASH_SR) & FLASH_SR_BSY) {}
 80008b8:	68da      	ldr	r2, [r3, #12]
 80008ba:	07d2      	lsls	r2, r2, #31
 80008bc:	d4fc      	bmi.n	80008b8 <flashErasePage+0x8>
    SET_REG(FLASH_CR, FLASH_CR_START | FLASH_CR_PER);
 80008be:	2242      	movs	r2, #66	; 0x42
    SET_REG(FLASH_AR, pageAddr);
 80008c0:	6158      	str	r0, [r3, #20]
    SET_REG(FLASH_CR, FLASH_CR_START | FLASH_CR_PER);
 80008c2:	611a      	str	r2, [r3, #16]
    while (GET_REG(FLASH_SR) & FLASH_SR_BSY) {}
 80008c4:	4a03      	ldr	r2, [pc, #12]	; (80008d4 <flashErasePage+0x24>)
 80008c6:	68d3      	ldr	r3, [r2, #12]
 80008c8:	f013 0301 	ands.w	r3, r3, #1
 80008cc:	d1fb      	bne.n	80008c6 <flashErasePage+0x16>
}
 80008ce:	2001      	movs	r0, #1
    SET_REG(FLASH_CR, rwmVal);
 80008d0:	6113      	str	r3, [r2, #16]
}
 80008d2:	4770      	bx	lr
 80008d4:	40022000 	andmi	r2, r2, r0

080008d8 <flashWriteWord>:
bool flashWriteWord(u32 addr, u32 word) {
 80008d8:	b513      	push	{r0, r1, r4, lr}
    SET_REG(FLASH_CR, FLASH_CR_PG);
 80008da:	2401      	movs	r4, #1
    vu32 lhWord = (vu32)word & 0x0000FFFF;
 80008dc:	b28b      	uxth	r3, r1
 80008de:	9300      	str	r3, [sp, #0]
    vu32 hhWord = ((vu32)word & 0xFFFF0000) >> 16;
 80008e0:	0c0b      	lsrs	r3, r1, #16
 80008e2:	9301      	str	r3, [sp, #4]
    u32 rwmVal = GET_REG(FLASH_CR);
 80008e4:	4b0d      	ldr	r3, [pc, #52]	; (800091c <flashWriteWord+0x44>)
 80008e6:	691a      	ldr	r2, [r3, #16]
    SET_REG(FLASH_CR, FLASH_CR_PG);
 80008e8:	611c      	str	r4, [r3, #16]
    while (GET_REG(FLASH_SR) & FLASH_SR_BSY) {}
 80008ea:	68dc      	ldr	r4, [r3, #12]
 80008ec:	07e4      	lsls	r4, r4, #31
 80008ee:	d4fc      	bmi.n	80008ea <flashWriteWord+0x12>
    *(flashAddr + 0x01) = (vu16)hhWord;
 80008f0:	9b01      	ldr	r3, [sp, #4]
 80008f2:	b29b      	uxth	r3, r3
 80008f4:	8043      	strh	r3, [r0, #2]
    while (GET_REG(FLASH_SR) & FLASH_SR_BSY) {}
 80008f6:	4b09      	ldr	r3, [pc, #36]	; (800091c <flashWriteWord+0x44>)
 80008f8:	68dc      	ldr	r4, [r3, #12]
 80008fa:	07e4      	lsls	r4, r4, #31
 80008fc:	d4fc      	bmi.n	80008f8 <flashWriteWord+0x20>
    *(flashAddr) = (vu16)lhWord;
 80008fe:	9c00      	ldr	r4, [sp, #0]
 8000900:	b2a4      	uxth	r4, r4
 8000902:	8004      	strh	r4, [r0, #0]
    while (GET_REG(FLASH_SR) & FLASH_SR_BSY) {}
 8000904:	68dc      	ldr	r4, [r3, #12]
 8000906:	07e4      	lsls	r4, r4, #31
 8000908:	d4fc      	bmi.n	8000904 <flashWriteWord+0x2c>
    rwmVal &= 0xFFFFFFFE;
 800090a:	f022 0201 	bic.w	r2, r2, #1
    SET_REG(FLASH_CR, rwmVal);
 800090e:	611a      	str	r2, [r3, #16]
    if (*(vu32 *)addr != word) {
 8000910:	6800      	ldr	r0, [r0, #0]
}
 8000912:	1a43      	subs	r3, r0, r1
 8000914:	4258      	negs	r0, r3
 8000916:	4158      	adcs	r0, r3
 8000918:	b002      	add	sp, #8
 800091a:	bd10      	pop	{r4, pc}
 800091c:	40022000 	andmi	r2, r2, r0

08000920 <flashLock>:
    SET_REG(FLASH_CR, 0x00000080);
 8000920:	2280      	movs	r2, #128	; 0x80
 8000922:	4b01      	ldr	r3, [pc, #4]	; (8000928 <flashLock+0x8>)
 8000924:	611a      	str	r2, [r3, #16]
}
 8000926:	4770      	bx	lr
 8000928:	40022000 	andmi	r2, r2, r0

0800092c <flashUnlock>:

void flashUnlock() {
    /* unlock the flash */
    SET_REG(FLASH_KEYR, FLASH_KEY1);
 800092c:	4b03      	ldr	r3, [pc, #12]	; (800093c <flashUnlock+0x10>)
 800092e:	4a04      	ldr	r2, [pc, #16]	; (8000940 <flashUnlock+0x14>)
 8000930:	605a      	str	r2, [r3, #4]
    SET_REG(FLASH_KEYR, FLASH_KEY2);
 8000932:	f102 3288 	add.w	r2, r2, #2290649224	; 0x88888888
 8000936:	605a      	str	r2, [r3, #4]
}
 8000938:	4770      	bx	lr
 800093a:	bf00      	nop
 800093c:	40022000 	andmi	r2, r2, r0
 8000940:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08000944 <crMask>:
    unsigned int mask;
    if (pin>=8)
    {
        pin-=8;
    }
    mask = 0x0F << (pin<<2);
 8000944:	230f      	movs	r3, #15
    if (pin>=8)
 8000946:	2807      	cmp	r0, #7
        pin-=8;
 8000948:	bfc8      	it	gt
 800094a:	3808      	subgt	r0, #8
    mask = 0x0F << (pin<<2);
 800094c:	0080      	lsls	r0, r0, #2
 800094e:	fa03 f000 	lsl.w	r0, r3, r0
    return ~mask;
}
 8000952:	43c0      	mvns	r0, r0
 8000954:	4770      	bx	lr
	...

08000958 <getFlashEnd>:

#define FLASH_SIZE_REG 0x1FFFF7E0
int getFlashEnd(void)
{
    unsigned short *flashSize = (unsigned short *) (FLASH_SIZE_REG);// Address register
    return ((int)(*flashSize & 0xffff) * 1024) + 0x08000000;
 8000958:	4b03      	ldr	r3, [pc, #12]	; (8000968 <getFlashEnd+0x10>)
 800095a:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800095e:	f500 3000 	add.w	r0, r0, #131072	; 0x20000
}
 8000962:	0280      	lsls	r0, r0, #10
 8000964:	4770      	bx	lr
 8000966:	bf00      	nop
 8000968:	1ffff700 	svcne	0x00fff700

0800096c <getFlashPageSize>:

int getFlashPageSize(void)
{

    unsigned short *flashSize = (unsigned short *) (FLASH_SIZE_REG);// Address register
    if ((*flashSize & 0xffff) > 128)
 800096c:	4b04      	ldr	r3, [pc, #16]	; (8000980 <getFlashPageSize+0x14>)
 800096e:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
    {
        return 0x800;
    }
    else
    {
        return 0x400;
 8000972:	2b80      	cmp	r3, #128	; 0x80
    }
}
 8000974:	bf8c      	ite	hi
 8000976:	f44f 6000 	movhi.w	r0, #2048	; 0x800
 800097a:	f44f 6080 	movls.w	r0, #1024	; 0x400
 800097e:	4770      	bx	lr
 8000980:	1ffff700 	svcne	0x00fff700

08000984 <dfuInit>:

volatile PLOT code_copy_lock;

/* todo: force dfu globals to be singleton to avoid re-inits? */
void dfuInit(void) {
    dfuAppStatus.bStatus = OK;
 8000984:	2300      	movs	r3, #0
    dfuAppStatus.bwPollTimeout0 = 0x00;
    dfuAppStatus.bwPollTimeout1 = 0x00;
    dfuAppStatus.bwPollTimeout2 = 0x00;
    dfuAppStatus.bState = dfuIDLE;
 8000986:	2102      	movs	r1, #2
    dfuAppStatus.bStatus = OK;
 8000988:	4a0c      	ldr	r2, [pc, #48]	; (80009bc <dfuInit+0x38>)
 800098a:	7013      	strb	r3, [r2, #0]
    dfuAppStatus.bwPollTimeout0 = 0x00;
 800098c:	7053      	strb	r3, [r2, #1]
    dfuAppStatus.bwPollTimeout1 = 0x00;
 800098e:	7093      	strb	r3, [r2, #2]
    dfuAppStatus.bwPollTimeout2 = 0x00;
 8000990:	70d3      	strb	r3, [r2, #3]
    dfuAppStatus.bState = dfuIDLE;
 8000992:	7111      	strb	r1, [r2, #4]
    dfuAppStatus.iString = 0x00;          /* all strings must be 0x00 until we make them! */
 8000994:	7153      	strb	r3, [r2, #5]
    userFirmwareLen = 0;
 8000996:	4a0a      	ldr	r2, [pc, #40]	; (80009c0 <dfuInit+0x3c>)
    thisBlockLen = 0;;
    userAppAddr = USER_CODE_RAM; /* default RAM user code location */
 8000998:	490a      	ldr	r1, [pc, #40]	; (80009c4 <dfuInit+0x40>)
    userFirmwareLen = 0;
 800099a:	6013      	str	r3, [r2, #0]
    thisBlockLen = 0;;
 800099c:	4a0a      	ldr	r2, [pc, #40]	; (80009c8 <dfuInit+0x44>)
 800099e:	8013      	strh	r3, [r2, #0]
    userAppAddr = USER_CODE_RAM; /* default RAM user code location */
 80009a0:	4a0a      	ldr	r2, [pc, #40]	; (80009cc <dfuInit+0x48>)
 80009a2:	6011      	str	r1, [r2, #0]
    userAppEnd = RAM_END;
 80009a4:	4a0a      	ldr	r2, [pc, #40]	; (80009d0 <dfuInit+0x4c>)
 80009a6:	f501 4188 	add.w	r1, r1, #17408	; 0x4400
 80009aa:	6011      	str	r1, [r2, #0]
    userUploadType=DFU_UPLOAD_NONE;
    code_copy_lock = WAIT;
 80009ac:	2103      	movs	r1, #3
    userUploadType=DFU_UPLOAD_NONE;
 80009ae:	4a09      	ldr	r2, [pc, #36]	; (80009d4 <dfuInit+0x50>)
 80009b0:	7013      	strb	r3, [r2, #0]
    code_copy_lock = WAIT;
 80009b2:	4a09      	ldr	r2, [pc, #36]	; (80009d8 <dfuInit+0x54>)
 80009b4:	7011      	strb	r1, [r2, #0]
    dfuBusy = FALSE;
 80009b6:	4a09      	ldr	r2, [pc, #36]	; (80009dc <dfuInit+0x58>)
 80009b8:	7013      	strb	r3, [r2, #0]
}
 80009ba:	4770      	bx	lr
 80009bc:	200002d9 	ldrdcs	r0, [r0], -r9
 80009c0:	20000ae4 	andcs	r0, r0, r4, ror #21
 80009c4:	20000c00 	andcs	r0, r0, r0, lsl #24
 80009c8:	20000ae0 	andcs	r0, r0, r0, ror #21
 80009cc:	200002c0 	andcs	r0, r0, r0, asr #5
 80009d0:	200002c4 	andcs	r0, r0, r4, asr #5
 80009d4:	20000ae8 	andcs	r0, r0, r8, ror #21
 80009d8:	200002d8 	ldrdcs	r0, [r0], -r8
 80009dc:	200002df 	ldrdcs	r0, [r0], -pc	; <UNPREDICTABLE>

080009e0 <dfuUpdateByReset>:
    }
}

void dfuUpdateByReset(void) {
    u8 startState = dfuAppStatus.bState;
    userFirmwareLen = 0;
 80009e0:	2200      	movs	r2, #0
void dfuUpdateByReset(void) {
 80009e2:	b510      	push	{r4, lr}
    u8 startState = dfuAppStatus.bState;
 80009e4:	4b0d      	ldr	r3, [pc, #52]	; (8000a1c <dfuUpdateByReset+0x3c>)
    userFirmwareLen = 0;
 80009e6:	4c0e      	ldr	r4, [pc, #56]	; (8000a20 <dfuUpdateByReset+0x40>)
    u8 startState = dfuAppStatus.bState;
 80009e8:	7919      	ldrb	r1, [r3, #4]
    userFirmwareLen = 0;
 80009ea:	6022      	str	r2, [r4, #0]

    if (startState == appDETACH) {
 80009ec:	2901      	cmp	r1, #1
    u8 startState = dfuAppStatus.bState;
 80009ee:	b2c8      	uxtb	r0, r1
    if (startState == appDETACH) {
 80009f0:	d108      	bne.n	8000a04 <dfuUpdateByReset+0x24>
        dfuAppStatus.bState = dfuIDLE;
 80009f2:	2102      	movs	r1, #2
 80009f4:	7119      	strb	r1, [r3, #4]
        dfuAppStatus.bStatus = OK;
 80009f6:	701a      	strb	r2, [r3, #0]

        nvicDisableInterrupts();
 80009f8:	f7ff ff2a 	bl	8000850 <nvicDisableInterrupts>
        dfuAppStatus.bState = dfuIDLE;
        dfuAppStatus.bStatus = OK;

        systemHardReset();
    }
}
 80009fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        usbEnbISR();
 8000a00:	f7ff bd4a 	b.w	8000498 <usbEnbISR>
    } else if (startState == appIDLE || startState == dfuIDLE) {
 8000a04:	f010 0ffd 	tst.w	r0, #253	; 0xfd
 8000a08:	d006      	beq.n	8000a18 <dfuUpdateByReset+0x38>
        dfuAppStatus.bState = dfuIDLE;
 8000a0a:	2102      	movs	r1, #2
 8000a0c:	7119      	strb	r1, [r3, #4]
        dfuAppStatus.bStatus = OK;
 8000a0e:	701a      	strb	r2, [r3, #0]
}
 8000a10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        systemHardReset();
 8000a14:	f7ff bf42 	b.w	800089c <systemHardReset>
}
 8000a18:	bd10      	pop	{r4, pc}
 8000a1a:	bf00      	nop
 8000a1c:	200002d9 	ldrdcs	r0, [r0], -r9
 8000a20:	20000ae4 	andcs	r0, r0, r4, ror #21

08000a24 <dfuCopyState>:

void dfuUpdateByTimeout(void) {
}

u8 *dfuCopyState(u16 length) {
    if (length == 0) {
 8000a24:	b920      	cbnz	r0, 8000a30 <dfuCopyState+0xc>
        pInformation->Ctrl_Info.Usb_wLength = 1;
 8000a26:	2201      	movs	r2, #1
 8000a28:	4b02      	ldr	r3, [pc, #8]	; (8000a34 <dfuCopyState+0x10>)
 8000a2a:	681b      	ldr	r3, [r3, #0]
 8000a2c:	821a      	strh	r2, [r3, #16]
        return NULL;
 8000a2e:	4770      	bx	lr
    } else {
        return (&(dfuAppStatus.bState));
 8000a30:	4801      	ldr	r0, [pc, #4]	; (8000a38 <dfuCopyState+0x14>)
    }
}
 8000a32:	4770      	bx	lr
 8000a34:	20000b10 	andcs	r0, r0, r0, lsl fp
 8000a38:	200002dd 	ldrdcs	r0, [r0], -sp

08000a3c <dfuCopyStatus>:

u8 *dfuCopyStatus(u16 length) {
    if (length == 0) {
 8000a3c:	b920      	cbnz	r0, 8000a48 <dfuCopyStatus+0xc>
        pInformation->Ctrl_Info.Usb_wLength = 6;
 8000a3e:	2206      	movs	r2, #6
 8000a40:	4b02      	ldr	r3, [pc, #8]	; (8000a4c <dfuCopyStatus+0x10>)
 8000a42:	681b      	ldr	r3, [r3, #0]
 8000a44:	821a      	strh	r2, [r3, #16]
        return NULL;
 8000a46:	4770      	bx	lr
    } else {
        return (u8*)(&dfuAppStatus);
 8000a48:	4801      	ldr	r0, [pc, #4]	; (8000a50 <dfuCopyStatus+0x14>)
    }
}
 8000a4a:	4770      	bx	lr
 8000a4c:	20000b10 	andcs	r0, r0, r0, lsl fp
 8000a50:	200002d9 	ldrdcs	r0, [r0], -r9

08000a54 <dfuCopyDNLOAD>:


u8 *dfuCopyDNLOAD(u16 length) {
    if (length == 0) {
        pInformation->Ctrl_Info.Usb_wLength = pInformation->USBwLengths.w - pInformation->Ctrl_Info.Usb_wOffset;
 8000a54:	4b06      	ldr	r3, [pc, #24]	; (8000a70 <dfuCopyDNLOAD+0x1c>)
 8000a56:	681a      	ldr	r2, [r3, #0]
 8000a58:	8a53      	ldrh	r3, [r2, #18]
    if (length == 0) {
 8000a5a:	b928      	cbnz	r0, 8000a68 <dfuCopyDNLOAD+0x14>
        pInformation->Ctrl_Info.Usb_wLength = pInformation->USBwLengths.w - pInformation->Ctrl_Info.Usb_wOffset;
 8000a5c:	88d1      	ldrh	r1, [r2, #6]
 8000a5e:	1acb      	subs	r3, r1, r3
 8000a60:	8213      	strh	r3, [r2, #16]
        thisBlockLen = pInformation->USBwLengths.w;
 8000a62:	4b04      	ldr	r3, [pc, #16]	; (8000a74 <dfuCopyDNLOAD+0x20>)
 8000a64:	8019      	strh	r1, [r3, #0]
        return NULL;
 8000a66:	4770      	bx	lr
    } else {
        return ((u8 *)recvBuffer + pInformation->Ctrl_Info.Usb_wOffset);
 8000a68:	4803      	ldr	r0, [pc, #12]	; (8000a78 <dfuCopyDNLOAD+0x24>)
 8000a6a:	4418      	add	r0, r3
    }
}
 8000a6c:	4770      	bx	lr
 8000a6e:	bf00      	nop
 8000a70:	20000b10 	andcs	r0, r0, r0, lsl fp
 8000a74:	20000ae0 	andcs	r0, r0, r0, ror #21
 8000a78:	200002e0 	andcs	r0, r0, r0, ror #5

08000a7c <dfuCopyUPLOAD>:

u8 *dfuCopyUPLOAD(u16 length) {
    if (length == 0) {
        pInformation->Ctrl_Info.Usb_wLength = thisBlockLen - pInformation->Ctrl_Info.Usb_wOffset;
 8000a7c:	4b07      	ldr	r3, [pc, #28]	; (8000a9c <dfuCopyUPLOAD+0x20>)
 8000a7e:	6819      	ldr	r1, [r3, #0]
 8000a80:	8a4a      	ldrh	r2, [r1, #18]
    if (length == 0) {
 8000a82:	b920      	cbnz	r0, 8000a8e <dfuCopyUPLOAD+0x12>
        pInformation->Ctrl_Info.Usb_wLength = thisBlockLen - pInformation->Ctrl_Info.Usb_wOffset;
 8000a84:	4b06      	ldr	r3, [pc, #24]	; (8000aa0 <dfuCopyUPLOAD+0x24>)
 8000a86:	881b      	ldrh	r3, [r3, #0]
 8000a88:	1a9b      	subs	r3, r3, r2
 8000a8a:	820b      	strh	r3, [r1, #16]
        return NULL;
 8000a8c:	4770      	bx	lr
    } else {
        return((u8*) userAppAddr + userFirmwareLen + pInformation->Ctrl_Info.Usb_wOffset);
 8000a8e:	4b05      	ldr	r3, [pc, #20]	; (8000aa4 <dfuCopyUPLOAD+0x28>)
 8000a90:	6818      	ldr	r0, [r3, #0]
 8000a92:	4b05      	ldr	r3, [pc, #20]	; (8000aa8 <dfuCopyUPLOAD+0x2c>)
 8000a94:	681b      	ldr	r3, [r3, #0]
 8000a96:	4418      	add	r0, r3
 8000a98:	4410      	add	r0, r2
    }
}
 8000a9a:	4770      	bx	lr
 8000a9c:	20000b10 	andcs	r0, r0, r0, lsl fp
 8000aa0:	20000ae0 	andcs	r0, r0, r0, ror #21
 8000aa4:	20000ae4 	andcs	r0, r0, r4, ror #21
 8000aa8:	200002c0 	andcs	r0, r0, r0, asr #5

08000aac <dfuCopyBufferToExec>:

void dfuCopyBufferToExec() {
 8000aac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        }
    }
    else
*/
    {
        if (userUploadType == DFU_UPLOAD_FLASH_0X8005000)
 8000ab0:	4b13      	ldr	r3, [pc, #76]	; (8000b00 <dfuCopyBufferToExec+0x54>)
 8000ab2:	4d14      	ldr	r5, [pc, #80]	; (8000b04 <dfuCopyBufferToExec+0x58>)
 8000ab4:	781b      	ldrb	r3, [r3, #0]
        {
            userSpace = (u32 *)(USER_CODE_FLASH0X8005000 + userFirmwareLen);
 8000ab6:	682c      	ldr	r4, [r5, #0]
        if (userUploadType == DFU_UPLOAD_FLASH_0X8005000)
 8000ab8:	2b02      	cmp	r3, #2
            userSpace = (u32 *)(USER_CODE_FLASH0X8005000 + userFirmwareLen);
 8000aba:	f104 6400 	add.w	r4, r4, #134217728	; 0x8000000
 8000abe:	bf0c      	ite	eq
 8000ac0:	f504 44a0 	addeq.w	r4, r4, #20480	; 0x5000
        }
        else
        {
            userSpace = (u32 *)(USER_CODE_FLASH0X8002000 + userFirmwareLen);
 8000ac4:	f504 5400 	addne.w	r4, r4, #8192	; 0x2000
        }

        flashErasePage((u32)(userSpace));
 8000ac8:	4620      	mov	r0, r4
 8000aca:	f7ff fef1 	bl	80008b0 <flashErasePage>

        for (i = 0; i < thisBlockLen; i = i + 4) {
 8000ace:	2600      	movs	r6, #0
 8000ad0:	f8df 8034 	ldr.w	r8, [pc, #52]	; 8000b08 <dfuCopyBufferToExec+0x5c>
 8000ad4:	4f0d      	ldr	r7, [pc, #52]	; (8000b0c <dfuCopyBufferToExec+0x60>)
 8000ad6:	883b      	ldrh	r3, [r7, #0]
 8000ad8:	b29b      	uxth	r3, r3
 8000ada:	42b3      	cmp	r3, r6
 8000adc:	dc08      	bgt.n	8000af0 <dfuCopyBufferToExec+0x44>
            flashWriteWord((u32)(userSpace++), *(u32 *)(recvBuffer +i));
        }

    }
    userFirmwareLen += thisBlockLen;
 8000ade:	883b      	ldrh	r3, [r7, #0]
 8000ae0:	682a      	ldr	r2, [r5, #0]
 8000ae2:	b29b      	uxth	r3, r3
 8000ae4:	4413      	add	r3, r2
 8000ae6:	602b      	str	r3, [r5, #0]

    thisBlockLen = 0;
 8000ae8:	2300      	movs	r3, #0
 8000aea:	803b      	strh	r3, [r7, #0]
}
 8000aec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            flashWriteWord((u32)(userSpace++), *(u32 *)(recvBuffer +i));
 8000af0:	19a0      	adds	r0, r4, r6
 8000af2:	f858 1b04 	ldr.w	r1, [r8], #4
 8000af6:	f7ff feef 	bl	80008d8 <flashWriteWord>
        for (i = 0; i < thisBlockLen; i = i + 4) {
 8000afa:	3604      	adds	r6, #4
 8000afc:	e7eb      	b.n	8000ad6 <dfuCopyBufferToExec+0x2a>
 8000afe:	bf00      	nop
 8000b00:	20000ae8 	andcs	r0, r0, r8, ror #21
 8000b04:	20000ae4 	andcs	r0, r0, r4, ror #21
 8000b08:	200002e0 	andcs	r0, r0, r0, ror #5
 8000b0c:	20000ae0 	andcs	r0, r0, r0, ror #21

08000b10 <dfuUpdateByRequest>:
    dfuBusy = TRUE;
 8000b10:	2001      	movs	r0, #1
    dfuAppStatus.bStatus = OK;
 8000b12:	2200      	movs	r2, #0
    dfuBusy = TRUE;
 8000b14:	497f      	ldr	r1, [pc, #508]	; (8000d14 <dfuUpdateByRequest+0x204>)
bool dfuUpdateByRequest(void) {
 8000b16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    u8 startState = dfuAppStatus.bState;
 8000b18:	4c7f      	ldr	r4, [pc, #508]	; (8000d18 <dfuUpdateByRequest+0x208>)
    dfuBusy = TRUE;
 8000b1a:	7008      	strb	r0, [r1, #0]
    u8 startState = dfuAppStatus.bState;
 8000b1c:	7925      	ldrb	r5, [r4, #4]
    dfuAppStatus.bStatus = OK;
 8000b1e:	7022      	strb	r2, [r4, #0]
    if (startState == dfuIDLE)  {
 8000b20:	2d02      	cmp	r5, #2
    u8 startState = dfuAppStatus.bState;
 8000b22:	b2eb      	uxtb	r3, r5
    if (startState == dfuIDLE)  {
 8000b24:	d164      	bne.n	8000bf0 <dfuUpdateByRequest+0xe0>
        dfuBusy = TRUE; // signals the main loop to defer to the dfu write-loop
 8000b26:	7008      	strb	r0, [r1, #0]
        if (pInformation->USBbRequest == DFU_DNLOAD) {
 8000b28:	497c      	ldr	r1, [pc, #496]	; (8000d1c <dfuUpdateByRequest+0x20c>)
 8000b2a:	6809      	ldr	r1, [r1, #0]
 8000b2c:	7848      	ldrb	r0, [r1, #1]
 8000b2e:	2801      	cmp	r0, #1
 8000b30:	d12f      	bne.n	8000b92 <dfuUpdateByRequest+0x82>
            if (pInformation->USBwLengths.w > 0) {
 8000b32:	88c8      	ldrh	r0, [r1, #6]
 8000b34:	2800      	cmp	r0, #0
 8000b36:	f000 80d0 	beq.w	8000cda <dfuUpdateByRequest+0x1ca>
                userFirmwareLen = 0;
 8000b3a:	4879      	ldr	r0, [pc, #484]	; (8000d20 <dfuUpdateByRequest+0x210>)
                switch(pInformation->Current_AlternateSetting)
 8000b3c:	7b09      	ldrb	r1, [r1, #12]
                userFirmwareLen = 0;
 8000b3e:	6002      	str	r2, [r0, #0]
                dfuAppStatus.bState  = dfuDNLOAD_SYNC;
 8000b40:	2203      	movs	r2, #3
                switch(pInformation->Current_AlternateSetting)
 8000b42:	2901      	cmp	r1, #1
                dfuAppStatus.bState  = dfuDNLOAD_SYNC;
 8000b44:	7122      	strb	r2, [r4, #4]
                switch(pInformation->Current_AlternateSetting)
 8000b46:	d005      	beq.n	8000b54 <dfuUpdateByRequest+0x44>
 8000b48:	2902      	cmp	r1, #2
 8000b4a:	d018      	beq.n	8000b7e <dfuUpdateByRequest+0x6e>
                        dfuAppStatus.bState  = dfuERROR;
 8000b4c:	230a      	movs	r3, #10
            dfuAppStatus.bState  = dfuMANIFEST_WAIT_RESET;
 8000b4e:	7123      	strb	r3, [r4, #4]
            dfuAppStatus.bStatus = OK;
 8000b50:	7022      	strb	r2, [r4, #0]
 8000b52:	e00f      	b.n	8000b74 <dfuUpdateByRequest+0x64>
                        userAppAddr = USER_CODE_FLASH0X8005000;
 8000b54:	4973      	ldr	r1, [pc, #460]	; (8000d24 <dfuUpdateByRequest+0x214>)
 8000b56:	4a74      	ldr	r2, [pc, #464]	; (8000d28 <dfuUpdateByRequest+0x218>)
 8000b58:	6011      	str	r1, [r2, #0]
                        userUploadType = DFU_UPLOAD_FLASH_0X8005000;
 8000b5a:	4a74      	ldr	r2, [pc, #464]	; (8000d2c <dfuUpdateByRequest+0x21c>)
 8000b5c:	7013      	strb	r3, [r2, #0]
                        setupFLASH();
 8000b5e:	f7ff fde3 	bl	8000728 <setupFLASH>
                        flashUnlock();
 8000b62:	f7ff fee3 	bl	800092c <flashUnlock>
                        flashErasePage((u32)USER_CODE_FLASH0X8002000);
 8000b66:	4872      	ldr	r0, [pc, #456]	; (8000d30 <dfuUpdateByRequest+0x220>)
 8000b68:	f7ff fea2 	bl	80008b0 <flashErasePage>
                        bkp10Write(RTC_BOOTLOADER_JUST_UPLOADED);
 8000b6c:	f244 204d 	movw	r0, #16973	; 0x424d
 8000b70:	f7ff fdfc 	bl	800076c <bkp10Write>
    if (dfuAppStatus.bStatus == OK) {
 8000b74:	7820      	ldrb	r0, [r4, #0]
}
 8000b76:	fab0 f080 	clz	r0, r0
 8000b7a:	0940      	lsrs	r0, r0, #5
 8000b7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                        userUploadType = DFU_UPLOAD_FLASH_0X8002000;
 8000b7e:	4b6b      	ldr	r3, [pc, #428]	; (8000d2c <dfuUpdateByRequest+0x21c>)
 8000b80:	701a      	strb	r2, [r3, #0]
                        userAppAddr = USER_CODE_FLASH0X8002000;
 8000b82:	4b69      	ldr	r3, [pc, #420]	; (8000d28 <dfuUpdateByRequest+0x218>)
 8000b84:	4a6a      	ldr	r2, [pc, #424]	; (8000d30 <dfuUpdateByRequest+0x220>)
 8000b86:	601a      	str	r2, [r3, #0]
                        setupFLASH();
 8000b88:	f7ff fdce 	bl	8000728 <setupFLASH>
                        flashUnlock();
 8000b8c:	f7ff fece 	bl	800092c <flashUnlock>
 8000b90:	e7ec      	b.n	8000b6c <dfuUpdateByRequest+0x5c>
        } else if (pInformation->USBbRequest == DFU_UPLOAD) {
 8000b92:	2802      	cmp	r0, #2
 8000b94:	d123      	bne.n	8000bde <dfuUpdateByRequest+0xce>
            dfuAppStatus.bState  = dfuUPLOAD_IDLE;
 8000b96:	2309      	movs	r3, #9
            uploadBlockLen = pInformation->USBwLengths.w;
 8000b98:	88ca      	ldrh	r2, [r1, #6]
            dfuAppStatus.bState  = dfuUPLOAD_IDLE;
 8000b9a:	7123      	strb	r3, [r4, #4]
            uploadBlockLen = pInformation->USBwLengths.w;
 8000b9c:	4b65      	ldr	r3, [pc, #404]	; (8000d34 <dfuUpdateByRequest+0x224>)
            thisBlockLen = uploadBlockLen; /* for this first block as well */
 8000b9e:	4866      	ldr	r0, [pc, #408]	; (8000d38 <dfuUpdateByRequest+0x228>)
            uploadBlockLen = pInformation->USBwLengths.w;
 8000ba0:	801a      	strh	r2, [r3, #0]
            thisBlockLen = uploadBlockLen; /* for this first block as well */
 8000ba2:	881a      	ldrh	r2, [r3, #0]
 8000ba4:	b292      	uxth	r2, r2
 8000ba6:	8002      	strh	r2, [r0, #0]
            userFirmwareLen = uploadBlockLen * pInformation->USBwValue;
 8000ba8:	881b      	ldrh	r3, [r3, #0]
 8000baa:	b29a      	uxth	r2, r3
 8000bac:	884b      	ldrh	r3, [r1, #2]
 8000bae:	4353      	muls	r3, r2
 8000bb0:	4a5b      	ldr	r2, [pc, #364]	; (8000d20 <dfuUpdateByRequest+0x210>)
 8000bb2:	6013      	str	r3, [r2, #0]
            switch(pInformation->Current_AlternateSetting)
 8000bb4:	7b0b      	ldrb	r3, [r1, #12]
 8000bb6:	2b01      	cmp	r3, #1
 8000bb8:	d006      	beq.n	8000bc8 <dfuUpdateByRequest+0xb8>
 8000bba:	2b02      	cmp	r3, #2
 8000bbc:	d00c      	beq.n	8000bd8 <dfuUpdateByRequest+0xc8>
                    dfuAppStatus.bState  = dfuERROR;
 8000bbe:	230a      	movs	r3, #10
 8000bc0:	7123      	strb	r3, [r4, #4]
                    dfuAppStatus.bStatus = errWRITE;
 8000bc2:	2303      	movs	r3, #3
        dfuAppStatus.bStatus = errSTALLEDPKT;
 8000bc4:	7023      	strb	r3, [r4, #0]
 8000bc6:	e7d5      	b.n	8000b74 <dfuUpdateByRequest+0x64>
                    userAppAddr = USER_CODE_FLASH0X8005000;
 8000bc8:	4b57      	ldr	r3, [pc, #348]	; (8000d28 <dfuUpdateByRequest+0x218>)
 8000bca:	4a56      	ldr	r2, [pc, #344]	; (8000d24 <dfuUpdateByRequest+0x214>)
                    userAppAddr = USER_CODE_FLASH0X8002000;
 8000bcc:	601a      	str	r2, [r3, #0]
                    userAppEnd = getFlashEnd();
 8000bce:	f7ff fec3 	bl	8000958 <getFlashEnd>
 8000bd2:	4b5a      	ldr	r3, [pc, #360]	; (8000d3c <dfuUpdateByRequest+0x22c>)
 8000bd4:	6018      	str	r0, [r3, #0]
                    break;
 8000bd6:	e7cd      	b.n	8000b74 <dfuUpdateByRequest+0x64>
                    userAppAddr = USER_CODE_FLASH0X8002000;
 8000bd8:	4b53      	ldr	r3, [pc, #332]	; (8000d28 <dfuUpdateByRequest+0x218>)
 8000bda:	4a55      	ldr	r2, [pc, #340]	; (8000d30 <dfuUpdateByRequest+0x220>)
 8000bdc:	e7f6      	b.n	8000bcc <dfuUpdateByRequest+0xbc>
        } else if (pInformation->USBbRequest == DFU_ABORT) {
 8000bde:	2806      	cmp	r0, #6
 8000be0:	d0b5      	beq.n	8000b4e <dfuUpdateByRequest+0x3e>
        } else if (pInformation->USBbRequest == DFU_GETSTATUS) {
 8000be2:	2803      	cmp	r0, #3
 8000be4:	d101      	bne.n	8000bea <dfuUpdateByRequest+0xda>
            dfuAppStatus.bState = dfuDNLOAD_IDLE;
 8000be6:	7123      	strb	r3, [r4, #4]
 8000be8:	e7c4      	b.n	8000b74 <dfuUpdateByRequest+0x64>
        } else if (pInformation->USBbRequest == DFU_GETSTATE) {
 8000bea:	2805      	cmp	r0, #5
        } else if (pInformation->USBbRequest == DFU_GETSTATE) {
 8000bec:	d131      	bne.n	8000c52 <dfuUpdateByRequest+0x142>
 8000bee:	e7fa      	b.n	8000be6 <dfuUpdateByRequest+0xd6>
    } else if (startState == dfuDNLOAD_SYNC)         {
 8000bf0:	2b03      	cmp	r3, #3
 8000bf2:	d10b      	bne.n	8000c0c <dfuUpdateByRequest+0xfc>
        if (pInformation->USBbRequest == DFU_GETSTATUS) {
 8000bf4:	4a49      	ldr	r2, [pc, #292]	; (8000d1c <dfuUpdateByRequest+0x20c>)
 8000bf6:	6812      	ldr	r2, [r2, #0]
 8000bf8:	7852      	ldrb	r2, [r2, #1]
 8000bfa:	2a03      	cmp	r2, #3
 8000bfc:	d104      	bne.n	8000c08 <dfuUpdateByRequest+0xf8>
                dfuAppStatus.bState = dfuDNLOAD_IDLE;
 8000bfe:	2305      	movs	r3, #5
 8000c00:	7123      	strb	r3, [r4, #4]
                dfuCopyBufferToExec();
 8000c02:	f7ff ff53 	bl	8000aac <dfuCopyBufferToExec>
 8000c06:	e7b5      	b.n	8000b74 <dfuUpdateByRequest+0x64>
        } else if (pInformation->USBbRequest == DFU_GETSTATE) {
 8000c08:	2a05      	cmp	r2, #5
 8000c0a:	e7ef      	b.n	8000bec <dfuUpdateByRequest+0xdc>
    } else if (startState == dfuDNBUSY)              {
 8000c0c:	2b04      	cmp	r3, #4
 8000c0e:	d108      	bne.n	8000c22 <dfuUpdateByRequest+0x112>
        if (code_copy_lock == END) {
 8000c10:	494b      	ldr	r1, [pc, #300]	; (8000d40 <dfuUpdateByRequest+0x230>)
 8000c12:	7808      	ldrb	r0, [r1, #0]
 8000c14:	2802      	cmp	r0, #2
            code_copy_lock = WAIT;
 8000c16:	bf01      	itttt	eq
 8000c18:	2303      	moveq	r3, #3
            dfuAppStatus.bwPollTimeout0 = 0x00;
 8000c1a:	7062      	strbeq	r2, [r4, #1]
            code_copy_lock = WAIT;
 8000c1c:	700b      	strbeq	r3, [r1, #0]
            dfuAppStatus.bState = dfuDNLOAD_IDLE;
 8000c1e:	2305      	moveq	r3, #5
 8000c20:	e7e1      	b.n	8000be6 <dfuUpdateByRequest+0xd6>
    } else if (startState == dfuDNLOAD_IDLE)         {
 8000c22:	2b05      	cmp	r3, #5
 8000c24:	d119      	bne.n	8000c5a <dfuUpdateByRequest+0x14a>
        if (pInformation->USBbRequest == DFU_DNLOAD) {
 8000c26:	4b3d      	ldr	r3, [pc, #244]	; (8000d1c <dfuUpdateByRequest+0x20c>)
 8000c28:	681a      	ldr	r2, [r3, #0]
 8000c2a:	7853      	ldrb	r3, [r2, #1]
 8000c2c:	2b01      	cmp	r3, #1
 8000c2e:	d108      	bne.n	8000c42 <dfuUpdateByRequest+0x132>
            if (pInformation->USBwLengths.w > 0) {
 8000c30:	88d3      	ldrh	r3, [r2, #6]
 8000c32:	b10b      	cbz	r3, 8000c38 <dfuUpdateByRequest+0x128>
                dfuAppStatus.bState  = dfuDNLOAD_SYNC;
 8000c34:	2303      	movs	r3, #3
 8000c36:	e7d6      	b.n	8000be6 <dfuUpdateByRequest+0xd6>
                dfuAppStatus.bState  = dfuMANIFEST_SYNC;
 8000c38:	2306      	movs	r3, #6
 8000c3a:	7123      	strb	r3, [r4, #4]
                flashLock();
 8000c3c:	f7ff fe70 	bl	8000920 <flashLock>
 8000c40:	e798      	b.n	8000b74 <dfuUpdateByRequest+0x64>
        } else if (pInformation->USBbRequest == DFU_ABORT) {
 8000c42:	2b06      	cmp	r3, #6
 8000c44:	d101      	bne.n	8000c4a <dfuUpdateByRequest+0x13a>
            dfuAppStatus.bState  = dfuIDLE;
 8000c46:	2302      	movs	r3, #2
 8000c48:	e7cd      	b.n	8000be6 <dfuUpdateByRequest+0xd6>
        } else if (pInformation->USBbRequest == DFU_GETSTATUS) {
 8000c4a:	2b03      	cmp	r3, #3
 8000c4c:	d0fb      	beq.n	8000c46 <dfuUpdateByRequest+0x136>
        } else if (pInformation->USBbRequest == DFU_GETSTATE) {
 8000c4e:	2b05      	cmp	r3, #5
 8000c50:	d0f9      	beq.n	8000c46 <dfuUpdateByRequest+0x136>
        dfuAppStatus.bState  = dfuERROR;
 8000c52:	230a      	movs	r3, #10
 8000c54:	7123      	strb	r3, [r4, #4]
        dfuAppStatus.bStatus = errSTALLEDPKT;
 8000c56:	230f      	movs	r3, #15
 8000c58:	e7b4      	b.n	8000bc4 <dfuUpdateByRequest+0xb4>
    } else if (startState == dfuMANIFEST_SYNC)       {
 8000c5a:	2b06      	cmp	r3, #6
 8000c5c:	d108      	bne.n	8000c70 <dfuUpdateByRequest+0x160>
        if (pInformation->USBbRequest == DFU_GETSTATUS) {
 8000c5e:	492f      	ldr	r1, [pc, #188]	; (8000d1c <dfuUpdateByRequest+0x20c>)
 8000c60:	6809      	ldr	r1, [r1, #0]
 8000c62:	7849      	ldrb	r1, [r1, #1]
 8000c64:	2903      	cmp	r1, #3
 8000c66:	d101      	bne.n	8000c6c <dfuUpdateByRequest+0x15c>
            dfuAppStatus.bState  = dfuMANIFEST_WAIT_RESET;
 8000c68:	2308      	movs	r3, #8
 8000c6a:	e770      	b.n	8000b4e <dfuUpdateByRequest+0x3e>
        } else if (pInformation->USBbRequest == DFU_GETSTATE) {
 8000c6c:	2905      	cmp	r1, #5
 8000c6e:	e7bd      	b.n	8000bec <dfuUpdateByRequest+0xdc>
    } else if (startState == dfuMANIFEST)            {
 8000c70:	2b07      	cmp	r3, #7
 8000c72:	d0f9      	beq.n	8000c68 <dfuUpdateByRequest+0x158>
    } else if (startState == dfuMANIFEST_WAIT_RESET) {
 8000c74:	2b08      	cmp	r3, #8
 8000c76:	d0b6      	beq.n	8000be6 <dfuUpdateByRequest+0xd6>
    } else if (startState == dfuUPLOAD_IDLE)         {
 8000c78:	2b09      	cmp	r3, #9
 8000c7a:	d139      	bne.n	8000cf0 <dfuUpdateByRequest+0x1e0>
        if (pInformation->USBbRequest == DFU_UPLOAD) {
 8000c7c:	4b27      	ldr	r3, [pc, #156]	; (8000d1c <dfuUpdateByRequest+0x20c>)
 8000c7e:	6818      	ldr	r0, [r3, #0]
 8000c80:	7843      	ldrb	r3, [r0, #1]
 8000c82:	2b02      	cmp	r3, #2
 8000c84:	d12d      	bne.n	8000ce2 <dfuUpdateByRequest+0x1d2>
            if (pInformation->USBwLengths.w > 0) {
 8000c86:	88c5      	ldrh	r5, [r0, #6]
 8000c88:	b33d      	cbz	r5, 8000cda <dfuUpdateByRequest+0x1ca>
                userFirmwareLen = uploadBlockLen * pInformation->USBwValue;
 8000c8a:	492a      	ldr	r1, [pc, #168]	; (8000d34 <dfuUpdateByRequest+0x224>)
                if (userAppAddr + userFirmwareLen + uploadBlockLen <= userAppEnd) {
 8000c8c:	4e26      	ldr	r6, [pc, #152]	; (8000d28 <dfuUpdateByRequest+0x218>)
                userFirmwareLen = uploadBlockLen * pInformation->USBwValue;
 8000c8e:	880b      	ldrh	r3, [r1, #0]
                if (userAppAddr + userFirmwareLen + uploadBlockLen <= userAppEnd) {
 8000c90:	4f2a      	ldr	r7, [pc, #168]	; (8000d3c <dfuUpdateByRequest+0x22c>)
                userFirmwareLen = uploadBlockLen * pInformation->USBwValue;
 8000c92:	b29a      	uxth	r2, r3
 8000c94:	8843      	ldrh	r3, [r0, #2]
 8000c96:	4822      	ldr	r0, [pc, #136]	; (8000d20 <dfuUpdateByRequest+0x210>)
 8000c98:	4353      	muls	r3, r2
 8000c9a:	6003      	str	r3, [r0, #0]
                if (userAppAddr + userFirmwareLen + uploadBlockLen <= userAppEnd) {
 8000c9c:	6833      	ldr	r3, [r6, #0]
 8000c9e:	f8d0 e000 	ldr.w	lr, [r0]
 8000ca2:	880a      	ldrh	r2, [r1, #0]
 8000ca4:	4473      	add	r3, lr
 8000ca6:	b292      	uxth	r2, r2
 8000ca8:	f8d7 c000 	ldr.w	ip, [r7]
 8000cac:	4413      	add	r3, r2
 8000cae:	4563      	cmp	r3, ip
 8000cb0:	4a21      	ldr	r2, [pc, #132]	; (8000d38 <dfuUpdateByRequest+0x228>)
 8000cb2:	d804      	bhi.n	8000cbe <dfuUpdateByRequest+0x1ae>
                    thisBlockLen = uploadBlockLen;
 8000cb4:	880b      	ldrh	r3, [r1, #0]
 8000cb6:	b29b      	uxth	r3, r3
 8000cb8:	8013      	strh	r3, [r2, #0]
            dfuAppStatus.bState  = dfuUPLOAD_IDLE;
 8000cba:	2309      	movs	r3, #9
 8000cbc:	e793      	b.n	8000be6 <dfuUpdateByRequest+0xd6>
                    thisBlockLen = userAppEnd - userAppAddr - userFirmwareLen;
 8000cbe:	683b      	ldr	r3, [r7, #0]
 8000cc0:	6831      	ldr	r1, [r6, #0]
 8000cc2:	6800      	ldr	r0, [r0, #0]
 8000cc4:	4401      	add	r1, r0
 8000cc6:	1a5b      	subs	r3, r3, r1
 8000cc8:	b29b      	uxth	r3, r3
 8000cca:	8013      	strh	r3, [r2, #0]
                    if (thisBlockLen >= pInformation->USBwLengths.w) {
 8000ccc:	8813      	ldrh	r3, [r2, #0]
 8000cce:	b29b      	uxth	r3, r3
 8000cd0:	429d      	cmp	r5, r3
 8000cd2:	d8b8      	bhi.n	8000c46 <dfuUpdateByRequest+0x136>
                        thisBlockLen = 0;
 8000cd4:	2300      	movs	r3, #0
 8000cd6:	8013      	strh	r3, [r2, #0]
                    dfuAppStatus.bState  = dfuIDLE;
 8000cd8:	e7b5      	b.n	8000c46 <dfuUpdateByRequest+0x136>
                dfuAppStatus.bState  = dfuERROR;
 8000cda:	230a      	movs	r3, #10
 8000cdc:	7123      	strb	r3, [r4, #4]
                dfuAppStatus.bStatus = errNOTDONE;
 8000cde:	2309      	movs	r3, #9
 8000ce0:	e770      	b.n	8000bc4 <dfuUpdateByRequest+0xb4>
        } else if (pInformation->USBbRequest == DFU_ABORT) {
 8000ce2:	2b06      	cmp	r3, #6
 8000ce4:	d0af      	beq.n	8000c46 <dfuUpdateByRequest+0x136>
        } else if (pInformation->USBbRequest == DFU_GETSTATUS) {
 8000ce6:	2b03      	cmp	r3, #3
 8000ce8:	d0e7      	beq.n	8000cba <dfuUpdateByRequest+0x1aa>
        } else if (pInformation->USBbRequest == DFU_GETSTATE) {
 8000cea:	2b05      	cmp	r3, #5
 8000cec:	d1b1      	bne.n	8000c52 <dfuUpdateByRequest+0x142>
 8000cee:	e7e4      	b.n	8000cba <dfuUpdateByRequest+0x1aa>
    } else if (startState == dfuERROR)               {
 8000cf0:	2b0a      	cmp	r3, #10
 8000cf2:	d1ae      	bne.n	8000c52 <dfuUpdateByRequest+0x142>
        if (pInformation->USBbRequest == DFU_GETSTATUS) {
 8000cf4:	4b09      	ldr	r3, [pc, #36]	; (8000d1c <dfuUpdateByRequest+0x20c>)
 8000cf6:	681b      	ldr	r3, [r3, #0]
 8000cf8:	785b      	ldrb	r3, [r3, #1]
 8000cfa:	2b03      	cmp	r3, #3
 8000cfc:	d101      	bne.n	8000d02 <dfuUpdateByRequest+0x1f2>
            dfuAppStatus.bState  = dfuERROR;
 8000cfe:	230a      	movs	r3, #10
 8000d00:	e771      	b.n	8000be6 <dfuUpdateByRequest+0xd6>
        } else if (pInformation->USBbRequest == DFU_GETSTATE) {
 8000d02:	2b05      	cmp	r3, #5
 8000d04:	d0fb      	beq.n	8000cfe <dfuUpdateByRequest+0x1ee>
        } else if (pInformation->USBbRequest == DFU_CLRSTATUS) {
 8000d06:	2b04      	cmp	r3, #4
 8000d08:	d1a3      	bne.n	8000c52 <dfuUpdateByRequest+0x142>
            dfuAppStatus.bState  = dfuIDLE;
 8000d0a:	2302      	movs	r3, #2
 8000d0c:	7123      	strb	r3, [r4, #4]
            dfuAppStatus.bStatus = OK;
 8000d0e:	2300      	movs	r3, #0
 8000d10:	e758      	b.n	8000bc4 <dfuUpdateByRequest+0xb4>
 8000d12:	bf00      	nop
 8000d14:	200002df 	ldrdcs	r0, [r0], -pc	; <UNPREDICTABLE>
 8000d18:	200002d9 	ldrdcs	r0, [r0], -r9
 8000d1c:	20000b10 	andcs	r0, r0, r0, lsl fp
 8000d20:	20000ae4 	andcs	r0, r0, r4, ror #21
 8000d24:	08005000 	stmdaeq	r0, {ip, lr}
 8000d28:	200002c0 	andcs	r0, r0, r0, asr #5
 8000d2c:	20000ae8 	andcs	r0, r0, r8, ror #21
 8000d30:	08002000 	stmdaeq	r0, {sp}
 8000d34:	20000ae2 	andcs	r0, r0, r2, ror #21
 8000d38:	20000ae0 	andcs	r0, r0, r0, ror #21
 8000d3c:	200002c4 	andcs	r0, r0, r4, asr #5
 8000d40:	200002d8 	ldrdcs	r0, [r0], -r8

08000d44 <dfuUploadStarted>:
void dfuSetState(u8 newState) {
    dfuAppStatus.bState = newState;
}

bool dfuUploadStarted() {
    return dfuBusy;
 8000d44:	4b01      	ldr	r3, [pc, #4]	; (8000d4c <dfuUploadStarted+0x8>)
 8000d46:	7818      	ldrb	r0, [r3, #0]
}
 8000d48:	4770      	bx	lr
 8000d4a:	bf00      	nop
 8000d4c:	200002df 	ldrdcs	r0, [r0], -pc	; <UNPREDICTABLE>

08000d50 <dfuFinishUpload>:

void dfuFinishUpload() {
    while (1)
    {
        __asm("nop");
 8000d50:	bf00      	nop
    while (1)
 8000d52:	e7fd      	b.n	8000d50 <dfuFinishUpload>

08000d54 <SetEPTxStatus>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxStatus(u8 bEpNum, u16 wState)
{
  _SetEPTxStatus(bEpNum, wState);
 8000d54:	0080      	lsls	r0, r0, #2
 8000d56:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8000d5a:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8000d5e:	6803      	ldr	r3, [r0, #0]
 8000d60:	06ca      	lsls	r2, r1, #27
 8000d62:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8000d66:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000d6a:	b29b      	uxth	r3, r3
 8000d6c:	bf48      	it	mi
 8000d6e:	f083 0310 	eormi.w	r3, r3, #16
 8000d72:	068a      	lsls	r2, r1, #26
 8000d74:	bf48      	it	mi
 8000d76:	f083 0320 	eormi.w	r3, r3, #32
 8000d7a:	6003      	str	r3, [r0, #0]
}
 8000d7c:	4770      	bx	lr

08000d7e <SetEPRxValid>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxValid(u8 bEpNum)
{
  _SetEPRxStatus(bEpNum, EP_RX_VALID);
 8000d7e:	0080      	lsls	r0, r0, #2
 8000d80:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8000d84:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8000d88:	6803      	ldr	r3, [r0, #0]
 8000d8a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000d8e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000d92:	b29b      	uxth	r3, r3
 8000d94:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8000d98:	6003      	str	r3, [r0, #0]
}
 8000d9a:	4770      	bx	lr

08000d9c <ClearEP_KIND>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void ClearEP_KIND(u8 bEpNum)
{
  _ClearEP_KIND(bEpNum);
 8000d9c:	0080      	lsls	r0, r0, #2
 8000d9e:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8000da2:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8000da6:	6803      	ldr	r3, [r0, #0]
 8000da8:	f423 43e2 	bic.w	r3, r3, #28928	; 0x7100
 8000dac:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000db0:	041b      	lsls	r3, r3, #16
 8000db2:	0c1b      	lsrs	r3, r3, #16
 8000db4:	6003      	str	r3, [r0, #0]
}
 8000db6:	4770      	bx	lr

08000db8 <Clear_Status_Out>:
 8000db8:	f7ff bff0 	b.w	8000d9c <ClearEP_KIND>

08000dbc <ClearDTOG_RX>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void ClearDTOG_RX(u8 bEpNum)
{
  _ClearDTOG_RX(bEpNum);
 8000dbc:	0080      	lsls	r0, r0, #2
 8000dbe:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8000dc2:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8000dc6:	6803      	ldr	r3, [r0, #0]
 8000dc8:	045b      	lsls	r3, r3, #17
 8000dca:	d509      	bpl.n	8000de0 <ClearDTOG_RX+0x24>
 8000dcc:	6803      	ldr	r3, [r0, #0]
 8000dce:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8000dd2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000dd6:	041b      	lsls	r3, r3, #16
 8000dd8:	0c1b      	lsrs	r3, r3, #16
 8000dda:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000dde:	6003      	str	r3, [r0, #0]
}
 8000de0:	4770      	bx	lr

08000de2 <ClearDTOG_TX>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void ClearDTOG_TX(u8 bEpNum)
{
  _ClearDTOG_TX(bEpNum);
 8000de2:	0080      	lsls	r0, r0, #2
 8000de4:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8000de8:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8000dec:	6803      	ldr	r3, [r0, #0]
 8000dee:	065b      	lsls	r3, r3, #25
 8000df0:	d509      	bpl.n	8000e06 <ClearDTOG_TX+0x24>
 8000df2:	6803      	ldr	r3, [r0, #0]
 8000df4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8000df8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000dfc:	041b      	lsls	r3, r3, #16
 8000dfe:	0c1b      	lsrs	r3, r3, #16
 8000e00:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e04:	6003      	str	r3, [r0, #0]
}
 8000e06:	4770      	bx	lr

08000e08 <GetEPTxAddr>:
* Output         : None.
* Return         : Rx buffer address.
*******************************************************************************/
u16 GetEPTxAddr(u8 bEpNum)
{
  return(_GetEPTxAddr(bEpNum));
 8000e08:	4b06      	ldr	r3, [pc, #24]	; (8000e24 <GetEPTxAddr+0x1c>)
 8000e0a:	f8d3 3c50 	ldr.w	r3, [r3, #3152]	; 0xc50
 8000e0e:	b29b      	uxth	r3, r3
 8000e10:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8000e14:	f100 5000 	add.w	r0, r0, #536870912	; 0x20000000
 8000e18:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 8000e1c:	0040      	lsls	r0, r0, #1
 8000e1e:	6800      	ldr	r0, [r0, #0]
}
 8000e20:	b280      	uxth	r0, r0
 8000e22:	4770      	bx	lr
 8000e24:	40005000 	andmi	r5, r0, r0

08000e28 <GetEPRxAddr>:
* Output         : None.
* Return         : Rx buffer address.
*******************************************************************************/
u16 GetEPRxAddr(u8 bEpNum)
{
  return(_GetEPRxAddr(bEpNum));
 8000e28:	4b05      	ldr	r3, [pc, #20]	; (8000e40 <GetEPRxAddr+0x18>)
 8000e2a:	f8d3 3c50 	ldr.w	r3, [r3, #3152]	; 0xc50
 8000e2e:	b29b      	uxth	r3, r3
 8000e30:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8000e34:	4b03      	ldr	r3, [pc, #12]	; (8000e44 <GetEPRxAddr+0x1c>)
 8000e36:	4403      	add	r3, r0
 8000e38:	005b      	lsls	r3, r3, #1
 8000e3a:	6818      	ldr	r0, [r3, #0]
}
 8000e3c:	b280      	uxth	r0, r0
 8000e3e:	4770      	bx	lr
 8000e40:	40005000 	andmi	r5, r0, r0
 8000e44:	20003004 	andcs	r3, r0, r4

08000e48 <SetEPTxCount>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxCount(u8 bEpNum, u16 wCount)
{
  _SetEPTxCount(bEpNum, wCount);
 8000e48:	4b05      	ldr	r3, [pc, #20]	; (8000e60 <SetEPTxCount+0x18>)
 8000e4a:	f8d3 3c50 	ldr.w	r3, [r3, #3152]	; 0xc50
 8000e4e:	b29b      	uxth	r3, r3
 8000e50:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8000e54:	4b03      	ldr	r3, [pc, #12]	; (8000e64 <SetEPTxCount+0x1c>)
 8000e56:	4403      	add	r3, r0
 8000e58:	005b      	lsls	r3, r3, #1
 8000e5a:	6019      	str	r1, [r3, #0]
}
 8000e5c:	4770      	bx	lr
 8000e5e:	bf00      	nop
 8000e60:	40005000 	andmi	r5, r0, r0
 8000e64:	20003002 	andcs	r3, r0, r2

08000e68 <SetEPRxCount>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxCount(u8 bEpNum, u16 wCount)
{
  _SetEPRxCount(bEpNum, wCount);
 8000e68:	4b0e      	ldr	r3, [pc, #56]	; (8000ea4 <SetEPRxCount+0x3c>)
 8000e6a:	4a0f      	ldr	r2, [pc, #60]	; (8000ea8 <SetEPRxCount+0x40>)
 8000e6c:	f8d3 3c50 	ldr.w	r3, [r3, #3152]	; 0xc50
 8000e70:	293e      	cmp	r1, #62	; 0x3e
 8000e72:	b29b      	uxth	r3, r3
 8000e74:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8000e78:	4402      	add	r2, r0
 8000e7a:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8000e7e:	d90a      	bls.n	8000e96 <SetEPRxCount+0x2e>
 8000e80:	094b      	lsrs	r3, r1, #5
 8000e82:	06c8      	lsls	r0, r1, #27
 8000e84:	bf04      	itt	eq
 8000e86:	f103 33ff 	addeq.w	r3, r3, #4294967295
 8000e8a:	b29b      	uxtheq	r3, r3
 8000e8c:	029b      	lsls	r3, r3, #10
 8000e8e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000e92:	6013      	str	r3, [r2, #0]
}
 8000e94:	4770      	bx	lr
  _SetEPRxCount(bEpNum, wCount);
 8000e96:	084b      	lsrs	r3, r1, #1
 8000e98:	07c9      	lsls	r1, r1, #31
 8000e9a:	bf48      	it	mi
 8000e9c:	3301      	addmi	r3, #1
 8000e9e:	029b      	lsls	r3, r3, #10
 8000ea0:	e7f7      	b.n	8000e92 <SetEPRxCount+0x2a>
 8000ea2:	bf00      	nop
 8000ea4:	40005000 	andmi	r5, r0, r0
 8000ea8:	20003006 	andcs	r3, r0, r6

08000eac <CTR_LP>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_LP(void)
{
 8000eac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  u32 wEPVal = 0;
  /* stay in loop while pending ints */
  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 8000eb0:	4c5b      	ldr	r4, [pc, #364]	; (8001020 <CTR_LP+0x174>)
  {
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
 8000eb2:	f8df 8170 	ldr.w	r8, [pc, #368]	; 8001024 <CTR_LP+0x178>
  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 8000eb6:	f8d4 3c44 	ldr.w	r3, [r4, #3140]	; 0xc44
 8000eba:	4a5b      	ldr	r2, [pc, #364]	; (8001028 <CTR_LP+0x17c>)
 8000ebc:	b299      	uxth	r1, r3
 8000ebe:	041b      	lsls	r3, r3, #16
 8000ec0:	8011      	strh	r1, [r2, #0]
 8000ec2:	d55d      	bpl.n	8000f80 <CTR_LP+0xd4>
    _SetISTR((u16)CLR_CTR); /* clear CTR flag */
 8000ec4:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8000ec8:	f8c4 3c44 	str.w	r3, [r4, #3140]	; 0xc44
    EPindex = (u8)(wIstr & ISTR_EP_ID);
 8000ecc:	8813      	ldrh	r3, [r2, #0]
 8000ece:	f003 030f 	and.w	r3, r3, #15
 8000ed2:	f888 3000 	strb.w	r3, [r8]
    if (EPindex == 0)
 8000ed6:	2b00      	cmp	r3, #0
 8000ed8:	d173      	bne.n	8000fc2 <CTR_LP+0x116>
      /* calling related service routine */
      /* (Setup0_Process, In0_Process, Out0_Process) */

      /* save RX & TX status */
      /* and set both to NAK */
      SaveRState = _GetEPRxStatus(ENDP0);
 8000eda:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	; 0xc00
 8000ede:	4e53      	ldr	r6, [pc, #332]	; (800102c <CTR_LP+0x180>)
 8000ee0:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8000ee4:	8033      	strh	r3, [r6, #0]
      SaveTState = _GetEPTxStatus(ENDP0);
 8000ee6:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	; 0xc00
 8000eea:	4d51      	ldr	r5, [pc, #324]	; (8001030 <CTR_LP+0x184>)
 8000eec:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000ef0:	802b      	strh	r3, [r5, #0]
      _SetEPRxStatus(ENDP0, EP_RX_NAK);
 8000ef2:	4f50      	ldr	r7, [pc, #320]	; (8001034 <CTR_LP+0x188>)
 8000ef4:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	; 0xc00
 8000ef8:	403b      	ands	r3, r7
 8000efa:	b29b      	uxth	r3, r3
 8000efc:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8000f00:	f8c4 3c00 	str.w	r3, [r4, #3072]	; 0xc00
      _SetEPTxStatus(ENDP0, EP_TX_NAK);
 8000f04:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	; 0xc00
 8000f08:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8000f0c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000f10:	b29b      	uxth	r3, r3
 8000f12:	f083 0320 	eor.w	r3, r3, #32
 8000f16:	f8c4 3c00 	str.w	r3, [r4, #3072]	; 0xc00


      /* DIR bit = origin of the interrupt */

      if ((wIstr & ISTR_DIR) == 0)
 8000f1a:	8813      	ldrh	r3, [r2, #0]
 8000f1c:	f013 0f10 	tst.w	r3, #16

        /* DIR = 0      => IN  int */
        /* DIR = 0 implies that (EP_CTR_TX = 1) always  */


        _ClearEP_CTR_TX(ENDP0);
 8000f20:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	; 0xc00
      if ((wIstr & ISTR_DIR) == 0)
 8000f24:	d12e      	bne.n	8000f84 <CTR_LP+0xd8>
        /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */

        wEPVal = _GetENDPOINT(ENDP0);
        if ((wEPVal & EP_CTR_TX) != 0)
        {
          _ClearEP_CTR_TX(ENDP0);
 8000f26:	f423 43e1 	bic.w	r3, r3, #28800	; 0x7080
 8000f2a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000f2e:	041b      	lsls	r3, r3, #16
 8000f30:	0c1b      	lsrs	r3, r3, #16
 8000f32:	f8c4 3c00 	str.w	r3, [r4, #3072]	; 0xc00
          In0_Process();
 8000f36:	f000 fc69 	bl	800180c <In0_Process>
        else if ((wEPVal & EP_CTR_RX) != 0)
        {
          _ClearEP_CTR_RX(ENDP0);
          Out0_Process();
          /* before terminate set Tx & Rx status */
          _SetEPRxStatus(ENDP0, SaveRState);
 8000f3a:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	; 0xc00
 8000f3e:	8832      	ldrh	r2, [r6, #0]
 8000f40:	403b      	ands	r3, r7
 8000f42:	b29b      	uxth	r3, r3
 8000f44:	04d7      	lsls	r7, r2, #19
 8000f46:	bf48      	it	mi
 8000f48:	f483 5380 	eormi.w	r3, r3, #4096	; 0x1000
 8000f4c:	0496      	lsls	r6, r2, #18
 8000f4e:	4a34      	ldr	r2, [pc, #208]	; (8001020 <CTR_LP+0x174>)
 8000f50:	bf48      	it	mi
 8000f52:	f483 5300 	eormi.w	r3, r3, #8192	; 0x2000
 8000f56:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
          _SetEPTxStatus(ENDP0, SaveTState);
 8000f5a:	f8d2 3c00 	ldr.w	r3, [r2, #3072]	; 0xc00
 8000f5e:	882a      	ldrh	r2, [r5, #0]
 8000f60:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8000f64:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000f68:	b29b      	uxth	r3, r3
 8000f6a:	06d4      	lsls	r4, r2, #27
 8000f6c:	bf48      	it	mi
 8000f6e:	f083 0310 	eormi.w	r3, r3, #16
 8000f72:	0690      	lsls	r0, r2, #26
 8000f74:	4a2a      	ldr	r2, [pc, #168]	; (8001020 <CTR_LP+0x174>)
 8000f76:	bf48      	it	mi
 8000f78:	f083 0320 	eormi.w	r3, r3, #32
 8000f7c:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
      } /* if((wEPVal & EP_CTR_TX) != 0) */

    }/* if(EPindex == 0) else */

  }/* while(...) */
}
 8000f80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((wEPVal & EP_CTR_TX) != 0)
 8000f84:	0619      	lsls	r1, r3, #24
 8000f86:	d502      	bpl.n	8000f8e <CTR_LP+0xe2>
          _ClearEP_CTR_TX(ENDP0);
 8000f88:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	; 0xc00
 8000f8c:	e7cb      	b.n	8000f26 <CTR_LP+0x7a>
        else if ((wEPVal &EP_SETUP) != 0)
 8000f8e:	051a      	lsls	r2, r3, #20
 8000f90:	d50a      	bpl.n	8000fa8 <CTR_LP+0xfc>
          _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
 8000f92:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	; 0xc00
 8000f96:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000f9a:	051b      	lsls	r3, r3, #20
 8000f9c:	0d1b      	lsrs	r3, r3, #20
 8000f9e:	f8c4 3c00 	str.w	r3, [r4, #3072]	; 0xc00
          Setup0_Process();
 8000fa2:	f000 fa4b 	bl	800143c <Setup0_Process>
          _SetEPRxStatus(ENDP0, SaveRState);
 8000fa6:	e7c8      	b.n	8000f3a <CTR_LP+0x8e>
        else if ((wEPVal & EP_CTR_RX) != 0)
 8000fa8:	041b      	lsls	r3, r3, #16
 8000faa:	d584      	bpl.n	8000eb6 <CTR_LP+0xa>
          _ClearEP_CTR_RX(ENDP0);
 8000fac:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	; 0xc00
 8000fb0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000fb4:	051b      	lsls	r3, r3, #20
 8000fb6:	0d1b      	lsrs	r3, r3, #20
 8000fb8:	f8c4 3c00 	str.w	r3, [r4, #3072]	; 0xc00
          Out0_Process();
 8000fbc:	f000 fba6 	bl	800170c <Out0_Process>
 8000fc0:	e7bb      	b.n	8000f3a <CTR_LP+0x8e>
      wEPVal = _GetENDPOINT(EPindex);
 8000fc2:	009b      	lsls	r3, r3, #2
 8000fc4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000fc8:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8000fcc:	681d      	ldr	r5, [r3, #0]
      if ((wEPVal & EP_CTR_RX) != 0)
 8000fce:	0429      	lsls	r1, r5, #16
 8000fd0:	d50c      	bpl.n	8000fec <CTR_LP+0x140>
        _ClearEP_CTR_RX(EPindex);
 8000fd2:	681a      	ldr	r2, [r3, #0]
 8000fd4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8000fd8:	0512      	lsls	r2, r2, #20
 8000fda:	0d12      	lsrs	r2, r2, #20
 8000fdc:	601a      	str	r2, [r3, #0]
        (*pEpInt_OUT[EPindex-1])();
 8000fde:	f898 3000 	ldrb.w	r3, [r8]
 8000fe2:	4a15      	ldr	r2, [pc, #84]	; (8001038 <CTR_LP+0x18c>)
 8000fe4:	3b01      	subs	r3, #1
 8000fe6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000fea:	4798      	blx	r3
      if ((wEPVal & EP_CTR_TX) != 0)
 8000fec:	062a      	lsls	r2, r5, #24
 8000fee:	f57f af62 	bpl.w	8000eb6 <CTR_LP+0xa>
        _ClearEP_CTR_TX(EPindex);
 8000ff2:	f898 3000 	ldrb.w	r3, [r8]
 8000ff6:	009b      	lsls	r3, r3, #2
 8000ff8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000ffc:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8001000:	681a      	ldr	r2, [r3, #0]
 8001002:	f422 42e1 	bic.w	r2, r2, #28800	; 0x7080
 8001006:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800100a:	0412      	lsls	r2, r2, #16
 800100c:	0c12      	lsrs	r2, r2, #16
 800100e:	601a      	str	r2, [r3, #0]
        (*pEpInt_IN[EPindex-1])();
 8001010:	f898 3000 	ldrb.w	r3, [r8]
 8001014:	4a09      	ldr	r2, [pc, #36]	; (800103c <CTR_LP+0x190>)
 8001016:	3b01      	subs	r3, #1
 8001018:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800101c:	4798      	blx	r3
 800101e:	e74a      	b.n	8000eb6 <CTR_LP+0xa>
 8001020:	40005000 	andmi	r5, r0, r0
 8001024:	20000b0c 	andcs	r0, r0, ip, lsl #22
 8001028:	200002d2 	ldrdcs	r0, [r0], -r2
 800102c:	20000aea 	andcs	r0, r0, sl, ror #21
 8001030:	20000aec 	andcs	r0, r0, ip, ror #21
 8001034:	ffffbf8f 			; <UNDEFINED> instruction: 0xffffbf8f
 8001038:	20000078 	andcs	r0, r0, r8, ror r0
 800103c:	2000005c 	andcs	r0, r0, ip, asr r0

08001040 <USB_Init>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void USB_Init(void)
{
  pInformation = &Device_Info;
 8001040:	4b06      	ldr	r3, [pc, #24]	; (800105c <USB_Init+0x1c>)
 8001042:	4a07      	ldr	r2, [pc, #28]	; (8001060 <USB_Init+0x20>)
  pInformation->ControlState = 2;
  pProperty = &Device_Property;
  pUser_Standard_Requests = &User_Standard_Requests;
 8001044:	4907      	ldr	r1, [pc, #28]	; (8001064 <USB_Init+0x24>)
  pInformation = &Device_Info;
 8001046:	6013      	str	r3, [r2, #0]
  pInformation->ControlState = 2;
 8001048:	2202      	movs	r2, #2
 800104a:	721a      	strb	r2, [r3, #8]
  pProperty = &Device_Property;
 800104c:	4b06      	ldr	r3, [pc, #24]	; (8001068 <USB_Init+0x28>)
 800104e:	4a07      	ldr	r2, [pc, #28]	; (800106c <USB_Init+0x2c>)
 8001050:	6013      	str	r3, [r2, #0]
  pUser_Standard_Requests = &User_Standard_Requests;
 8001052:	4a07      	ldr	r2, [pc, #28]	; (8001070 <USB_Init+0x30>)
  /* Initialize devices one by one */

  pProperty->Init();
 8001054:	681b      	ldr	r3, [r3, #0]
  pUser_Standard_Requests = &User_Standard_Requests;
 8001056:	6011      	str	r1, [r2, #0]
  pProperty->Init();
 8001058:	4718      	bx	r3
 800105a:	bf00      	nop
 800105c:	20000af0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8001060:	20000b10 	andcs	r0, r0, r0, lsl fp
 8001064:	20000038 	andcs	r0, r0, r8, lsr r0
 8001068:	20000000 	andcs	r0, r0, r0
 800106c:	20000b14 	andcs	r0, r0, r4, lsl fp
 8001070:	20000b18 	andcs	r0, r0, r8, lsl fp

08001074 <Standard_GetConfiguration>:
* Output         : None.
* Return         : Return 1 , if the request is invalid when "Length" is 0.
*                  Return "Buffer" if the "Length" is not 0.
*******************************************************************************/
u8 *Standard_GetConfiguration(u16 Length)
{
 8001074:	b510      	push	{r4, lr}
 8001076:	4c06      	ldr	r4, [pc, #24]	; (8001090 <Standard_GetConfiguration+0x1c>)
  if (Length == 0)
 8001078:	b918      	cbnz	r0, 8001082 <Standard_GetConfiguration+0xe>
  {
    pInformation->Ctrl_Info.Usb_wLength =
 800107a:	2201      	movs	r2, #1
 800107c:	6823      	ldr	r3, [r4, #0]
 800107e:	821a      	strh	r2, [r3, #16]
      sizeof(pInformation->Current_Configuration);
    return 0;
  }
  pUser_Standard_Requests->User_GetConfiguration();
  return (u8 *)&pInformation->Current_Configuration;
}
 8001080:	bd10      	pop	{r4, pc}
  pUser_Standard_Requests->User_GetConfiguration();
 8001082:	4b04      	ldr	r3, [pc, #16]	; (8001094 <Standard_GetConfiguration+0x20>)
 8001084:	681b      	ldr	r3, [r3, #0]
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	4798      	blx	r3
  return (u8 *)&pInformation->Current_Configuration;
 800108a:	6820      	ldr	r0, [r4, #0]
 800108c:	300a      	adds	r0, #10
 800108e:	e7f7      	b.n	8001080 <Standard_GetConfiguration+0xc>
 8001090:	20000b10 	andcs	r0, r0, r0, lsl fp
 8001094:	20000b18 	andcs	r0, r0, r8, lsl fp

08001098 <Standard_GetInterface>:
* Output         : None.
* Return         : Return 0, if the request is invalid when "Length" is 0.
*                  Return "Buffer" if the "Length" is not 0.
*******************************************************************************/
u8 *Standard_GetInterface(u16 Length)
{
 8001098:	b510      	push	{r4, lr}
 800109a:	4c06      	ldr	r4, [pc, #24]	; (80010b4 <Standard_GetInterface+0x1c>)
  if (Length == 0)
 800109c:	b918      	cbnz	r0, 80010a6 <Standard_GetInterface+0xe>
  {
    pInformation->Ctrl_Info.Usb_wLength =
 800109e:	2201      	movs	r2, #1
 80010a0:	6823      	ldr	r3, [r4, #0]
 80010a2:	821a      	strh	r2, [r3, #16]
      sizeof(pInformation->Current_AlternateSetting);
    return 0;
  }
  pUser_Standard_Requests->User_GetInterface();
  return (u8 *)&pInformation->Current_AlternateSetting;
}
 80010a4:	bd10      	pop	{r4, pc}
  pUser_Standard_Requests->User_GetInterface();
 80010a6:	4b04      	ldr	r3, [pc, #16]	; (80010b8 <Standard_GetInterface+0x20>)
 80010a8:	681b      	ldr	r3, [r3, #0]
 80010aa:	689b      	ldr	r3, [r3, #8]
 80010ac:	4798      	blx	r3
  return (u8 *)&pInformation->Current_AlternateSetting;
 80010ae:	6820      	ldr	r0, [r4, #0]
 80010b0:	300c      	adds	r0, #12
 80010b2:	e7f7      	b.n	80010a4 <Standard_GetInterface+0xc>
 80010b4:	20000b10 	andcs	r0, r0, r0, lsl fp
 80010b8:	20000b18 	andcs	r0, r0, r8, lsl fp

080010bc <Standard_GetStatus>:
* Output         : None.
* Return         : Return 0, if the request is at end of data block,
*                  or is invalid when "Length" is 0.
*******************************************************************************/
u8 *Standard_GetStatus(u16 Length)
{
 80010bc:	b508      	push	{r3, lr}
  if (Length == 0)
  {
    pInformation->Ctrl_Info.Usb_wLength = 2;
 80010be:	4b1f      	ldr	r3, [pc, #124]	; (800113c <Standard_GetStatus+0x80>)
 80010c0:	6819      	ldr	r1, [r3, #0]
  if (Length == 0)
 80010c2:	4603      	mov	r3, r0
 80010c4:	2000      	movs	r0, #0
 80010c6:	b91b      	cbnz	r3, 80010d0 <Standard_GetStatus+0x14>
    pInformation->Ctrl_Info.Usb_wLength = 2;
 80010c8:	2202      	movs	r2, #2
    return 0;
 80010ca:	4618      	mov	r0, r3
    pInformation->Ctrl_Info.Usb_wLength = 2;
 80010cc:	820a      	strh	r2, [r1, #16]
  {
    return NULL;
  }
  pUser_Standard_Requests->User_GetStatus();
  return (u8 *)&StatusInfo;
}
 80010ce:	bd08      	pop	{r3, pc}
  StatusInfo.w = 0;
 80010d0:	4a1b      	ldr	r2, [pc, #108]	; (8001140 <Standard_GetStatus+0x84>)
 80010d2:	8010      	strh	r0, [r2, #0]
  if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 80010d4:	780b      	ldrb	r3, [r1, #0]
 80010d6:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
 80010da:	d112      	bne.n	8001102 <Standard_GetStatus+0x46>
    u8 Feature = pInformation->Current_Feature;
 80010dc:	7a49      	ldrb	r1, [r1, #9]
    if (ValBit(Feature, 5))
 80010de:	068b      	lsls	r3, r1, #26
      SetBit(StatusInfo0, 1);
 80010e0:	bf44      	itt	mi
 80010e2:	2302      	movmi	r3, #2
 80010e4:	7013      	strbmi	r3, [r2, #0]
      ClrBit(StatusInfo0, 0);
 80010e6:	7813      	ldrb	r3, [r2, #0]
    if (ValBit(Feature, 6))
 80010e8:	0648      	lsls	r0, r1, #25
      ClrBit(StatusInfo0, 0);
 80010ea:	bf4c      	ite	mi
 80010ec:	f023 0301 	bicmi.w	r3, r3, #1
      SetBit(StatusInfo0, 0);
 80010f0:	f043 0301 	orrpl.w	r3, r3, #1
        SetBit(StatusInfo0, 0); /* IN Endpoint stalled */
 80010f4:	7013      	strb	r3, [r2, #0]
  pUser_Standard_Requests->User_GetStatus();
 80010f6:	4b13      	ldr	r3, [pc, #76]	; (8001144 <Standard_GetStatus+0x88>)
 80010f8:	681b      	ldr	r3, [r3, #0]
 80010fa:	691b      	ldr	r3, [r3, #16]
 80010fc:	4798      	blx	r3
  return (u8 *)&StatusInfo;
 80010fe:	4810      	ldr	r0, [pc, #64]	; (8001140 <Standard_GetStatus+0x84>)
 8001100:	e7e5      	b.n	80010ce <Standard_GetStatus+0x12>
  else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 8001102:	2b01      	cmp	r3, #1
 8001104:	d017      	beq.n	8001136 <Standard_GetStatus+0x7a>
  else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 8001106:	2b02      	cmp	r3, #2
 8001108:	d1e1      	bne.n	80010ce <Standard_GetStatus+0x12>
    u8 wIndex0 = pInformation->USBwIndex0;
 800110a:	7909      	ldrb	r1, [r1, #4]
      if (_GetTxStallStatus(Related_Endpoint))
 800110c:	f001 030f 	and.w	r3, r1, #15
 8001110:	009b      	lsls	r3, r3, #2
 8001112:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8001116:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
    if (ValBit(wIndex0, 7))
 800111a:	0609      	lsls	r1, r1, #24
      if (_GetTxStallStatus(Related_Endpoint))
 800111c:	681b      	ldr	r3, [r3, #0]
    if (ValBit(wIndex0, 7))
 800111e:	d505      	bpl.n	800112c <Standard_GetStatus+0x70>
      if (_GetTxStallStatus(Related_Endpoint))
 8001120:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8001124:	2b10      	cmp	r3, #16
 8001126:	d1e6      	bne.n	80010f6 <Standard_GetStatus+0x3a>
        SetBit(StatusInfo0, 0); /* IN Endpoint stalled */
 8001128:	2301      	movs	r3, #1
 800112a:	e7e3      	b.n	80010f4 <Standard_GetStatus+0x38>
      if (_GetRxStallStatus(Related_Endpoint))
 800112c:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8001130:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001134:	e7f7      	b.n	8001126 <Standard_GetStatus+0x6a>
    return (u8 *)&StatusInfo;
 8001136:	4610      	mov	r0, r2
 8001138:	e7c9      	b.n	80010ce <Standard_GetStatus+0x12>
 800113a:	bf00      	nop
 800113c:	20000b10 	andcs	r0, r0, r0, lsl fp
 8001140:	20000b20 	andcs	r0, r0, r0, lsr #22
 8001144:	20000b18 	andcs	r0, r0, r8, lsl fp

08001148 <DataStageIn>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void DataStageIn(void)
{
 8001148:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  ENDPOINT_INFO *pEPinfo = &pInformation->Ctrl_Info;
 800114c:	f8df 808c 	ldr.w	r8, [pc, #140]	; 80011dc <DataStageIn+0x94>
 8001150:	4f23      	ldr	r7, [pc, #140]	; (80011e0 <DataStageIn+0x98>)
 8001152:	f8d8 5000 	ldr.w	r5, [r8]
  u32 save_wLength = pEPinfo->Usb_wLength;
 8001156:	8a2c      	ldrh	r4, [r5, #16]
  u32 ControlState = pInformation->ControlState;

  u8 *DataBuffer;
  u32 Length;

  if ((save_wLength == 0) && (ControlState == LAST_IN_DATA))
 8001158:	b9d4      	cbnz	r4, 8001190 <DataStageIn+0x48>
 800115a:	7a2e      	ldrb	r6, [r5, #8]
 800115c:	2e04      	cmp	r6, #4
 800115e:	d117      	bne.n	8001190 <DataStageIn+0x48>
  {
    if(Data_Mul_MaxPacketSize == TRUE)
 8001160:	4920      	ldr	r1, [pc, #128]	; (80011e4 <DataStageIn+0x9c>)
 8001162:	780b      	ldrb	r3, [r1, #0]
 8001164:	2b01      	cmp	r3, #1
 8001166:	d10f      	bne.n	8001188 <DataStageIn+0x40>
    {
      /* No more data to send and empty packet */
      Send0LengthData();
 8001168:	4b1f      	ldr	r3, [pc, #124]	; (80011e8 <DataStageIn+0xa0>)
 800116a:	f8d3 2c50 	ldr.w	r2, [r3, #3152]	; 0xc50
 800116e:	4b1f      	ldr	r3, [pc, #124]	; (80011ec <DataStageIn+0xa4>)
 8001170:	b292      	uxth	r2, r2
 8001172:	4413      	add	r3, r2
 8001174:	005b      	lsls	r3, r3, #1
 8001176:	601c      	str	r4, [r3, #0]
 8001178:	2330      	movs	r3, #48	; 0x30
      ControlState = LAST_IN_DATA;
      Data_Mul_MaxPacketSize = FALSE;
 800117a:	700c      	strb	r4, [r1, #0]
      Send0LengthData();
 800117c:	803b      	strh	r3, [r7, #0]
  vSetEPTxStatus(EP_TX_VALID);

  USB_StatusOut();/* Expect the host to abort the data IN stage */

Expect_Status_Out:
  pInformation->ControlState = ControlState;
 800117e:	f8d8 3000 	ldr.w	r3, [r8]
 8001182:	721e      	strb	r6, [r3, #8]
}
 8001184:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      vSetEPTxStatus(EP_TX_STALL);
 8001188:	2310      	movs	r3, #16
      ControlState = WAIT_STATUS_OUT;
 800118a:	2607      	movs	r6, #7
      vSetEPTxStatus(EP_TX_STALL);
 800118c:	803b      	strh	r3, [r7, #0]
 800118e:	e7f6      	b.n	800117e <DataStageIn+0x36>
  Length = pEPinfo->PacketSize;
 8001190:	8aaa      	ldrh	r2, [r5, #20]
  DataBuffer = (*pEPinfo->CopyData)(Length);
 8001192:	69ab      	ldr	r3, [r5, #24]
  ControlState = (save_wLength <= Length) ? LAST_IN_DATA : IN_DATA;
 8001194:	4294      	cmp	r4, r2
 8001196:	bf94      	ite	ls
 8001198:	2604      	movls	r6, #4
 800119a:	2602      	movhi	r6, #2
  DataBuffer = (*pEPinfo->CopyData)(Length);
 800119c:	4294      	cmp	r4, r2
 800119e:	bf28      	it	cs
 80011a0:	4614      	movcs	r4, r2
 80011a2:	4620      	mov	r0, r4
 80011a4:	4798      	blx	r3
 80011a6:	4681      	mov	r9, r0
  UserToPMABufferCopy(DataBuffer, GetEPTxAddr(ENDP0), Length);
 80011a8:	2000      	movs	r0, #0
 80011aa:	f7ff fe2d 	bl	8000e08 <GetEPTxAddr>
 80011ae:	4622      	mov	r2, r4
 80011b0:	4601      	mov	r1, r0
 80011b2:	4648      	mov	r0, r9
 80011b4:	f000 fb58 	bl	8001868 <UserToPMABufferCopy>
  SetEPTxCount(ENDP0, Length);
 80011b8:	4621      	mov	r1, r4
 80011ba:	2000      	movs	r0, #0
 80011bc:	f7ff fe44 	bl	8000e48 <SetEPTxCount>
  pEPinfo->Usb_wLength -= Length;
 80011c0:	8a2b      	ldrh	r3, [r5, #16]
  pEPinfo->Usb_wOffset += Length;
 80011c2:	8a6a      	ldrh	r2, [r5, #18]
  pEPinfo->Usb_wLength -= Length;
 80011c4:	1b1b      	subs	r3, r3, r4
 80011c6:	822b      	strh	r3, [r5, #16]
  vSetEPTxStatus(EP_TX_VALID);
 80011c8:	2330      	movs	r3, #48	; 0x30
  pEPinfo->Usb_wOffset += Length;
 80011ca:	4414      	add	r4, r2
  USB_StatusOut();/* Expect the host to abort the data IN stage */
 80011cc:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  vSetEPTxStatus(EP_TX_VALID);
 80011d0:	803b      	strh	r3, [r7, #0]
  USB_StatusOut();/* Expect the host to abort the data IN stage */
 80011d2:	4b07      	ldr	r3, [pc, #28]	; (80011f0 <DataStageIn+0xa8>)
  pEPinfo->Usb_wOffset += Length;
 80011d4:	826c      	strh	r4, [r5, #18]
  USB_StatusOut();/* Expect the host to abort the data IN stage */
 80011d6:	801a      	strh	r2, [r3, #0]
 80011d8:	e7d1      	b.n	800117e <DataStageIn+0x36>
 80011da:	bf00      	nop
 80011dc:	20000b10 	andcs	r0, r0, r0, lsl fp
 80011e0:	20000aec 	andcs	r0, r0, ip, ror #21
 80011e4:	20000b1e 	andcs	r0, r0, lr, lsl fp
 80011e8:	40005000 	andmi	r5, r0, r0
 80011ec:	20003002 	andcs	r3, r0, r2
 80011f0:	20000aea 	andcs	r0, r0, sl, ror #21

080011f4 <Standard_SetConfiguration>:
{
 80011f4:	b510      	push	{r4, lr}
  if ((pInformation->USBwValue0 <=
 80011f6:	4b0a      	ldr	r3, [pc, #40]	; (8001220 <Standard_SetConfiguration+0x2c>)
      Device_Table.Total_Configuration) && (pInformation->USBwValue1 == 0)
 80011f8:	490a      	ldr	r1, [pc, #40]	; (8001224 <Standard_SetConfiguration+0x30>)
  if ((pInformation->USBwValue0 <=
 80011fa:	681b      	ldr	r3, [r3, #0]
 80011fc:	7849      	ldrb	r1, [r1, #1]
 80011fe:	789a      	ldrb	r2, [r3, #2]
 8001200:	4291      	cmp	r1, r2
 8001202:	d30a      	bcc.n	800121a <Standard_SetConfiguration+0x26>
      Device_Table.Total_Configuration) && (pInformation->USBwValue1 == 0)
 8001204:	78dc      	ldrb	r4, [r3, #3]
 8001206:	b944      	cbnz	r4, 800121a <Standard_SetConfiguration+0x26>
      && (pInformation->USBwIndex == 0)) /*call Back usb spec 2.0*/
 8001208:	8899      	ldrh	r1, [r3, #4]
 800120a:	b931      	cbnz	r1, 800121a <Standard_SetConfiguration+0x26>
    pInformation->Current_Configuration = pInformation->USBwValue0;
 800120c:	729a      	strb	r2, [r3, #10]
    pUser_Standard_Requests->User_SetConfiguration();
 800120e:	4b06      	ldr	r3, [pc, #24]	; (8001228 <Standard_SetConfiguration+0x34>)
 8001210:	681b      	ldr	r3, [r3, #0]
 8001212:	685b      	ldr	r3, [r3, #4]
 8001214:	4798      	blx	r3
}
 8001216:	4620      	mov	r0, r4
 8001218:	bd10      	pop	{r4, pc}
    return USB_UNSUPPORT;
 800121a:	2402      	movs	r4, #2
 800121c:	e7fb      	b.n	8001216 <Standard_SetConfiguration+0x22>
 800121e:	bf00      	nop
 8001220:	20000b10 	andcs	r0, r0, r0, lsl fp
 8001224:	20000034 	andcs	r0, r0, r4, lsr r0
 8001228:	20000b18 	andcs	r0, r0, r8, lsl fp

0800122c <Standard_SetInterface>:
{
 800122c:	b538      	push	{r3, r4, r5, lr}
  Re = (*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, pInformation->USBwValue0);
 800122e:	4a0e      	ldr	r2, [pc, #56]	; (8001268 <Standard_SetInterface+0x3c>)
 8001230:	4d0e      	ldr	r5, [pc, #56]	; (800126c <Standard_SetInterface+0x40>)
 8001232:	6812      	ldr	r2, [r2, #0]
 8001234:	682b      	ldr	r3, [r5, #0]
 8001236:	6992      	ldr	r2, [r2, #24]
 8001238:	7899      	ldrb	r1, [r3, #2]
 800123a:	7918      	ldrb	r0, [r3, #4]
 800123c:	4790      	blx	r2
  if (pInformation->Current_Configuration != 0)
 800123e:	682b      	ldr	r3, [r5, #0]
 8001240:	7a9a      	ldrb	r2, [r3, #10]
 8001242:	b17a      	cbz	r2, 8001264 <Standard_SetInterface+0x38>
    if ((Re != USB_SUCCESS) || (pInformation->USBwIndex1 != 0)
 8001244:	b970      	cbnz	r0, 8001264 <Standard_SetInterface+0x38>
 8001246:	795a      	ldrb	r2, [r3, #5]
 8001248:	b962      	cbnz	r2, 8001264 <Standard_SetInterface+0x38>
        || (pInformation->USBwValue1 != 0))
 800124a:	78dc      	ldrb	r4, [r3, #3]
 800124c:	b954      	cbnz	r4, 8001264 <Standard_SetInterface+0x38>
      pUser_Standard_Requests->User_SetInterface();
 800124e:	4b08      	ldr	r3, [pc, #32]	; (8001270 <Standard_SetInterface+0x44>)
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	68db      	ldr	r3, [r3, #12]
 8001254:	4798      	blx	r3
      pInformation->Current_Interface = pInformation->USBwIndex0;
 8001256:	682b      	ldr	r3, [r5, #0]
 8001258:	791a      	ldrb	r2, [r3, #4]
 800125a:	72da      	strb	r2, [r3, #11]
      pInformation->Current_AlternateSetting = pInformation->USBwValue0;
 800125c:	789a      	ldrb	r2, [r3, #2]
 800125e:	731a      	strb	r2, [r3, #12]
}
 8001260:	4620      	mov	r0, r4
 8001262:	bd38      	pop	{r3, r4, r5, pc}
  return USB_UNSUPPORT;
 8001264:	2402      	movs	r4, #2
 8001266:	e7fb      	b.n	8001260 <Standard_SetInterface+0x34>
 8001268:	20000b14 	andcs	r0, r0, r4, lsl fp
 800126c:	20000b10 	andcs	r0, r0, r0, lsl fp
 8001270:	20000b18 	andcs	r0, r0, r8, lsl fp

08001274 <Standard_ClearFeature>:
{
 8001274:	b570      	push	{r4, r5, r6, lr}
  u32     Type_Rec = Type_Recipient;
 8001276:	4b2d      	ldr	r3, [pc, #180]	; (800132c <Standard_ClearFeature+0xb8>)
 8001278:	681d      	ldr	r5, [r3, #0]
 800127a:	782b      	ldrb	r3, [r5, #0]
  if (Type_Rec == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 800127c:	f013 037f 	ands.w	r3, r3, #127	; 0x7f
 8001280:	d105      	bne.n	800128e <Standard_ClearFeature+0x1a>
    ClrBit(pInformation->Current_Feature, 5);
 8001282:	7a6a      	ldrb	r2, [r5, #9]
 8001284:	f022 0220 	bic.w	r2, r2, #32
 8001288:	726a      	strb	r2, [r5, #9]
}
 800128a:	4618      	mov	r0, r3
 800128c:	bd70      	pop	{r4, r5, r6, pc}
  else if (Type_Rec == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 800128e:	2b02      	cmp	r3, #2
 8001290:	d149      	bne.n	8001326 <Standard_ClearFeature+0xb2>
    if ((pInformation->USBwValue != ENDPOINT_STALL)
 8001292:	886a      	ldrh	r2, [r5, #2]
 8001294:	2a00      	cmp	r2, #0
 8001296:	d1f8      	bne.n	800128a <Standard_ClearFeature+0x16>
        || (pInformation->USBwIndex1 != 0))
 8001298:	796a      	ldrb	r2, [r5, #5]
 800129a:	2a00      	cmp	r2, #0
 800129c:	d1f5      	bne.n	800128a <Standard_ClearFeature+0x16>
    wIndex0 = pInformation->USBwIndex0;
 800129e:	7929      	ldrb	r1, [r5, #4]
    if ((rEP >= pDev->Total_Endpoint) || (Status == 0)
 80012a0:	4e23      	ldr	r6, [pc, #140]	; (8001330 <Standard_ClearFeature+0xbc>)
    rEP = wIndex0 & ~0x80;
 80012a2:	f021 0080 	bic.w	r0, r1, #128	; 0x80
      Status = _GetEPTxStatus(Related_Endpoint);
 80012a6:	0084      	lsls	r4, r0, #2
 80012a8:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 80012ac:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
 80012b0:	6822      	ldr	r2, [r4, #0]
    if ((rEP >= pDev->Total_Endpoint) || (Status == 0)
 80012b2:	7836      	ldrb	r6, [r6, #0]
    if (ValBit(pInformation->USBwIndex0, 7))
 80012b4:	b249      	sxtb	r1, r1
 80012b6:	2900      	cmp	r1, #0
      Status = _GetEPTxStatus(Related_Endpoint);
 80012b8:	bfb4      	ite	lt
 80012ba:	f002 0230 	andlt.w	r2, r2, #48	; 0x30
      Status = _GetEPRxStatus(Related_Endpoint);
 80012be:	f402 5240 	andge.w	r2, r2, #12288	; 0x3000
    if ((rEP >= pDev->Total_Endpoint) || (Status == 0)
 80012c2:	4286      	cmp	r6, r0
 80012c4:	d9e1      	bls.n	800128a <Standard_ClearFeature+0x16>
 80012c6:	2a00      	cmp	r2, #0
 80012c8:	d0df      	beq.n	800128a <Standard_ClearFeature+0x16>
        || (pInformation->Current_Configuration == 0))
 80012ca:	7aaa      	ldrb	r2, [r5, #10]
 80012cc:	2a00      	cmp	r2, #0
 80012ce:	d0dc      	beq.n	800128a <Standard_ClearFeature+0x16>
    if (wIndex0 & 0x80)
 80012d0:	2900      	cmp	r1, #0
      if (_GetTxStallStatus(Related_Endpoint ))
 80012d2:	6823      	ldr	r3, [r4, #0]
    if (wIndex0 & 0x80)
 80012d4:	da11      	bge.n	80012fa <Standard_ClearFeature+0x86>
      if (_GetTxStallStatus(Related_Endpoint ))
 80012d6:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80012da:	2b10      	cmp	r3, #16
 80012dc:	d107      	bne.n	80012ee <Standard_ClearFeature+0x7a>
        ClearDTOG_TX(Related_Endpoint);
 80012de:	b2c4      	uxtb	r4, r0
 80012e0:	4620      	mov	r0, r4
 80012e2:	f7ff fd7e 	bl	8000de2 <ClearDTOG_TX>
        SetEPTxStatus(Related_Endpoint, EP_TX_VALID);
 80012e6:	2130      	movs	r1, #48	; 0x30
 80012e8:	4620      	mov	r0, r4
 80012ea:	f7ff fd33 	bl	8000d54 <SetEPTxStatus>
    pUser_Standard_Requests->User_ClearFeature();
 80012ee:	4b11      	ldr	r3, [pc, #68]	; (8001334 <Standard_ClearFeature+0xc0>)
 80012f0:	681b      	ldr	r3, [r3, #0]
 80012f2:	695b      	ldr	r3, [r3, #20]
 80012f4:	4798      	blx	r3
    return USB_SUCCESS;
 80012f6:	2300      	movs	r3, #0
 80012f8:	e7c7      	b.n	800128a <Standard_ClearFeature+0x16>
      if (_GetRxStallStatus(Related_Endpoint))
 80012fa:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 80012fe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001302:	d1f4      	bne.n	80012ee <Standard_ClearFeature+0x7a>
        if (Related_Endpoint == ENDP0)
 8001304:	4d0c      	ldr	r5, [pc, #48]	; (8001338 <Standard_ClearFeature+0xc4>)
 8001306:	b958      	cbnz	r0, 8001320 <Standard_ClearFeature+0xac>
          SetEPRxCount(Related_Endpoint, Device_Property.MaxPacketSize);
 8001308:	4b0c      	ldr	r3, [pc, #48]	; (800133c <Standard_ClearFeature+0xc8>)
 800130a:	f893 1030 	ldrb.w	r1, [r3, #48]	; 0x30
 800130e:	f7ff fdab 	bl	8000e68 <SetEPRxCount>
          _SetEPRxStatus(Related_Endpoint, EP_RX_VALID);
 8001312:	6823      	ldr	r3, [r4, #0]
 8001314:	402b      	ands	r3, r5
 8001316:	b29b      	uxth	r3, r3
 8001318:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 800131c:	6023      	str	r3, [r4, #0]
 800131e:	e7e6      	b.n	80012ee <Standard_ClearFeature+0x7a>
          ClearDTOG_RX(Related_Endpoint);
 8001320:	f7ff fd4c 	bl	8000dbc <ClearDTOG_RX>
 8001324:	e7f5      	b.n	8001312 <Standard_ClearFeature+0x9e>
  return USB_UNSUPPORT;
 8001326:	2302      	movs	r3, #2
 8001328:	e7af      	b.n	800128a <Standard_ClearFeature+0x16>
 800132a:	bf00      	nop
 800132c:	20000b10 	andcs	r0, r0, r0, lsl fp
 8001330:	20000034 	andcs	r0, r0, r4, lsr r0
 8001334:	20000b18 	andcs	r0, r0, r8, lsl fp
 8001338:	ffffbf8f 			; <UNDEFINED> instruction: 0xffffbf8f
 800133c:	20000000 	andcs	r0, r0, r0

08001340 <Standard_SetEndPointFeature>:
{
 8001340:	b538      	push	{r3, r4, r5, lr}
  wIndex0 = pInformation->USBwIndex0;
 8001342:	4b1b      	ldr	r3, [pc, #108]	; (80013b0 <Standard_SetEndPointFeature+0x70>)
  if (Related_Endpoint >= Device_Table.Total_Endpoint
 8001344:	4d1b      	ldr	r5, [pc, #108]	; (80013b4 <Standard_SetEndPointFeature+0x74>)
  wIndex0 = pInformation->USBwIndex0;
 8001346:	6818      	ldr	r0, [r3, #0]
  if (Related_Endpoint >= Device_Table.Total_Endpoint
 8001348:	782d      	ldrb	r5, [r5, #0]
  wIndex0 = pInformation->USBwIndex0;
 800134a:	7901      	ldrb	r1, [r0, #4]
  rEP = wIndex0 & ~0x80;
 800134c:	f021 0480 	bic.w	r4, r1, #128	; 0x80
    Status = _GetEPTxStatus(Related_Endpoint);
 8001350:	00a3      	lsls	r3, r4, #2
 8001352:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8001356:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 800135a:	681a      	ldr	r2, [r3, #0]
  if (ValBit(pInformation->USBwIndex0, 7))
 800135c:	b249      	sxtb	r1, r1
 800135e:	2900      	cmp	r1, #0
    Status = _GetEPTxStatus(Related_Endpoint);
 8001360:	bfb4      	ite	lt
 8001362:	f002 0230 	andlt.w	r2, r2, #48	; 0x30
    Status = _GetEPRxStatus(Related_Endpoint);
 8001366:	f402 5240 	andge.w	r2, r2, #12288	; 0x3000
  if (Related_Endpoint >= Device_Table.Total_Endpoint
 800136a:	42a5      	cmp	r5, r4
 800136c:	d91d      	bls.n	80013aa <Standard_SetEndPointFeature+0x6a>
      || pInformation->USBwValue != 0 || Status == 0
 800136e:	8844      	ldrh	r4, [r0, #2]
 8001370:	b9dc      	cbnz	r4, 80013aa <Standard_SetEndPointFeature+0x6a>
 8001372:	b1d2      	cbz	r2, 80013aa <Standard_SetEndPointFeature+0x6a>
      || pInformation->Current_Configuration == 0)
 8001374:	7a82      	ldrb	r2, [r0, #10]
 8001376:	b1c2      	cbz	r2, 80013aa <Standard_SetEndPointFeature+0x6a>
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8001378:	681a      	ldr	r2, [r3, #0]
    if (wIndex0 & 0x80)
 800137a:	2900      	cmp	r1, #0
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 800137c:	bfb5      	itete	lt
 800137e:	f422 42e0 	biclt.w	r2, r2, #28672	; 0x7000
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
 8001382:	f422 4280 	bicge.w	r2, r2, #16384	; 0x4000
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8001386:	f022 0240 	biclt.w	r2, r2, #64	; 0x40
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
 800138a:	f022 0270 	bicge.w	r2, r2, #112	; 0x70
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 800138e:	bfb5      	itete	lt
 8001390:	b292      	uxthlt	r2, r2
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
 8001392:	b292      	uxthge	r2, r2
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8001394:	f082 0210 	eorlt.w	r2, r2, #16
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
 8001398:	f482 5280 	eorge.w	r2, r2, #4096	; 0x1000
 800139c:	601a      	str	r2, [r3, #0]
  pUser_Standard_Requests->User_SetEndPointFeature();
 800139e:	4b06      	ldr	r3, [pc, #24]	; (80013b8 <Standard_SetEndPointFeature+0x78>)
 80013a0:	681b      	ldr	r3, [r3, #0]
 80013a2:	699b      	ldr	r3, [r3, #24]
 80013a4:	4798      	blx	r3
  return USB_SUCCESS;
 80013a6:	2000      	movs	r0, #0
}
 80013a8:	bd38      	pop	{r3, r4, r5, pc}
    return USB_UNSUPPORT;
 80013aa:	2002      	movs	r0, #2
 80013ac:	e7fc      	b.n	80013a8 <Standard_SetEndPointFeature+0x68>
 80013ae:	bf00      	nop
 80013b0:	20000b10 	andcs	r0, r0, r0, lsl fp
 80013b4:	20000034 	andcs	r0, r0, r4, lsr r0
 80013b8:	20000b18 	andcs	r0, r0, r8, lsl fp

080013bc <Standard_SetDeviceFeature>:
{
 80013bc:	b508      	push	{r3, lr}
  SetBit(pInformation->Current_Feature, 5);
 80013be:	4b06      	ldr	r3, [pc, #24]	; (80013d8 <Standard_SetDeviceFeature+0x1c>)
 80013c0:	681a      	ldr	r2, [r3, #0]
 80013c2:	7a53      	ldrb	r3, [r2, #9]
 80013c4:	f043 0320 	orr.w	r3, r3, #32
 80013c8:	7253      	strb	r3, [r2, #9]
  pUser_Standard_Requests->User_SetDeviceFeature();
 80013ca:	4b04      	ldr	r3, [pc, #16]	; (80013dc <Standard_SetDeviceFeature+0x20>)
 80013cc:	681b      	ldr	r3, [r3, #0]
 80013ce:	69db      	ldr	r3, [r3, #28]
 80013d0:	4798      	blx	r3
}
 80013d2:	2000      	movs	r0, #0
 80013d4:	bd08      	pop	{r3, pc}
 80013d6:	bf00      	nop
 80013d8:	20000b10 	andcs	r0, r0, r0, lsl fp
 80013dc:	20000b18 	andcs	r0, r0, r8, lsl fp

080013e0 <Standard_GetDescriptorData>:
  wOffset = pInformation->Ctrl_Info.Usb_wOffset;
 80013e0:	4b05      	ldr	r3, [pc, #20]	; (80013f8 <Standard_GetDescriptorData+0x18>)
{
 80013e2:	b510      	push	{r4, lr}
  wOffset = pInformation->Ctrl_Info.Usb_wOffset;
 80013e4:	681c      	ldr	r4, [r3, #0]
 80013e6:	8a62      	ldrh	r2, [r4, #18]
  if (Length == 0)
 80013e8:	b918      	cbnz	r0, 80013f2 <Standard_GetDescriptorData+0x12>
    pInformation->Ctrl_Info.Usb_wLength = pDesc->Descriptor_Size - wOffset;
 80013ea:	888b      	ldrh	r3, [r1, #4]
 80013ec:	1a9b      	subs	r3, r3, r2
 80013ee:	8223      	strh	r3, [r4, #16]
}
 80013f0:	bd10      	pop	{r4, pc}
  return pDesc->Descriptor + wOffset;
 80013f2:	6808      	ldr	r0, [r1, #0]
 80013f4:	4410      	add	r0, r2
 80013f6:	e7fb      	b.n	80013f0 <Standard_GetDescriptorData+0x10>
 80013f8:	20000b10 	andcs	r0, r0, r0, lsl fp

080013fc <Post0_Process>:
* Output         : None.
* Return         : - 0 if the control State is in PAUSE
*                  - 1 if not.
*******************************************************************************/
u8 Post0_Process(void)
{
 80013fc:	b508      	push	{r3, lr}
  SetEPRxCount(ENDP0, Device_Property.MaxPacketSize);
 80013fe:	4b0b      	ldr	r3, [pc, #44]	; (800142c <Post0_Process+0x30>)
 8001400:	2000      	movs	r0, #0
 8001402:	f893 1030 	ldrb.w	r1, [r3, #48]	; 0x30
 8001406:	f7ff fd2f 	bl	8000e68 <SetEPRxCount>

  if (pInformation->ControlState == STALLED)
 800140a:	4b09      	ldr	r3, [pc, #36]	; (8001430 <Post0_Process+0x34>)
 800140c:	681b      	ldr	r3, [r3, #0]
 800140e:	7a18      	ldrb	r0, [r3, #8]
 8001410:	2808      	cmp	r0, #8
 8001412:	d106      	bne.n	8001422 <Post0_Process+0x26>
  {
    vSetEPRxStatus(EP_RX_STALL);
 8001414:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001418:	4b06      	ldr	r3, [pc, #24]	; (8001434 <Post0_Process+0x38>)
 800141a:	801a      	strh	r2, [r3, #0]
    vSetEPTxStatus(EP_TX_STALL);
 800141c:	2210      	movs	r2, #16
 800141e:	4b06      	ldr	r3, [pc, #24]	; (8001438 <Post0_Process+0x3c>)
 8001420:	801a      	strh	r2, [r3, #0]
  }

  return (pInformation->ControlState == PAUSE);
}
 8001422:	f1a0 0309 	sub.w	r3, r0, #9
 8001426:	4258      	negs	r0, r3
 8001428:	4158      	adcs	r0, r3
 800142a:	bd08      	pop	{r3, pc}
 800142c:	20000000 	andcs	r0, r0, r0
 8001430:	20000b10 	andcs	r0, r0, r0, lsl fp
 8001434:	20000aea 	andcs	r0, r0, sl, ror #21
 8001438:	20000aec 	andcs	r0, r0, ip, ror #21

0800143c <Setup0_Process>:
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 800143c:	4b8d      	ldr	r3, [pc, #564]	; (8001674 <Setup0_Process+0x238>)
{
 800143e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8001440:	f8d3 2c50 	ldr.w	r2, [r3, #3152]	; 0xc50
 8001444:	4b8c      	ldr	r3, [pc, #560]	; (8001678 <Setup0_Process+0x23c>)
 8001446:	b292      	uxth	r2, r2
 8001448:	4413      	add	r3, r2
  if (pInformation->ControlState != PAUSE)
 800144a:	4c8c      	ldr	r4, [pc, #560]	; (800167c <Setup0_Process+0x240>)
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 800144c:	005b      	lsls	r3, r3, #1
 800144e:	681a      	ldr	r2, [r3, #0]
  if (pInformation->ControlState != PAUSE)
 8001450:	6823      	ldr	r3, [r4, #0]
 8001452:	7a19      	ldrb	r1, [r3, #8]
 8001454:	2909      	cmp	r1, #9
 8001456:	d00f      	beq.n	8001478 <Setup0_Process+0x3c>
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8001458:	b292      	uxth	r2, r2
 800145a:	0052      	lsls	r2, r2, #1
 800145c:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8001460:	f502 42c0 	add.w	r2, r2, #24576	; 0x6000
    pInformation->USBbmRequestType = *pBuf.b++; /* bmRequestType */
 8001464:	7811      	ldrb	r1, [r2, #0]
 8001466:	7019      	strb	r1, [r3, #0]
    pInformation->USBbRequest = *pBuf.b++; /* bRequest */
 8001468:	7851      	ldrb	r1, [r2, #1]
 800146a:	7059      	strb	r1, [r3, #1]
    pInformation->USBwValue = *pBuf.w++; /* wValue in Little Endian */
 800146c:	8891      	ldrh	r1, [r2, #4]
 800146e:	8059      	strh	r1, [r3, #2]
    pInformation->USBwIndex  = *pBuf.w++; /* wIndex in Little Endian */
 8001470:	8911      	ldrh	r1, [r2, #8]
 8001472:	8099      	strh	r1, [r3, #4]
    pInformation->USBwLength = *pBuf.w; /* wLength in Little Endian */
 8001474:	8992      	ldrh	r2, [r2, #12]
 8001476:	80da      	strh	r2, [r3, #6]
  pInformation->ControlState = SETTING_UP;
 8001478:	2201      	movs	r2, #1
 800147a:	721a      	strb	r2, [r3, #8]
  if (pInformation->USBwLength == 0)
 800147c:	88da      	ldrh	r2, [r3, #6]
  u32 RequestNo = pInformation->USBbRequest;
 800147e:	785d      	ldrb	r5, [r3, #1]
  if (pInformation->USBwLength == 0)
 8001480:	2a00      	cmp	r2, #0
 8001482:	d162      	bne.n	800154a <Setup0_Process+0x10e>
  if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001484:	781a      	ldrb	r2, [r3, #0]
 8001486:	f012 027f 	ands.w	r2, r2, #127	; 0x7f
 800148a:	d14b      	bne.n	8001524 <Setup0_Process+0xe8>
    if (RequestNo == SET_CONFIGURATION)
 800148c:	2d09      	cmp	r5, #9
 800148e:	d103      	bne.n	8001498 <Setup0_Process+0x5c>
      Result = Standard_SetConfiguration();
 8001490:	f7ff feb0 	bl	80011f4 <Standard_SetConfiguration>
  if (Result != USB_SUCCESS)
 8001494:	bb30      	cbnz	r0, 80014e4 <Setup0_Process+0xa8>
 8001496:	e012      	b.n	80014be <Setup0_Process+0x82>
    else if (RequestNo == SET_ADDRESS)
 8001498:	2d05      	cmp	r5, #5
 800149a:	d11e      	bne.n	80014da <Setup0_Process+0x9e>
      if ((pInformation->USBwValue0 > 127) || (pInformation->USBwValue1 != 0)
 800149c:	f993 2002 	ldrsb.w	r2, [r3, #2]
 80014a0:	2a00      	cmp	r2, #0
 80014a2:	da03      	bge.n	80014ac <Setup0_Process+0x70>
        ControlState = STALLED;
 80014a4:	2308      	movs	r3, #8
  pInformation->ControlState = ControlState;
 80014a6:	6822      	ldr	r2, [r4, #0]
    pInformation->ControlState = STALLED;
 80014a8:	7213      	strb	r3, [r2, #8]
    return;
 80014aa:	e0ba      	b.n	8001622 <Setup0_Process+0x1e6>
      if ((pInformation->USBwValue0 > 127) || (pInformation->USBwValue1 != 0)
 80014ac:	78da      	ldrb	r2, [r3, #3]
 80014ae:	2a00      	cmp	r2, #0
 80014b0:	d1f8      	bne.n	80014a4 <Setup0_Process+0x68>
          || (pInformation->USBwIndex != 0)
 80014b2:	889a      	ldrh	r2, [r3, #4]
 80014b4:	2a00      	cmp	r2, #0
 80014b6:	d1f5      	bne.n	80014a4 <Setup0_Process+0x68>
          || (pInformation->Current_Configuration != 0))
 80014b8:	7a9b      	ldrb	r3, [r3, #10]
 80014ba:	2b00      	cmp	r3, #0
 80014bc:	d1f2      	bne.n	80014a4 <Setup0_Process+0x68>
  USB_StatusIn();
 80014be:	4b6d      	ldr	r3, [pc, #436]	; (8001674 <Setup0_Process+0x238>)
 80014c0:	f8d3 2c50 	ldr.w	r2, [r3, #3152]	; 0xc50
 80014c4:	4b6e      	ldr	r3, [pc, #440]	; (8001680 <Setup0_Process+0x244>)
 80014c6:	b292      	uxth	r2, r2
 80014c8:	4413      	add	r3, r2
 80014ca:	2200      	movs	r2, #0
 80014cc:	005b      	lsls	r3, r3, #1
 80014ce:	601a      	str	r2, [r3, #0]
 80014d0:	2230      	movs	r2, #48	; 0x30
 80014d2:	4b6c      	ldr	r3, [pc, #432]	; (8001684 <Setup0_Process+0x248>)
 80014d4:	801a      	strh	r2, [r3, #0]
  ControlState = WAIT_STATUS_IN;/* After no data stage SETUP */
 80014d6:	2306      	movs	r3, #6
 80014d8:	e7e5      	b.n	80014a6 <Setup0_Process+0x6a>
    else if (RequestNo == SET_FEATURE)
 80014da:	2d03      	cmp	r5, #3
 80014dc:	d114      	bne.n	8001508 <Setup0_Process+0xcc>
      if ((pInformation->USBwValue0 == DEVICE_REMOTE_WAKEUP)
 80014de:	789a      	ldrb	r2, [r3, #2]
 80014e0:	2a01      	cmp	r2, #1
 80014e2:	d008      	beq.n	80014f6 <Setup0_Process+0xba>
    Result = (*pProperty->Class_NoData_Setup)(RequestNo);
 80014e4:	4b68      	ldr	r3, [pc, #416]	; (8001688 <Setup0_Process+0x24c>)
 80014e6:	4628      	mov	r0, r5
 80014e8:	681b      	ldr	r3, [r3, #0]
 80014ea:	695b      	ldr	r3, [r3, #20]
 80014ec:	4798      	blx	r3
    if (Result == USB_NOT_READY)
 80014ee:	2803      	cmp	r0, #3
 80014f0:	d128      	bne.n	8001544 <Setup0_Process+0x108>
      ControlState = PAUSE;
 80014f2:	2309      	movs	r3, #9
 80014f4:	e7d7      	b.n	80014a6 <Setup0_Process+0x6a>
          && (pInformation->USBwIndex == 0)
 80014f6:	889a      	ldrh	r2, [r3, #4]
 80014f8:	2a00      	cmp	r2, #0
 80014fa:	d1f3      	bne.n	80014e4 <Setup0_Process+0xa8>
          && (ValBit(pInformation->Current_Feature, 5)))
 80014fc:	7a5b      	ldrb	r3, [r3, #9]
 80014fe:	069a      	lsls	r2, r3, #26
 8001500:	d5f0      	bpl.n	80014e4 <Setup0_Process+0xa8>
        Result = Standard_SetDeviceFeature();
 8001502:	f7ff ff5b 	bl	80013bc <Standard_SetDeviceFeature>
 8001506:	e7c5      	b.n	8001494 <Setup0_Process+0x58>
    else if (RequestNo == CLEAR_FEATURE)
 8001508:	2d01      	cmp	r5, #1
 800150a:	d1eb      	bne.n	80014e4 <Setup0_Process+0xa8>
      if (pInformation->USBwValue0 == DEVICE_REMOTE_WAKEUP
 800150c:	789a      	ldrb	r2, [r3, #2]
 800150e:	2a01      	cmp	r2, #1
 8001510:	d1e8      	bne.n	80014e4 <Setup0_Process+0xa8>
          && pInformation->USBwIndex == 0
 8001512:	889a      	ldrh	r2, [r3, #4]
 8001514:	2a00      	cmp	r2, #0
 8001516:	d1e5      	bne.n	80014e4 <Setup0_Process+0xa8>
          && ValBit(pInformation->Current_Feature, 5))
 8001518:	7a5b      	ldrb	r3, [r3, #9]
 800151a:	069b      	lsls	r3, r3, #26
 800151c:	d5e2      	bpl.n	80014e4 <Setup0_Process+0xa8>
        Result = Standard_ClearFeature();
 800151e:	f7ff fea9 	bl	8001274 <Standard_ClearFeature>
 8001522:	e7b7      	b.n	8001494 <Setup0_Process+0x58>
  else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 8001524:	2a01      	cmp	r2, #1
 8001526:	d104      	bne.n	8001532 <Setup0_Process+0xf6>
    if (RequestNo == SET_INTERFACE)
 8001528:	2d0b      	cmp	r5, #11
 800152a:	d1db      	bne.n	80014e4 <Setup0_Process+0xa8>
      Result = Standard_SetInterface();
 800152c:	f7ff fe7e 	bl	800122c <Standard_SetInterface>
 8001530:	e7b0      	b.n	8001494 <Setup0_Process+0x58>
  else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 8001532:	2a02      	cmp	r2, #2
 8001534:	d1d6      	bne.n	80014e4 <Setup0_Process+0xa8>
    if (RequestNo == CLEAR_FEATURE)
 8001536:	2d01      	cmp	r5, #1
 8001538:	d0f1      	beq.n	800151e <Setup0_Process+0xe2>
    else if (RequestNo == SET_FEATURE)
 800153a:	2d03      	cmp	r5, #3
 800153c:	d1d2      	bne.n	80014e4 <Setup0_Process+0xa8>
      Result = Standard_SetEndPointFeature();
 800153e:	f7ff feff 	bl	8001340 <Standard_SetEndPointFeature>
 8001542:	e7a7      	b.n	8001494 <Setup0_Process+0x58>
  if (Result != USB_SUCCESS)
 8001544:	2800      	cmp	r0, #0
 8001546:	d0ba      	beq.n	80014be <Setup0_Process+0x82>
 8001548:	e7ac      	b.n	80014a4 <Setup0_Process+0x68>
  if (Request_No == GET_DESCRIPTOR)
 800154a:	2d06      	cmp	r5, #6
 800154c:	d117      	bne.n	800157e <Setup0_Process+0x142>
    if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 800154e:	781a      	ldrb	r2, [r3, #0]
 8001550:	0655      	lsls	r5, r2, #25
 8001552:	d15a      	bne.n	800160a <Setup0_Process+0x1ce>
      u8 wValue1 = pInformation->USBwValue1;
 8001554:	78db      	ldrb	r3, [r3, #3]
        CopyRoutine = pProperty->GetDeviceDescriptor;
 8001556:	4a4c      	ldr	r2, [pc, #304]	; (8001688 <Setup0_Process+0x24c>)
      if (wValue1 == DEVICE_DESCRIPTOR)
 8001558:	2b01      	cmp	r3, #1
        CopyRoutine = pProperty->GetDeviceDescriptor;
 800155a:	6812      	ldr	r2, [r2, #0]
      if (wValue1 == DEVICE_DESCRIPTOR)
 800155c:	d103      	bne.n	8001566 <Setup0_Process+0x12a>
        CopyRoutine = pProperty->GetDeviceDescriptor;
 800155e:	69d3      	ldr	r3, [r2, #28]
  if (CopyRoutine)
 8001560:	2b00      	cmp	r3, #0
 8001562:	d052      	beq.n	800160a <Setup0_Process+0x1ce>
 8001564:	e01e      	b.n	80015a4 <Setup0_Process+0x168>
      else if (wValue1 == CONFIG_DESCRIPTOR)
 8001566:	2b02      	cmp	r3, #2
 8001568:	d101      	bne.n	800156e <Setup0_Process+0x132>
        CopyRoutine = pProperty->GetConfigDescriptor;
 800156a:	6a13      	ldr	r3, [r2, #32]
 800156c:	e7f8      	b.n	8001560 <Setup0_Process+0x124>
      else if (wValue1 == STRING_DESCRIPTOR)
 800156e:	2b03      	cmp	r3, #3
 8001570:	d101      	bne.n	8001576 <Setup0_Process+0x13a>
        CopyRoutine = pProperty->GetStringDescriptor;
 8001572:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8001574:	e7f4      	b.n	8001560 <Setup0_Process+0x124>
      } else if (wValue1 == 0x21) /* added to support functional descriptors */
 8001576:	2b21      	cmp	r3, #33	; 0x21
 8001578:	d147      	bne.n	800160a <Setup0_Process+0x1ce>
	CopyRoutine = pProperty->GetFunctionalDescriptor;
 800157a:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800157c:	e7f0      	b.n	8001560 <Setup0_Process+0x124>
  else if ((Request_No == GET_STATUS) && (pInformation->USBwValue == 0)
 800157e:	2d00      	cmp	r5, #0
 8001580:	d154      	bne.n	800162c <Setup0_Process+0x1f0>
 8001582:	8859      	ldrh	r1, [r3, #2]
 8001584:	2900      	cmp	r1, #0
 8001586:	d140      	bne.n	800160a <Setup0_Process+0x1ce>
           && (pInformation->USBwIndex1 == 0))
 8001588:	685a      	ldr	r2, [r3, #4]
 800158a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800158e:	f5b2 3f00 	cmp.w	r2, #131072	; 0x20000
 8001592:	d13a      	bne.n	800160a <Setup0_Process+0x1ce>
    if ((Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001594:	781a      	ldrb	r2, [r3, #0]
 8001596:	f012 027f 	ands.w	r2, r2, #127	; 0x7f
 800159a:	d111      	bne.n	80015c0 <Setup0_Process+0x184>
        && (pInformation->USBwIndex == 0))
 800159c:	889b      	ldrh	r3, [r3, #4]
 800159e:	2b00      	cmp	r3, #0
 80015a0:	d133      	bne.n	800160a <Setup0_Process+0x1ce>
      CopyRoutine = Standard_GetStatus;
 80015a2:	4b3a      	ldr	r3, [pc, #232]	; (800168c <Setup0_Process+0x250>)
    pInformation->Ctrl_Info.Usb_wOffset = wOffset;
 80015a4:	2500      	movs	r5, #0
 80015a6:	6822      	ldr	r2, [r4, #0]
    (*CopyRoutine)(0);
 80015a8:	4628      	mov	r0, r5
    pInformation->Ctrl_Info.Usb_wOffset = wOffset;
 80015aa:	8255      	strh	r5, [r2, #18]
    pInformation->Ctrl_Info.CopyData = CopyRoutine;
 80015ac:	6193      	str	r3, [r2, #24]
    (*CopyRoutine)(0);
 80015ae:	4798      	blx	r3
  if (pInformation->Ctrl_Info.Usb_wLength == 0xFFFF)
 80015b0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80015b4:	6822      	ldr	r2, [r4, #0]
 80015b6:	8a13      	ldrh	r3, [r2, #16]
 80015b8:	428b      	cmp	r3, r1
 80015ba:	d16f      	bne.n	800169c <Setup0_Process+0x260>
    pInformation->ControlState = PAUSE;
 80015bc:	2309      	movs	r3, #9
 80015be:	e773      	b.n	80014a8 <Setup0_Process+0x6c>
    else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 80015c0:	2a01      	cmp	r2, #1
 80015c2:	d10a      	bne.n	80015da <Setup0_Process+0x19e>
      if (((*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, 0) == USB_SUCCESS)
 80015c4:	4a30      	ldr	r2, [pc, #192]	; (8001688 <Setup0_Process+0x24c>)
 80015c6:	7918      	ldrb	r0, [r3, #4]
 80015c8:	6812      	ldr	r2, [r2, #0]
 80015ca:	6992      	ldr	r2, [r2, #24]
 80015cc:	4790      	blx	r2
 80015ce:	b9e0      	cbnz	r0, 800160a <Setup0_Process+0x1ce>
          && (pInformation->Current_Configuration != 0))
 80015d0:	6823      	ldr	r3, [r4, #0]
 80015d2:	7a9b      	ldrb	r3, [r3, #10]
          && (Status != 0))
 80015d4:	2b00      	cmp	r3, #0
 80015d6:	d1e4      	bne.n	80015a2 <Setup0_Process+0x166>
 80015d8:	e017      	b.n	800160a <Setup0_Process+0x1ce>
    else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 80015da:	2a02      	cmp	r2, #2
 80015dc:	d115      	bne.n	800160a <Setup0_Process+0x1ce>
      Related_Endpoint = (pInformation->USBwIndex0 & 0x0f);
 80015de:	791a      	ldrb	r2, [r3, #4]
 80015e0:	f002 010f 	and.w	r1, r2, #15
        Status = _GetEPTxStatus(Related_Endpoint);
 80015e4:	008b      	lsls	r3, r1, #2
      if (ValBit(pInformation->USBwIndex0, 7))
 80015e6:	0610      	lsls	r0, r2, #24
        Status = _GetEPTxStatus(Related_Endpoint);
 80015e8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
      if ((Related_Endpoint < Device_Table.Total_Endpoint) && (Reserved == 0)
 80015ec:	4828      	ldr	r0, [pc, #160]	; (8001690 <Setup0_Process+0x254>)
        Status = _GetEPTxStatus(Related_Endpoint);
 80015ee:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 80015f2:	681b      	ldr	r3, [r3, #0]
      if ((Related_Endpoint < Device_Table.Total_Endpoint) && (Reserved == 0)
 80015f4:	7800      	ldrb	r0, [r0, #0]
        Status = _GetEPTxStatus(Related_Endpoint);
 80015f6:	bf4c      	ite	mi
 80015f8:	f003 0330 	andmi.w	r3, r3, #48	; 0x30
        Status = _GetEPRxStatus(Related_Endpoint);
 80015fc:	f403 5340 	andpl.w	r3, r3, #12288	; 0x3000
      if ((Related_Endpoint < Device_Table.Total_Endpoint) && (Reserved == 0)
 8001600:	4288      	cmp	r0, r1
 8001602:	d902      	bls.n	800160a <Setup0_Process+0x1ce>
 8001604:	f012 0f70 	tst.w	r2, #112	; 0x70
 8001608:	d0e4      	beq.n	80015d4 <Setup0_Process+0x198>
    Result = (*pProperty->Class_Data_Setup)(pInformation->USBbRequest);
 800160a:	4b1f      	ldr	r3, [pc, #124]	; (8001688 <Setup0_Process+0x24c>)
 800160c:	6822      	ldr	r2, [r4, #0]
 800160e:	681b      	ldr	r3, [r3, #0]
 8001610:	7850      	ldrb	r0, [r2, #1]
 8001612:	691b      	ldr	r3, [r3, #16]
 8001614:	4798      	blx	r3
    if (Result == USB_NOT_READY)
 8001616:	2803      	cmp	r0, #3
    Result = (*pProperty->Class_Data_Setup)(pInformation->USBbRequest);
 8001618:	4605      	mov	r5, r0
    if (Result == USB_NOT_READY)
 800161a:	d1c9      	bne.n	80015b0 <Setup0_Process+0x174>
      pInformation->ControlState = PAUSE;
 800161c:	2209      	movs	r2, #9
 800161e:	6823      	ldr	r3, [r4, #0]
 8001620:	721a      	strb	r2, [r3, #8]
}
 8001622:	b003      	add	sp, #12
 8001624:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  return Post0_Process();
 8001628:	f7ff bee8 	b.w	80013fc <Post0_Process>
  else if (Request_No == GET_CONFIGURATION)
 800162c:	2d08      	cmp	r5, #8
 800162e:	d104      	bne.n	800163a <Setup0_Process+0x1fe>
    if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001630:	781b      	ldrb	r3, [r3, #0]
 8001632:	065b      	lsls	r3, r3, #25
 8001634:	d1e9      	bne.n	800160a <Setup0_Process+0x1ce>
      CopyRoutine = Standard_GetConfiguration;
 8001636:	4b17      	ldr	r3, [pc, #92]	; (8001694 <Setup0_Process+0x258>)
 8001638:	e7b4      	b.n	80015a4 <Setup0_Process+0x168>
  else if (Request_No == GET_INTERFACE)
 800163a:	2d0a      	cmp	r5, #10
 800163c:	d1e5      	bne.n	800160a <Setup0_Process+0x1ce>
    if ((Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 800163e:	781a      	ldrb	r2, [r3, #0]
 8001640:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8001644:	2a01      	cmp	r2, #1
 8001646:	d1e0      	bne.n	800160a <Setup0_Process+0x1ce>
        && (pInformation->Current_Configuration != 0) && (pInformation->USBwValue == 0)
 8001648:	7a9a      	ldrb	r2, [r3, #10]
 800164a:	2a00      	cmp	r2, #0
 800164c:	d0dd      	beq.n	800160a <Setup0_Process+0x1ce>
 800164e:	8859      	ldrh	r1, [r3, #2]
 8001650:	2900      	cmp	r1, #0
 8001652:	d1da      	bne.n	800160a <Setup0_Process+0x1ce>
        && (pInformation->USBwIndex1 == 0) && (pInformation->USBwLength == 0x0001)
 8001654:	685a      	ldr	r2, [r3, #4]
 8001656:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800165a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800165e:	d1d4      	bne.n	800160a <Setup0_Process+0x1ce>
        && ((*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, 0) == USB_SUCCESS))
 8001660:	4a09      	ldr	r2, [pc, #36]	; (8001688 <Setup0_Process+0x24c>)
 8001662:	7918      	ldrb	r0, [r3, #4]
 8001664:	6812      	ldr	r2, [r2, #0]
 8001666:	6992      	ldr	r2, [r2, #24]
 8001668:	4790      	blx	r2
 800166a:	2800      	cmp	r0, #0
 800166c:	d1cd      	bne.n	800160a <Setup0_Process+0x1ce>
      CopyRoutine = Standard_GetInterface;
 800166e:	4b0a      	ldr	r3, [pc, #40]	; (8001698 <Setup0_Process+0x25c>)
 8001670:	e798      	b.n	80015a4 <Setup0_Process+0x168>
 8001672:	bf00      	nop
 8001674:	40005000 	andmi	r5, r0, r0
 8001678:	20003004 	andcs	r3, r0, r4
 800167c:	20000b10 	andcs	r0, r0, r0, lsl fp
 8001680:	20003002 	andcs	r3, r0, r2
 8001684:	20000aec 	andcs	r0, r0, ip, ror #21
 8001688:	20000b14 	andcs	r0, r0, r4, lsl fp
 800168c:	080010bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, ip}
 8001690:	20000034 	andcs	r0, r0, r4, lsr r0
 8001694:	08001075 	stmdaeq	r0, {r0, r2, r4, r5, r6, ip}
 8001698:	08001099 	stmdaeq	r0, {r0, r3, r4, r7, ip}
  if ((Result == USB_UNSUPPORT) || (pInformation->Ctrl_Info.Usb_wLength == 0))
 800169c:	2d02      	cmp	r5, #2
 800169e:	d000      	beq.n	80016a2 <Setup0_Process+0x266>
 80016a0:	b90b      	cbnz	r3, 80016a6 <Setup0_Process+0x26a>
    pInformation->ControlState = STALLED;
 80016a2:	2308      	movs	r3, #8
 80016a4:	e700      	b.n	80014a8 <Setup0_Process+0x6c>
  if (ValBit(pInformation->USBbmRequestType, 7))
 80016a6:	f992 1000 	ldrsb.w	r1, [r2]
 80016aa:	2900      	cmp	r1, #0
 80016ac:	da20      	bge.n	80016f0 <Setup0_Process+0x2b4>
    vu32 wLength = pInformation->USBwLength;
 80016ae:	88d4      	ldrh	r4, [r2, #6]
      if (pInformation->Ctrl_Info.Usb_wLength < pProperty->MaxPacketSize)
 80016b0:	4913      	ldr	r1, [pc, #76]	; (8001700 <Setup0_Process+0x2c4>)
    vu32 wLength = pInformation->USBwLength;
 80016b2:	9401      	str	r4, [sp, #4]
      if (pInformation->Ctrl_Info.Usb_wLength < pProperty->MaxPacketSize)
 80016b4:	6809      	ldr	r1, [r1, #0]
    if (pInformation->Ctrl_Info.Usb_wLength > wLength)
 80016b6:	9d01      	ldr	r5, [sp, #4]
      if (pInformation->Ctrl_Info.Usb_wLength < pProperty->MaxPacketSize)
 80016b8:	f891 0030 	ldrb.w	r0, [r1, #48]	; 0x30
    if (pInformation->Ctrl_Info.Usb_wLength > wLength)
 80016bc:	42ab      	cmp	r3, r5
      if (pInformation->Ctrl_Info.Usb_wLength < pProperty->MaxPacketSize)
 80016be:	4601      	mov	r1, r0
    if (pInformation->Ctrl_Info.Usb_wLength > wLength)
 80016c0:	d905      	bls.n	80016ce <Setup0_Process+0x292>
      pInformation->Ctrl_Info.Usb_wLength = wLength;
 80016c2:	9b01      	ldr	r3, [sp, #4]
 80016c4:	8213      	strh	r3, [r2, #16]
    pInformation->Ctrl_Info.PacketSize = pProperty->MaxPacketSize;
 80016c6:	8291      	strh	r1, [r2, #20]
    DataStageIn();
 80016c8:	f7ff fd3e 	bl	8001148 <DataStageIn>
 80016cc:	e7a9      	b.n	8001622 <Setup0_Process+0x1e6>
    else if (pInformation->Ctrl_Info.Usb_wLength < pInformation->USBwLength)
 80016ce:	42a3      	cmp	r3, r4
 80016d0:	d2f9      	bcs.n	80016c6 <Setup0_Process+0x28a>
      if (pInformation->Ctrl_Info.Usb_wLength < pProperty->MaxPacketSize)
 80016d2:	4283      	cmp	r3, r0
 80016d4:	d203      	bcs.n	80016de <Setup0_Process+0x2a2>
        Data_Mul_MaxPacketSize = FALSE;
 80016d6:	2000      	movs	r0, #0
 80016d8:	4b0a      	ldr	r3, [pc, #40]	; (8001704 <Setup0_Process+0x2c8>)
        Data_Mul_MaxPacketSize = TRUE;
 80016da:	7018      	strb	r0, [r3, #0]
 80016dc:	e7f3      	b.n	80016c6 <Setup0_Process+0x28a>
      else if ((pInformation->Ctrl_Info.Usb_wLength % pProperty->MaxPacketSize) == 0)
 80016de:	fbb3 f4f0 	udiv	r4, r3, r0
 80016e2:	fb00 3314 	mls	r3, r0, r4, r3
 80016e6:	2b00      	cmp	r3, #0
 80016e8:	d1ed      	bne.n	80016c6 <Setup0_Process+0x28a>
        Data_Mul_MaxPacketSize = TRUE;
 80016ea:	2001      	movs	r0, #1
 80016ec:	4b05      	ldr	r3, [pc, #20]	; (8001704 <Setup0_Process+0x2c8>)
 80016ee:	e7f4      	b.n	80016da <Setup0_Process+0x29e>
    pInformation->ControlState = OUT_DATA;
 80016f0:	2303      	movs	r3, #3
 80016f2:	7213      	strb	r3, [r2, #8]
    vSetEPRxStatus(EP_RX_VALID); /* enable for next data reception */
 80016f4:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 80016f8:	4b03      	ldr	r3, [pc, #12]	; (8001708 <Setup0_Process+0x2cc>)
 80016fa:	801a      	strh	r2, [r3, #0]
 80016fc:	e791      	b.n	8001622 <Setup0_Process+0x1e6>
 80016fe:	bf00      	nop
 8001700:	20000b14 	andcs	r0, r0, r4, lsl fp
 8001704:	20000b1e 	andcs	r0, r0, lr, lsl fp
 8001708:	20000aea 	andcs	r0, r0, sl, ror #21

0800170c <Out0_Process>:
{
 800170c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  u32 ControlState = pInformation->ControlState;
 800170e:	4e2a      	ldr	r6, [pc, #168]	; (80017b8 <Out0_Process+0xac>)
 8001710:	6834      	ldr	r4, [r6, #0]
 8001712:	7a23      	ldrb	r3, [r4, #8]
  if ((ControlState == OUT_DATA) || (ControlState == LAST_OUT_DATA))
 8001714:	2b03      	cmp	r3, #3
 8001716:	d001      	beq.n	800171c <Out0_Process+0x10>
 8001718:	2b05      	cmp	r3, #5
 800171a:	d144      	bne.n	80017a6 <Out0_Process+0x9a>
  if (pEPinfo->CopyData && save_rLength)
 800171c:	69a3      	ldr	r3, [r4, #24]
 800171e:	b1b3      	cbz	r3, 800174e <Out0_Process+0x42>
  save_rLength = pEPinfo->Usb_rLength;
 8001720:	8a25      	ldrh	r5, [r4, #16]
  if (pEPinfo->CopyData && save_rLength)
 8001722:	b30d      	cbz	r5, 8001768 <Out0_Process+0x5c>
    Length = pEPinfo->PacketSize;
 8001724:	8aa2      	ldrh	r2, [r4, #20]
    Buffer = (*pEPinfo->CopyData)(Length);
 8001726:	4295      	cmp	r5, r2
 8001728:	bf28      	it	cs
 800172a:	4615      	movcs	r5, r2
 800172c:	4628      	mov	r0, r5
 800172e:	4798      	blx	r3
    pEPinfo->Usb_rLength -= Length;
 8001730:	8a23      	ldrh	r3, [r4, #16]
    Buffer = (*pEPinfo->CopyData)(Length);
 8001732:	4607      	mov	r7, r0
    pEPinfo->Usb_rLength -= Length;
 8001734:	1b5b      	subs	r3, r3, r5
 8001736:	8223      	strh	r3, [r4, #16]
    pEPinfo->Usb_rOffset += Length;
 8001738:	8a63      	ldrh	r3, [r4, #18]
    PMAToUserBufferCopy(Buffer, GetEPRxAddr(ENDP0), Length);
 800173a:	2000      	movs	r0, #0
    pEPinfo->Usb_rOffset += Length;
 800173c:	442b      	add	r3, r5
 800173e:	8263      	strh	r3, [r4, #18]
    PMAToUserBufferCopy(Buffer, GetEPRxAddr(ENDP0), Length);
 8001740:	f7ff fb72 	bl	8000e28 <GetEPRxAddr>
 8001744:	462a      	mov	r2, r5
 8001746:	4601      	mov	r1, r0
 8001748:	4638      	mov	r0, r7
 800174a:	f000 f89c 	bl	8001886 <PMAToUserBufferCopy>
  if (pEPinfo->Usb_rLength != 0)
 800174e:	8a23      	ldrh	r3, [r4, #16]
 8001750:	b153      	cbz	r3, 8001768 <Out0_Process+0x5c>
    SetEPTxCount(ENDP0, 0);
 8001752:	2100      	movs	r1, #0
    vSetEPRxStatus(EP_RX_VALID);/* re-enable for next data reception */
 8001754:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 8001758:	4b18      	ldr	r3, [pc, #96]	; (80017bc <Out0_Process+0xb0>)
    SetEPTxCount(ENDP0, 0);
 800175a:	4608      	mov	r0, r1
    vSetEPRxStatus(EP_RX_VALID);/* re-enable for next data reception */
 800175c:	801a      	strh	r2, [r3, #0]
    SetEPTxCount(ENDP0, 0);
 800175e:	f7ff fb73 	bl	8000e48 <SetEPTxCount>
    vSetEPTxStatus(EP_TX_VALID);/* Expect the host to abort the data OUT stage */
 8001762:	2230      	movs	r2, #48	; 0x30
 8001764:	4b16      	ldr	r3, [pc, #88]	; (80017c0 <Out0_Process+0xb4>)
 8001766:	801a      	strh	r2, [r3, #0]
  if (pEPinfo->Usb_rLength >= pEPinfo->PacketSize)
 8001768:	8a21      	ldrh	r1, [r4, #16]
 800176a:	8aa3      	ldrh	r3, [r4, #20]
    pInformation->ControlState = OUT_DATA;
 800176c:	6832      	ldr	r2, [r6, #0]
  if (pEPinfo->Usb_rLength >= pEPinfo->PacketSize)
 800176e:	428b      	cmp	r3, r1
 8001770:	d808      	bhi.n	8001784 <Out0_Process+0x78>
    pInformation->ControlState = OUT_DATA;
 8001772:	2303      	movs	r3, #3
      pInformation->ControlState = LAST_OUT_DATA;
 8001774:	7213      	strb	r3, [r2, #8]
    ControlState = pInformation->ControlState; /* may be changed outside the function */
 8001776:	7a13      	ldrb	r3, [r2, #8]
  pInformation->ControlState = ControlState;
 8001778:	6832      	ldr	r2, [r6, #0]
 800177a:	7213      	strb	r3, [r2, #8]
}
 800177c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  return Post0_Process();
 8001780:	f7ff be3c 	b.w	80013fc <Post0_Process>
    if (pEPinfo->Usb_rLength > 0)
 8001784:	b109      	cbz	r1, 800178a <Out0_Process+0x7e>
      pInformation->ControlState = LAST_OUT_DATA;
 8001786:	2305      	movs	r3, #5
 8001788:	e7f4      	b.n	8001774 <Out0_Process+0x68>
      pInformation->ControlState = WAIT_STATUS_IN;
 800178a:	2306      	movs	r3, #6
 800178c:	7213      	strb	r3, [r2, #8]
      USB_StatusIn();
 800178e:	4b0d      	ldr	r3, [pc, #52]	; (80017c4 <Out0_Process+0xb8>)
 8001790:	f8d3 0c50 	ldr.w	r0, [r3, #3152]	; 0xc50
 8001794:	4b0c      	ldr	r3, [pc, #48]	; (80017c8 <Out0_Process+0xbc>)
 8001796:	b280      	uxth	r0, r0
 8001798:	4403      	add	r3, r0
 800179a:	005b      	lsls	r3, r3, #1
 800179c:	6019      	str	r1, [r3, #0]
 800179e:	2130      	movs	r1, #48	; 0x30
 80017a0:	4b07      	ldr	r3, [pc, #28]	; (80017c0 <Out0_Process+0xb4>)
 80017a2:	8019      	strh	r1, [r3, #0]
 80017a4:	e7e7      	b.n	8001776 <Out0_Process+0x6a>
  else if (ControlState == WAIT_STATUS_OUT)
 80017a6:	2b07      	cmp	r3, #7
 80017a8:	d103      	bne.n	80017b2 <Out0_Process+0xa6>
    (*pProperty->Process_Status_OUT)();
 80017aa:	4b08      	ldr	r3, [pc, #32]	; (80017cc <Out0_Process+0xc0>)
 80017ac:	681b      	ldr	r3, [r3, #0]
 80017ae:	68db      	ldr	r3, [r3, #12]
 80017b0:	4798      	blx	r3
    ControlState = STALLED;
 80017b2:	2308      	movs	r3, #8
 80017b4:	e7e0      	b.n	8001778 <Out0_Process+0x6c>
 80017b6:	bf00      	nop
 80017b8:	20000b10 	andcs	r0, r0, r0, lsl fp
 80017bc:	20000aea 	andcs	r0, r0, sl, ror #21
 80017c0:	20000aec 	andcs	r0, r0, ip, ror #21
 80017c4:	40005000 	andmi	r5, r0, r0
 80017c8:	20003002 	andcs	r3, r0, r2
 80017cc:	20000b14 	andcs	r0, r0, r4, lsl fp

080017d0 <SetDeviceAddress>:
* Input          : - Val: device adress.
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetDeviceAddress(u8 Val)
{
 80017d0:	b530      	push	{r4, r5, lr}
  u32 i;
  u32 nEP = Device_Table.Total_Endpoint;

  /* set address in every used endpoint */
  for (i = 0; i < nEP; i++)
 80017d2:	2200      	movs	r2, #0
  {
    _SetEPAddress((u8)i, (u8)i);
 80017d4:	f648 758f 	movw	r5, #36751	; 0x8f8f
  u32 nEP = Device_Table.Total_Endpoint;
 80017d8:	4b0a      	ldr	r3, [pc, #40]	; (8001804 <SetDeviceAddress+0x34>)
 80017da:	781c      	ldrb	r4, [r3, #0]
  for (i = 0; i < nEP; i++)
 80017dc:	42a2      	cmp	r2, r4
 80017de:	d305      	bcc.n	80017ec <SetDeviceAddress+0x1c>
  } /* for */
  _SetDADDR(Val | DADDR_EF); /* set device address and enable function */
 80017e0:	4b09      	ldr	r3, [pc, #36]	; (8001808 <SetDeviceAddress+0x38>)
 80017e2:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 80017e6:	f8c3 0c4c 	str.w	r0, [r3, #3148]	; 0xc4c
}
 80017ea:	bd30      	pop	{r4, r5, pc}
    _SetEPAddress((u8)i, (u8)i);
 80017ec:	0093      	lsls	r3, r2, #2
 80017ee:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80017f2:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 80017f6:	6819      	ldr	r1, [r3, #0]
 80017f8:	4029      	ands	r1, r5
 80017fa:	4311      	orrs	r1, r2
 80017fc:	6019      	str	r1, [r3, #0]
  for (i = 0; i < nEP; i++)
 80017fe:	3201      	adds	r2, #1
 8001800:	e7ec      	b.n	80017dc <SetDeviceAddress+0xc>
 8001802:	bf00      	nop
 8001804:	20000034 	andcs	r0, r0, r4, lsr r0
 8001808:	40005000 	andmi	r5, r0, r0

0800180c <In0_Process>:
{
 800180c:	b510      	push	{r4, lr}
  u32 ControlState = pInformation->ControlState;
 800180e:	4c13      	ldr	r4, [pc, #76]	; (800185c <In0_Process+0x50>)
 8001810:	6823      	ldr	r3, [r4, #0]
 8001812:	7a1a      	ldrb	r2, [r3, #8]
  if ((ControlState == IN_DATA) || (ControlState == LAST_IN_DATA))
 8001814:	2a02      	cmp	r2, #2
 8001816:	d001      	beq.n	800181c <In0_Process+0x10>
 8001818:	2a04      	cmp	r2, #4
 800181a:	d109      	bne.n	8001830 <In0_Process+0x24>
    DataStageIn();
 800181c:	f7ff fc94 	bl	8001148 <DataStageIn>
    ControlState = pInformation->ControlState;
 8001820:	6823      	ldr	r3, [r4, #0]
 8001822:	7a1b      	ldrb	r3, [r3, #8]
  pInformation->ControlState = ControlState;
 8001824:	6822      	ldr	r2, [r4, #0]
 8001826:	7213      	strb	r3, [r2, #8]
}
 8001828:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  return Post0_Process();
 800182c:	f7ff bde6 	b.w	80013fc <Post0_Process>
  else if (ControlState == WAIT_STATUS_IN)
 8001830:	2a06      	cmp	r2, #6
 8001832:	d110      	bne.n	8001856 <In0_Process+0x4a>
    if ((pInformation->USBbRequest == SET_ADDRESS) &&
 8001834:	785a      	ldrb	r2, [r3, #1]
 8001836:	2a05      	cmp	r2, #5
 8001838:	d109      	bne.n	800184e <In0_Process+0x42>
 800183a:	781a      	ldrb	r2, [r3, #0]
 800183c:	0652      	lsls	r2, r2, #25
 800183e:	d106      	bne.n	800184e <In0_Process+0x42>
      SetDeviceAddress(pInformation->USBwValue0);
 8001840:	7898      	ldrb	r0, [r3, #2]
 8001842:	f7ff ffc5 	bl	80017d0 <SetDeviceAddress>
      pUser_Standard_Requests->User_SetDeviceAddress();
 8001846:	4b06      	ldr	r3, [pc, #24]	; (8001860 <In0_Process+0x54>)
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	6a1b      	ldr	r3, [r3, #32]
 800184c:	4798      	blx	r3
    (*pProperty->Process_Status_IN)();
 800184e:	4b05      	ldr	r3, [pc, #20]	; (8001864 <In0_Process+0x58>)
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	689b      	ldr	r3, [r3, #8]
 8001854:	4798      	blx	r3
    ControlState = STALLED;
 8001856:	2308      	movs	r3, #8
 8001858:	e7e4      	b.n	8001824 <In0_Process+0x18>
 800185a:	bf00      	nop
 800185c:	20000b10 	andcs	r0, r0, r0, lsl fp
 8001860:	20000b18 	andcs	r0, r0, r8, lsl fp
 8001864:	20000b14 	andcs	r0, r0, r4, lsl fp

08001868 <UserToPMABufferCopy>:
void UserToPMABufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;   /* n = (wNBytes + 1) / 2 */
  u32 i, temp1, temp2;
  u16 *pdwVal;
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
 8001868:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
  u32 n = (wNBytes + 1) >> 1;   /* n = (wNBytes + 1) / 2 */
 800186c:	3201      	adds	r2, #1
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
 800186e:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
  u32 n = (wNBytes + 1) >> 1;   /* n = (wNBytes + 1) / 2 */
 8001872:	1052      	asrs	r2, r2, #1
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
 8001874:	0049      	lsls	r1, r1, #1
  for (i = n; i != 0; i--)
 8001876:	b902      	cbnz	r2, 800187a <UserToPMABufferCopy+0x12>
    temp2 = temp1 | (u16) * pbUsrBuf << 8;
    *pdwVal++ = temp2;
    pdwVal++;
    pbUsrBuf++;
  }
}
 8001878:	4770      	bx	lr
    temp2 = temp1 | (u16) * pbUsrBuf << 8;
 800187a:	f830 3b02 	ldrh.w	r3, [r0], #2
  for (i = n; i != 0; i--)
 800187e:	3a01      	subs	r2, #1
    *pdwVal++ = temp2;
 8001880:	f821 3b04 	strh.w	r3, [r1], #4
  for (i = n; i != 0; i--)
 8001884:	e7f7      	b.n	8001876 <UserToPMABufferCopy+0xe>

08001886 <PMAToUserBufferCopy>:
void PMAToUserBufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;/* /2*/
  u32 i;
  u32 *pdwVal;
  pdwVal = (u32 *)(wPMABufAddr * 2 + PMAAddr);
 8001886:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
  u32 n = (wNBytes + 1) >> 1;/* /2*/
 800188a:	3201      	adds	r2, #1
  pdwVal = (u32 *)(wPMABufAddr * 2 + PMAAddr);
 800188c:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
  u32 n = (wNBytes + 1) >> 1;/* /2*/
 8001890:	1052      	asrs	r2, r2, #1
  pdwVal = (u32 *)(wPMABufAddr * 2 + PMAAddr);
 8001892:	0049      	lsls	r1, r1, #1
  for (i = n; i != 0; i--)
 8001894:	b902      	cbnz	r2, 8001898 <PMAToUserBufferCopy+0x12>
  {
    *(u16*)pbUsrBuf++ = *pdwVal++;
    pbUsrBuf++;
  }
}
 8001896:	4770      	bx	lr
    *(u16*)pbUsrBuf++ = *pdwVal++;
 8001898:	f851 3b04 	ldr.w	r3, [r1], #4
  for (i = n; i != 0; i--)
 800189c:	3a01      	subs	r2, #1
    *(u16*)pbUsrBuf++ = *pdwVal++;
 800189e:	f820 3b02 	strh.w	r3, [r0], #2
  for (i = n; i != 0; i--)
 80018a2:	e7f7      	b.n	8001894 <PMAToUserBufferCopy+0xe>

Disassembly of section .data:

20000000 <Device_Property>:
20000000:	080004bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, sl}
20000004:	08000165 	stmdaeq	r0, {r0, r2, r5, r6, r8}
20000008:	08000133 	stmdaeq	r0, {r0, r1, r4, r5, r8}
2000000c:	080002f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9}
20000010:	08000259 	stmdaeq	r0, {r0, r3, r4, r6, r9}
20000014:	080002cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9}
20000018:	08000135 	stmdaeq	r0, {r0, r2, r4, r5, r8}
2000001c:	08000215 	stmdaeq	r0, {r0, r2, r4, r9}
20000020:	08000221 	stmdaeq	r0, {r0, r5, r9}
20000024:	0800022d 	stmdaeq	r0, {r0, r2, r3, r5, r9}
20000028:	0800024d 	stmdaeq	r0, {r0, r2, r3, r6, r9}
2000002c:	00000000 	andeq	r0, r0, r0
20000030:	00000040 	andeq	r0, r0, r0, asr #32

20000034 <Device_Table>:
DEVICE Device_Table = {
20000034:	00000101 	andeq	r0, r0, r1, lsl #2

20000038 <User_Standard_Requests>:
USER_STANDARD_REQUESTS User_Standard_Requests = {
20000038:	080002f7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r9}
2000003c:	08000141 	stmdaeq	r0, {r0, r6, r8}
20000040:	080002f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9}
20000044:	080002fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r9}
20000048:	080002fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9}
2000004c:	080002ff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r9}
20000050:	08000301 	stmdaeq	r0, {r0, r8, r9}
20000054:	080002f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9}
20000058:	08000159 	stmdaeq	r0, {r0, r3, r4, r6, r8}

2000005c <pEpInt_IN>:
void (*pEpInt_IN[7])(void) = {
2000005c:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
20000060:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
20000064:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
20000068:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
2000006c:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
20000070:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
20000074:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}

20000078 <pEpInt_OUT>:
void (*pEpInt_OUT[7])(void) = {
20000078:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
2000007c:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
20000080:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
20000084:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
20000088:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
2000008c:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}
20000090:	080002f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9}

20000094 <u8_usbConfigDescriptorDFU>:
    u8_usbFunctionalDescriptor,
    0x09
};

#define u8_usbConfigDescriptorDFU_LENGTH 45
u8 u8_usbConfigDescriptorDFU[u8_usbConfigDescriptorDFU_LENGTH] = {
20000094:	002d0209 	eoreq	r0, sp, r9, lsl #4
20000098:	80000101 	andhi	r0, r0, r1, lsl #2
2000009c:	00040932 	andeq	r0, r4, r2, lsr r9
200000a0:	01fe0000 	mvnseq	r0, r0
200000a4:	04090402 	streq	r0, [r9], #-1026	; 0xfffffbfe
200000a8:	fe000100 	cdp2	1, 0, cr0, cr0, cr0, {0}
200000ac:	09050201 	stmdbeq	r5, {r0, r9}
200000b0:	00020004 	andeq	r0, r2, r4
200000b4:	060201fe 			; <UNDEFINED> instruction: 0x060201fe
200000b8:	ff032109 			; <UNDEFINED> instruction: 0xff032109
200000bc:	10080000 	andne	r0, r8, r0
200000c0:	 	andeq	r1, r1, r1, lsl #4

200000c1 <u8_usbDeviceDescriptorDFU>:
u8 u8_usbDeviceDescriptorDFU[18] = {
200000c1:	01000112 	tsteq	r0, r2, lsl r1
200000c5:	40000000 	andmi	r0, r0, r0
200000c9:	00031eaf 	andeq	r1, r3, pc, lsr #29
200000cd:	02010201 	andeq	r0, r1, #268435456	; 0x10000000
200000d1:	 	tstcs	r9, r3, lsl #2

200000d3 <u8_usbFunctionalDescriptor>:
u8 u8_usbFunctionalDescriptor[9] = {
200000d3:	ff032109 			; <UNDEFINED> instruction: 0xff032109
200000d7:	10080000 	andne	r0, r8, r0
200000db:	 	movwpl	r8, #12289	; 0x3001

200000dc <u8_usbStringAlt0>:
    USB_SERIAL_STR_LEN,
    0x03,
    'L', 0, 'L', 0, 'M', 0, ' ', 0, '0', 0, '0', 0, '3', 0
};

    u8 u8_usbStringAlt0[ALT0_STR_LEN] = {
200000dc:	00530380 	subseq	r0, r3, r0, lsl #7
200000e0:	004d0054 	subeq	r0, sp, r4, asr r0
200000e4:	00320033 	eorseq	r0, r2, r3, lsr r0
200000e8:	00750064 	rsbseq	r0, r5, r4, rrx
200000ec:	006e0069 	rsbeq	r0, lr, r9, rrx
200000f0:	0020006f 	eoreq	r0, r0, pc, rrx
200000f4:	006f0062 	rsbeq	r0, pc, r2, rrx
200000f8:	0074006f 	rsbseq	r0, r4, pc, rrx
200000fc:	006f006c 	rsbeq	r0, pc, ip, rrx
20000100:	00640061 	rsbeq	r0, r4, r1, rrx
20000104:	00720065 	rsbseq	r0, r2, r5, rrx
20000108:	00760020 	rsbseq	r0, r6, r0, lsr #32
2000010c:	002e0031 	eoreq	r0, lr, r1, lsr r0
20000110:	00200030 	eoreq	r0, r0, r0, lsr r0
20000114:	00450020 	subeq	r0, r5, r0, lsr #32
20000118:	00520052 	subseq	r0, r2, r2, asr r0
2000011c:	0052004f 	subseq	r0, r2, pc, asr #32
20000120:	0020002e 	eoreq	r0, r0, lr, lsr #32
20000124:	00700055 	rsbseq	r0, r0, r5, asr r0
20000128:	006f006c 	rsbeq	r0, pc, ip, rrx
2000012c:	00640061 	rsbeq	r0, r4, r1, rrx
20000130:	00740020 	rsbseq	r0, r4, r0, lsr #32
20000134:	0020006f 	eoreq	r0, r0, pc, rrx
20000138:	00410052 	subeq	r0, r1, r2, asr r0
2000013c:	0020004d 	eoreq	r0, r0, sp, asr #32
20000140:	006f006e 	rsbeq	r0, pc, lr, rrx
20000144:	00200074 	eoreq	r0, r0, r4, ror r0
20000148:	00750073 	rsbseq	r0, r5, r3, ror r0
2000014c:	00700070 	rsbseq	r0, r0, r0, ror r0
20000150:	0072006f 	rsbseq	r0, r2, pc, rrx
20000154:	00650074 	rsbeq	r0, r5, r4, ror r0
20000158:	002e0064 	eoreq	r0, lr, r4, rrx

2000015c <u8_usbStringAlt1>:
    0x03,
    ALT0_MSG_STR
    };


    u8 u8_usbStringAlt1[ALT1_STR_LEN] = {
2000015c:	0053036c 	subseq	r0, r3, ip, ror #6
20000160:	004d0054 	subeq	r0, sp, r4, asr r0
20000164:	00320033 	eorseq	r0, r2, r3, lsr r0
20000168:	00750064 	rsbseq	r0, r5, r4, rrx
2000016c:	006e0069 	rsbeq	r0, lr, r9, rrx
20000170:	0020006f 	eoreq	r0, r0, pc, rrx
20000174:	006f0062 	rsbeq	r0, pc, r2, rrx
20000178:	0074006f 	rsbseq	r0, r4, pc, rrx
2000017c:	006f006c 	rsbeq	r0, pc, ip, rrx
20000180:	00640061 	rsbeq	r0, r4, r1, rrx
20000184:	00720065 	rsbseq	r0, r2, r5, rrx
20000188:	00760020 	rsbseq	r0, r6, r0, lsr #32
2000018c:	002e0031 	eoreq	r0, lr, r1, lsr r0
20000190:	00200030 	eoreq	r0, r0, r0, lsr r0
20000194:	00550020 	subseq	r0, r5, r0, lsr #32
20000198:	006c0070 	rsbeq	r0, ip, r0, ror r0
2000019c:	0061006f 	rsbeq	r0, r1, pc, rrx
200001a0:	00200064 	eoreq	r0, r0, r4, rrx
200001a4:	006f0074 	rsbeq	r0, pc, r4, ror r0	; <UNPREDICTABLE>
200001a8:	00460020 	subeq	r0, r6, r0, lsr #32
200001ac:	0061006c 	rsbeq	r0, r1, ip, rrx
200001b0:	00680073 	rsbeq	r0, r8, r3, ror r0
200001b4:	00300020 	eorseq	r0, r0, r0, lsr #32
200001b8:	00380078 	eorseq	r0, r8, r8, ror r0
200001bc:	00300030 	eorseq	r0, r0, r0, lsr r0
200001c0:	00300035 	eorseq	r0, r0, r5, lsr r0
200001c4:	00300030 	eorseq	r0, r0, r0, lsr r0

200001c8 <u8_usbStringAlt2>:
    0x03,
    ALT1_MSG_STR
    };


    u8 u8_usbStringAlt2[ALT2_STR_LEN] = {
200001c8:	0053036c 	subseq	r0, r3, ip, ror #6
200001cc:	004d0054 	subeq	r0, sp, r4, asr r0
200001d0:	00320033 	eorseq	r0, r2, r3, lsr r0
200001d4:	00750064 	rsbseq	r0, r5, r4, rrx
200001d8:	006e0069 	rsbeq	r0, lr, r9, rrx
200001dc:	0020006f 	eoreq	r0, r0, pc, rrx
200001e0:	006f0062 	rsbeq	r0, pc, r2, rrx
200001e4:	0074006f 	rsbseq	r0, r4, pc, rrx
200001e8:	006f006c 	rsbeq	r0, pc, ip, rrx
200001ec:	00640061 	rsbeq	r0, r4, r1, rrx
200001f0:	00720065 	rsbseq	r0, r2, r5, rrx
200001f4:	00760020 	rsbseq	r0, r6, r0, lsr #32
200001f8:	002e0031 	eoreq	r0, lr, r1, lsr r0
200001fc:	00200030 	eoreq	r0, r0, r0, lsr r0
20000200:	00550020 	subseq	r0, r5, r0, lsr #32
20000204:	006c0070 	rsbeq	r0, ip, r0, ror r0
20000208:	0061006f 	rsbeq	r0, r1, pc, rrx
2000020c:	00200064 	eoreq	r0, r0, r4, rrx
20000210:	006f0074 	rsbeq	r0, pc, r4, ror r0	; <UNPREDICTABLE>
20000214:	00460020 	subeq	r0, r6, r0, lsr #32
20000218:	0061006c 	rsbeq	r0, r1, ip, rrx
2000021c:	00680073 	rsbeq	r0, r8, r3, ror r0
20000220:	00300020 	eorseq	r0, r0, r0, lsr #32
20000224:	00380078 	eorseq	r0, r8, r8, ror r0
20000228:	00300030 	eorseq	r0, r0, r0, lsr r0
2000022c:	00300032 	eorseq	r0, r0, r2, lsr r0
20000230:	00300030 	eorseq	r0, r0, r0, lsr r0

20000234 <u8_usbStringLangId>:
u8 u8_usbStringLangId[USB_STR_LANG_ID_LEN] = {
20000234:	04090304 	streq	r0, [r9], #-772	; 0xfffffcfc

20000238 <u8_usbStringProduct>:
u8 u8_usbStringProduct[USB_PRODUCT_STR_LEN] = {
20000238:	004d0314 	subeq	r0, sp, r4, lsl r3
2000023c:	00700061 	rsbseq	r0, r0, r1, rrx
20000240:	0065006c 	rsbeq	r0, r5, ip, rrx
20000244:	00300020 	eorseq	r0, r0, r0, lsr #32
20000248:	00330030 	eorseq	r0, r3, r0, lsr r0

2000024c <u8_usbStringSerial>:
u8 u8_usbStringSerial[USB_SERIAL_STR_LEN] = {
2000024c:	004c0310 	subeq	r0, ip, r0, lsl r3
20000250:	004d004c 	subeq	r0, sp, ip, asr #32
20000254:	00300020 	eorseq	r0, r0, r0, lsr #32
20000258:	00330030 	eorseq	r0, r3, r0, lsr r0

2000025c <u8_usbStringVendor>:
u8 u8_usbStringVendor[USB_VENDOR_STR_LEN] = {
2000025c:	004c0312 	subeq	r0, ip, r2, lsl r3
20000260:	00610065 	rsbeq	r0, r1, r5, rrx
20000264:	004c0066 	subeq	r0, ip, r6, rrx
20000268:	00620061 	rsbeq	r0, r2, r1, rrx
2000026c:	00000073 	andeq	r0, r0, r3, ror r0

20000270 <usbConfigDescriptorDFU>:
ONE_DESCRIPTOR usbConfigDescriptorDFU = {
20000270:	20000094 	mulcs	r0, r4, r0
20000274:	0000002d 	andeq	r0, r0, sp, lsr #32

20000278 <usbDeviceDescriptorDFU>:
ONE_DESCRIPTOR usbDeviceDescriptorDFU = {
20000278:	200000c1 	andcs	r0, r0, r1, asr #1
2000027c:	00000012 	andeq	r0, r0, r2, lsl r0

20000280 <usbFunctionalDescriptor>:
ONE_DESCRIPTOR usbFunctionalDescriptor = {
20000280:	200000d3 	ldrdcs	r0, [r0], -r3
20000284:	00000009 	andeq	r0, r0, r9

20000288 <usbStringDescriptor>:
    ALT2_MSG_STR
    };

u8 u8_usbStringInterface = NULL;

ONE_DESCRIPTOR usbStringDescriptor[STR_DESC_LEN] = {
20000288:	20000234 	andcs	r0, r0, r4, lsr r2
2000028c:	00000004 	andeq	r0, r0, r4
20000290:	2000025c 	andcs	r0, r0, ip, asr r2
20000294:	00000012 	andeq	r0, r0, r2, lsl r0
20000298:	20000238 	andcs	r0, r0, r8, lsr r2
2000029c:	00000014 	andeq	r0, r0, r4, lsl r0
200002a0:	2000024c 	andcs	r0, r0, ip, asr #4
200002a4:	00000010 	andeq	r0, r0, r0, lsl r0
200002a8:	200000dc 	ldrdcs	r0, [r0], -ip
200002ac:	00000080 	andeq	r0, r0, r0, lsl #1
200002b0:	2000015c 	andcs	r0, r0, ip, asr r1
200002b4:	0000006c 	andeq	r0, r0, ip, rrx
200002b8:	200001c8 	andcs	r0, r0, r8, asr #3
200002bc:	0000006c 	andeq	r0, r0, ip, rrx

200002c0 <userAppAddr>:
static volatile u32 userAppAddr = USER_CODE_RAM; /* default RAM user code location */
200002c0:	20000c00 	andcs	r0, r0, r0, lsl #24

200002c4 <userAppEnd>:
static volatile u32 userAppEnd = RAM_END;
200002c4:	20005000 	andcs	r5, r0, r0

Disassembly of section .bss.ResumeS:

200002c8 <ResumeS>:
	...

Disassembly of section .bss.bDeviceState:

200002cc <bDeviceState>:
vu32 bDeviceState = UNCONNECTED;
200002cc:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss.bIntPackSOF:

200002d0 <bIntPackSOF>:
	...

Disassembly of section .bss.wIstr:

200002d2 <wIstr>:
	...

Disassembly of section .bss.wTransferSize:

200002d4 <wTransferSize>:
int wTransferSize;
200002d4:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss.code_copy_lock:

200002d8 <code_copy_lock>:
	...

Disassembly of section .bss.dfuAppStatus:

200002d9 <dfuAppStatus>:
200002d9:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .bss.dfuBusy:

200002df <dfuBusy>:
	...

Disassembly of section .bss.recvBuffer:

200002e0 <recvBuffer>:
	...

Disassembly of section .bss.thisBlockLen:

20000ae0 <thisBlockLen>:
	...

Disassembly of section .bss.uploadBlockLen:

20000ae2 <uploadBlockLen>:
	...

Disassembly of section .bss.userFirmwareLen:

20000ae4 <userFirmwareLen>:
static volatile u32 userFirmwareLen = 0;
20000ae4:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss.userUploadType:

20000ae8 <userUploadType>:
	...

Disassembly of section .bss.SaveRState:

20000aea <SaveRState>:
	...

Disassembly of section .bss.SaveTState:

20000aec <SaveTState>:
	...

Disassembly of section .bss.Device_Info:

20000af0 <Device_Info>:
	...

Disassembly of section .bss.EPindex:

20000b0c <EPindex>:
	...

Disassembly of section .bss.pInformation:

20000b10 <pInformation>:
DEVICE_INFO *pInformation;
20000b10:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss.pProperty:

20000b14 <pProperty>:
DEVICE_PROP *pProperty;
20000b14:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss.pUser_Standard_Requests:

20000b18 <pUser_Standard_Requests>:
USER_STANDARD_REQUESTS  *pUser_Standard_Requests;
20000b18:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss.wInterrupt_Mask:

20000b1c <wInterrupt_Mask>:
	...

Disassembly of section .bss.Data_Mul_MaxPacketSize:

20000b1e <Data_Mul_MaxPacketSize>:
	...

Disassembly of section .bss.StatusInfo:

20000b20 <StatusInfo>:
	...

Disassembly of section ._usrstack:

20000b22 <_susrstack-0x2>:
	...

20000b24 <_susrstack>:
	...

Disassembly of section .comment:

00000000 <.comment>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void NOP_Process(void)
{
}
   0:	3a434347 	bcc	10d0d24 <__Stack_Size+0x10d0924>
}
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	31202955 			; <UNDEFINED> instruction: 0x31202955
    gpio_write_bit( bank,pin,1-onState);
   c:	2e312e30 	mrccs	14, 1, r2, cr1, cr0, {1}
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002e41 	andeq	r2, r0, r1, asr #28
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000024 	andeq	r0, r0, r4, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
{
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    gpio_write_bit( bank,pin,1-onState);
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
    while (count-- > 0)
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
}
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
        for (c = rate; c > 0; c--)
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <__Stack_Size+0x45c3c>
        gpio_write_bit( bank,pin,onState);
  2c:	Address 0x000000000000002c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
    gpio_write_bit( bank,pin,1-onState);
   c:	00000000 	andeq	r0, r0, r0
  10:	080000f0 	stmdaeq	r0, {r4, r5, r6, r7}
{
  14:	00000040 	andeq	r0, r0, r0, asr #32
    gpio_write_bit( bank,pin,1-onState);
  18:	08000130 	stmdaeq	r0, {r4, r5, r8}
    while (count-- > 0)
  1c:	00000002 	andeq	r0, r0, r2
	...
        for (c = rate; c > 0; c--)
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
        gpio_write_bit( bank,pin,onState);
  2c:	00220002 	eoreq	r0, r2, r2
  30:	00040000 	andeq	r0, r4, r0
	...
        gpio_write_bit( bank,pin,1-onState);
  3c:	0000007a 	andeq	r0, r0, sl, ror r0
	...
        for (c = rate; c > 0; c--)
  48:	000000cc 	andeq	r0, r0, ip, asr #1
            asm volatile("nop");
  4c:	00480002 	subeq	r0, r8, r2
        for (c = rate; c > 0; c--)
  50:	00040000 	andeq	r0, r4, r0




.thumb_func
__RESETFAULTMASK:
  54:	00000000 	andeq	r0, r0, r0




.thumb_func
__SETFAULTMASK:
  58:	08000132 	stmdaeq	r0, {r1, r4, r5, r8}




.thumb_func
__READ_FAULTMASK:
  5c:	00000002 	andeq	r0, r0, r2




.thumb_func
__BASEPRICONFIG:
  60:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}

  64:	0000000a 	andeq	r0, r0, sl




.thumb_func
__GetBASEPRI:
  68:	08000140 	stmdaeq	r0, {r6, r8}



.thumb_func
__REV_HalfWord:

  6c:	00000018 	andeq	r0, r0, r8, lsl r0
  REV16 r0, r0
  70:	08000158 	stmdaeq	r0, {r3, r4, r6, r8}



.thumb_func
__REV_Word:

  74:	0000000c 	andeq	r0, r0, ip
  78:	08000164 	stmdaeq	r0, {r2, r5, r6, r8}
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
  7c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPDblBuffCount(u8 bEpNum, u8 bDir, u16 wCount)
{
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
  80:	08000214 	stmdaeq	r0, {r2, r4, r9}
  84:	0000000c 	andeq	r0, r0, ip
  88:	08000220 	stmdaeq	r0, {r5, r9}
}
  8c:	0000000c 	andeq	r0, r0, ip
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
  90:	0800022c 	stmdaeq	r0, {r2, r3, r5, r9}
  94:	00000020 	andeq	r0, r0, r0, lsr #32
  98:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
  9c:	0000000c 	andeq	r0, r0, ip
  a0:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
}
  a4:	00000074 	andeq	r0, r0, r4, ror r0
  a8:	080002cc 	stmdaeq	r0, {r2, r3, r6, r7, r9}
  ac:	00000024 	andeq	r0, r0, r4, lsr #32
  b0:	08000304 	stmdaeq	r0, {r2, r8, r9}
  b4:	00000084 	andeq	r0, r0, r4, lsl #1
  b8:	00000000 	andeq	r0, r0, r0
  bc:	00000004 	andeq	r0, r0, r4
  c0:	08000388 	stmdaeq	r0, {r3, r7, r8, r9}
  c4:	00000020 	andeq	r0, r0, r0, lsr #32
  c8:	080003a8 	stmdaeq	r0, {r3, r5, r7, r8, r9}
  cc:	00000020 	andeq	r0, r0, r0, lsr #32
  d0:	080003c8 	stmdaeq	r0, {r3, r6, r7, r8, r9}
  d4:	00000088 	andeq	r0, r0, r8, lsl #1
  d8:	08000450 	stmdaeq	r0, {r4, r6, sl}
  dc:	00000028 	andeq	r0, r0, r8, lsr #32
  e0:	08000478 	stmdaeq	r0, {r3, r4, r5, r6, sl}
  e4:	0000001c 	andeq	r0, r0, ip, lsl r0
  e8:	08000494 	stmdaeq	r0, {r2, r4, r7, sl}
  ec:	00000004 	andeq	r0, r0, r4
  f0:	08000498 	stmdaeq	r0, {r3, r4, r7, sl}
  f4:	00000024 	andeq	r0, r0, r4, lsr #32
  f8:	080004bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl}
  fc:	00000040 	andeq	r0, r0, r0, asr #32
 100:	080004fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl}
 104:	00000022 	andeq	r0, r0, r2, lsr #32
 108:	08000520 	stmdaeq	r0, {r5, r8, sl}
 10c:	000000cc 	andeq	r0, r0, ip, asr #1
	...
 118:	00000014 	andeq	r0, r0, r4, lsl r0
 11c:	0e1d0002 	cdpeq	0, 1, cr0, cr13, cr2, {0}
 120:	00040000 	andeq	r0, r4, r0
	...
 130:	0000001c 	andeq	r0, r0, ip, lsl r0
 134:	10820002 	addne	r0, r2, r2
 138:	00040000 	andeq	r0, r4, r0
 13c:	00000000 	andeq	r0, r0, r0
 140:	080005ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl}
 144:	00000088 	andeq	r0, r0, r8, lsl #1
	...
 150:	000000d4 	ldrdeq	r0, [r0], -r4
 154:	12c40002 	sbcne	r0, r4, #2
 158:	00040000 	andeq	r0, r4, r0
 15c:	00000000 	andeq	r0, r0, r0
 160:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
 164:	00000014 	andeq	r0, r0, r4, lsl r0
 168:	00000000 	andeq	r0, r0, r0
 16c:	00000010 	andeq	r0, r0, r0, lsl r0
 170:	08000688 	stmdaeq	r0, {r3, r7, r9, sl}
 174:	00000004 	andeq	r0, r0, r4
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000052 	andeq	r0, r0, r2, asr r0
 180:	0800068c 	stmdaeq	r0, {r2, r3, r7, r9, sl}
 184:	0000003c 	andeq	r0, r0, ip, lsr r0
 188:	080006c8 	stmdaeq	r0, {r3, r6, r7, r9, sl}
 18c:	0000005c 	andeq	r0, r0, ip, asr r0
 190:	08000724 	stmdaeq	r0, {r2, r5, r8, r9, sl}
 194:	00000002 	andeq	r0, r0, r2
 198:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
 19c:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a0:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
 1a4:	00000014 	andeq	r0, r0, r4, lsl r0
 1a8:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
 1ac:	00000012 	andeq	r0, r0, r2, lsl r0
 1b0:	0800076c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl}
 1b4:	00000030 	andeq	r0, r0, r0, lsr r0
 1b8:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
 1bc:	00000048 	andeq	r0, r0, r8, asr #32
 1c0:	080007e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl}
 1c4:	0000006c 	andeq	r0, r0, ip, rrx
 1c8:	08000850 	stmdaeq	r0, {r4, r6, fp}
 1cc:	00000024 	andeq	r0, r0, r4, lsr #32
 1d0:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
 1d4:	00000028 	andeq	r0, r0, r8, lsr #32
 1d8:	0800089c 	stmdaeq	r0, {r2, r3, r4, r7, fp}
 1dc:	00000014 	andeq	r0, r0, r4, lsl r0
 1e0:	080008b0 	stmdaeq	r0, {r4, r5, r7, fp}
 1e4:	00000028 	andeq	r0, r0, r8, lsr #32
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	00000030 	andeq	r0, r0, r0, lsr r0
 1f0:	080008d8 	stmdaeq	r0, {r3, r4, r6, r7, fp}
 1f4:	00000048 	andeq	r0, r0, r8, asr #32
 1f8:	08000920 	stmdaeq	r0, {r5, r8, fp}
 1fc:	0000000c 	andeq	r0, r0, ip
 200:	0800092c 	stmdaeq	r0, {r2, r3, r5, r8, fp}
 204:	00000018 	andeq	r0, r0, r8, lsl r0
 208:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
 20c:	00000012 	andeq	r0, r0, r2, lsl r0
 210:	08000958 	stmdaeq	r0, {r3, r4, r6, r8, fp}
 214:	00000014 	andeq	r0, r0, r4, lsl r0
 218:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
 21c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
 228:	0000007c 	andeq	r0, r0, ip, ror r0
 22c:	1e960002 	cdpne	0, 9, cr0, cr6, cr2, {0}
 230:	00040000 	andeq	r0, r4, r0
 234:	00000000 	andeq	r0, r0, r0
 238:	08000984 	stmdaeq	r0, {r2, r7, r8, fp}
 23c:	0000005c 	andeq	r0, r0, ip, asr r0
 240:	080009e0 	stmdaeq	r0, {r5, r6, r7, r8, fp}
 244:	00000044 	andeq	r0, r0, r4, asr #32
 248:	00000000 	andeq	r0, r0, r0
 24c:	00000002 	andeq	r0, r0, r2
 250:	08000a24 	stmdaeq	r0, {r2, r5, r9, fp}
 254:	00000018 	andeq	r0, r0, r8, lsl r0
 258:	08000a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp}
 25c:	00000018 	andeq	r0, r0, r8, lsl r0
 260:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
 264:	00000028 	andeq	r0, r0, r8, lsr #32
 268:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
 26c:	00000030 	andeq	r0, r0, r0, lsr r0
 270:	08000aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp}
 274:	00000064 	andeq	r0, r0, r4, rrx
 278:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
 27c:	00000234 	andeq	r0, r0, r4, lsr r2
 280:	00000000 	andeq	r0, r0, r0
 284:	0000000c 	andeq	r0, r0, ip
 288:	00000000 	andeq	r0, r0, r0
 28c:	0000000c 	andeq	r0, r0, ip
 290:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
 294:	0000000c 	andeq	r0, r0, ip
 298:	08000d50 	stmdaeq	r0, {r4, r6, r8, sl, fp}
 29c:	00000004 	andeq	r0, r0, r4
	...
 2a8:	0000019c 	muleq	r0, ip, r1
 2ac:	25920002 	ldrcs	r0, [r2, #2]
 2b0:	00040000 	andeq	r0, r4, r0
	...
 2bc:	0000000c 	andeq	r0, r0, ip
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000010 	andeq	r0, r0, r0, lsl r0
 2c8:	00000000 	andeq	r0, r0, r0
 2cc:	0000000c 	andeq	r0, r0, ip
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	00000010 	andeq	r0, r0, r0, lsl r0
 2d8:	00000000 	andeq	r0, r0, r0
 2dc:	00000010 	andeq	r0, r0, r0, lsl r0
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	0000000c 	andeq	r0, r0, ip
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	00000010 	andeq	r0, r0, r0, lsl r0
 2f0:	00000000 	andeq	r0, r0, r0
 2f4:	00000014 	andeq	r0, r0, r4, lsl r0
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000010 	andeq	r0, r0, r0, lsl r0
 300:	00000000 	andeq	r0, r0, r0
 304:	0000000e 	andeq	r0, r0, lr
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000010 	andeq	r0, r0, r0, lsl r0
 310:	00000000 	andeq	r0, r0, r0
 314:	0000001c 	andeq	r0, r0, ip, lsl r0
 318:	00000000 	andeq	r0, r0, r0
 31c:	00000012 	andeq	r0, r0, r2, lsl r0
 320:	08000d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp}
 324:	0000002a 	andeq	r0, r0, sl, lsr #32
 328:	00000000 	andeq	r0, r0, r0
 32c:	0000002a 	andeq	r0, r0, sl, lsr #32
 330:	00000000 	andeq	r0, r0, r0
 334:	00000026 	andeq	r0, r0, r6, lsr #32
 338:	00000000 	andeq	r0, r0, r0
 33c:	00000012 	andeq	r0, r0, r2, lsl r0
 340:	00000000 	andeq	r0, r0, r0
 344:	00000012 	andeq	r0, r0, r2, lsl r0
 348:	00000000 	andeq	r0, r0, r0
 34c:	0000001e 	andeq	r0, r0, lr, lsl r0
 350:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
 354:	0000001e 	andeq	r0, r0, lr, lsl r0
 358:	00000000 	andeq	r0, r0, r0
 35c:	0000001e 	andeq	r0, r0, lr, lsl r0
 360:	08000d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp}
 364:	0000001c 	andeq	r0, r0, ip, lsl r0
 368:	00000000 	andeq	r0, r0, r0
 36c:	0000001a 	andeq	r0, r0, sl, lsl r0
 370:	00000000 	andeq	r0, r0, r0
 374:	0000001a 	andeq	r0, r0, sl, lsl r0
 378:	00000000 	andeq	r0, r0, r0
 37c:	00000018 	andeq	r0, r0, r8, lsl r0
 380:	00000000 	andeq	r0, r0, r0
 384:	0000001c 	andeq	r0, r0, ip, lsl r0
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000020 	andeq	r0, r0, r0, lsr #32
 390:	00000000 	andeq	r0, r0, r0
 394:	00000020 	andeq	r0, r0, r0, lsr #32
 398:	08000dbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, fp}
 39c:	00000026 	andeq	r0, r0, r6, lsr #32
 3a0:	08000de2 	stmdaeq	r0, {r1, r5, r6, r7, r8, sl, fp}
 3a4:	00000026 	andeq	r0, r0, r6, lsr #32
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	0000001e 	andeq	r0, r0, lr, lsl r0
 3b0:	00000000 	andeq	r0, r0, r0
 3b4:	00000012 	andeq	r0, r0, r2, lsl r0
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	00000024 	andeq	r0, r0, r4, lsr #32
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	00000024 	andeq	r0, r0, r4, lsr #32
 3c8:	08000e08 	stmdaeq	r0, {r3, r9, sl, fp}
 3cc:	00000020 	andeq	r0, r0, r0, lsr #32
 3d0:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
 3d4:	00000020 	andeq	r0, r0, r0, lsr #32
 3d8:	08000e48 	stmdaeq	r0, {r3, r6, r9, sl, fp}
 3dc:	00000020 	andeq	r0, r0, r0, lsr #32
 3e0:	00000000 	andeq	r0, r0, r0
 3e4:	00000026 	andeq	r0, r0, r6, lsr #32
 3e8:	08000e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp}
 3ec:	00000044 	andeq	r0, r0, r4, asr #32
 3f0:	00000000 	andeq	r0, r0, r0
 3f4:	00000024 	andeq	r0, r0, r4, lsr #32
 3f8:	00000000 	andeq	r0, r0, r0
 3fc:	00000024 	andeq	r0, r0, r4, lsr #32
 400:	00000000 	andeq	r0, r0, r0
 404:	00000040 	andeq	r0, r0, r0, asr #32
 408:	00000000 	andeq	r0, r0, r0
 40c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
 410:	00000000 	andeq	r0, r0, r0
 414:	00000060 	andeq	r0, r0, r0, rrx
 418:	00000000 	andeq	r0, r0, r0
 41c:	00000060 	andeq	r0, r0, r0, rrx
 420:	00000000 	andeq	r0, r0, r0
 424:	0000004c 	andeq	r0, r0, ip, asr #32
 428:	00000000 	andeq	r0, r0, r0
 42c:	00000046 	andeq	r0, r0, r6, asr #32
 430:	00000000 	andeq	r0, r0, r0
 434:	00000006 	andeq	r0, r0, r6
 438:	00000000 	andeq	r0, r0, r0
 43c:	00000006 	andeq	r0, r0, r6
	...
 448:	00000024 	andeq	r0, r0, r4, lsr #32
 44c:	33580002 	cmpcc	r8, #2
 450:	00040000 	andeq	r0, r4, r0
 454:	00000000 	andeq	r0, r0, r0
 458:	08000eac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sl, fp}
 45c:	00000194 	muleq	r0, r4, r1
 460:	00000000 	andeq	r0, r0, r0
 464:	00000080 	andeq	r0, r0, r0, lsl #1
	...
 470:	0000001c 	andeq	r0, r0, ip, lsl r0
 474:	35f00002 	ldrbcc	r0, [r0, #2]!
 478:	00040000 	andeq	r0, r4, r0
 47c:	00000000 	andeq	r0, r0, r0
 480:	08001040 	stmdaeq	r0, {r6, ip}
 484:	00000034 	andeq	r0, r0, r4, lsr r0
	...
 490:	00000094 	muleq	r0, r4, r0
 494:	3a6c0002 	bcc	1b004a4 <__Stack_Size+0x1b000a4>
 498:	00040000 	andeq	r0, r4, r0
 49c:	00000000 	andeq	r0, r0, r0
 4a0:	08001074 	stmdaeq	r0, {r2, r4, r5, r6, ip}
 4a4:	00000024 	andeq	r0, r0, r4, lsr #32
 4a8:	08001098 	stmdaeq	r0, {r3, r4, r7, ip}
 4ac:	00000024 	andeq	r0, r0, r4, lsr #32
 4b0:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
 4b4:	0000008c 	andeq	r0, r0, ip, lsl #1
 4b8:	08001148 	stmdaeq	r0, {r3, r6, r8, ip}
 4bc:	000000ac 	andeq	r0, r0, ip, lsr #1
 4c0:	080011f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip}
 4c4:	00000038 	andeq	r0, r0, r8, lsr r0
 4c8:	0800122c 	stmdaeq	r0, {r2, r3, r5, r9, ip}
 4cc:	00000048 	andeq	r0, r0, r8, asr #32
 4d0:	08001274 	stmdaeq	r0, {r2, r4, r5, r6, r9, ip}
 4d4:	000000cc 	andeq	r0, r0, ip, asr #1
 4d8:	08001340 	stmdaeq	r0, {r6, r8, r9, ip}
 4dc:	0000007c 	andeq	r0, r0, ip, ror r0
 4e0:	080013bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip}
 4e4:	00000024 	andeq	r0, r0, r4, lsr #32
 4e8:	080013e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, ip}
 4ec:	0000001c 	andeq	r0, r0, ip, lsl r0
 4f0:	080013fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip}
 4f4:	00000040 	andeq	r0, r0, r0, asr #32
 4f8:	0800143c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip}
 4fc:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 500:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 504:	000000c4 	andeq	r0, r0, r4, asr #1
 508:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
 50c:	0000003c 	andeq	r0, r0, ip, lsr r0
 510:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
 514:	0000005c 	andeq	r0, r0, ip, asr r0
 518:	00000000 	andeq	r0, r0, r0
 51c:	00000002 	andeq	r0, r0, r2
	...
 528:	00000024 	andeq	r0, r0, r4, lsr #32
 52c:	49890002 	stmibmi	r9, {r1}
 530:	00040000 	andeq	r0, r4, r0
 534:	00000000 	andeq	r0, r0, r0
 538:	08001868 	stmdaeq	r0, {r3, r5, r6, fp, ip}
 53c:	0000001e 	andeq	r0, r0, lr, lsl r0
 540:	08001886 	stmdaeq	r0, {r1, r2, r7, fp, ip}
 544:	0000001e 	andeq	r0, r0, lr, lsl r0
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000001e 	andeq	r0, r0, lr, lsl r0
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
	...
    gpio_write_bit( bank,pin,1-onState);
      18:	0000001b 	andeq	r0, r0, fp, lsl r0
    while (count-- > 0)
      1c:	0000003b 	andeq	r0, r0, fp, lsr r0
}
      20:	00228001 	eoreq	r8, r2, r1
        for (c = rate; c > 0; c--)
      24:	00020000 	andeq	r0, r2, r0
      28:	00000012 	andeq	r0, r0, r2, lsl r0
        gpio_write_bit( bank,pin,onState);
      2c:	00750104 	rsbseq	r0, r5, r4, lsl #2
	...
        gpio_write_bit( bank,pin,1-onState);
      38:	00470000 	subeq	r0, r7, r0
      3c:	001b0000 	andseq	r0, fp, r0
      40:	003b0000 	eorseq	r0, fp, r0
      44:	80010000 	andhi	r0, r1, r0
        for (c = rate; c > 0; c--)
      48:	00000dd1 	ldrdeq	r0, [r0], -r1
            asm volatile("nop");
      4c:	00260004 	eoreq	r0, r6, r4
        for (c = rate; c > 0; c--)
      50:	01040000 	mrseq	r0, (UNDEF: 4)
__RESETFAULTMASK:
      54:	00000377 	andeq	r0, r0, r7, ror r3
__SETFAULTMASK:
      58:	0001740c 	andeq	r7, r1, ip, lsl #8
__READ_FAULTMASK:
      5c:	00001b00 	andeq	r1, r0, r0, lsl #22
__BASEPRICONFIG:
      60:	00005800 	andeq	r5, r0, r0, lsl #16

      64:	00000000 	andeq	r0, r0, r0
__GetBASEPRI:
      68:	00011b00 	andeq	r1, r1, r0, lsl #22

      6c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
  REV16 r0, r0
      70:	000001a5 	andeq	r0, r0, r5, lsr #3

      74:	c2050202 	andgt	r0, r5, #536870912	; 0x20000000
      78:	02000006 	andeq	r0, r0, #6
      7c:	066e0601 	strbteq	r0, [lr], -r1, lsl #12
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      80:	75030000 	strvc	r0, [r3, #-0]
      84:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
      88:	00461827 	subeq	r1, r6, r7, lsr #16
}
      8c:	04020000 	streq	r0, [r2], #-0
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      90:	00033007 	andeq	r3, r3, r7
      94:	00460400 	subeq	r0, r6, r0, lsl #8
      98:	75030000 	strvc	r0, [r3, #-0]
      9c:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
      a0:	00631828 	rsbeq	r1, r3, r8, lsr #16
}
      a4:	52040000 	andpl	r0, r4, #0
      a8:	02000000 	andeq	r0, r0, #0
      ac:	040e0702 	streq	r0, [lr], #-1794	; 0xfffff8fe
      b0:	75030000 	strvc	r0, [r3, #-0]
      b4:	29020038 	stmdbcs	r2, {r3, r4, r5}
      b8:	00007a18 	andeq	r7, r0, r8, lsl sl
      bc:	006a0400 	rsbeq	r0, sl, r0, lsl #8
      c0:	01020000 	mrseq	r0, (UNDEF: 2)
      c4:	00066c08 	andeq	r6, r6, r8, lsl #24
      c8:	007a0400 	rsbseq	r0, sl, r0, lsl #8
      cc:	6f050000 	svcvs	0x00050000
      d0:	02000004 	andeq	r0, r0, #4
      d4:	004d212f 	subeq	r2, sp, pc, lsr #2
      d8:	76030000 	strvc	r0, [r3], -r0
      dc:	02003875 	andeq	r3, r0, #7667712	; 0x750000
      e0:	00812131 	addeq	r2, r1, r1, lsr r1
      e4:	07060000 	streq	r0, [r6, -r0]
      e8:	00007a01 	andeq	r7, r0, r1, lsl #20
      ec:	0e370200 	cdpeq	2, 3, cr0, cr7, cr0, {0}
      f0:	000000b9 	strheq	r0, [r0], -r9
      f4:	0005f907 	andeq	pc, r5, r7, lsl #18
      f8:	67070000 	strvs	r0, [r7, -r0]
      fc:	01000007 	tsteq	r0, r7
     100:	046a0500 	strbteq	r0, [sl], #-1280	; 0xfffffb00
     104:	37020000 	strcc	r0, [r2, -r0]
     108:	00009e29 	andeq	r9, r0, r9, lsr #28
     10c:	07040200 	streq	r0, [r4, -r0, lsl #4]
     110:	00000335 	andeq	r0, r0, r5, lsr r3
     114:	0000c504 	andeq	ip, r0, r4, lsl #10
     118:	03040800 	movweq	r0, #18432	; 0x4800
     11c:	010f09a9 	smlatbeq	pc, r9, r9, r0	; <UNPREDICTABLE>
     120:	74090000 	strvc	r0, [r9], #-0
     124:	03000004 	movweq	r0, #4
     128:	006a08aa 	rsbeq	r0, sl, sl, lsr #17
     12c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     130:	00000526 	andeq	r0, r0, r6, lsr #10
     134:	6a08ab03 	bvs	22ad48 <__Stack_Size+0x22a948>
     138:	01000000 	mrseq	r0, (UNDEF: 0)
     13c:	00030509 	andeq	r0, r3, r9, lsl #10
     140:	08ac0300 	stmiaeq	ip!, {r8, r9}
     144:	0000006a 	andeq	r0, r0, sl, rrx
     148:	00640902 	rsbeq	r0, r4, r2, lsl #18
     14c:	ad030000 	stcge	0, cr0, [r3, #-0]
     150:	0000b90a 	andeq	fp, r0, sl, lsl #18
     154:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
     158:	00000497 	muleq	r0, r7, r4
     15c:	d103ae03 	tstle	r3, r3, lsl #28
     160:	0a000000 	beq	168 <_Minimum_Stack_Size+0x68>
     164:	00012104 	andeq	r2, r1, r4, lsl #2
     168:	df0c0b00 	svcle	0x000c0b00
     16c:	06000001 	streq	r0, [r0], -r1
     170:	5e15022a 	cdppl	2, 1, cr0, cr5, cr10, {1}
     174:	0d000000 	stceq	0, cr0, [r0, #-0]
     178:	00000320 	andeq	r0, r0, r0, lsr #6
     17c:	007a0107 	rsbseq	r0, sl, r7, lsl #2
     180:	16050000 	strne	r0, [r5], -r0
     184:	00015a0e 	andeq	r5, r1, lr, lsl #20
     188:	015b0700 	cmpeq	fp, r0, lsl #14
     18c:	07000000 	streq	r0, [r0, -r0]
     190:	00000261 	andeq	r0, r0, r1, ror #4
     194:	081e0701 	ldmdaeq	lr, {r0, r8, r9, sl}
     198:	07020000 	streq	r0, [r2, -r0]
     19c:	0000045a 	andeq	r0, r0, sl, asr r4
     1a0:	f20e0003 	vhadd.s8	d0, d14, d3
     1a4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     1a8:	82102404 	andshi	r2, r0, #4, 8	; 0x4000000
     1ac:	09000001 	stmdbeq	r0, {r0}
     1b0:	00000186 	andeq	r0, r0, r6, lsl #3
     1b4:	82072604 	andhi	r2, r7, #4, 12	; 0x400000
     1b8:	00000001 	andeq	r0, r0, r1
     1bc:	0005bd09 	andeq	fp, r5, r9, lsl #26
     1c0:	07270400 	streq	r0, [r7, -r0, lsl #8]!
     1c4:	00000052 	andeq	r0, r0, r2, asr r0
     1c8:	040a0004 	streq	r0, [sl], #-4
     1cc:	0000006a 	andeq	r0, r0, sl, rrx
     1d0:	0008b005 	andeq	fp, r8, r5
     1d4:	01290400 			; <UNDEFINED> instruction: 0x01290400
     1d8:	0000015a 	andeq	r0, r0, sl, asr r1
     1dc:	00075f0d 	andeq	r5, r7, sp, lsl #30
     1e0:	7a010700 	bvc	41de8 <__Stack_Size+0x419e8>
     1e4:	04000000 	streq	r0, [r0], #-0
     1e8:	01bf0e2d 			; <UNDEFINED> instruction: 0x01bf0e2d
     1ec:	01070000 	mrseq	r0, (UNDEF: 7)
     1f0:	00000009 	andeq	r0, r0, r9
     1f4:	00042107 	andeq	r2, r4, r7, lsl #2
     1f8:	9e070100 	adflss	f0, f7, f0
     1fc:	02000007 	andeq	r0, r0, #7
     200:	0001d107 	andeq	sp, r1, r7, lsl #2
     204:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
     208:	00000760 	andeq	r0, r0, r0, ror #14
     20c:	94033404 	strls	r3, [r3], #-1028	; 0xfffffbfc
     210:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     214:	00000926 	andeq	r0, r0, r6, lsr #18
     218:	1038040c 	eorsne	r0, r8, ip, lsl #8
     21c:	0000020d 	andeq	r0, r0, sp, lsl #4
     220:	00024709 	andeq	r4, r2, r9, lsl #14
     224:	08500400 	ldmdaeq	r0, {sl}^
     228:	00000052 	andeq	r0, r0, r2, asr r0
     22c:	02ce0900 	sbceq	r0, lr, #0, 18
     230:	51040000 	mrspl	r0, (UNDEF: 4)
     234:	00005208 	andeq	r5, r0, r8, lsl #4
     238:	d1090200 	mrsle	r0, R9_fiq
     23c:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
     240:	00520852 	subseq	r0, r2, r2, asr r8
     244:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
     248:	0000019c 	muleq	r0, ip, r1
     24c:	1c0b5304 	stcne	3, cr5, [fp], {4}
     250:	08000002 	stmdaeq	r0, {r1}
     254:	01820f00 	orreq	r0, r2, r0, lsl #30
     258:	021c0000 	andseq	r0, ip, #0
     25c:	52100000 	andspl	r0, r0, #0
     260:	00000000 	andeq	r0, r0, r0
     264:	020d040a 	andeq	r0, sp, #167772160	; 0xa000000
     268:	27050000 	strcs	r0, [r5, -r0]
     26c:	04000009 	streq	r0, [r0], #-9
     270:	01cb0254 	biceq	r0, fp, r4, asr r2
     274:	f70e0000 			; <UNDEFINED> instruction: 0xf70e0000
     278:	02000007 	andeq	r0, r0, #7
     27c:	56105804 	ldrpl	r5, [r0], -r4, lsl #16
     280:	09000002 	stmdbeq	r0, {r1}
     284:	00000945 	andeq	r0, r0, r5, asr #18
     288:	6a065a04 	bvs	196aa0 <__Stack_Size+0x1966a0>
     28c:	00000000 	andeq	r0, r0, r0
     290:	00036309 	andeq	r6, r3, r9, lsl #6
     294:	065b0400 	ldrbeq	r0, [fp], -r0, lsl #8
     298:	0000006a 	andeq	r0, r0, sl, rrx
     29c:	f8050001 			; <UNDEFINED> instruction: 0xf8050001
     2a0:	04000007 	streq	r0, [r0], #-7
     2a4:	022e015d 	eoreq	r0, lr, #1073741847	; 0x40000017
     2a8:	42110000 	andsmi	r0, r1, #0
     2ac:	04020057 	streq	r0, [r2], #-87	; 0xffffffa9
     2b0:	02890a62 	addeq	r0, r9, #401408	; 0x62000
     2b4:	62120000 	andsvs	r0, r2, #0
     2b8:	04003062 	streq	r3, [r0], #-98	; 0xffffff9e
     2bc:	006a0865 	rsbeq	r0, sl, r5, ror #16
     2c0:	12000000 	andne	r0, r0, #0
     2c4:	00316262 	eorseq	r6, r1, r2, ror #4
     2c8:	6a086604 	bvs	219ae0 <__Stack_Size+0x2196e0>
     2cc:	01000000 	mrseq	r0, (UNDEF: 0)
     2d0:	04021300 	streq	r1, [r2], #-768	; 0xfffffd00
     2d4:	02a8095f 	adceq	r0, r8, #1556480	; 0x17c000
     2d8:	77140000 	ldrvc	r0, [r4, -r0]
     2dc:	07610400 	strbeq	r0, [r1, -r0, lsl #8]!
     2e0:	00000052 	andeq	r0, r0, r2, asr r0
     2e4:	00776214 	rsbseq	r6, r7, r4, lsl r2
     2e8:	62036804 	andvs	r6, r3, #4, 16	; 0x40000
     2ec:	00000002 	andeq	r0, r0, r2
     2f0:	00043605 	andeq	r3, r4, r5, lsl #12
     2f4:	03690400 	cmneq	r9, #0, 8
     2f8:	00000289 	andeq	r0, r0, r9, lsl #5
     2fc:	0000a00e 	andeq	sl, r0, lr
     300:	6b041c00 	blvs	107308 <__Stack_Size+0x106f08>
     304:	00035110 	andeq	r5, r3, r0, lsl r1
     308:	057a0900 	ldrbeq	r0, [sl, #-2304]!	; 0xfffff700
     30c:	6d040000 	stcvs	0, cr0, [r4, #-0]
     310:	00006a06 	andeq	r6, r0, r6, lsl #20
     314:	c5090000 	strgt	r0, [r9, #-0]
     318:	04000001 	streq	r0, [r0], #-1
     31c:	006a066e 	rsbeq	r0, sl, lr, ror #12
     320:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
     324:	0000044f 	andeq	r0, r0, pc, asr #8
     328:	a80a6f04 	stmdage	sl, {r2, r8, r9, sl, fp, sp, lr}
     32c:	02000002 	andeq	r0, r0, #2
     330:	00019109 	andeq	r9, r1, r9, lsl #2
     334:	0a700400 	beq	1c0133c <__Stack_Size+0x1c00f3c>
     338:	000002a8 	andeq	r0, r0, r8, lsr #5
     33c:	08390904 	ldmdaeq	r9!, {r2, r8, fp}
     340:	71040000 	mrsvc	r0, (UNDEF: 4)
     344:	0002a80a 	andeq	sl, r2, sl, lsl #16
     348:	54090600 	strpl	r0, [r9], #-1536	; 0xfffffa00
     34c:	04000009 	streq	r0, [r0], #-9
     350:	006a0673 	rsbeq	r0, sl, r3, ror r6
     354:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
     358:	00000353 	andeq	r0, r0, r3, asr r3
     35c:	6a067404 	bvs	19d374 <__Stack_Size+0x19cf74>
     360:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     364:	0004a809 	andeq	sl, r4, r9, lsl #16
     368:	06750400 	ldrbteq	r0, [r5], -r0, lsl #8
     36c:	0000006a 	andeq	r0, r0, sl, rrx
     370:	088e090a 	stmeq	lr, {r1, r3, r8, fp}
     374:	76040000 	strvc	r0, [r4], -r0
     378:	00006a06 	andeq	r6, r0, r6, lsl #20
     37c:	46090b00 	strmi	r0, [r9], -r0, lsl #22
     380:	04000006 	streq	r0, [r0], #-6
     384:	006a0677 	rsbeq	r0, sl, r7, ror r6
     388:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
     38c:	0000073d 	andeq	r0, r0, sp, lsr r7
     390:	22117a04 	andscs	r7, r1, #4, 20	; 0x4000
     394:	10000002 	andne	r0, r0, r2
     398:	00a10500 	adceq	r0, r1, r0, lsl #10
     39c:	7b040000 	blvc	1003a4 <__Stack_Size+0xfffa4>
     3a0:	0002b402 	andeq	fp, r2, r2, lsl #8
     3a4:	076c0e00 	strbeq	r0, [ip, -r0, lsl #28]!
     3a8:	04340000 	ldrteq	r0, [r4], #-0
     3ac:	0414107d 	ldreq	r1, [r4], #-125	; 0xffffff83
     3b0:	67090000 	strvs	r0, [r9, -r0]
     3b4:	04000005 	streq	r0, [r0], #-5
     3b8:	011b0a7f 	tsteq	fp, pc, ror sl
     3bc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     3c0:	000003fe 	strdeq	r0, [r0], -lr
     3c4:	1b0a8004 	blne	2a03dc <__Stack_Size+0x29ffdc>
     3c8:	04000001 	streq	r0, [r0], #-1
     3cc:	0007c409 	andeq	ip, r7, r9, lsl #8
     3d0:	0a830400 	beq	fe0c13d8 <BootRAM+0xd031b79>
     3d4:	0000011b 	andeq	r0, r0, fp, lsl r1
     3d8:	07d60908 	ldrbeq	r0, [r6, r8, lsl #18]
     3dc:	84040000 	strhi	r0, [r4], #-0
     3e0:	00011b0a 	andeq	r1, r1, sl, lsl #22
     3e4:	48090c00 	stmdami	r9, {sl, fp}
     3e8:	04000005 	streq	r0, [r0], #-5
     3ec:	04230c96 	strteq	r0, [r3], #-3222	; 0xfffff36a
     3f0:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
     3f4:	00000721 	andeq	r0, r0, r1, lsr #14
     3f8:	230ca104 	movwcs	sl, #49412	; 0xc104
     3fc:	14000004 	strne	r0, [r0], #-4
     400:	0004f909 	andeq	pc, r4, r9, lsl #18
     404:	0dab0400 	cfstrseq	mvf0, [fp]
     408:	0000043d 	andeq	r0, r0, sp, lsr r4
     40c:	017d0918 	cmneq	sp, r8, lsl r9
     410:	ad040000 	stcge	0, cr0, [r4, #-0]
     414:	00021c09 	andeq	r1, r2, r9, lsl #24
     418:	b1091c00 	tstlt	r9, r0, lsl #24
     41c:	04000001 	streq	r0, [r0], #-1
     420:	021c09ae 	andseq	r0, ip, #2850816	; 0x2b8000
     424:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
     428:	00000848 	andeq	r0, r0, r8, asr #16
     42c:	1c09af04 	stcne	15, cr10, [r9], {4}
     430:	24000002 	strcs	r0, [r0], #-2
     434:	00062e09 	andeq	r2, r6, r9, lsl #28
     438:	09b00400 	ldmibeq	r0!, {sl}
     43c:	0000021c 	andeq	r0, r0, ip, lsl r2
     440:	05a50928 	streq	r0, [r5, #2344]!	; 0x928
     444:	b2040000 	andlt	r0, r4, #0
     448:	00018207 	andeq	r8, r1, r7, lsl #4
     44c:	ce092c00 	cdpgt	12, 0, cr2, cr9, cr0, {0}
     450:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
     454:	006a06b3 	strhteq	r0, [sl], #-99	; 0xffffff9d
     458:	00300000 	eorseq	r0, r0, r0
     45c:	0001bf0f 	andeq	fp, r1, pc, lsl #30
     460:	00042300 	andeq	r2, r4, r0, lsl #6
     464:	006a1000 	rsbeq	r1, sl, r0
     468:	0a000000 	beq	470 <__Stack_Size+0x70>
     46c:	00041404 	andeq	r1, r4, r4, lsl #8
     470:	01bf0f00 			; <UNDEFINED> instruction: 0x01bf0f00
     474:	043d0000 	ldrteq	r0, [sp], #-0
     478:	6a100000 	bvs	400480 <__Stack_Size+0x400080>
     47c:	10000000 	andne	r0, r0, r0
     480:	0000006a 	andeq	r0, r0, sl, rrx
     484:	29040a00 	stmdbcs	r4, {r9, fp}
     488:	05000004 	streq	r0, [r0, #-4]
     48c:	0000076d 	andeq	r0, r0, sp, ror #14
     490:	5d02b504 	cfstr32pl	mvfx11, [r2, #-16]
     494:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
     498:	0000067a 	andeq	r0, r0, sl, ror r6
     49c:	10b70424 	adcsne	r0, r7, r4, lsr #8
     4a0:	000004d2 	ldrdeq	r0, [r0], -r2
     4a4:	0006e709 	andeq	lr, r6, r9, lsl #14
     4a8:	0ab90400 	beq	fee414b0 <BootRAM+0xddb1c51>
     4ac:	0000011b 	andeq	r0, r0, fp, lsl r1
     4b0:	05e30900 	strbeq	r0, [r3, #2304]!	; 0x900
     4b4:	ba040000 	blt	1004bc <__Stack_Size+0x1000bc>
     4b8:	00011b0a 	andeq	r1, r1, sl, lsl #22
     4bc:	ff090400 			; <UNDEFINED> instruction: 0xff090400
     4c0:	04000005 	streq	r0, [r0], #-5
     4c4:	011b0abb 			; <UNDEFINED> instruction: 0x011b0abb
     4c8:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
     4cc:	00000149 	andeq	r0, r0, r9, asr #2
     4d0:	1b0abc04 	blne	2af4e8 <__Stack_Size+0x2af0e8>
     4d4:	0c000001 	stceq	0, cr0, [r0], {1}
     4d8:	0006b309 	andeq	fp, r6, r9, lsl #6
     4dc:	0abd0400 	beq	fef414e4 <BootRAM+0xdeb1c85>
     4e0:	0000011b 	andeq	r0, r0, fp, lsl r1
     4e4:	043d0910 	ldrteq	r0, [sp], #-2320	; 0xfffff6f0
     4e8:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
     4ec:	00011b0a 	andeq	r1, r1, sl, lsl #22
     4f0:	c6091400 	strgt	r1, [r9], -r0, lsl #8
     4f4:	04000000 	streq	r0, [r0], #-0
     4f8:	011b0abf 			; <UNDEFINED> instruction: 0x011b0abf
     4fc:	09180000 	ldmdbeq	r8, {}	; <UNPREDICTABLE>
     500:	000005cd 	andeq	r0, r0, sp, asr #11
     504:	1b0ac004 	blne	2b051c <__Stack_Size+0x2b011c>
     508:	1c000001 	stcne	0, cr0, [r0], {1}
     50c:	00008009 	andeq	r8, r0, r9
     510:	0ac10400 	beq	ff041518 <BootRAM+0xdfb1cb9>
     514:	0000011b 	andeq	r0, r0, fp, lsl r1
     518:	7b050020 	blvc	1405a0 <__Stack_Size+0x1401a0>
     51c:	04000006 	streq	r0, [r0], #-6
     520:	044f01c3 	strbeq	r0, [pc], #-451	; 528 <__Stack_Size+0x128>
     524:	11150000 	tstne	r5, r0
     528:	04000006 	streq	r0, [r0], #-6
     52c:	044314ec 	strbeq	r1, [r3], #-1260	; 0xfffffb14
     530:	19150000 	ldmdbne	r5, {}	; <UNPREDICTABLE>
     534:	04000014 	streq	r0, [r0], #-20	; 0xffffffec
     538:	04d220ed 	ldrbeq	r2, [r2], #237	; 0xed
     53c:	f5150000 			; <UNDEFINED> instruction: 0xf5150000
     540:	04000001 	streq	r0, [r0], #-1
     544:	025611ee 	subseq	r1, r6, #-2147483589	; 0x8000003b
     548:	33150000 	tstcc	r5, #0
     54c:	07000002 	streq	r0, [r0, -r2]
     550:	050e1522 	streq	r1, [lr, #-1314]	; 0xfffffade
     554:	040a0000 	streq	r0, [sl], #-0
     558:	00000351 	andeq	r0, r0, r1, asr r3
     55c:	00055915 	andeq	r5, r5, r5, lsl r9
     560:	15250700 	strne	r0, [r5, #-1792]!	; 0xfffff900
     564:	00000520 	andeq	r0, r0, r0, lsr #10
     568:	0443040a 	strbeq	r0, [r3], #-1034	; 0xfffffbf6
     56c:	d3150000 	tstle	r5, #0
     570:	07000004 	streq	r0, [r0, -r4]
     574:	00520c2d 	subseq	r0, r2, sp, lsr #24
     578:	c2150000 	andsgt	r0, r5, #0
     57c:	08000009 	stmdaeq	r0, {r0, r3}
     580:	01881823 	orreq	r1, r8, r3, lsr #16
     584:	c2150000 	andsgt	r0, r5, #0
     588:	08000008 	stmdaeq	r0, {r3}
     58c:	01881824 	orreq	r1, r8, r4, lsr #16
     590:	88160000 	ldmdahi	r6, {}	; <UNPREDICTABLE>
     594:	5a000001 	bpl	5a0 <__Stack_Size+0x1a0>
     598:	17000005 	strne	r0, [r0, -r5]
     59c:	000000c5 	andeq	r0, r0, r5, asr #1
     5a0:	9a150006 	bls	5405c0 <__Stack_Size+0x5401c0>
     5a4:	08000002 	stmdaeq	r0, {r1}
     5a8:	054a1825 	strbeq	r1, [sl, #-2085]	; 0xfffff7db
     5ac:	cf150000 	svcgt	0x00150000
     5b0:	08000006 	stmdaeq	r0, {r1, r2}
     5b4:	01881826 	orreq	r1, r8, r6, lsr #16
     5b8:	8c150000 	ldchi	0, cr0, [r5], {-0}
     5bc:	09000002 	stmdbeq	r0, {r1}
     5c0:	057e0c2c 	ldrbeq	r0, [lr, #-3116]!	; 0xfffff3d4
     5c4:	04180000 	ldreq	r0, [r8], #-0
     5c8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     5cc:	08f30d00 	ldmeq	r3!, {r8, sl, fp}^
     5d0:	01070000 	mrseq	r0, (UNDEF: 7)
     5d4:	0000007a 	andeq	r0, r0, sl, ror r0
     5d8:	c80e3d09 	stmdagt	lr, {r0, r3, r8, sl, fp, ip, sp}
     5dc:	07000005 	streq	r0, [r0, -r5]
     5e0:	000001e5 	andeq	r0, r0, r5, ror #3
     5e4:	08e30700 	stmiaeq	r3!, {r8, r9, sl}^
     5e8:	07010000 	streq	r0, [r1, -r0]
     5ec:	000006fd 	strdeq	r0, [r0], -sp
     5f0:	00ba0702 	adcseq	r0, sl, r2, lsl #14
     5f4:	07030000 	streq	r0, [r3, -r0]
     5f8:	00000128 	andeq	r0, r0, r8, lsr #2
     5fc:	06210704 	strteq	r0, [r1], -r4, lsl #14
     600:	07050000 	streq	r0, [r5, -r0]
     604:	0000042b 	andeq	r0, r0, fp, lsr #8
     608:	05b10706 	ldreq	r0, [r1, #1798]!	; 0x706
     60c:	00070000 	andeq	r0, r7, r0
     610:	0008f405 	andeq	pc, r8, r5, lsl #8
     614:	03460900 	movteq	r0, #26880	; 0x6900
     618:	00000585 	andeq	r0, r0, r5, lsl #11
     61c:	0005c804 	andeq	ip, r5, r4, lsl #16
     620:	056c0d00 	strbeq	r0, [ip, #-3328]!	; 0xfffff300
     624:	01070000 	mrseq	r0, (UNDEF: 7)
     628:	0000007a 	andeq	r0, r0, sl, ror r0
     62c:	100e4809 	andne	r4, lr, r9, lsl #16
     630:	07000006 	streq	r0, [r0, -r6]
     634:	0000090d 	andeq	r0, r0, sp, lsl #18
     638:	02ed0700 	rsceq	r0, sp, #0, 14
     63c:	07010000 	streq	r0, [r1, -r0]
     640:	0000016c 	andeq	r0, r0, ip, ror #2
     644:	011e0702 	tsteq	lr, r2, lsl #14
     648:	07030000 	streq	r0, [r3, -r0]
     64c:	000008d9 	ldrdeq	r0, [r0], -r9
     650:	08770704 	ldmdaeq	r7!, {r2, r8, r9, sl}^
     654:	00050000 	andeq	r0, r5, r0
     658:	00057219 	andeq	r7, r5, r9, lsl r2
     65c:	05230100 	streq	r0, [r3, #-256]!	; 0xffffff00
     660:	02d40305 	sbcseq	r0, r4, #335544320	; 0x14000000
     664:	6a162000 	bvs	58866c <__Stack_Size+0x58826c>
     668:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
     66c:	1a000006 	bne	68c <__Stack_Size+0x28c>
     670:	08bf1500 	ldmeq	pc!, {r8, sl, ip}	; <UNPREDICTABLE>
     674:	25010000 	strcs	r0, [r1, #-0]
     678:	00061e0b 	andeq	r1, r6, fp, lsl #28
     67c:	06cc1500 	strbeq	r1, [ip], r0, lsl #10
     680:	26010000 	strcs	r0, [r1], -r0
     684:	00061e0b 	andeq	r1, r6, fp, lsl #28
     688:	00ad1b00 	adceq	r1, sp, r0, lsl #22
     68c:	61010000 	mrsvs	r0, (UNDEF: 1)
     690:	00008606 	andeq	r8, r0, r6, lsl #12
     694:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
     698:	19200002 	stmdbne	r0!, {r1}
     69c:	00000122 	andeq	r0, r0, r2, lsr #2
     6a0:	05066401 	streq	r6, [r6, #-1025]	; 0xfffffbff
     6a4:	0002d203 	andeq	sp, r2, r3, lsl #4
     6a8:	07ff1b20 	ldrbeq	r1, [pc, r0, lsr #22]!
     6ac:	65010000 	strvs	r0, [r1, #-0]
     6b0:	00009205 	andeq	r9, r0, r5, lsl #4
     6b4:	d0030500 	andle	r0, r3, r0, lsl #10
     6b8:	19200002 	stmdbne	r0!, {r1}
     6bc:	000004f6 	strdeq	r0, [r0], -r6
     6c0:	05086701 	streq	r6, [r8, #-1793]	; 0xfffff8ff
     6c4:	00003403 	andeq	r3, r0, r3, lsl #8
     6c8:	04de1920 	ldrbeq	r1, [lr], #2336	; 0x920
     6cc:	6c010000 	stcvs	0, cr0, [r1], {-0}
     6d0:	0003050d 	andeq	r0, r3, sp, lsl #10
     6d4:	19200000 	stmdbne	r0!, {}	; <UNPREDICTABLE>
     6d8:	000004ea 	andeq	r0, r0, sl, ror #9
     6dc:	05187c01 	ldreq	r7, [r8, #-3073]	; 0xfffff3ff
     6e0:	00003803 	andeq	r3, r0, r3, lsl #16
     6e4:	011b1620 	tsteq	fp, r0, lsr #12
     6e8:	06ad0000 	strteq	r0, [sp], r0
     6ec:	c5170000 	ldrgt	r0, [r7, #-0]
     6f0:	06000000 	streq	r0, [r0], -r0
     6f4:	00961b00 	addseq	r1, r6, r0, lsl #22
     6f8:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
     6fc:	00069d08 	andeq	r9, r6, r8, lsl #26
     700:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
     704:	1b200000 	blne	80070c <__Stack_Size+0x80030c>
     708:	0000080b 	andeq	r0, r0, fp, lsl #16
     70c:	9d089201 	sfmls	f1, 1, [r8, #-4]
     710:	05000006 	streq	r0, [r0, #-6]
     714:	00007803 	andeq	r7, r0, r3, lsl #16
     718:	01020820 	tsteq	r2, r0, lsr #16
     71c:	06f5019c 	usateq	r0, #21, ip, lsl #3
     720:	b3090000 	movwlt	r0, #36864	; 0x9000
     724:	01000000 	mrseq	r0, (UNDEF: 0)
     728:	05d41b9d 	ldrbeq	r1, [r4, #2973]	; 0xb9d
     72c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     730:	0000010b 	andeq	r0, r0, fp, lsl #2
     734:	75119e01 	ldrvc	r9, [r1, #-3585]	; 0xfffff1ff
     738:	01000000 	mrseq	r0, (UNDEF: 0)
     73c:	07471b00 	strbeq	r1, [r7, -r0, lsl #22]
     740:	9f010000 	svcls	0x00010000
     744:	0006d103 	andeq	sp, r6, r3, lsl #2
     748:	c8030500 	stmdagt	r3, {r8, sl}
     74c:	1c200002 	stcne	0, cr0, [r0], #-8
     750:	00000692 	muleq	r0, r2, r6
     754:	0601d101 	streq	sp, [r1], -r1, lsl #2
     758:	08000520 	stmdaeq	r0, {r5, r8, sl}
     75c:	000000cc 	andeq	r0, r0, ip, asr #1
     760:	07599c01 	ldrbeq	r9, [r9, -r1, lsl #24]
     764:	741d0000 	ldrvc	r0, [sp], #-0
     768:	cc080005 	stcgt	0, cr0, [r8], {5}
     76c:	3200000a 	andcc	r0, r0, #10
     770:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
     774:	70025001 	andvc	r5, r2, r1
     778:	821f0000 	andshi	r0, pc, #0
     77c:	42080005 	andmi	r0, r8, #5
     780:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
     784:	080005c2 	stmdaeq	r0, {r1, r6, r7, r8, sl}
     788:	00000acc 	andeq	r0, r0, ip, asr #21
     78c:	0000074f 	andeq	r0, r0, pc, asr #14
     790:	0250011e 	subseq	r0, r0, #-2147483641	; 0x80000007
     794:	20000070 	andcs	r0, r0, r0, ror r0
     798:	080005d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl}
     79c:	00000d27 	andeq	r0, r0, r7, lsr #26
     7a0:	04042100 	streq	r2, [r4], #-256	; 0xffffff00
     7a4:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
     7a8:	04fc0601 	ldrbteq	r0, [ip], #1537	; 0x601
     7ac:	00220800 	eoreq	r0, r2, r0, lsl #16
     7b0:	9c010000 	stcls	0, cr0, [r1], {-0}
     7b4:	00000791 	muleq	r0, r1, r7
     7b8:	0002ae22 	andeq	sl, r2, r2, lsr #28
     7bc:	01c90100 	biceq	r0, r9, r0, lsl #2
     7c0:	00010f16 	andeq	r0, r1, r6, lsl pc
     7c4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     7c8:	00051823 	andeq	r1, r5, r3, lsr #16
     7cc:	000d3308 	andeq	r3, sp, r8, lsl #6
     7d0:	50011e00 	andpl	r1, r1, r0, lsl #28
     7d4:	00749102 	rsbseq	r9, r4, r2, lsl #2
     7d8:	03492100 	movteq	r2, #37120	; 0x9100
     7dc:	bd010000 	stclt	0, cr0, [r1, #-0]
     7e0:	04980601 	ldreq	r0, [r8], #1537	; 0x601
     7e4:	00240800 	eoreq	r0, r4, r0, lsl #16
     7e8:	9c010000 	stcls	0, cr0, [r1], {-0}
     7ec:	000007c9 	andeq	r0, r0, r9, asr #15
     7f0:	0002ae22 	andeq	sl, r2, r2, lsr #28
     7f4:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
     7f8:	00010f16 	andeq	r0, r1, r6, lsl pc
     7fc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     800:	0004b623 	andeq	fp, r4, r3, lsr #12
     804:	000d3308 	andeq	r3, sp, r8, lsl #6
     808:	50011e00 	andpl	r1, r1, r0, lsl #28
     80c:	00749102 	rsbseq	r9, r4, r2, lsl #2
     810:	02022400 	andeq	r2, r2, #0, 8
     814:	b7010000 	strlt	r0, [r1, -r0]
     818:	01580601 	cmpeq	r8, r1, lsl #12
     81c:	000c0800 	andeq	r0, ip, r0, lsl #16
     820:	9c010000 	stcls	0, cr0, [r1], {-0}
     824:	00013525 	andeq	r3, r1, r5, lsr #10
     828:	01b30100 			; <UNDEFINED> instruction: 0x01b30100
     82c:	04e32506 	strbteq	r2, [r3], #1286	; 0x506
     830:	af010000 	svcge	0x00010000
     834:	35250601 	strcc	r0, [r5, #-1537]!	; 0xfffff9ff
     838:	01000009 	tsteq	r0, r9
     83c:	250601ab 	strcs	r0, [r6, #-427]	; 0xfffffe55
     840:	00000919 	andeq	r0, r0, r9, lsl r9
     844:	0601a701 	streq	sl, [r1], -r1, lsl #14
     848:	00074f25 	andeq	r4, r7, r5, lsr #30
     84c:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
     850:	08a02506 	stmiaeq	r0!, {r1, r2, r8, sl, sp}
     854:	9f010000 	svcls	0x00010000
     858:	79240601 	stmdbvc	r4!, {r0, r9, sl}
     85c:	01000007 	tsteq	r0, r7
     860:	40060199 	mulmi	r6, r9, r1
     864:	18080001 	stmdane	r8, {r0}
     868:	01000000 	mrseq	r0, (UNDEF: 0)
     86c:	021f259c 	andseq	r2, pc, #156, 10	; 0x27000000
     870:	95010000 	strls	r0, [r1, #-0]
     874:	2b260601 	blcs	982080 <__Stack_Size+0x981c80>
     878:	01000006 	tsteq	r0, r6
     87c:	82050188 	andhi	r0, r5, #136, 2	; 0x22
     880:	4c000001 	stcmi	0, cr0, [r0], {1}
     884:	0c080002 	stceq	0, cr0, [r8], {2}
     888:	01000000 	mrseq	r0, (UNDEF: 0)
     88c:	0008689c 	muleq	r8, ip, r8
     890:	656c2700 	strbvs	r2, [ip, #-1792]!	; 0xfffff900
     894:	8801006e 	stmdahi	r1, {r1, r2, r3, r5, r6}
     898:	00522401 	subseq	r2, r2, r1, lsl #8
     89c:	00040000 	andeq	r0, r4, r0
     8a0:	00000000 	andeq	r0, r0, r0
     8a4:	52200000 	eorpl	r0, r0, #0
     8a8:	40080002 	andmi	r0, r8, r2
     8ac:	0000000d 	andeq	r0, r0, sp
     8b0:	00084526 	andeq	r4, r8, r6, lsr #10
     8b4:	017f0100 	cmneq	pc, r0, lsl #2
     8b8:	00018205 	andeq	r8, r1, r5, lsl #4
     8bc:	00022c00 	andeq	r2, r2, r0, lsl #24
     8c0:	00002008 	andeq	r2, r0, r8
     8c4:	b79c0100 	ldrlt	r0, [ip, r0, lsl #2]
     8c8:	27000008 	strcs	r0, [r0, -r8]
     8cc:	006e656c 	rsbeq	r6, lr, ip, ror #10
     8d0:	20017f01 	andcs	r7, r1, r1, lsl #30
     8d4:	00000052 	andeq	r0, r0, r2, asr r0
     8d8:	0000002d 	andeq	r0, r0, sp, lsr #32
     8dc:	00000025 	andeq	r0, r0, r5, lsr #32
     8e0:	00007728 	andeq	r7, r0, r8, lsr #14
     8e4:	01800100 	orreq	r0, r0, r0, lsl #2
     8e8:	00006a08 	andeq	r6, r0, r8, lsl #20
     8ec:	00006b00 	andeq	r6, r0, r0, lsl #22
     8f0:	00006700 	andeq	r6, r0, r0, lsl #14
     8f4:	02402000 	subeq	r2, r0, #0
     8f8:	0d400800 	stcleq	8, cr0, [r0, #-0]
     8fc:	26000000 	strcs	r0, [r0], -r0
     900:	000001ae 	andeq	r0, r0, lr, lsr #3
     904:	05017b01 	streq	r7, [r1, #-2817]	; 0xfffff4ff
     908:	00000182 	andeq	r0, r0, r2, lsl #3
     90c:	08000220 	stmdaeq	r0, {r5, r9}
     910:	0000000c 	andeq	r0, r0, ip
     914:	08f19c01 	ldmeq	r1!, {r0, sl, fp, ip, pc}^
     918:	6c270000 	stcvs	0, cr0, [r7], #-0
     91c:	01006e65 	tsteq	r0, r5, ror #28
     920:	5220017b 	eorpl	r0, r0, #-1073741794	; 0xc000001e
     924:	8d000000 	stchi	0, cr0, [r0, #-0]
     928:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
     92c:	20000000 	andcs	r0, r0, r0
     930:	08000226 	stmdaeq	r0, {r1, r2, r5, r9}
     934:	00000d40 	andeq	r0, r0, r0, asr #26
     938:	017a2600 	cmneq	sl, r0, lsl #12
     93c:	77010000 	strvc	r0, [r1, -r0]
     940:	01820501 	orreq	r0, r2, r1, lsl #10
     944:	02140000 	andseq	r0, r4, #0
     948:	000c0800 	andeq	r0, ip, r0, lsl #16
     94c:	9c010000 	stcls	0, cr0, [r1], {-0}
     950:	0000092b 	andeq	r0, r0, fp, lsr #18
     954:	6e656c27 	cdpvs	12, 6, cr6, cr5, cr7, {1}
     958:	01770100 	cmneq	r7, r0, lsl #2
     95c:	00005220 	andeq	r5, r0, r0, lsr #4
     960:	0000b200 	andeq	fp, r0, r0, lsl #4
     964:	0000ae00 	andeq	sl, r0, r0, lsl #28
     968:	021a2000 	andseq	r2, sl, #0
     96c:	0d400800 	stcleq	8, cr0, [r0, #-0]
     970:	26000000 	strcs	r0, [r0], -r0
     974:	0000070a 	andeq	r0, r0, sl, lsl #14
     978:	08016e01 	stmdaeq	r1, {r0, r9, sl, fp, sp, lr}
     97c:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
     980:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
     984:	0000000a 	andeq	r0, r0, sl
     988:	096b9c01 	stmdbeq	fp!, {r0, sl, fp, ip, pc}^
     98c:	8d290000 	stchi	0, cr0, [r9, #-0]
     990:	01000004 	tsteq	r0, r4
     994:	6a22016e 	bvs	880f54 <__Stack_Size+0x880b54>
     998:	d7000000 	strle	r0, [r0, -r0]
     99c:	d3000000 	movwle	r0, #0
     9a0:	2a000000 	bcs	9a8 <__Stack_Size+0x5a8>
     9a4:	000007ac 	andeq	r0, r0, ip, lsr #15
     9a8:	30016e01 	andcc	r6, r1, r1, lsl #28
     9ac:	0000006a 	andeq	r0, r0, sl, rrx
     9b0:	2b005101 	blcs	14dbc <__Stack_Size+0x149bc>
     9b4:	000002f6 	strdeq	r0, [r0], -r6
     9b8:	08016401 	stmdaeq	r1, {r0, sl, sp, lr}
     9bc:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
     9c0:	00098b01 	andeq	r8, r9, r1, lsl #22
     9c4:	08162c00 	ldmdaeq	r6, {sl, fp, sp}
     9c8:	64010000 	strvs	r0, [r1], #-0
     9cc:	006a1a01 	rsbeq	r1, sl, r1, lsl #20
     9d0:	2b000000 	blcs	9d8 <__Stack_Size+0x5d8>
     9d4:	0000065f 	andeq	r0, r0, pc, asr r6
     9d8:	08013d01 	stmdaeq	r1, {r0, r8, sl, fp, ip, sp}
     9dc:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
     9e0:	0009b801 	andeq	fp, r9, r1, lsl #16
     9e4:	08162c00 	ldmdaeq	r6, {sl, fp, sp}
     9e8:	3d010000 	stccc	0, cr0, [r1, #-0]
     9ec:	006a1801 	rsbeq	r1, sl, r1, lsl #16
     9f0:	612d0000 			; <UNDEFINED> instruction: 0x612d0000
     9f4:	01000009 	tsteq	r0, r9
     9f8:	1c0b013e 	stfnes	f0, [fp], {62}	; 0x3e
     9fc:	00000002 	andeq	r0, r0, r2
     a00:	0002c125 	andeq	ip, r2, r5, lsr #2
     a04:	013a0100 	teqeq	sl, r0, lsl #2
     a08:	00de2e06 	sbcseq	r2, lr, r6, lsl #28
     a0c:	37010000 	strcc	r0, [r1, -r0]
     a10:	21010601 	tstcs	r1, r1, lsl #12
     a14:	000003fb 	strdeq	r0, [r0], -fp
     a18:	06011e01 	streq	r1, [r1], -r1, lsl #28
     a1c:	08000164 	stmdaeq	r0, {r2, r5, r6, r8}
     a20:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     a24:	0a5a9c01 	beq	16a7a30 <__Stack_Size+0x16a7630>
     a28:	982f0000 	stmdals	pc!, {}	; <UNPREDICTABLE>
     a2c:	16080001 	strne	r0, [r8], -r1
     a30:	05000000 	streq	r0, [r0, #-0]
     a34:	2800000a 	stmdacs	r0, {r1, r3}
     a38:	00000484 	andeq	r0, r0, r4, lsl #9
     a3c:	05012801 	streq	r2, [r1, #-2049]	; 0xfffff7ff
     a40:	00000052 	andeq	r0, r0, r2, asr r0
     a44:	00000100 	andeq	r0, r0, r0, lsl #2
     a48:	000000f8 	strdeq	r0, [r0], -r8
     a4c:	016c1f00 	cmneq	ip, r0, lsl #30
     a50:	0d4c0800 	stcleq	8, cr0, [ip, #-0]
     a54:	d61d0000 	ldrle	r0, [sp], -r0
     a58:	58080001 	stmdapl	r8, {r0}
     a5c:	2200000d 	andcs	r0, r0, #13
     a60:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
     a64:	74025001 	strvc	r5, [r2], #-1
     a68:	e41d0000 	ldr	r0, [sp], #-0
     a6c:	65080001 	strvs	r0, [r8, #-1]
     a70:	3600000d 	strcc	r0, [r0], -sp
     a74:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
     a78:	74025001 	strvc	r5, [r2], #-1
     a7c:	ea1d0000 	b	740a84 <__Stack_Size+0x740684>
     a80:	72080001 	andvc	r0, r8, #1
     a84:	4a00000d 	bmi	ac0 <__Stack_Size+0x6c0>
     a88:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
     a8c:	74025001 	strvc	r5, [r2], #-1
     a90:	fa300000 	blx	c00a98 <__Stack_Size+0xc00698>
     a94:	7f080001 	svcvc	0x00080001
     a98:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
     a9c:	30015001 	andcc	r5, r1, r1
     aa0:	31210000 			; <UNDEFINED> instruction: 0x31210000
     aa4:	01000008 	tsteq	r0, r8
     aa8:	bc060110 	stflts	f0, [r6], {16}
     aac:	40080004 	andmi	r0, r8, r4
     ab0:	01000000 	mrseq	r0, (UNDEF: 0)
     ab4:	000a8d9c 	muleq	sl, ip, sp
     ab8:	04c41f00 	strbeq	r1, [r4], #3840	; 0xf00
     abc:	0d8b0800 	stceq	8, cr0, [fp]
     ac0:	ce1f0000 	cdpgt	0, 1, cr0, cr15, cr0, {0}
     ac4:	a4080004 	strge	r0, [r8], #-4
     ac8:	1f00000a 	svcne	0x0000000a
     acc:	080004e4 	stmdaeq	r0, {r2, r5, r6, r7, sl}
     ad0:	00000791 	muleq	r0, r1, r7
     ad4:	08823100 	stmeq	r2, {r8, ip, sp}
     ad8:	03010000 	movweq	r0, #4096	; 0x1000
     adc:	01bf0801 			; <UNDEFINED> instruction: 0x01bf0801
     ae0:	04780000 	ldrbteq	r0, [r8], #-0
     ae4:	001c0800 	andseq	r0, ip, r0, lsl #16
     ae8:	9c010000 	stcls	0, cr0, [r1], {-0}
     aec:	00058b32 	andeq	r8, r5, r2, lsr fp
     af0:	08f40100 	ldmeq	r4!, {r8}^
     af4:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
     af8:	08000450 	stmdaeq	r0, {r4, r6, sl}
     afc:	00000028 	andeq	r0, r0, r8, lsr #32
     b00:	0acc9c01 	beq	ff327b0c <BootRAM+0xe2982ad>
     b04:	85330000 	ldrhi	r0, [r3, #-0]!
     b08:	01000004 	tsteq	r0, r4
     b0c:	005209f5 	ldrsheq	r0, [r2], #-149	; 0xffffff6b
     b10:	00010000 	andeq	r0, r1, r0
     b14:	00011434 	andeq	r1, r1, r4, lsr r4
     b18:	06c40100 	strbeq	r0, [r4], r0, lsl #2
     b1c:	080003c8 	stmdaeq	r0, {r3, r6, r7, r8, r9}
     b20:	00000088 	andeq	r0, r0, r8, lsl #1
     b24:	0b179c01 	bleq	5e7b30 <__Stack_Size+0x5e7730>
     b28:	53350000 	teqpl	r5, #0
     b2c:	01000002 	tsteq	r0, r2
     b30:	05c81dc4 	strbeq	r1, [r8, #3524]	; 0xdc4
     b34:	50010000 	andpl	r0, r1, r0
     b38:	00027536 	andeq	r7, r2, r6, lsr r5
     b3c:	09c50100 	stmibeq	r5, {r8}^
     b40:	00000052 	andeq	r0, r0, r2, asr r0
     b44:	0000014e 	andeq	r0, r0, lr, asr #2
     b48:	00000146 	andeq	r0, r0, r6, asr #2
     b4c:	0003e61f 	andeq	lr, r3, pc, lsl r6
     b50:	000b1708 	andeq	r1, fp, r8, lsl #14
     b54:	03ee1f00 	mvneq	r1, #0, 30
     b58:	0b170800 	bleq	5c2b60 <__Stack_Size+0x5c2760>
     b5c:	34000000 	strcc	r0, [r0], #-0
     b60:	000007e9 	andeq	r0, r0, r9, ror #15
     b64:	a806b601 	stmdage	r6, {r0, r9, sl, ip, sp, pc}
     b68:	20080003 	andcs	r0, r8, r3
     b6c:	01000000 	mrseq	r0, (UNDEF: 0)
     b70:	000b429c 	muleq	fp, ip, r2
     b74:	02753600 	rsbseq	r3, r5, #0, 12
     b78:	b7010000 	strlt	r0, [r1, -r0]
     b7c:	00005209 	andeq	r5, r0, r9, lsl #4
     b80:	00018f00 	andeq	r8, r1, r0, lsl #30
     b84:	00018b00 	andeq	r8, r1, r0, lsl #22
     b88:	00340000 	eorseq	r0, r4, r0
     b8c:	01000001 	tsteq	r0, r1
     b90:	038806ac 	orreq	r0, r8, #172, 12	; 0xac00000
     b94:	00200800 	eoreq	r0, r0, r0, lsl #16
     b98:	9c010000 	stcls	0, cr0, [r1], {-0}
     b9c:	00000b6d 	andeq	r0, r0, sp, ror #22
     ba0:	00027536 	andeq	r7, r2, r6, lsr r5
     ba4:	09ad0100 	stmibeq	sp!, {r8}
     ba8:	00000052 	andeq	r0, r0, r2, asr r0
     bac:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
     bb0:	000001b2 			; <UNDEFINED> instruction: 0x000001b2
     bb4:	04be3700 	ldrteq	r3, [lr], #1792	; 0x700
     bb8:	a6010000 	strge	r0, [r1], -r0
     bbc:	7a380106 	bvc	e00fdc <__Stack_Size+0xe00bdc>
     bc0:	01000009 	tsteq	r0, r9
     bc4:	c93406a2 	ldmdbgt	r4!, {r1, r5, r7, r9, sl}
     bc8:	01000004 	tsteq	r0, r4
     bcc:	04940656 	ldreq	r0, [r4], #1622	; 0x656
     bd0:	00040800 	andeq	r0, r4, r0, lsl #16
     bd4:	9c010000 	stcls	0, cr0, [r1], {-0}
     bd8:	00000b9e 	muleq	r0, lr, fp
     bdc:	00049820 	andeq	r9, r4, r0, lsr #16
     be0:	000a8d08 	andeq	r8, sl, r8, lsl #26
     be4:	16340000 	ldrtne	r0, [r4], -r0
     be8:	01000002 	tsteq	r0, r2
     bec:	03040628 	movweq	r0, #17960	; 0x4628
     bf0:	00840800 	addeq	r0, r4, r0, lsl #16
     bf4:	9c010000 	stcls	0, cr0, [r1], {-0}
     bf8:	00000c33 	andeq	r0, r0, r3, lsr ip
     bfc:	0006ad39 	andeq	sl, r6, r9, lsr sp
     c00:	1b3d0100 	blne	f41008 <__Stack_Size+0xf40c08>
     c04:	000000cc 	andeq	r0, r0, ip, asr #1
     c08:	3a6c9102 	bcc	1b25018 <__Stack_Size+0x1b24c18>
     c0c:	00000b6d 	andeq	r0, r0, sp, ror #22
     c10:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
     c14:	00004001 	andeq	r4, r0, r1
     c18:	054f0100 	strbeq	r0, [pc, #-256]	; b20 <__Stack_Size+0x720>
     c1c:	00000be2 	andeq	r0, r0, r2, ror #23
     c20:	00036e20 	andeq	r6, r3, r0, lsr #28
     c24:	000d9708 	andeq	r9, sp, r8, lsl #14
     c28:	121d0000 	andsne	r0, sp, #0
     c2c:	a3080003 	movwge	r0, #32771	; 0x8003
     c30:	f500000d 			; <UNDEFINED> instruction: 0xf500000d
     c34:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
     c38:	3c015001 	stccc	0, cr5, [r1], {1}
     c3c:	03261d00 			; <UNDEFINED> instruction: 0x03261d00
     c40:	0daf0800 	stceq	8, cr0, [pc]	; c48 <__Stack_Size+0x848>
     c44:	0c160000 	ldceq	0, cr0, [r6], {-0}
     c48:	011e0000 	tsteq	lr, r0
     c4c:	000c0550 	andeq	r0, ip, r0, asr r5
     c50:	1e400108 	dvfnes	f0, f0, #0.0
     c54:	3c015101 	stfccs	f5, [r1], {1}
     c58:	0152011e 	cmpeq	r2, lr, lsl r1
     c5c:	3c1d0030 	ldccc	0, cr0, [sp], {48}	; 0x30
     c60:	a3080003 	movwge	r0, #32771	; 0x8003
     c64:	2900000d 	stmdbcs	r0, {r0, r2, r3}
     c68:	1e00000c 	cdpne	0, 0, cr0, cr0, cr12, {0}
     c6c:	3c015001 	stccc	0, cr5, [r1], {1}
     c70:	034a1f00 	movteq	r1, #44800	; 0xaf00
     c74:	0dbb0800 	ldceq	8, cr0, [fp]
     c78:	3b000000 	blcc	c80 <__Stack_Size+0x880>
     c7c:	000009c1 	andeq	r0, r0, r1, asr #19
     c80:	08000132 	stmdaeq	r0, {r1, r4, r5, r8}
     c84:	00000002 	andeq	r0, r0, r2
     c88:	8b3c9c01 	blhi	f27c94 <__Stack_Size+0xf27894>
     c8c:	58000009 	stmdapl	r0, {r0, r3}
     c90:	74080002 	strvc	r0, [r8], #-2
     c94:	01000000 	mrseq	r0, (UNDEF: 0)
     c98:	000cbc9c 	muleq	ip, ip, ip
     c9c:	099d3d00 	ldmibeq	sp, {r8, sl, fp, ip, sp}
     ca0:	01e00000 	mvneq	r0, r0
     ca4:	01d80000 	bicseq	r0, r8, r0
     ca8:	aa3e0000 	bge	f80cb0 <__Stack_Size+0xf808b0>
     cac:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
     cb0:	1a000002 	bne	cc0 <__Stack_Size+0x8c0>
     cb4:	3f000002 	svccc	0x00000002
     cb8:	0000098b 	andeq	r0, r0, fp, lsl #19
     cbc:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
     cc0:	00002000 	andeq	r2, r0, r0
     cc4:	013d0100 	teqeq	sp, r0, lsl #2
     cc8:	000cb208 	andeq	fp, ip, r8, lsl #4
     ccc:	099d3d00 	ldmibeq	sp, {r8, sl, fp, ip, sp}
     cd0:	02420000 	subeq	r0, r2, #0
     cd4:	023e0000 	eorseq	r0, lr, #0
     cd8:	20400000 	subcs	r0, r0, r0
     cdc:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
     ce0:	000009aa 	andeq	r0, r0, sl, lsr #19
     ce4:	00000262 	andeq	r0, r0, r2, ror #4
     ce8:	00000260 	andeq	r0, r0, r0, ror #4
     cec:	0002a641 	andeq	sl, r2, r1, asr #12
     cf0:	50011e08 	andpl	r1, r1, r8, lsl #28
     cf4:	00007402 	andeq	r7, r0, r2, lsl #8
     cf8:	721f0000 	andsvc	r0, pc, #0
     cfc:	c8080002 	stmdagt	r8, {r1}
     d00:	0000000d 	andeq	r0, r0, sp
     d04:	00096b3c 	andeq	r6, r9, ip, lsr fp
     d08:	0002cc00 	andeq	ip, r2, r0, lsl #24
     d0c:	00002408 	andeq	r2, r0, r8, lsl #8
     d10:	0a9c0100 	beq	fe701118 <BootRAM+0xd6718b9>
     d14:	3d00000d 	stccc	0, cr0, [r0, #-52]	; 0xffffffcc
     d18:	0000097d 	andeq	r0, r0, sp, ror r9
     d1c:	0000027d 	andeq	r0, r0, sp, ror r2
     d20:	00000275 	andeq	r0, r0, r5, ror r2
     d24:	00096b42 	andeq	r6, r9, r2, asr #22
     d28:	0002e000 	andeq	lr, r2, r0
     d2c:	02e00008 	rsceq	r0, r0, #8
     d30:	00100800 	andseq	r0, r0, r0, lsl #16
     d34:	64010000 	strvs	r0, [r1], #-0
     d38:	7d3d0801 	ldcvc	8, cr0, [sp, #-4]!
     d3c:	b9000009 	stmdblt	r0, {r0, r3}
     d40:	b7000002 	strlt	r0, [r0, -r2]
     d44:	1f000002 	svcne	0x00000002
     d48:	080002e4 	stmdaeq	r0, {r2, r5, r6, r7, r9}
     d4c:	00000dc8 	andeq	r0, r0, r8, asr #27
     d50:	6d3c0000 	ldcvs	0, cr0, [ip, #-0]
     d54:	0000000b 	andeq	r0, r0, fp
     d58:	04000000 	streq	r0, [r0], #-0
     d5c:	01000000 	mrseq	r0, (UNDEF: 0)
     d60:	000d279c 	muleq	sp, ip, r7
     d64:	00002000 	andeq	r2, r0, r0
     d68:	0d970000 	ldceq	0, cr0, [r7]
     d6c:	43000000 	movwmi	r0, #0
     d70:	00000342 	andeq	r0, r0, r2, asr #6
     d74:	00000342 	andeq	r0, r0, r2, asr #6
     d78:	44061a0a 	strmi	r1, [r6], #-2570	; 0xfffff5f6
     d7c:	00000734 	andeq	r0, r0, r4, lsr r7
     d80:	00000734 	andeq	r0, r0, r4, lsr r7
     d84:	06010703 	streq	r0, [r1], -r3, lsl #14
     d88:	00085c43 	andeq	r5, r8, r3, asr #24
     d8c:	00085c00 	andeq	r5, r8, r0, lsl #24
     d90:	05e50400 	strbeq	r0, [r5, #1024]!	; 0x400
     d94:	00051543 	andeq	r1, r5, r3, asr #10
     d98:	00051500 	andeq	r1, r5, r0, lsl #10
     d9c:	066e0b00 	strbteq	r0, [lr], -r0, lsl #22
     da0:	00078d44 	andeq	r8, r7, r4, asr #26
     da4:	00078d00 	andeq	r8, r7, r0, lsl #26
     da8:	02460600 	subeq	r0, r6, #0, 12
     dac:	07b74406 	ldreq	r4, [r7, r6, lsl #8]!
     db0:	07b70000 	ldreq	r0, [r7, r0]!
     db4:	57060000 	strpl	r0, [r6, -r0]
     db8:	6d440602 	stclvs	6, cr0, [r4, #-8]
     dbc:	6d000009 	stcvs	0, cr0, [r0, #-36]	; 0xffffffdc
     dc0:	06000009 	streq	r0, [r0], -r9
     dc4:	43060240 	movwmi	r0, #25152	; 0x6240
     dc8:	00000085 	andeq	r0, r0, r5, lsl #1
     dcc:	00000085 	andeq	r0, r0, r5, lsl #1
     dd0:	4306e904 	movwmi	lr, #26884	; 0x6904
     dd4:	000000ea 	andeq	r0, r0, sl, ror #1
     dd8:	000000ea 	andeq	r0, r0, sl, ror #1
     ddc:	43066a0b 	movwmi	r6, #27147	; 0x6a0b
     de0:	00000563 	andeq	r0, r0, r3, ror #10
     de4:	00000563 	andeq	r0, r0, r3, ror #10
     de8:	43061907 	movwmi	r1, #26887	; 0x6907
     dec:	00000240 	andeq	r0, r0, r0, asr #4
     df0:	00000240 	andeq	r0, r0, r0, asr #4
     df4:	430ef303 	movwmi	pc, #58115	; 0xe303	; <UNPREDICTABLE>
     df8:	00000596 	muleq	r0, r6, r5
     dfc:	00000596 	muleq	r0, r6, r5
     e00:	4406f203 	strmi	pc, [r6], #-515	; 0xfffffdfd
     e04:	0000027b 	andeq	r0, r0, fp, ror r2
     e08:	0000027b 	andeq	r0, r0, fp, ror r2
     e0c:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
     e10:	0002da43 	andeq	sp, r2, r3, asr #20
     e14:	0002da00 	andeq	sp, r2, r0, lsl #20
     e18:	066d0b00 	strbteq	r0, [sp], -r0, lsl #22
     e1c:	00026100 	andeq	r6, r2, r0, lsl #2
     e20:	88000400 	stmdahi	r0, {sl}
     e24:	04000004 	streq	r0, [r0], #-4
     e28:	00037701 	andeq	r7, r3, r1, lsl #14
     e2c:	0a460c00 	beq	1183e34 <__Stack_Size+0x1183a34>
     e30:	001b0000 	andseq	r0, fp, r0
     e34:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
     e38:	04020000 	streq	r0, [r2], #-0
     e3c:	0001a505 	andeq	sl, r1, r5, lsl #10
     e40:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     e44:	000006c2 	andeq	r0, r0, r2, asr #13
     e48:	6e060102 	adfvss	f0, f6, f2
     e4c:	02000006 	andeq	r0, r0, #6
     e50:	03300704 	teqeq	r0, #4, 14	; 0x100000
     e54:	75030000 	strvc	r0, [r3, #-0]
     e58:	01003631 	tsteq	r0, r1, lsr r6
     e5c:	00451828 	subeq	r1, r5, r8, lsr #16
     e60:	02020000 	andeq	r0, r2, #0
     e64:	00040e07 	andeq	r0, r4, r7, lsl #28
     e68:	38750300 	ldmdacc	r5!, {r8, r9}^
     e6c:	18290100 	stmdane	r9!, {r8}
     e70:	00000057 	andeq	r0, r0, r7, asr r0
     e74:	6c080102 	stfvss	f0, [r8], {2}
     e78:	02000006 	andeq	r0, r0, #6
     e7c:	03350704 	teqeq	r5, #4, 14	; 0x100000
     e80:	f2040000 	vhadd.s8	d0, d4, d0
     e84:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     e88:	8d102402 	cfldrshi	mvf2, [r0, #-8]
     e8c:	05000000 	streq	r0, [r0, #-0]
     e90:	00000186 	andeq	r0, r0, r6, lsl #3
     e94:	8d072602 	stchi	6, cr2, [r7, #-8]
     e98:	00000000 	andeq	r0, r0, r0
     e9c:	0005bd05 	andeq	fp, r5, r5, lsl #26
     ea0:	07270200 	streq	r0, [r7, -r0, lsl #4]!
     ea4:	00000039 	andeq	r0, r0, r9, lsr r0
     ea8:	04060004 	streq	r0, [r6], #-4
     eac:	0000004c 	andeq	r0, r0, ip, asr #32
     eb0:	0008b007 	andeq	fp, r8, r7
     eb4:	01290200 			; <UNDEFINED> instruction: 0x01290200
     eb8:	00000065 	andeq	r0, r0, r5, rrx
     ebc:	69050408 	stmdbvs	r5, {r3, sl}
     ec0:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     ec4:	000009c2 	andeq	r0, r0, r2, asr #19
     ec8:	93182303 	tstls	r8, #201326592	; 0xc000000
     ecc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     ed0:	000008c2 	andeq	r0, r0, r2, asr #17
     ed4:	93182403 	tstls	r8, #50331648	; 0x3000000
     ed8:	0a000000 	beq	ee0 <__Stack_Size+0xae0>
     edc:	00000093 	muleq	r0, r3, r0
     ee0:	000000ce 	andeq	r0, r0, lr, asr #1
     ee4:	00005e0b 	andeq	r5, r0, fp, lsl #28
     ee8:	09000600 	stmdbeq	r0, {r9, sl}
     eec:	0000029a 	muleq	r0, sl, r2
     ef0:	be182503 	cfmul32lt	mvfx2, mvfx8, mvfx3
     ef4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     ef8:	000006cf 	andeq	r0, r0, pc, asr #13
     efc:	93182603 	tstls	r8, #3145728	; 0x300000
     f00:	0a000000 	beq	f08 <__Stack_Size+0xb08>
     f04:	0000004c 	andeq	r0, r0, ip, asr #32
     f08:	000000f6 	strdeq	r0, [r0], -r6
     f0c:	00005e0b 	andeq	r5, r0, fp, lsl #28
     f10:	0c001100 	stfeqs	f1, [r0], {-0}
     f14:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
     f18:	e6042504 	str	r2, [r4], -r4, lsl #10
     f1c:	05000000 	streq	r0, [r0, #-0]
     f20:	0000c103 	andeq	ip, r0, r3, lsl #2
     f24:	00a60d20 	adceq	r0, r6, r0, lsr #26
     f28:	3c040000 	stccc	0, cr0, [r4], {-0}
     f2c:	78030510 	stmdavc	r3, {r4, r8, sl}
     f30:	0a200002 	beq	800f40 <__Stack_Size+0x800b40>
     f34:	0000004c 	andeq	r0, r0, ip, asr #32
     f38:	00000126 	andeq	r0, r0, r6, lsr #2
     f3c:	00005e0b 	andeq	r5, r0, fp, lsl #28
     f40:	0c000800 	stceq	8, cr0, [r0], {-0}
     f44:	000006cc 	andeq	r0, r0, ip, asr #13
     f48:	16044104 	strne	r4, [r4], -r4, lsl #2
     f4c:	05000001 	streq	r0, [r0, #-1]
     f50:	0000d303 	andeq	sp, r0, r3, lsl #6
     f54:	00da0d20 	sbcseq	r0, sl, r0, lsr #26
     f58:	4e040000 	cdpmi	0, 0, cr0, cr4, cr0, {0}
     f5c:	80030510 	andhi	r0, r3, r0, lsl r5
     f60:	0a200002 	beq	800f70 <__Stack_Size+0x800b70>
     f64:	0000004c 	andeq	r0, r0, ip, asr #32
     f68:	00000156 	andeq	r0, r0, r6, asr r1
     f6c:	00005e0b 	andeq	r5, r0, fp, lsl #28
     f70:	0c002c00 	stceq	12, cr2, [r0], {-0}
     f74:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
     f78:	46045404 	strmi	r5, [r4], -r4, lsl #8
     f7c:	05000001 	streq	r0, [r0, #-1]
     f80:	00009403 	andeq	r9, r0, r3, lsl #8
     f84:	00b20d20 	adcseq	r0, r2, r0, lsr #26
     f88:	96040000 	strls	r0, [r4], -r0
     f8c:	70030510 	andvc	r0, r3, r0, lsl r5
     f90:	0a200002 	beq	800fa0 <__Stack_Size+0x800ba0>
     f94:	0000004c 	andeq	r0, r0, ip, asr #32
     f98:	00000186 	andeq	r0, r0, r6, lsl #3
     f9c:	00005e0b 	andeq	r5, r0, fp, lsl #28
     fa0:	0c000300 	stceq	3, cr0, [r0], {-0}
     fa4:	00000a33 	andeq	r0, r0, r3, lsr sl
     fa8:	76049c04 	strvc	r9, [r4], -r4, lsl #24
     fac:	05000001 	streq	r0, [r0, #-1]
     fb0:	00023403 	andeq	r3, r2, r3, lsl #8
     fb4:	09960c20 	ldmibeq	r6, {r5, sl, fp}
     fb8:	a3040000 	movwge	r0, #16384	; 0x4000
     fbc:	0000e604 	andeq	lr, r0, r4, lsl #12
     fc0:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
     fc4:	0a200002 	beq	800fd4 <__Stack_Size+0x800bd4>
     fc8:	0000004c 	andeq	r0, r0, ip, asr #32
     fcc:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
     fd0:	00005e0b 	andeq	r5, r0, fp, lsl #28
     fd4:	0c001300 	stceq	3, cr1, [r0], {-0}
     fd8:	00000a1f 	andeq	r0, r0, pc, lsl sl
     fdc:	aa04a904 	bge	12b3f4 <__Stack_Size+0x12aff4>
     fe0:	05000001 	streq	r0, [r0, #-1]
     fe4:	00023803 	andeq	r3, r2, r3, lsl #16
     fe8:	004c0a20 	subeq	r0, ip, r0, lsr #20
     fec:	01dc0000 	bicseq	r0, ip, r0
     ff0:	5e0b0000 	cdppl	0, 0, cr0, cr11, cr0, {0}
     ff4:	0f000000 	svceq	0x00000000
     ff8:	09ea0c00 	stmibeq	sl!, {sl, fp}^
     ffc:	af040000 	svcge	0x00040000
    1000:	0001cc04 	andeq	ip, r1, r4, lsl #24
    1004:	4c030500 	cfstr32mi	mvfx0, [r3], {-0}
    1008:	0a200002 	beq	801018 <__Stack_Size+0x800c18>
    100c:	0000004c 	andeq	r0, r0, ip, asr #32
    1010:	000001fe 	strdeq	r0, [r0], -lr
    1014:	00005e0b 	andeq	r5, r0, fp, lsl #28
    1018:	0c007f00 	stceq	15, cr7, [r0], {-0}
    101c:	000009fd 	strdeq	r0, [r0], -sp
    1020:	ee08b504 	cfsh32	mvfx11, mvfx8, #4
    1024:	05000001 	streq	r0, [r0, #-1]
    1028:	0000dc03 	andeq	sp, r0, r3, lsl #24
    102c:	004c0a20 	subeq	r0, ip, r0, lsr #20
    1030:	02200000 	eoreq	r0, r0, #0
    1034:	5e0b0000 	cdppl	0, 0, cr0, cr11, cr0, {0}
    1038:	6b000000 	blvs	1040 <__Stack_Size+0xc40>
    103c:	0a0e0c00 	beq	384044 <__Stack_Size+0x383c44>
    1040:	bc040000 	stclt	0, cr0, [r4], {-0}
    1044:	00021008 	andeq	r1, r2, r8
    1048:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
    104c:	0c200001 	stceq	0, cr0, [r0], #-4
    1050:	000009d9 	ldrdeq	r0, [r0], -r9
    1054:	1008c304 	andne	ip, r8, r4, lsl #6
    1058:	05000002 	streq	r0, [r0, #-2]
    105c:	0001c803 	andeq	ip, r1, r3, lsl #16
    1060:	09a90c20 	stmibeq	r9!, {r5, sl, fp}
    1064:	c9040000 	stmdbgt	r4, {}	; <UNPREDICTABLE>
    1068:	00004c04 	andeq	r4, r0, r4, lsl #24
    106c:	00030500 	andeq	r0, r3, r0, lsl #10
    1070:	0d000000 	stceq	0, cr0, [r0, #-0]
    1074:	000000ce 	andeq	r0, r0, lr, asr #1
    1078:	0510cb04 	ldreq	ip, [r0, #-2820]	; 0xfffff4fc
    107c:	00028803 	andeq	r8, r2, r3, lsl #16
    1080:	023e0020 	eorseq	r0, lr, #32
    1084:	00040000 	andeq	r0, r4, r0
    1088:	0000053e 	andeq	r0, r0, lr, lsr r5
    108c:	03770104 	cmneq	r7, #4, 2
    1090:	fa0c0000 	blx	301098 <__Stack_Size+0x300c98>
    1094:	1b00000a 	blne	10c4 <__Stack_Size+0xcc4>
    1098:	30000000 	andcc	r0, r0, r0
    109c:	00000001 	andeq	r0, r0, r1
    10a0:	81000000 	mrshi	r0, (UNDEF: 0)
    10a4:	02000008 	andeq	r0, r0, #8
    10a8:	01a50504 			; <UNDEFINED> instruction: 0x01a50504
    10ac:	02020000 	andeq	r0, r2, #0
    10b0:	0006c205 	andeq	ip, r6, r5, lsl #4
    10b4:	06010200 	streq	r0, [r1], -r0, lsl #4
    10b8:	0000066e 	andeq	r0, r0, lr, ror #12
    10bc:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    10c0:	18270500 	stmdane	r7!, {r8, sl}
    10c4:	00000046 	andeq	r0, r0, r6, asr #32
    10c8:	30070402 	andcc	r0, r7, r2, lsl #8
    10cc:	02000003 	andeq	r0, r0, #3
    10d0:	040e0702 	streq	r0, [lr], #-1794	; 0xfffff8fe
    10d4:	01020000 	mrseq	r0, (UNDEF: 2)
    10d8:	00066c08 	andeq	r6, r6, r8, lsl #24
    10dc:	01070400 	tsteq	r7, r0, lsl #8
    10e0:	00000054 	andeq	r0, r0, r4, asr r0
    10e4:	760e3705 	strvc	r3, [lr], -r5, lsl #14
    10e8:	05000000 	streq	r0, [r0, #-0]
    10ec:	000005f9 	strdeq	r0, [r0], -r9
    10f0:	07670500 	strbeq	r0, [r7, -r0, lsl #10]!
    10f4:	00010000 	andeq	r0, r1, r0
    10f8:	00046a06 	andeq	r6, r4, r6, lsl #20
    10fc:	29370500 	ldmdbcs	r7!, {r8, sl}
    1100:	0000005b 	andeq	r0, r0, fp, asr r0
    1104:	35070402 	strcc	r0, [r7, #-1026]	; 0xfffffbfe
    1108:	07000003 	streq	r0, [r0, -r3]
    110c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    1110:	e8080074 	stmda	r8, {r2, r4, r5, r6}
    1114:	0100000a 	tsteq	r0, sl
    1118:	00890526 	addeq	r0, r9, r6, lsr #10
    111c:	05ec0000 	strbeq	r0, [ip, #0]!
    1120:	00880800 	addeq	r0, r8, r0, lsl #16
    1124:	9c010000 	stcls	0, cr0, [r1], {-0}
    1128:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    112c:	000aed09 	andeq	lr, sl, r9, lsl #26
    1130:	0a280100 	beq	a01538 <__Stack_Size+0xa01138>
    1134:	00000076 	andeq	r0, r0, r6, ror r0
    1138:	000002d3 	ldrdeq	r0, [r0], -r3
    113c:	000002cf 	andeq	r0, r0, pc, asr #5
    1140:	000a9509 	andeq	r9, sl, r9, lsl #10
    1144:	0a290100 	beq	a4154c <__Stack_Size+0xa4114c>
    1148:	00000076 	andeq	r0, r0, r6, ror r0
    114c:	000002f7 	strdeq	r0, [r0], -r7
    1150:	000002f3 	strdeq	r0, [r0], -r3
    1154:	0001180a 	andeq	r1, r1, sl, lsl #16
    1158:	00010200 	andeq	r0, r1, r0, lsl #4
    115c:	0b110900 	bleq	443564 <__Stack_Size+0x443164>
    1160:	55010000 	strpl	r0, [r1, #-0]
    1164:	0000890d 	andeq	r8, r0, sp, lsl #18
    1168:	00031b00 	andeq	r1, r3, r0, lsl #22
    116c:	00031700 	andeq	r1, r3, r0, lsl #14
    1170:	064e0b00 	strbeq	r0, [lr], -r0, lsl #22
    1174:	01b00800 	lslseq	r0, r0, #16
    1178:	540b0000 	strpl	r0, [fp], #-0
    117c:	bc080006 	stclt	0, cr0, [r8], {6}
    1180:	00000001 	andeq	r0, r0, r1
    1184:	0005f20b 	andeq	pc, r5, fp, lsl #4
    1188:	0001c808 	andeq	ip, r1, r8, lsl #16
    118c:	05f60b00 	ldrbeq	r0, [r6, #2816]!	; 0xb00
    1190:	01d40800 	bicseq	r0, r4, r0, lsl #16
    1194:	fa0b0000 	blx	2c119c <__Stack_Size+0x2c0d9c>
    1198:	e0080005 	and	r0, r8, r5
    119c:	0b000001 	bleq	11a8 <__Stack_Size+0xda8>
    11a0:	080005fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, sl}
    11a4:	000001ec 	andeq	r0, r0, ip, ror #3
    11a8:	0006020b 	andeq	r0, r6, fp, lsl #4
    11ac:	0001f808 	andeq	pc, r1, r8, lsl #16
    11b0:	06060b00 	streq	r0, [r6], -r0, lsl #22
    11b4:	02040800 	andeq	r0, r4, #0, 16
    11b8:	160c0000 	strne	r0, [ip], -r0
    11bc:	11080006 	tstne	r8, r6
    11c0:	4f000002 	svcmi	0x00000002
    11c4:	0d000001 	stceq	0, cr0, [r0, #-4]
    11c8:	0c055001 	stceq	0, cr5, [r5], {1}
    11cc:	08005000 	stmdaeq	r0, {ip, lr}
    11d0:	061c0b00 	ldreq	r0, [ip], -r0, lsl #22
    11d4:	021d0800 	andseq	r0, sp, #0, 16
    11d8:	300c0000 	andcc	r0, ip, r0
    11dc:	11080006 	tstne	r8, r6
    11e0:	6f000002 	svcvs	0x00000002
    11e4:	0d000001 	stceq	0, cr0, [r0, #-4]
    11e8:	0c055001 	stceq	0, cr5, [r5], {1}
    11ec:	08002000 	stmdaeq	r0, {sp}
    11f0:	06380b00 	ldrteq	r0, [r8], -r0, lsl #22
    11f4:	02290800 	eoreq	r0, r9, #0, 16
    11f8:	420c0000 	andmi	r0, ip, #0
    11fc:	11080006 	tstne	r8, r6
    1200:	8f000002 	svchi	0x00000002
    1204:	0d000001 	stceq	0, cr0, [r0, #-4]
    1208:	0c055001 	stceq	0, cr5, [r5], {1}
    120c:	08002000 	stmdaeq	r0, {sp}
    1210:	065e0c00 	ldrbeq	r0, [lr], -r0, lsl #24
    1214:	02110800 	andseq	r0, r1, #0, 16
    1218:	01a60000 			; <UNDEFINED> instruction: 0x01a60000
    121c:	010d0000 	mrseq	r0, (UNDEF: 13)
    1220:	000c0550 	andeq	r0, ip, r0, asr r5
    1224:	00080050 	andeq	r0, r8, r0, asr r0
    1228:	0006680b 	andeq	r6, r6, fp, lsl #16
    122c:	00023508 	andeq	r3, r2, r8, lsl #10
    1230:	1d0e0000 	stcne	0, cr0, [lr, #-0]
    1234:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    1238:	0200000b 	andeq	r0, r0, #11
    123c:	570e067c 	smlsdxpl	lr, ip, r6, r0
    1240:	5700000a 	strpl	r0, [r0, -sl]
    1244:	0200000a 	andeq	r0, r0, #10
    1248:	b80e067d 	stmdalt	lr, {r0, r2, r3, r4, r5, r6, r9, sl}
    124c:	b800000a 	stmdalt	r0, {r1, r3}
    1250:	0300000a 	movweq	r0, #10
    1254:	df0e06fa 	svcle	0x000e06fa
    1258:	df00000a 	svcle	0x0000000a
    125c:	0300000a 	movweq	r0, #10
    1260:	670e06fb 			; <UNDEFINED> instruction: 0x670e06fb
    1264:	6700000a 	strvs	r0, [r0, -sl]
    1268:	0300000a 	movweq	r0, #10
    126c:	160e06fc 			; <UNDEFINED> instruction: 0x160e06fc
    1270:	16000002 	strne	r0, [r0], -r2
    1274:	04000002 	streq	r0, [r0], #-2
    1278:	d40e0651 	strle	r0, [lr], #-1617	; 0xfffff9af
    127c:	d400000a 	strle	r0, [r0], #-10
    1280:	0300000a 	movweq	r0, #10
    1284:	790f06fd 	stmdbvc	pc, {r0, r2, r3, r4, r5, r6, r7, r9, sl}	; <UNPREDICTABLE>
    1288:	7900000a 	stmdbvc	r0, {r1, r3}
    128c:	0300000a 	movweq	r0, #10
    1290:	0e050100 	adfeqs	f0, f5, f0
    1294:	00000a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    1298:	00000a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    129c:	0e06fe03 	cdpeq	14, 0, cr15, cr6, cr3, {0}
    12a0:	00000ac4 	andeq	r0, r0, r4, asr #21
    12a4:	00000ac4 	andeq	r0, r0, r4, asr #21
    12a8:	0e06f603 	cfmadd32eq	mvax0, mvfx15, mvfx6, mvfx3
    12ac:	00000aad 	andeq	r0, r0, sp, lsr #21
    12b0:	00000aad 	andeq	r0, r0, sp, lsr #21
    12b4:	0e06ff03 	cdpeq	15, 0, cr15, cr6, cr3, {0}
    12b8:	00000b01 	andeq	r0, r0, r1, lsl #22
    12bc:	00000b01 	andeq	r0, r0, r1, lsl #22
    12c0:	0006f903 	andeq	pc, r6, r3, lsl #18
    12c4:	00000bce 	andeq	r0, r0, lr, asr #23
    12c8:	06250004 	strteq	r0, [r5], -r4
    12cc:	01040000 	mrseq	r0, (UNDEF: 4)
    12d0:	00000377 	andeq	r0, r0, r7, ror r3
    12d4:	000d380c 	andeq	r3, sp, ip, lsl #16
    12d8:	00001b00 	andeq	r1, r0, r0, lsl #22
    12dc:	00015800 	andeq	r5, r1, r0, lsl #16
    12e0:	00000000 	andeq	r0, r0, r0
    12e4:	00099b00 	andeq	r9, r9, r0, lsl #22
    12e8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    12ec:	000001a5 	andeq	r0, r0, r5, lsr #3
    12f0:	c2050202 	andgt	r0, r5, #536870912	; 0x20000000
    12f4:	02000006 	andeq	r0, r0, #6
    12f8:	066e0601 	strbteq	r0, [lr], -r1, lsl #12
    12fc:	75030000 	strvc	r0, [r3, #-0]
    1300:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
    1304:	004b1827 	subeq	r1, fp, r7, lsr #16
    1308:	3a040000 	bcc	101310 <__Stack_Size+0x100f10>
    130c:	02000000 	andeq	r0, r0, #0
    1310:	03300704 	teqeq	r0, #4, 14	; 0x100000
    1314:	4b050000 	blmi	14131c <__Stack_Size+0x140f1c>
    1318:	04000000 	streq	r0, [r0], #-0
    131c:	00000052 	andeq	r0, r0, r2, asr r0
    1320:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    1324:	18280200 	stmdane	r8!, {r9}
    1328:	0000006d 	andeq	r0, r0, sp, rrx
    132c:	00005c04 	andeq	r5, r0, r4, lsl #24
    1330:	07020200 	streq	r0, [r2, -r0, lsl #4]
    1334:	0000040e 	andeq	r0, r0, lr, lsl #8
    1338:	00006d05 	andeq	r6, r0, r5, lsl #26
    133c:	38750300 	ldmdacc	r5!, {r8, r9}^
    1340:	18290200 	stmdane	r9!, {r9}
    1344:	00000084 	andeq	r0, r0, r4, lsl #1
    1348:	6c080102 	stfvss	f0, [r8], {2}
    134c:	06000006 	streq	r0, [r0], -r6
    1350:	0000046f 	andeq	r0, r0, pc, ror #8
    1354:	52212f02 	eorpl	r2, r1, #2, 30
    1358:	06000000 	streq	r0, [r0], -r0
    135c:	00000ba9 	andeq	r0, r0, r9, lsr #23
    1360:	74213002 	strtvc	r3, [r1], #-2
    1364:	06000000 	streq	r0, [r0], -r0
    1368:	00000de5 	andeq	r0, r0, r5, ror #27
    136c:	57273302 	strpl	r3, [r7, -r2, lsl #6]!
    1370:	07000000 	streq	r0, [r0, -r0]
    1374:	00840107 	addeq	r0, r4, r7, lsl #2
    1378:	37020000 	strcc	r0, [r2, -r0]
    137c:	0000ca0e 	andeq	ip, r0, lr, lsl #20
    1380:	05f90800 	ldrbeq	r0, [r9, #2048]!	; 0x800
    1384:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1388:	00000767 	andeq	r0, r0, r7, ror #14
    138c:	6a060001 	bvs	181398 <__Stack_Size+0x180f98>
    1390:	02000004 	andeq	r0, r0, #4
    1394:	00af2937 	adceq	r2, pc, r7, lsr r9	; <UNPREDICTABLE>
    1398:	28090000 	stmdacs	r9, {}	; <UNPREDICTABLE>
    139c:	61098d03 	tstvs	r9, r3, lsl #26
    13a0:	0a000001 	beq	13ac <__Stack_Size+0xfac>
    13a4:	03005243 	movweq	r5, #579	; 0x243
    13a8:	008b0a8e 	addeq	r0, fp, lr, lsl #21
    13ac:	0b000000 	bleq	13b4 <__Stack_Size+0xfb4>
    13b0:	00000de0 	andeq	r0, r0, r0, ror #27
    13b4:	8b0a8f03 	blhi	2a4fc8 <__Stack_Size+0x2a4bc8>
    13b8:	04000000 	streq	r0, [r0], #-0
    13bc:	5249430a 	subpl	r4, r9, #671088640	; 0x28000000
    13c0:	0a900300 	beq	fe401fc8 <BootRAM+0xd372769>
    13c4:	0000008b 	andeq	r0, r0, fp, lsl #1
    13c8:	0bb40b08 	bleq	fed03ff0 <BootRAM+0xdc74791>
    13cc:	91030000 	mrsls	r0, (UNDEF: 3)
    13d0:	00008b0a 	andeq	r8, r0, sl, lsl #22
    13d4:	910b0c00 	tstls	fp, r0, lsl #24
    13d8:	0300000c 	movweq	r0, #12
    13dc:	008b0a92 	umulleq	r0, fp, r2, sl
    13e0:	0b100000 	bleq	4013e8 <__Stack_Size+0x400fe8>
    13e4:	00000c3c 	andeq	r0, r0, ip, lsr ip
    13e8:	8b0a9303 	blhi	2a5ffc <__Stack_Size+0x2a5bfc>
    13ec:	14000000 	strne	r0, [r0], #-0
    13f0:	000d070b 	andeq	r0, sp, fp, lsl #14
    13f4:	0a940300 	beq	fe501ffc <BootRAM+0xd47279d>
    13f8:	0000008b 	andeq	r0, r0, fp, lsl #1
    13fc:	0d5f0b18 	vldreq	d16, [pc, #-96]	; 13a4 <__Stack_Size+0xfa4>
    1400:	95030000 	strls	r0, [r3, #-0]
    1404:	00008b0a 	andeq	r8, r0, sl, lsl #22
    1408:	bf0b1c00 	svclt	0x000b1c00
    140c:	0300000d 	movweq	r0, #13
    1410:	008b0a96 	umulleq	r0, fp, r6, sl
    1414:	0a200000 	beq	80141c <__Stack_Size+0x80101c>
    1418:	00525343 	subseq	r5, r2, r3, asr #6
    141c:	8b0a9703 	blhi	2a7030 <__Stack_Size+0x2a6c30>
    1420:	24000000 	strcs	r0, [r0], #-0
    1424:	0c110600 	ldceq	6, cr0, [r1], {-0}
    1428:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    142c:	0000d603 	andeq	sp, r0, r3, lsl #12
    1430:	033c0c00 	teqeq	ip, #0, 24
    1434:	0e099b03 	vmlaeq.f64	d9, d9, d3
    1438:	0b000002 	bleq	1448 <__Stack_Size+0x1048>
    143c:	00000cfd 	strdeq	r0, [r0], -sp
    1440:	1e0a9c03 	cdpne	12, 0, cr9, cr10, cr3, {0}
    1444:	00000002 	andeq	r0, r0, r2
    1448:	000cac0b 	andeq	sl, ip, fp, lsl #24
    144c:	0a9d0300 	beq	fe742054 <BootRAM+0xd6b27f5>
    1450:	0000022a 	andeq	r0, r0, sl, lsr #4
    1454:	0c8c0b08 	vstmiaeq	ip, {d0-d3}
    1458:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    145c:	00021e0a 	andeq	r1, r2, sl, lsl #28
    1460:	d70b8000 	strle	r8, [fp, -r0]
    1464:	0300000d 	movweq	r0, #13
    1468:	022a0a9f 	eoreq	r0, sl, #651264	; 0x9f000
    146c:	0d880000 	stceq	0, cr0, [r8]
    1470:	00000b56 	andeq	r0, r0, r6, asr fp
    1474:	1e0aa003 	cdpne	0, 0, cr10, cr10, cr3, {0}
    1478:	00000002 	andeq	r0, r0, r2
    147c:	0cbb0d01 	ldceq	13, cr0, [fp], #4
    1480:	a1030000 	mrsge	r0, (UNDEF: 3)
    1484:	00022a0a 	andeq	r2, r2, sl, lsl #20
    1488:	0d010800 	stceq	8, cr0, [r1, #-0]
    148c:	00000b3c 	andeq	r0, r0, ip, lsr fp
    1490:	1e0aa203 	cdpne	2, 0, cr10, cr10, cr3, {0}
    1494:	80000002 	andhi	r0, r0, r2
    1498:	0cc50d01 	stcleq	13, cr0, [r5], {1}
    149c:	a3030000 	movwge	r0, #12288	; 0x3000
    14a0:	00022a0a 	andeq	r2, r2, sl, lsl #20
    14a4:	0d018800 	stceq	8, cr8, [r1, #-0]
    14a8:	00000c82 	andeq	r0, r0, r2, lsl #25
    14ac:	1e0aa403 	cdpne	4, 0, cr10, cr10, cr3, {0}
    14b0:	00000002 	andeq	r0, r0, r2
    14b4:	0ccf0d02 	stcleq	13, cr0, [pc], {2}
    14b8:	a5030000 	strge	r0, [r3, #-0]
    14bc:	00023a0a 	andeq	r3, r2, sl, lsl #20
    14c0:	0e020800 	cdpeq	8, 0, cr0, cr2, cr0, {0}
    14c4:	00525049 	subseq	r5, r2, r9, asr #32
    14c8:	5a0aa603 	bpl	2aacdc <__Stack_Size+0x2aa8dc>
    14cc:	00000002 	andeq	r0, r0, r2
    14d0:	8b0f0003 	blhi	3c14e4 <__Stack_Size+0x3c10e4>
    14d4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    14d8:	10000002 	andne	r0, r0, r2
    14dc:	00000223 	andeq	r0, r0, r3, lsr #4
    14e0:	0e050001 	cdpeq	0, 0, cr0, cr5, cr1, {0}
    14e4:	02000002 	andeq	r0, r0, #2
    14e8:	03350704 	teqeq	r5, #4, 14	; 0x100000
    14ec:	3a0f0000 	bcc	3c14f4 <__Stack_Size+0x3c10f4>
    14f0:	3a000000 	bcc	14f8 <__Stack_Size+0x10f8>
    14f4:	10000002 	andne	r0, r0, r2
    14f8:	00000223 	andeq	r0, r0, r3, lsr #4
    14fc:	3a0f001d 	bcc	3c1578 <__Stack_Size+0x3c1178>
    1500:	4a000000 	bmi	1508 <__Stack_Size+0x1108>
    1504:	10000002 	andne	r0, r0, r2
    1508:	00000223 	andeq	r0, r0, r3, lsr #4
    150c:	8b0f003d 	blhi	3c1608 <__Stack_Size+0x3c1208>
    1510:	5a000000 	bpl	1518 <__Stack_Size+0x1118>
    1514:	10000002 	andne	r0, r0, r2
    1518:	00000223 	andeq	r0, r0, r3, lsr #4
    151c:	4a05000e 	bmi	14155c <__Stack_Size+0x14115c>
    1520:	06000002 	streq	r0, [r0], -r2
    1524:	00000d52 	andeq	r0, r0, r2, asr sp
    1528:	6d03a703 	stcvs	7, cr10, [r3, #-12]
    152c:	09000001 	stmdbeq	r0, {r0}
    1530:	09a90304 	stmibeq	r9!, {r2, r8, r9}
    1534:	000002a9 	andeq	r0, r0, r9, lsr #5
    1538:	0004740b 	andeq	r7, r4, fp, lsl #8
    153c:	08aa0300 	stmiaeq	sl!, {r8, r9}
    1540:	00000079 	andeq	r0, r0, r9, ror r0
    1544:	05260b00 	streq	r0, [r6, #-2816]!	; 0xfffff500
    1548:	ab030000 	blge	c1550 <__Stack_Size+0xc1150>
    154c:	00007908 	andeq	r7, r0, r8, lsl #18
    1550:	050b0100 	streq	r0, [fp, #-256]	; 0xffffff00
    1554:	03000003 	movweq	r0, #3
    1558:	007908ac 	rsbseq	r0, r9, ip, lsr #17
    155c:	0b020000 	bleq	81564 <__Stack_Size+0x81164>
    1560:	00000064 	andeq	r0, r0, r4, rrx
    1564:	ca0aad03 	bgt	2ac978 <__Stack_Size+0x2ac578>
    1568:	03000000 	movweq	r0, #0
    156c:	04970600 	ldreq	r0, [r7], #1536	; 0x600
    1570:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    1574:	00026b03 	andeq	r6, r2, r3, lsl #22
    1578:	03400900 	movteq	r0, #2304	; 0x900
    157c:	037509b0 	cmneq	r5, #176, 18	; 0x2c0000
    1580:	a60b0000 	strge	r0, [fp], -r0
    1584:	0300000c 	movweq	r0, #12
    1588:	00a30bb1 	strhteq	r0, [r3], r1
    158c:	0b000000 	bleq	1594 <__Stack_Size+0x1194>
    1590:	00000c2f 	andeq	r0, r0, pc, lsr #24
    1594:	8b0ab203 	blhi	2adda8 <__Stack_Size+0x2ad9a8>
    1598:	04000000 	streq	r0, [r0], #-0
    159c:	000c030b 	andeq	r0, ip, fp, lsl #6
    15a0:	0ab30300 	beq	fecc21a8 <BootRAM+0xdc32949>
    15a4:	0000008b 	andeq	r0, r0, fp, lsl #1
    15a8:	0c430b08 	mcrreq	11, 0, r0, r3, cr8
    15ac:	b4030000 	strlt	r0, [r3], #-0
    15b0:	00008b0a 	andeq	r8, r0, sl, lsl #22
    15b4:	530a0c00 	movwpl	r0, #44032	; 0xac00
    15b8:	03005243 	movweq	r5, #579	; 0x243
    15bc:	008b0ab5 			; <UNDEFINED> instruction: 0x008b0ab5
    15c0:	0a100000 	beq	4015c8 <__Stack_Size+0x4011c8>
    15c4:	00524343 	subseq	r4, r2, r3, asr #6
    15c8:	8b0ab603 	blhi	2aeddc <__Stack_Size+0x2ae9dc>
    15cc:	14000000 	strne	r0, [r0], #-0
    15d0:	000d800b 	andeq	r8, sp, fp
    15d4:	0ab70300 	beq	fedc21dc <BootRAM+0xdd3297d>
    15d8:	00000385 	andeq	r0, r0, r5, lsl #7
    15dc:	0cf70b18 	vldmiaeq	r7!, {d16-d27}
    15e0:	b8030000 	stmdalt	r3, {}	; <UNPREDICTABLE>
    15e4:	00008b0a 	andeq	r8, r0, sl, lsl #22
    15e8:	7d0b2400 	cfstrsvc	mvf2, [fp, #-0]
    15ec:	0300000c 	movweq	r0, #12
    15f0:	008b0ab9 			; <UNDEFINED> instruction: 0x008b0ab9
    15f4:	0b280000 	bleq	a015fc <__Stack_Size+0xa011fc>
    15f8:	00000df7 	strdeq	r0, [r0], -r7
    15fc:	8b0aba03 	blhi	2afe10 <__Stack_Size+0x2afa10>
    1600:	2c000000 	stccs	0, cr0, [r0], {-0}
    1604:	000cb60b 	andeq	fp, ip, fp, lsl #12
    1608:	0abb0300 	beq	feec2210 <BootRAM+0xde329b1>
    160c:	0000008b 	andeq	r0, r0, fp, lsl #1
    1610:	0c490b30 	vmoveq	d16, r0, r9
    1614:	bc030000 	stclt	0, cr0, [r3], {-0}
    1618:	00008b0a 	andeq	r8, r0, sl, lsl #22
    161c:	dc0b3400 	cfstrsle	mvf3, [fp], {-0}
    1620:	0300000b 	movweq	r0, #11
    1624:	008b0abd 			; <UNDEFINED> instruction: 0x008b0abd
    1628:	0b380000 	bleq	e01630 <__Stack_Size+0xe01230>
    162c:	00000d29 	andeq	r0, r0, r9, lsr #26
    1630:	8b0abe03 	blhi	2b0e44 <__Stack_Size+0x2b0a44>
    1634:	3c000000 	stccc	0, cr0, [r0], {-0}
    1638:	008b0f00 	addeq	r0, fp, r0, lsl #30
    163c:	03850000 	orreq	r0, r5, #0
    1640:	23100000 	tstcs	r0, #0
    1644:	02000002 	andeq	r0, r0, #2
    1648:	03750500 	cmneq	r5, #0, 10
    164c:	eb060000 	bl	181654 <__Stack_Size+0x181254>
    1650:	0300000d 	movweq	r0, #13
    1654:	02b503bf 	adcseq	r0, r5, #-67108862	; 0xfc000002
    1658:	71110000 	tstvc	r1, r0
    165c:	0800000c 	stmdaeq	r0, {r2, r3}
    1660:	bd10c303 	ldclt	3, cr12, [r0, #-12]
    1664:	0a000003 	beq	1678 <__Stack_Size+0x1278>
    1668:	03005243 	movweq	r5, #579	; 0x243
    166c:	008b0ac4 	addeq	r0, fp, r4, asr #21
    1670:	0a000000 	beq	1678 <__Stack_Size+0x1278>
    1674:	00525343 	subseq	r5, r2, r3, asr #6
    1678:	8b0ac503 	blhi	2b2a8c <__Stack_Size+0x2b268c>
    167c:	04000000 	streq	r0, [r0], #-0
    1680:	0c9a1100 	ldfeqs	f1, [sl], {0}
    1684:	03380000 	teqeq	r8, #0
    1688:	050210d0 	streq	r1, [r2, #-208]	; 0xffffff30
    168c:	170b0000 	strne	r0, [fp, -r0]
    1690:	0300000d 	movweq	r0, #13
    1694:	00460fd1 	ldrdeq	r0, [r6], #-241	; 0xffffff0f
    1698:	0a000000 	beq	16a0 <__Stack_Size+0x12a0>
    169c:	00315244 	eorseq	r5, r1, r4, asr #4
    16a0:	970ad203 	strls	sp, [sl, -r3, lsl #4]
    16a4:	04000000 	streq	r0, [r0], #-0
    16a8:	000cbb0b 	andeq	fp, ip, fp, lsl #22
    16ac:	0fd30300 	svceq	0x00d30300
    16b0:	00000068 	andeq	r0, r0, r8, rrx
    16b4:	52440a06 	subpl	r0, r4, #24576	; 0x6000
    16b8:	d4030032 	strle	r0, [r3], #-50	; 0xffffffce
    16bc:	0000970a 	andeq	r9, r0, sl, lsl #14
    16c0:	c50b0800 	strgt	r0, [fp, #-2048]	; 0xfffff800
    16c4:	0300000c 	movweq	r0, #12
    16c8:	00680fd5 	ldrdeq	r0, [r8], #-245	; 0xffffff0b	; <UNPREDICTABLE>
    16cc:	0a0a0000 	beq	2816d4 <__Stack_Size+0x2812d4>
    16d0:	00335244 	eorseq	r5, r3, r4, asr #4
    16d4:	970ad603 	strls	sp, [sl, -r3, lsl #12]
    16d8:	0c000000 	stceq	0, cr0, [r0], {-0}
    16dc:	000ccf0b 	andeq	ip, ip, fp, lsl #30
    16e0:	0fd70300 	svceq	0x00d70300
    16e4:	00000068 	andeq	r0, r0, r8, rrx
    16e8:	52440a0e 	subpl	r0, r4, #57344	; 0xe000
    16ec:	d8030034 	stmdale	r3, {r2, r4, r5}
    16f0:	0000970a 	andeq	r9, r0, sl, lsl #14
    16f4:	d90b1000 	stmdble	fp, {ip}
    16f8:	0300000c 	movweq	r0, #12
    16fc:	00680fd9 	ldrdeq	r0, [r8], #-249	; 0xffffff07	; <UNPREDICTABLE>
    1700:	0a120000 	beq	481708 <__Stack_Size+0x481308>
    1704:	00355244 	eorseq	r5, r5, r4, asr #4
    1708:	970ada03 	strls	sp, [sl, -r3, lsl #20]
    170c:	14000000 	strne	r0, [r0], #-0
    1710:	000ce30b 	andeq	lr, ip, fp, lsl #6
    1714:	0fdb0300 	svceq	0x00db0300
    1718:	00000068 	andeq	r0, r0, r8, rrx
    171c:	52440a16 	subpl	r0, r4, #90112	; 0x16000
    1720:	dc030036 	stcle	0, cr0, [r3], {54}	; 0x36
    1724:	0000970a 	andeq	r9, r0, sl, lsl #14
    1728:	ed0b1800 	stc	8, cr1, [fp, #-0]
    172c:	0300000c 	movweq	r0, #12
    1730:	00680fdd 	ldrdeq	r0, [r8], #-253	; 0xffffff03	; <UNPREDICTABLE>
    1734:	0a1a0000 	beq	68173c <__Stack_Size+0x68133c>
    1738:	00375244 	eorseq	r5, r7, r4, asr #4
    173c:	970ade03 	strls	sp, [sl, -r3, lsl #28]
    1740:	1c000000 	stcne	0, cr0, [r0], {-0}
    1744:	000daa0b 	andeq	sl, sp, fp, lsl #20
    1748:	0fdf0300 	svceq	0x00df0300
    174c:	00000068 	andeq	r0, r0, r8, rrx
    1750:	52440a1e 	subpl	r0, r4, #122880	; 0x1e000
    1754:	e0030038 	and	r0, r3, r8, lsr r0
    1758:	0000970a 	andeq	r9, r0, sl, lsl #14
    175c:	2e0b2000 	cdpcs	0, 0, cr2, cr11, cr0, {0}
    1760:	0300000d 	movweq	r0, #13
    1764:	00680fe1 	rsbeq	r0, r8, r1, ror #31
    1768:	0a220000 	beq	881770 <__Stack_Size+0x881370>
    176c:	00395244 	eorseq	r5, r9, r4, asr #4
    1770:	970ae203 	strls	lr, [sl, -r3, lsl #4]
    1774:	24000000 	strcs	r0, [r0], #-0
    1778:	000b8c0b 	andeq	r8, fp, fp, lsl #24
    177c:	0fe30300 	svceq	0x00e30300
    1780:	00000068 	andeq	r0, r0, r8, rrx
    1784:	0d020b26 	vstreq	d0, [r2, #-152]	; 0xffffff68
    1788:	e4030000 	str	r0, [r3], #-0
    178c:	0000970a 	andeq	r9, r0, sl, lsl #14
    1790:	970b2800 	strls	r2, [fp, -r0, lsl #16]
    1794:	0300000b 	movweq	r0, #11
    1798:	00680fe5 	rsbeq	r0, r8, r5, ror #31
    179c:	0b2a0000 	bleq	a817a4 <__Stack_Size+0xa813a4>
    17a0:	00000d85 	andeq	r0, r0, r5, lsl #27
    17a4:	8b0ae603 	blhi	2bafb8 <__Stack_Size+0x2babb8>
    17a8:	2c000000 	stccs	0, cr0, [r0], {-0}
    17ac:	0052430a 	subseq	r4, r2, sl, lsl #6
    17b0:	8b0ae703 	blhi	2bb3c4 <__Stack_Size+0x2bafc4>
    17b4:	30000000 	andcc	r0, r0, r0
    17b8:	5253430a 	subspl	r4, r3, #671088640	; 0x28000000
    17bc:	0ae80300 	beq	ffa023c4 <BootRAM+0xe972b65>
    17c0:	0000008b 	andeq	r0, r0, fp, lsl #1
    17c4:	13120034 	tstne	r2, #52	; 0x34
    17c8:	00050204 	andeq	r0, r5, r4, lsl #4
    17cc:	028c1400 	addeq	r1, ip, #0, 8
    17d0:	2c040000 	stccs	0, cr0, [r4], {-0}
    17d4:	0005150c 	andeq	r1, r5, ip, lsl #10
    17d8:	05041500 	streq	r1, [r4, #-1280]	; 0xfffffb00
    17dc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    17e0:	00027b16 	andeq	r7, r2, r6, lsl fp
    17e4:	01a10100 			; <UNDEFINED> instruction: 0x01a10100
    17e8:	00051505 	andeq	r1, r5, r5, lsl #10
    17ec:	00096c00 	andeq	r6, r9, r0, lsl #24
    17f0:	00001808 	andeq	r1, r0, r8, lsl #16
    17f4:	499c0100 	ldmibmi	ip, {r8}
    17f8:	17000005 	strne	r0, [r0, -r5]
    17fc:	00000d76 	andeq	r0, r0, r6, ror sp
    1800:	1501a401 	strne	sl, [r1, #-1025]	; 0xfffffbff
    1804:	00000549 	andeq	r0, r0, r9, asr #10
    1808:	1ffff7e0 	svcne	0x00fff7e0
    180c:	6d041300 	stcvs	3, cr1, [r4, #-0]
    1810:	16000000 	strne	r0, [r0], -r0
    1814:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1818:	05019b01 	streq	r9, [r1, #-2817]	; 0xfffff4ff
    181c:	00000515 	andeq	r0, r0, r5, lsl r5
    1820:	08000958 	stmdaeq	r0, {r3, r4, r6, r8, fp}
    1824:	00000014 	andeq	r0, r0, r4, lsl r0
    1828:	057c9c01 	ldrbeq	r9, [ip, #-3073]!	; 0xfffff3ff
    182c:	76170000 	ldrvc	r0, [r7], -r0
    1830:	0100000d 	tsteq	r0, sp
    1834:	4915019d 	ldmdbmi	r5, {r0, r2, r3, r4, r7, r8}
    1838:	e0000005 	and	r0, r0, r5
    183c:	001ffff7 			; <UNDEFINED> instruction: 0x001ffff7
    1840:	00024016 	andeq	r4, r2, r6, lsl r0
    1844:	018f0100 	orreq	r0, pc, r0, lsl #2
    1848:	0002230e 	andeq	r2, r2, lr, lsl #6
    184c:	00094400 	andeq	r4, r9, r0, lsl #8
    1850:	00001208 	andeq	r1, r0, r8, lsl #4
    1854:	c29c0100 	addsgt	r0, ip, #0, 2
    1858:	18000005 	stmdane	r0, {r0, r2}
    185c:	006e6970 	rsbeq	r6, lr, r0, ror r9
    1860:	19018f01 	stmdbne	r1, {r0, r8, r9, sl, fp, pc}
    1864:	00000515 	andeq	r0, r0, r5, lsl r5
    1868:	0000033f 	andeq	r0, r0, pc, lsr r3
    186c:	0000033b 	andeq	r0, r0, fp, lsr r3
    1870:	000c3719 	andeq	r3, ip, r9, lsl r7
    1874:	01910100 	orrseq	r0, r1, r0, lsl #2
    1878:	00022312 	andeq	r2, r2, r2, lsl r3
    187c:	00036300 	andeq	r6, r3, r0, lsl #6
    1880:	00035d00 	andeq	r5, r3, r0, lsl #26
    1884:	c41a0000 	ldrgt	r0, [sl], #-0
    1888:	0100000b 	tsteq	r0, fp
    188c:	2c060187 	stfcss	f0, [r6], {135}	; 0x87
    1890:	18080009 	stmdane	r8, {r0, r3}
    1894:	01000000 	mrseq	r0, (UNDEF: 0)
    1898:	0c671b9c 			; <UNDEFINED> instruction: 0x0c671b9c
    189c:	80010000 	andhi	r0, r1, r0
    18a0:	16010601 	strne	r0, [r1], -r1, lsl #12
    18a4:	00000d67 	andeq	r0, r0, r7, ror #26
    18a8:	06016501 	streq	r6, [r1], -r1, lsl #10
    18ac:	000000ca 	andeq	r0, r0, sl, asr #1
    18b0:	080008d8 	stmdaeq	r0, {r3, r4, r6, r7, fp}
    18b4:	00000048 	andeq	r0, r0, r8, asr #32
    18b8:	06699c01 	strbteq	r9, [r9], -r1, lsl #24
    18bc:	511c0000 	tstpl	ip, r0
    18c0:	0100000b 	tsteq	r0, fp
    18c4:	3a190165 	bcc	641e60 <__Stack_Size+0x641a60>
    18c8:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    18cc:	95000003 	strls	r0, [r0, #-3]
    18d0:	1d000003 	stcne	0, cr0, [r0, #-12]
    18d4:	00000c87 	andeq	r0, r0, r7, lsl #25
    18d8:	23016501 	movwcs	r6, #5377	; 0x1501
    18dc:	0000003a 	andeq	r0, r0, sl, lsr r0
    18e0:	90195101 	andsls	r5, r9, r1, lsl #2
    18e4:	0100000d 	tsteq	r0, sp
    18e8:	690b0166 	stmdbvs	fp, {r1, r2, r5, r6, r8}
    18ec:	be000006 	cdplt	0, 0, cr0, cr0, cr6, {0}
    18f0:	ba000003 	blt	1904 <__Stack_Size+0x1504>
    18f4:	1e000003 	cdpne	0, 0, cr0, cr0, cr3, {0}
    18f8:	00000c59 	andeq	r0, r0, r9, asr ip
    18fc:	0a016701 	beq	5b508 <__Stack_Size+0x5b108>
    1900:	0000008b 	andeq	r0, r0, fp, lsl #1
    1904:	1e709102 	expnes	f1, f2
    1908:	00000dd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    190c:	0a016801 	beq	5b918 <__Stack_Size+0x5b518>
    1910:	0000008b 	andeq	r0, r0, fp, lsl #1
    1914:	19749102 	ldmdbne	r4!, {r1, r8, ip, pc}^
    1918:	00000c60 	andeq	r0, r0, r0, ror #24
    191c:	09016a01 	stmdbeq	r1, {r0, r9, fp, sp, lr}
    1920:	0000003a 	andeq	r0, r0, sl, lsr r0
    1924:	000003e1 	andeq	r0, r0, r1, ror #7
    1928:	000003df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    192c:	97041300 	strls	r1, [r4, -r0, lsl #6]
    1930:	16000000 	strne	r0, [r0], -r0
    1934:	00000b63 	andeq	r0, r0, r3, ror #22
    1938:	06015b01 	streq	r5, [r1], -r1, lsl #22
    193c:	000000ca 	andeq	r0, r0, sl, asr #1
    1940:	00000000 	andeq	r0, r0, r0
    1944:	00000030 	andeq	r0, r0, r0, lsr r0
    1948:	06bc9c01 	ldrteq	r9, [ip], r1, lsl #24
    194c:	411c0000 	tstmi	ip, r0
    1950:	0100000b 	tsteq	r0, fp
    1954:	3a1a015b 	bcc	681ec8 <__Stack_Size+0x681ac8>
    1958:	fa000000 	blx	1960 <__Stack_Size+0x1560>
    195c:	f4000003 	vst4.8	{d0-d3}, [r0], r3
    1960:	18000003 	stmdane	r0, {r0, r1}
    1964:	5b01006e 	blpl	41b24 <__Stack_Size+0x41724>
    1968:	005c2801 	subseq	r2, ip, r1, lsl #16
    196c:	042e0000 	strteq	r0, [lr], #-0
    1970:	04260000 	strteq	r0, [r6], #-0
    1974:	001f0000 	andseq	r0, pc, r0
    1978:	bc000000 	stclt	0, cr0, [r0], {-0}
    197c:	00000006 	andeq	r0, r0, r6
    1980:	000b7816 	andeq	r7, fp, r6, lsl r8
    1984:	014a0100 	mrseq	r0, (UNDEF: 90)
    1988:	0000ca06 	andeq	ip, r0, r6, lsl #20
    198c:	0008b000 	andeq	fp, r8, r0
    1990:	00002808 	andeq	r2, r0, r8, lsl #16
    1994:	029c0100 	addseq	r0, ip, #0, 2
    1998:	1c000007 	stcne	0, cr0, [r0], {7}
    199c:	00000b41 	andeq	r0, r0, r1, asr #22
    19a0:	19014a01 	stmdbne	r1, {r0, r9, fp, lr}
    19a4:	0000003a 	andeq	r0, r0, sl, lsr r0
    19a8:	0000046b 	andeq	r0, r0, fp, ror #8
    19ac:	00000467 	andeq	r0, r0, r7, ror #8
    19b0:	000c6019 	andeq	r6, ip, r9, lsl r0
    19b4:	014b0100 	mrseq	r0, (UNDEF: 91)
    19b8:	00003a09 	andeq	r3, r0, r9, lsl #20
    19bc:	00049000 	andeq	r9, r4, r0
    19c0:	00048c00 	andeq	r8, r4, r0, lsl #24
    19c4:	01200000 			; <UNDEFINED> instruction: 0x01200000
    19c8:	0100000b 	tsteq	r0, fp
    19cc:	9c06013e 	stflss	f0, [r6], {62}	; 0x3e
    19d0:	14080008 	strne	r0, [r8], #-8
    19d4:	01000000 	mrseq	r0, (UNDEF: 0)
    19d8:	00072c9c 	muleq	r7, ip, ip
    19dc:	0b872100 	bleq	fe1c9de4 <BootRAM+0xd13a585>
    19e0:	3f010000 	svccc	0x00010000
    19e4:	072c1201 	streq	r1, [ip, -r1, lsl #4]!
    19e8:	da800000 	ble	fe0019f0 <BootRAM+0xcf72191>
    19ec:	007e8083 	rsbseq	r8, lr, r3, lsl #1
    19f0:	038a0413 	orreq	r0, sl, #318767104	; 0x13000000
    19f4:	e7200000 	str	r0, [r0, -r0]!
    19f8:	0100000b 	tsteq	r0, fp
    19fc:	50060134 	andpl	r0, r6, r4, lsr r1
    1a00:	24080008 	strcs	r0, [r8], #-8
    1a04:	01000000 	mrseq	r0, (UNDEF: 0)
    1a08:	00075c9c 	muleq	r7, ip, ip
    1a0c:	0be12100 	bleq	ff849e14 <BootRAM+0xe7ba5b5>
    1a10:	35010000 	strcc	r0, [r1, #-0]
    1a14:	075c1301 	ldrbeq	r1, [ip, -r1, lsl #6]
    1a18:	c2800000 	addgt	r0, r0, #0
    1a1c:	007e8083 	rsbseq	r8, lr, r3, lsl #1
    1a20:	025f0413 	subseq	r0, pc, #318767104	; 0x13000000
    1a24:	34200000 	strtcc	r0, [r0], #-0
    1a28:	01000007 	tsteq	r0, r7
    1a2c:	e4060111 	str	r0, [r6], #-273	; 0xfffffeef
    1a30:	6c080007 	stcvs	0, cr0, [r8], {7}
    1a34:	01000000 	mrseq	r0, (UNDEF: 0)
    1a38:	00081c9c 	muleq	r8, ip, ip
    1a3c:	0c1f1c00 	ldceq	12, cr1, [pc], {-0}
    1a40:	11010000 	mrsne	r0, (UNDEF: 1)
    1a44:	081c2101 	ldmdaeq	ip, {r0, r8, sp}
    1a48:	04b40000 	ldrteq	r0, [r4], #0
    1a4c:	04b00000 	ldrteq	r0, [r0], #0
    1a50:	c4190000 	ldrgt	r0, [r9], #-0
    1a54:	0100000d 	tsteq	r0, sp
    1a58:	3a090112 	bcc	241ea8 <__Stack_Size+0x241aa8>
    1a5c:	e1000000 	mrs	r0, (UNDEF: 0)
    1a60:	d5000004 	strle	r0, [r0, #-4]
    1a64:	19000004 	stmdbne	r0, {r2}
    1a68:	00000ba2 	andeq	r0, r0, r2, lsr #23
    1a6c:	09011301 	stmdbeq	r1, {r0, r8, r9, ip}
    1a70:	0000003a 	andeq	r0, r0, sl, lsr r0
    1a74:	0000054a 	andeq	r0, r0, sl, asr #10
    1a78:	0000053c 	andeq	r0, r0, ip, lsr r5
    1a7c:	000c3419 	andeq	r3, ip, r9, lsl r4
    1a80:	01140100 	tsteq	r4, r0, lsl #2
    1a84:	00003a09 	andeq	r3, r0, r9, lsl #20
    1a88:	0005c800 	andeq	ip, r5, r0, lsl #16
    1a8c:	0005c200 	andeq	ip, r5, r0, lsl #4
    1a90:	0bbd1900 	bleq	fef47e98 <BootRAM+0xdeb8639>
    1a94:	15010000 	strne	r0, [r1, #-0]
    1a98:	003a0901 	eorseq	r0, sl, r1, lsl #18
    1a9c:	05fb0000 	ldrbeq	r0, [fp, #0]!
    1aa0:	05f70000 	ldrbeq	r0, [r7, #0]!
    1aa4:	4a190000 	bmi	641aac <__Stack_Size+0x6416ac>
    1aa8:	0100000b 	tsteq	r0, fp
    1aac:	3a090116 	bcc	241f0c <__Stack_Size+0x241b0c>
    1ab0:	20000000 	andcs	r0, r0, r0
    1ab4:	1a000006 	bne	1ad4 <__Stack_Size+0x16d4>
    1ab8:	21000006 	tstcs	r0, r6
    1abc:	00000b87 	andeq	r0, r0, r7, lsl #23
    1ac0:	12011801 	andne	r1, r1, #65536	; 0x10000
    1ac4:	0000072c 	andeq	r0, r0, ip, lsr #14
    1ac8:	8083da80 	addhi	sp, r3, r0, lsl #21
    1acc:	0be1217e 	bleq	ff84a0cc <BootRAM+0xe7ba86d>
    1ad0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    1ad4:	075c1301 	ldrbeq	r1, [ip, -r1, lsl #6]
    1ad8:	c2800000 	addgt	r0, r0, #0
    1adc:	007e8083 	rsbseq	r8, lr, r3, lsl #1
    1ae0:	02a90413 	adceq	r0, r9, #318767104	; 0x13000000
    1ae4:	79220000 	stmdbvc	r2!, {}	; <UNPREDICTABLE>
    1ae8:	0100000a 	tsteq	r0, sl
    1aec:	051505f2 	ldreq	r0, [r5, #-1522]	; 0xfffffa0e
    1af0:	079c0000 	ldreq	r0, [ip, r0]
    1af4:	00480800 	subeq	r0, r8, r0, lsl #16
    1af8:	9c010000 	stcls	0, cr0, [r1], {-0}
    1afc:	00000861 	andeq	r0, r0, r1, ror #16
    1b00:	000d0f23 	andeq	r0, sp, r3, lsr #30
    1b04:	0af40100 	beq	ffd01f0c <BootRAM+0xec726ad>
    1b08:	000000ca 	andeq	r0, r0, sl, asr #1
    1b0c:	00000652 	andeq	r0, r0, r2, asr r6
    1b10:	0000064e 	andeq	r0, r0, lr, asr #12
    1b14:	0007c624 	andeq	ip, r7, r4, lsr #12
    1b18:	00086108 	andeq	r6, r8, r8, lsl #2
    1b1c:	50012500 	andpl	r2, r1, r0, lsl #10
    1b20:	00007002 	andeq	r7, r0, r2
    1b24:	0db42600 	ldceq	6, cr2, [r4]
    1b28:	e3010000 	movw	r0, #4096	; 0x1000
    1b2c:	00076c06 	andeq	r6, r7, r6, lsl #24
    1b30:	00003008 	andeq	r3, r0, r8
    1b34:	869c0100 	ldrhi	r0, [ip], r0, lsl #2
    1b38:	27000008 	strcs	r0, [r0, -r8]
    1b3c:	00000bfd 	strdeq	r0, [r0], -sp
    1b40:	5c15e301 	ldcpl	3, cr14, [r5], {1}
    1b44:	01000000 	mrseq	r0, (UNDEF: 0)
    1b48:	ad260050 	stcge	0, cr0, [r6, #-320]!	; 0xfffffec0
    1b4c:	0100000a 	tsteq	r0, sl
    1b50:	087406d0 	ldmdaeq	r4!, {r4, r6, r7, r9, sl}^
    1b54:	00280800 	eoreq	r0, r8, r0, lsl #16
    1b58:	9c010000 	stcls	0, cr0, [r1], {-0}
    1b5c:	000008f7 	strdeq	r0, [r0], -r7
    1b60:	000da228 	andeq	sl, sp, r8, lsr #4
    1b64:	15d00100 	ldrbne	r0, [r0, #256]	; 0x100
    1b68:	0000003a 	andeq	r0, r0, sl, lsr r0
    1b6c:	0000067a 	andeq	r0, r0, sl, ror r6
    1b70:	00000672 	andeq	r0, r0, r2, ror r6
    1b74:	0005d529 	andeq	sp, r5, r9, lsr #10
    1b78:	00087400 	andeq	r7, r8, r0, lsl #8
    1b7c:	01400208 	cmpeq	r0, r8, lsl #4
    1b80:	d5010000 	strle	r0, [r1, #-0]
    1b84:	08821f05 	stmeq	r2, {r0, r2, r8, r9, sl, fp, ip}
    1b88:	0bb90800 	bleq	fee43b90 <BootRAM+0xddb4331>
    1b8c:	861f0000 	ldrhi	r0, [pc], -r0
    1b90:	32080008 	andcc	r0, r8, #8
    1b94:	1f000007 	svcne	0x00000007
    1b98:	0800088a 	stmdaeq	r0, {r1, r3, r7, fp}
    1b9c:	00000bc5 	andeq	r0, r0, r5, asr #23
    1ba0:	00088e1f 	andeq	r8, r8, pc, lsl lr
    1ba4:	000a0308 	andeq	r0, sl, r8, lsl #6
    1ba8:	08982a00 	ldmeq	r8, {r9, fp, sp}
    1bac:	08f70800 	ldmeq	r7!, {fp}^
    1bb0:	01250000 			; <UNDEFINED> instruction: 0x01250000
    1bb4:	01f30350 	mvnseq	r0, r0, asr r3
    1bb8:	2b000050 	blcs	1d00 <__Stack_Size+0x1900>
    1bbc:	00000b2e 	andeq	r0, r0, lr, lsr #22
    1bc0:	5806bf01 	stmdapl	r6, {r0, r8, r9, sl, fp, ip, sp, pc}
    1bc4:	12080007 	andne	r0, r8, #7
    1bc8:	01000000 	mrseq	r0, (UNDEF: 0)
    1bcc:	0009569c 	muleq	r9, ip, r6
    1bd0:	0da22800 	stceq	8, cr2, [r2]
    1bd4:	bf010000 	svclt	0x00010000
    1bd8:	00003a18 	andeq	r3, r0, r8, lsl sl
    1bdc:	0006b500 	andeq	fp, r6, r0, lsl #10
    1be0:	0006b100 	andeq	fp, r6, r0, lsl #2
    1be4:	0d9a0600 	ldceq	6, cr0, [sl]
    1be8:	c3010000 	movwgt	r0, #4096	; 0x1000
    1bec:	00050314 	andeq	r0, r5, r4, lsl r3
    1bf0:	0c082300 	stceq	3, cr2, [r8], {-0}
    1bf4:	c4010000 	strgt	r0, [r1], #-0
    1bf8:	00003a09 	andeq	r3, r0, r9, lsl #20
    1bfc:	0006d800 	andeq	sp, r6, r0, lsl #16
    1c00:	0006d600 	andeq	sp, r6, r0, lsl #12
    1c04:	0d212300 	stceq	3, cr2, [r1, #-0]
    1c08:	c6010000 	strgt	r0, [r1], -r0
    1c0c:	0009210d 	andeq	r2, r9, sp, lsl #2
    1c10:	0006ed00 	andeq	lr, r6, r0, lsl #26
    1c14:	0006eb00 	andeq	lr, r6, r0, lsl #22
    1c18:	9f2c0000 	svcls	0x002c0000
    1c1c:	0100000a 	tsteq	r0, sl
    1c20:	00ca06b5 	strheq	r0, [sl], #101	; 0x65
    1c24:	07440000 	strbeq	r0, [r4, -r0]
    1c28:	00140800 	andseq	r0, r4, r0, lsl #16
    1c2c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c30:	00000998 	muleq	r0, r8, r9
    1c34:	000da228 	andeq	sl, sp, r8, lsr #4
    1c38:	18b50100 	ldmne	r5!, {r8}
    1c3c:	0000003a 	andeq	r0, r0, sl, lsr r0
    1c40:	00000704 	andeq	r0, r0, r4, lsl #14
    1c44:	00000700 	andeq	r0, r0, r0, lsl #14
    1c48:	0070732d 	rsbseq	r7, r0, sp, lsr #6
    1c4c:	3a09b601 	bcc	26f458 <__Stack_Size+0x26f058>
    1c50:	27000000 	strcs	r0, [r0, -r0]
    1c54:	25000007 	strcs	r0, [r0, #-7]
    1c58:	00000007 	andeq	r0, r0, r7
    1c5c:	000ad426 	andeq	sp, sl, r6, lsr #8
    1c60:	06a90100 	strteq	r0, [r9], r0, lsl #2
    1c64:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
    1c68:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c6c:	09cd9c01 	stmibeq	sp, {r0, sl, fp, ip, pc}^
    1c70:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
    1c74:	0a080007 	beq	201c98 <__Stack_Size+0x201898>
    1c78:	23000000 	movwcs	r0, #0
    1c7c:	00000c60 	andeq	r0, r0, r0, ror #24
    1c80:	3a0dac01 	bcc	36cc8c <__Stack_Size+0x36c88c>
    1c84:	3c000000 	stccc	0, cr0, [r0], {-0}
    1c88:	3a000007 	bcc	1cac <__Stack_Size+0x18ac>
    1c8c:	00000007 	andeq	r0, r0, r7
    1c90:	0a672f00 	beq	19cd898 <__Stack_Size+0x19cd498>
    1c94:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c98:	00072406 	andeq	r2, r7, r6, lsl #8
    1c9c:	00000208 	andeq	r0, r0, r8, lsl #4
    1ca0:	269c0100 	ldrcs	r0, [ip], r0, lsl #2
    1ca4:	00000adf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1ca8:	c8066c01 	stmdagt	r6, {r0, sl, fp, sp, lr}
    1cac:	5c080006 	stcpl	0, cr0, [r8], {6}
    1cb0:	01000000 	mrseq	r0, (UNDEF: 0)
    1cb4:	000a039c 	muleq	sl, ip, r3
    1cb8:	0d433000 	stcleq	0, cr3, [r3, #-0]
    1cbc:	6d010000 	stcvs	0, cr0, [r1, #-0]
    1cc0:	00022312 	andeq	r2, r2, r2, lsl r3
    1cc4:	2f000000 	svccs	0x00000000
    1cc8:	00000ab8 			; <UNDEFINED> instruction: 0x00000ab8
    1ccc:	8c066201 	sfmhi	f6, 4, [r6], {1}
    1cd0:	3c080006 	stccc	0, cr0, [r8], {6}
    1cd4:	01000000 	mrseq	r0, (UNDEF: 0)
    1cd8:	0c4f269c 	mcrreq	6, 9, r2, pc, cr12
    1cdc:	4c010000 	stcmi	0, cr0, [r1], {-0}
    1ce0:	00000006 	andeq	r0, r0, r6
    1ce4:	00005200 	andeq	r5, r0, r0, lsl #4
    1ce8:	fe9c0100 	cdp2	1, 9, cr0, cr12, cr0, {0}
    1cec:	2800000a 	stmdacs	r0, {r1, r3}
    1cf0:	00000d8b 	andeq	r0, r0, fp, lsl #27
    1cf4:	3a144c01 	bcc	514d00 <__Stack_Size+0x514900>
    1cf8:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    1cfc:	4f000007 	svcmi	0x00000007
    1d00:	31000007 	tstcc	r0, r7
    1d04:	006e6970 	rsbeq	r6, lr, r0, ror r9
    1d08:	791d4c01 	ldmdbvc	sp, {r0, sl, fp, lr}
    1d0c:	9c000000 	stcls	0, cr0, [r0], {-0}
    1d10:	98000007 	stmdals	r0, {r0, r1, r2}
    1d14:	28000007 	stmdacs	r0, {r0, r1, r2}
    1d18:	00000b17 	andeq	r0, r0, r7, lsl fp
    1d1c:	79254c01 	stmdbvc	r5!, {r0, sl, fp, lr}
    1d20:	c7000000 	strgt	r0, [r0, -r0]
    1d24:	bd000007 	stclt	0, cr0, [r0, #-28]	; 0xffffffe4
    1d28:	28000007 	stmdacs	r0, {r0, r1, r2}
    1d2c:	00000b73 	andeq	r0, r0, r3, ror fp
    1d30:	3a304c01 	bcc	c14d3c <__Stack_Size+0xc1493c>
    1d34:	11000000 	mrsne	r0, (UNDEF: 0)
    1d38:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
    1d3c:	28000008 	stmdacs	r0, {r3}
    1d40:	00000acc 	andeq	r0, r0, ip, asr #21
    1d44:	79384c01 	ldmdbvc	r8!, {r0, sl, fp, lr}
    1d48:	33000000 	movwcc	r0, #0
    1d4c:	2f000008 	svccs	0x00000008
    1d50:	2d000008 	stccs	0, cr0, [r0, #-32]	; 0xffffffe0
    1d54:	50010063 	andpl	r0, r1, r3, rrx
    1d58:	00003a09 	andeq	r3, r0, r9, lsl #20
    1d5c:	00085b00 	andeq	r5, r8, r0, lsl #22
    1d60:	00085300 	andeq	r5, r8, r0, lsl #6
    1d64:	00003200 	andeq	r3, r0, r0, lsl #4
    1d68:	0b630000 	bleq	18c1d70 <__Stack_Size+0x18c1970>
    1d6c:	0ac10000 	beq	ff041d74 <BootRAM+0xdfb2515>
    1d70:	01250000 			; <UNDEFINED> instruction: 0x01250000
    1d74:	00700250 	rsbseq	r0, r0, r0, asr r2
    1d78:	02510125 	subseq	r0, r1, #1073741833	; 0x40000009
    1d7c:	01250071 			; <UNDEFINED> instruction: 0x01250071
    1d80:	00750252 	rsbseq	r0, r5, r2, asr r2
    1d84:	00003200 	andeq	r3, r0, r0, lsl #4
    1d88:	0b630000 	bleq	18c1d90 <__Stack_Size+0x18c1990>
    1d8c:	0ae10000 	beq	ff841d94 <BootRAM+0xe7b2535>
    1d90:	01250000 			; <UNDEFINED> instruction: 0x01250000
    1d94:	00700250 	rsbseq	r0, r0, r0, asr r2
    1d98:	02510125 	subseq	r0, r1, #1073741833	; 0x40000009
    1d9c:	01250071 			; <UNDEFINED> instruction: 0x01250071
    1da0:	00790252 	rsbseq	r0, r9, r2, asr r2
    1da4:	00002400 	andeq	r2, r0, r0, lsl #8
    1da8:	0b630000 	bleq	18c1db0 <__Stack_Size+0x18c19b0>
    1dac:	01250000 			; <UNDEFINED> instruction: 0x01250000
    1db0:	00700250 	rsbseq	r0, r0, r0, asr r2
    1db4:	02510125 	subseq	r0, r1, #1073741833	; 0x40000009
    1db8:	01250071 			; <UNDEFINED> instruction: 0x01250071
    1dbc:	00750252 	rsbseq	r0, r5, r2, asr r2
    1dc0:	c4220000 	strtgt	r0, [r2], #-0
    1dc4:	0100000a 	tsteq	r0, sl
    1dc8:	00ca063b 	sbceq	r0, sl, fp, lsr r6
    1dcc:	06880000 	streq	r0, [r8], r0
    1dd0:	00040800 	andeq	r0, r4, r0, lsl #16
    1dd4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1dd8:	00000b26 	andeq	r0, r0, r6, lsr #22
    1ddc:	000bae30 	andeq	sl, fp, r0, lsr lr
    1de0:	0a3d0100 	beq	f421e8 <__Stack_Size+0xf41de8>
    1de4:	000000ca 	andeq	r0, r0, sl, asr #1
    1de8:	5b2c0000 	blpl	b01df0 <__Stack_Size+0xb019f0>
    1dec:	0100000b 	tsteq	r0, fp
    1df0:	00ca0632 	sbceq	r0, sl, r2, lsr r6
    1df4:	00000000 	andeq	r0, r0, r0
    1df8:	00100000 	andseq	r0, r0, r0
    1dfc:	9c010000 	stcls	0, cr0, [r1], {-0}
    1e00:	00000b63 	andeq	r0, r0, r3, ror #22
    1e04:	000d8b28 	andeq	r8, sp, r8, lsr #22
    1e08:	12320100 	eorsne	r0, r2, #0, 2
    1e0c:	0000003a 	andeq	r0, r0, sl, lsr r0
    1e10:	00000893 	muleq	r0, r3, r8
    1e14:	0000088f 	andeq	r0, r0, pc, lsl #17
    1e18:	6e697033 	mcrvs	0, 3, r7, cr9, cr3, {1}
    1e1c:	1b320100 	blne	c82224 <__Stack_Size+0xc81e24>
    1e20:	00000079 	andeq	r0, r0, r9, ror r0
    1e24:	26005101 	strcs	r5, [r0], -r1, lsl #2
    1e28:	00000596 	muleq	r0, r6, r5
    1e2c:	74062d01 	strvc	r2, [r6], #-3329	; 0xfffff2ff
    1e30:	14080006 	strne	r0, [r8], #-6
    1e34:	01000000 	mrseq	r0, (UNDEF: 0)
    1e38:	000baa9c 	muleq	fp, ip, sl
    1e3c:	0d8b2700 	stceq	7, cr2, [fp]
    1e40:	2d010000 	stccs	0, cr0, [r1, #-0]
    1e44:	00003a19 	andeq	r3, r0, r9, lsl sl
    1e48:	33500100 	cmpcc	r0, #0, 2
    1e4c:	006e6970 	rsbeq	r6, lr, r0, ror r9
    1e50:	79222d01 	stmdbvc	r2!, {r0, r8, sl, fp, sp}
    1e54:	01000000 	mrseq	r0, (UNDEF: 0)
    1e58:	61763151 	cmnvs	r6, r1, asr r1
    1e5c:	2d01006c 	stccs	0, cr0, [r1, #-432]	; 0xfffffe50
    1e60:	0000792a 	andeq	r7, r0, sl, lsr #18
    1e64:	0008ba00 	andeq	fp, r8, r0, lsl #20
    1e68:	0008b400 	andeq	fp, r8, r0, lsl #8
    1e6c:	d5340000 	ldrle	r0, [r4, #-0]!
    1e70:	20000005 	andcs	r0, r0, r5
    1e74:	0c080009 	stceq	0, cr0, [r8], {9}
    1e78:	01000000 	mrseq	r0, (UNDEF: 0)
    1e7c:	0404359c 	streq	r3, [r4], #-1436	; 0xfffffa64
    1e80:	04040000 	streq	r0, [r4], #-0
    1e84:	80040000 	andhi	r0, r4, r0
    1e88:	04c93506 	strbeq	r3, [r9], #1286	; 0x506
    1e8c:	04c90000 	strbeq	r0, [r9], #0
    1e90:	52040000 	andpl	r0, r4, #0
    1e94:	06f80006 	ldrbteq	r0, [r8], r6
    1e98:	00040000 	andeq	r0, r4, r0
    1e9c:	000009af 	andeq	r0, r0, pc, lsr #19
    1ea0:	03770104 	cmneq	r7, #4, 2
    1ea4:	0f0c0000 	svceq	0x000c0000
    1ea8:	1b00000e 	blne	1ee8 <__Stack_Size+0x1ae8>
    1eac:	20000000 	andcs	r0, r0, r0
    1eb0:	00000002 	andeq	r0, r0, r2
    1eb4:	96000000 	strls	r0, [r0], -r0
    1eb8:	02000010 	andeq	r0, r0, #16
    1ebc:	01a50504 			; <UNDEFINED> instruction: 0x01a50504
    1ec0:	02020000 	andeq	r0, r2, #0
    1ec4:	0006c205 	andeq	ip, r6, r5, lsl #4
    1ec8:	06010200 	streq	r0, [r1], -r0, lsl #4
    1ecc:	0000066e 	andeq	r0, r0, lr, ror #12
    1ed0:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    1ed4:	18270200 	stmdane	r7!, {r9}
    1ed8:	0000004b 	andeq	r0, r0, fp, asr #32
    1edc:	00003a04 	andeq	r3, r0, r4, lsl #20
    1ee0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1ee4:	00000330 	andeq	r0, r0, r0, lsr r3
    1ee8:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    1eec:	18280200 	stmdane	r8!, {r9}
    1ef0:	00000063 	andeq	r0, r0, r3, rrx
    1ef4:	00005204 	andeq	r5, r0, r4, lsl #4
    1ef8:	07020200 	streq	r0, [r2, -r0, lsl #4]
    1efc:	0000040e 	andeq	r0, r0, lr, lsl #8
    1f00:	00387503 	eorseq	r7, r8, r3, lsl #10
    1f04:	7a182902 	bvc	60c314 <__Stack_Size+0x60bf14>
    1f08:	04000000 	streq	r0, [r0], #-0
    1f0c:	0000006a 	andeq	r0, r0, sl, rrx
    1f10:	6c080102 	stfvss	f0, [r8], {2}
    1f14:	05000006 	streq	r0, [r0, #-6]
    1f18:	007a0107 	rsbseq	r0, sl, r7, lsl #2
    1f1c:	37020000 	strcc	r0, [r2, -r0]
    1f20:	00009c0e 	andeq	r9, r0, lr, lsl #24
    1f24:	05f90600 	ldrbeq	r0, [r9, #1536]!	; 0x600
    1f28:	06000000 	streq	r0, [r0], -r0
    1f2c:	00000767 	andeq	r0, r0, r7, ror #14
    1f30:	6a070001 	bvs	1c1f3c <__Stack_Size+0x1c1b3c>
    1f34:	02000004 	andeq	r0, r0, #4
    1f38:	00812937 	addeq	r2, r1, r7, lsr r9
    1f3c:	9c040000 	stcls	0, cr0, [r4], {-0}
    1f40:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1f44:	00006a04 	andeq	r6, r0, r4, lsl #20
    1f48:	09260900 	stmdbeq	r6!, {r8, fp}
    1f4c:	030c0000 	movweq	r0, #49152	; 0xc000
    1f50:	00f51038 	rscseq	r1, r5, r8, lsr r0
    1f54:	470a0000 	strmi	r0, [sl, -r0]
    1f58:	03000002 	movweq	r0, #2
    1f5c:	00520850 	subseq	r0, r2, r0, asr r8
    1f60:	0a000000 	beq	1f68 <__Stack_Size+0x1b68>
    1f64:	000002ce 	andeq	r0, r0, lr, asr #5
    1f68:	52085103 	andpl	r5, r8, #-1073741824	; 0xc0000000
    1f6c:	02000000 	andeq	r0, r0, #0
    1f70:	0015d10a 	andseq	sp, r5, sl, lsl #2
    1f74:	08520300 	ldmdaeq	r2, {r8, r9}^
    1f78:	00000052 	andeq	r0, r0, r2, asr r0
    1f7c:	019c0a04 	orrseq	r0, ip, r4, lsl #20
    1f80:	53030000 	movwpl	r0, #12288	; 0x3000
    1f84:	0001040b 	andeq	r0, r1, fp, lsl #8
    1f88:	0b000800 	bleq	3f90 <__Stack_Size+0x3b90>
    1f8c:	000000ad 	andeq	r0, r0, sp, lsr #1
    1f90:	00000104 	andeq	r0, r0, r4, lsl #2
    1f94:	0000520c 	andeq	r5, r0, ip, lsl #4
    1f98:	04080000 	streq	r0, [r8], #-0
    1f9c:	000000f5 	strdeq	r0, [r0], -r5
    1fa0:	00092707 	andeq	r2, r9, r7, lsl #14
    1fa4:	02540300 	subseq	r0, r4, #0, 6
    1fa8:	000000b3 	strheq	r0, [r0], -r3
    1fac:	0057420d 	subseq	r4, r7, sp, lsl #4
    1fb0:	0a620302 	beq	1882bc0 <__Stack_Size+0x18827c0>
    1fb4:	0000013d 	andeq	r0, r0, sp, lsr r1
    1fb8:	3062620e 	rsbcc	r6, r2, lr, lsl #4
    1fbc:	08650300 	stmdaeq	r5!, {r8, r9}^
    1fc0:	0000006a 	andeq	r0, r0, sl, rrx
    1fc4:	62620e00 	rsbvs	r0, r2, #0, 28
    1fc8:	66030031 			; <UNDEFINED> instruction: 0x66030031
    1fcc:	00006a08 	andeq	r6, r0, r8, lsl #20
    1fd0:	0f000100 	svceq	0x00000100
    1fd4:	095f0302 	ldmdbeq	pc, {r1, r8, r9}^	; <UNPREDICTABLE>
    1fd8:	0000015c 	andeq	r0, r0, ip, asr r1
    1fdc:	03007710 	movweq	r7, #1808	; 0x710
    1fe0:	00520761 	subseq	r0, r2, r1, ror #14
    1fe4:	62100000 	andsvs	r0, r0, #0
    1fe8:	68030077 	stmdavs	r3, {r0, r1, r2, r4, r5, r6}
    1fec:	00011603 	andeq	r1, r1, r3, lsl #12
    1ff0:	36070000 	strcc	r0, [r7], -r0
    1ff4:	03000004 	movweq	r0, #4
    1ff8:	013d0369 	teqeq	sp, r9, ror #6
    1ffc:	a0090000 	andge	r0, r9, r0
    2000:	1c000000 	stcne	0, cr0, [r0], {-0}
    2004:	05106b03 	ldreq	r6, [r0, #-2819]	; 0xfffff4fd
    2008:	0a000002 	beq	2018 <__Stack_Size+0x1c18>
    200c:	0000057a 	andeq	r0, r0, sl, ror r5
    2010:	6a066d03 	bvs	19d424 <__Stack_Size+0x19d024>
    2014:	00000000 	andeq	r0, r0, r0
    2018:	0001c50a 	andeq	ip, r1, sl, lsl #10
    201c:	066e0300 	strbteq	r0, [lr], -r0, lsl #6
    2020:	0000006a 	andeq	r0, r0, sl, rrx
    2024:	044f0a01 	strbeq	r0, [pc], #-2561	; 202c <__Stack_Size+0x1c2c>
    2028:	6f030000 	svcvs	0x00030000
    202c:	00015c0a 	andeq	r5, r1, sl, lsl #24
    2030:	910a0200 	mrsls	r0, R10_fiq
    2034:	03000001 	movweq	r0, #1
    2038:	015c0a70 	cmpeq	ip, r0, ror sl
    203c:	0a040000 	beq	102044 <__Stack_Size+0x101c44>
    2040:	00000839 	andeq	r0, r0, r9, lsr r8
    2044:	5c0a7103 	stfpls	f7, [sl], {3}
    2048:	06000001 	streq	r0, [r0], -r1
    204c:	0009540a 	andeq	r5, r9, sl, lsl #8
    2050:	06730300 	ldrbteq	r0, [r3], -r0, lsl #6
    2054:	0000006a 	andeq	r0, r0, sl, rrx
    2058:	03530a08 	cmpeq	r3, #8, 20	; 0x8000
    205c:	74030000 	strvc	r0, [r3], #-0
    2060:	00006a06 	andeq	r6, r0, r6, lsl #20
    2064:	a80a0900 	stmdage	sl, {r8, fp}
    2068:	03000004 	movweq	r0, #4
    206c:	006a0675 	rsbeq	r0, sl, r5, ror r6
    2070:	0a0a0000 	beq	282078 <__Stack_Size+0x281c78>
    2074:	0000088e 	andeq	r0, r0, lr, lsl #17
    2078:	6a067603 	bvs	19f88c <__Stack_Size+0x19f48c>
    207c:	0b000000 	bleq	2084 <__Stack_Size+0x1c84>
    2080:	0006460a 	andeq	r4, r6, sl, lsl #12
    2084:	06770300 	ldrbteq	r0, [r7], -r0, lsl #6
    2088:	0000006a 	andeq	r0, r0, sl, rrx
    208c:	073d0a0c 	ldreq	r0, [sp, -ip, lsl #20]!
    2090:	7a030000 	bvc	c2098 <__Stack_Size+0xc1c98>
    2094:	00010a11 	andeq	r0, r1, r1, lsl sl
    2098:	07001000 	streq	r1, [r0, -r0]
    209c:	000000a1 	andeq	r0, r0, r1, lsr #1
    20a0:	68027b03 	stmdavs	r2, {r0, r1, r8, r9, fp, ip, sp, lr}
    20a4:	11000001 	tstne	r0, r1
    20a8:	00000233 	andeq	r0, r0, r3, lsr r2
    20ac:	1d152205 	lfmne	f2, 4, [r5, #-20]	; 0xffffffec
    20b0:	08000002 	stmdaeq	r0, {r1}
    20b4:	00020504 	andeq	r0, r2, r4, lsl #10
    20b8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    20bc:	00000335 	andeq	r0, r0, r5, lsr r3
    20c0:	69050412 	stmdbvs	r5, {r1, r4, sl}
    20c4:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    20c8:	007a0107 	rsbseq	r0, sl, r7, lsl #2
    20cc:	23040000 	movwcs	r0, #16384	; 0x4000
    20d0:	0002580e 	andeq	r5, r2, lr, lsl #16
    20d4:	0e880600 	cdpeq	6, 8, cr0, cr8, cr0, {0}
    20d8:	06000000 	streq	r0, [r0], -r0
    20dc:	00000f95 	muleq	r0, r5, pc	; <UNPREDICTABLE>
    20e0:	0e290601 	cfmadda32eq	mvax0, mvax0, mvfx9, mvfx1
    20e4:	06020000 	streq	r0, [r2], -r0
    20e8:	00000f06 	andeq	r0, r0, r6, lsl #30
    20ec:	2a070003 	bcs	1c2100 <__Stack_Size+0x1c1d00>
    20f0:	0400000f 	streq	r0, [r0], #-15
    20f4:	02316723 	eorseq	r6, r1, #9175040	; 0x8c0000
    20f8:	58040000 	stmdapl	r4, {}	; <UNPREDICTABLE>
    20fc:	09000002 	stmdbeq	r0, {r1}
    2100:	00000e44 	andeq	r0, r0, r4, asr #28
    2104:	10290406 	eorne	r0, r9, r6, lsl #8
    2108:	000002c5 	andeq	r0, r0, r5, asr #5
    210c:	000fc30a 	andeq	ip, pc, sl, lsl #6
    2110:	082a0400 	stmdaeq	sl!, {sl}
    2114:	0000006a 	andeq	r0, r0, sl, rrx
    2118:	0e5b0a00 	vnmlseq.f32	s1, s22, s0
    211c:	2b040000 	blcs	102124 <__Stack_Size+0x101d24>
    2120:	00006a08 	andeq	r6, r0, r8, lsl #20
    2124:	6a0a0100 	bvs	28252c <__Stack_Size+0x28212c>
    2128:	0400000e 	streq	r0, [r0], #-14
    212c:	006a082c 	rsbeq	r0, sl, ip, lsr #16
    2130:	0a020000 	beq	82138 <__Stack_Size+0x81d38>
    2134:	00000e79 	andeq	r0, r0, r9, ror lr
    2138:	6a082d04 	bvs	20d550 <__Stack_Size+0x20d150>
    213c:	03000000 	movweq	r0, #0
    2140:	000f7c0a 	andeq	r7, pc, sl, lsl #24
    2144:	082e0400 	stmdaeq	lr!, {sl}
    2148:	0000006a 	andeq	r0, r0, sl, rrx
    214c:	0dfc0a04 			; <UNDEFINED> instruction: 0x0dfc0a04
    2150:	2f040000 	svccs	0x00040000
    2154:	00006a08 	andeq	r6, r0, r8, lsl #20
    2158:	07000500 	streq	r0, [r0, -r0, lsl #10]
    215c:	00000e45 	andeq	r0, r0, r5, asr #28
    2160:	69033004 	stmdbvs	r3, {r2, ip, sp}
    2164:	04000002 	streq	r0, [r0], #-2
    2168:	000002c5 	andeq	r0, r0, r5, asr #5
    216c:	000e1513 	andeq	r1, lr, r3, lsl r5
    2170:	7a010700 	bvc	43d78 <__Stack_Size+0x43978>
    2174:	04000000 	streq	r0, [r0], #-0
    2178:	03010e32 	movweq	r0, #7730	; 0x1e32
    217c:	a4060000 	strge	r0, [r6], #-0
    2180:	0000000f 	andeq	r0, r0, pc
    2184:	000fd706 	andeq	sp, pc, r6, lsl #14
    2188:	45140100 	ldrmi	r0, [r4, #-256]	; 0xffffff00
    218c:	0200444e 	andeq	r4, r0, #1308622848	; 0x4e000000
    2190:	0000c106 	andeq	ip, r0, r6, lsl #2
    2194:	07000300 	streq	r0, [r0, -r0, lsl #6]
    2198:	00000e16 	andeq	r0, r0, r6, lsl lr
    219c:	d6033704 	strle	r3, [r3], -r4, lsl #14
    21a0:	04000002 	streq	r0, [r0], #-2
    21a4:	00000301 	andeq	r0, r0, r1, lsl #6
    21a8:	000f7411 	andeq	r7, pc, r1, lsl r4	; <UNPREDICTABLE>
    21ac:	16670400 	strbtne	r0, [r7], -r0, lsl #8
    21b0:	000000a8 	andeq	r0, r0, r8, lsr #1
    21b4:	000e4f15 	andeq	r4, lr, r5, lsl pc
    21b8:	15260100 	strne	r0, [r6, #-256]!	; 0xffffff00
    21bc:	00000046 	andeq	r0, r0, r6, asr #32
    21c0:	02c00305 	sbceq	r0, r0, #335544320	; 0x14000000
    21c4:	b8152000 	ldmdalt	r5, {sp}
    21c8:	0100000f 	tsteq	r0, pc
    21cc:	00461527 	subeq	r1, r6, r7, lsr #10
    21d0:	03050000 	movweq	r0, #20480	; 0x5000
    21d4:	200002c4 	andcs	r0, r0, r4, asr #5
    21d8:	000f3b15 	andeq	r3, pc, r5, lsl fp	; <UNPREDICTABLE>
    21dc:	1b280100 	blne	a025e4 <__Stack_Size+0xa021e4>
    21e0:	000002d1 	ldrdeq	r0, [r0], -r1
    21e4:	02d90305 	sbcseq	r0, r9, #335544320	; 0x14000000
    21e8:	a6162000 	ldrge	r2, [r6], -r0
    21ec:	0100000e 	tsteq	r0, lr
    21f0:	02641b29 	rsbeq	r1, r4, #41984	; 0xa400
    21f4:	03050000 	movweq	r0, #20480	; 0x5000
    21f8:	20000ae8 	andcs	r0, r0, r8, ror #21
    21fc:	00031217 	andeq	r1, r3, r7, lsl r2
    2200:	0f2a0100 	svceq	0x002a0100
    2204:	02df0305 	sbcseq	r0, pc, #335544320	; 0x14000000
    2208:	75182000 	ldrvc	r2, [r8, #-0]
    220c:	85000000 	strhi	r0, [r0, #-0]
    2210:	19000003 	stmdbne	r0, {r0, r1}
    2214:	00000223 	andeq	r0, r0, r3, lsr #4
    2218:	040007ff 	streq	r0, [r0], #-2047	; 0xfffff801
    221c:	00000374 	andeq	r0, r0, r4, ror r3
    2220:	000e041a 	andeq	r0, lr, sl, lsl r4
    2224:	142e0100 	strtne	r0, [lr], #-256	; 0xffffff00
    2228:	00000385 	andeq	r0, r0, r5, lsl #7
    222c:	e0030504 	and	r0, r3, r4, lsl #10
    2230:	15200002 	strne	r0, [r0, #-2]!
    2234:	00000f64 	andeq	r0, r0, r4, ror #30
    2238:	46153001 	ldrmi	r3, [r5], -r1
    223c:	05000000 	streq	r0, [r0, #-0]
    2240:	000ae403 	andeq	lr, sl, r3, lsl #8
    2244:	0f571520 	svceq	0x00571520
    2248:	31010000 	mrscc	r0, (UNDEF: 1)
    224c:	00005e15 	andeq	r5, r0, r5, lsl lr
    2250:	e0030500 	and	r0, r3, r0, lsl #10
    2254:	1520000a 	strne	r0, [r0, #-10]!
    2258:	00000f48 	andeq	r0, r0, r8, asr #30
    225c:	5e153201 	cdppl	2, 1, cr3, cr5, cr1, {0}
    2260:	05000000 	streq	r0, [r0, #-0]
    2264:	000ae203 	andeq	lr, sl, r3, lsl #4
    2268:	0ed71620 	cdpeq	6, 13, cr1, cr7, cr0, {1}
    226c:	35010000 	strcc	r0, [r1, #-0]
    2270:	00030d0f 	andeq	r0, r3, pc, lsl #26
    2274:	d8030500 	stmdale	r3, {r8, sl}
    2278:	1b200002 	blne	802288 <__Stack_Size+0x801e88>
    227c:	00000a57 	andeq	r0, r0, r7, asr sl
    2280:	0601d001 	streq	sp, [r1], -r1
    2284:	08000d50 	stmdaeq	r0, {r4, r6, r8, sl, fp}
    2288:	00000004 	andeq	r0, r0, r4
    228c:	1d1c9c01 	ldcne	12, cr9, [ip, #-4]
    2290:	0100000b 	tsteq	r0, fp
    2294:	9c0601cc 	stflss	f0, [r6], {204}	; 0xcc
    2298:	44000000 	strmi	r0, [r0], #-0
    229c:	0c08000d 	stceq	0, cr0, [r8], {13}
    22a0:	01000000 	mrseq	r0, (UNDEF: 0)
    22a4:	0fcb1d9c 	svceq	0x00cb1d9c
    22a8:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    22ac:	00000601 	andeq	r0, r0, r1, lsl #12
    22b0:	000c0000 	andeq	r0, ip, r0
    22b4:	9c010000 	stcls	0, cr0, [r1], {-0}
    22b8:	00000436 	andeq	r0, r0, r6, lsr r4
    22bc:	000f211e 	andeq	r2, pc, lr, lsl r1	; <UNPREDICTABLE>
    22c0:	01c80100 	biceq	r0, r8, r0, lsl #2
    22c4:	00006a15 	andeq	r6, r0, r5, lsl sl
    22c8:	00500100 	subseq	r0, r0, r0, lsl #2
    22cc:	000fde1f 	andeq	sp, pc, pc, lsl lr	; <UNPREDICTABLE>
    22d0:	01c40100 	biceq	r0, r4, r0, lsl #2
    22d4:	00006a04 	andeq	r6, r0, r4, lsl #20
    22d8:	00000000 	andeq	r0, r0, r0
    22dc:	00000c00 	andeq	r0, r0, r0, lsl #24
    22e0:	1d9c0100 	ldfnes	f0, [ip]
    22e4:	00000eb5 			; <UNDEFINED> instruction: 0x00000eb5
    22e8:	06019c01 	streq	r9, [r1], -r1, lsl #24
    22ec:	08000aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp}
    22f0:	00000064 	andeq	r0, r0, r4, rrx
    22f4:	04ac9c01 	strteq	r9, [ip], #3073	; 0xc01
    22f8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    22fc:	019d0100 	orrseq	r0, sp, r0, lsl #2
    2300:	00022a09 	andeq	r2, r2, r9, lsl #20
    2304:	0008f400 	andeq	pc, r8, r0, lsl #8
    2308:	0008f000 	andeq	pc, r8, r0
    230c:	0fae2100 	svceq	0x00ae2100
    2310:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    2314:	04ac0a01 	strteq	r0, [ip], #2561	; 0xa01
    2318:	ce220000 	cdpgt	0, 2, cr0, cr2, cr0, {0}
    231c:	7d08000a 	stcvc	0, cr0, [r8, #-40]	; 0xffffffd8
    2320:	98000006 	stmdals	r0, {r1, r2}
    2324:	23000004 	movwcs	r0, #4
    2328:	74025001 	strvc	r5, [r2], #-1
    232c:	fa240000 	blx	902334 <__Stack_Size+0x901f34>
    2330:	8a08000a 	bhi	202360 <__Stack_Size+0x201f60>
    2334:	23000006 	movwcs	r0, #6
    2338:	74055001 	strvc	r5, [r5], #-1
    233c:	22007600 	andcs	r7, r0, #0, 12
    2340:	04080000 	streq	r0, [r8], #-0
    2344:	0000003a 	andeq	r0, r0, sl, lsr r0
    2348:	000e9825 	andeq	r9, lr, r5, lsr #16
    234c:	01930100 	orrseq	r0, r3, r0, lsl #2
    2350:	0000ad05 	andeq	sl, r0, r5, lsl #26
    2354:	000a7c00 	andeq	r7, sl, r0, lsl #24
    2358:	00003008 	andeq	r3, r0, r8
    235c:	e39c0100 	orrs	r0, ip, #0, 2
    2360:	26000004 	strcs	r0, [r0], -r4
    2364:	00000f83 	andeq	r0, r0, r3, lsl #31
    2368:	17019301 	strne	r9, [r1, -r1, lsl #6]
    236c:	00000052 	andeq	r0, r0, r2, asr r0
    2370:	00000917 	andeq	r0, r0, r7, lsl r9
    2374:	00000913 	andeq	r0, r0, r3, lsl r9
    2378:	0e1b2500 	cfmul32eq	mvfx2, mvfx11, mvfx0
    237c:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    2380:	00ad0501 	adceq	r0, sp, r1, lsl #10
    2384:	0a540000 	beq	150238c <__Stack_Size+0x1501f8c>
    2388:	00280800 	eoreq	r0, r8, r0, lsl #16
    238c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2390:	00000514 	andeq	r0, r0, r4, lsl r5
    2394:	000f8326 	andeq	r8, pc, r6, lsr #6
    2398:	01890100 	orreq	r0, r9, r0, lsl #2
    239c:	00005217 	andeq	r5, r0, r7, lsl r2
    23a0:	00093c00 	andeq	r3, r9, r0, lsl #24
    23a4:	00093800 	andeq	r3, r9, r0, lsl #16
    23a8:	c9250000 	stmdbgt	r5!, {}	; <UNPREDICTABLE>
    23ac:	0100000e 	tsteq	r0, lr
    23b0:	ad05017f 	stfges	f0, [r5, #-508]	; 0xfffffe04
    23b4:	3c000000 	stccc	0, cr0, [r0], {-0}
    23b8:	1808000a 	stmdane	r8, {r1, r3}
    23bc:	01000000 	mrseq	r0, (UNDEF: 0)
    23c0:	0005459c 	muleq	r5, ip, r5
    23c4:	0f832600 	svceq	0x00832600
    23c8:	7f010000 	svcvc	0x00010000
    23cc:	00521701 	subseq	r1, r2, r1, lsl #14
    23d0:	09610000 	stmdbeq	r1!, {}^	; <UNPREDICTABLE>
    23d4:	095d0000 	ldmdbeq	sp, {}^	; <UNPREDICTABLE>
    23d8:	25000000 	strcs	r0, [r0, #-0]
    23dc:	00000ee6 	andeq	r0, r0, r6, ror #29
    23e0:	05017601 	streq	r7, [r1, #-1537]	; 0xfffff9ff
    23e4:	000000ad 	andeq	r0, r0, sp, lsr #1
    23e8:	08000a24 	stmdaeq	r0, {r2, r5, r9, fp}
    23ec:	00000018 	andeq	r0, r0, r8, lsl r0
    23f0:	05769c01 	ldrbeq	r9, [r6, #-3073]!	; 0xfffff3ff
    23f4:	83260000 			; <UNDEFINED> instruction: 0x83260000
    23f8:	0100000f 	tsteq	r0, pc
    23fc:	52160176 	andspl	r0, r6, #-2147483619	; 0x8000001d
    2400:	86000000 	strhi	r0, [r0], -r0
    2404:	82000009 	andhi	r0, r0, #9
    2408:	00000009 	andeq	r0, r0, r9
    240c:	000ef327 	andeq	pc, lr, r7, lsr #6
    2410:	01730100 	cmneq	r3, r0, lsl #2
    2414:	00000006 	andeq	r0, r0, r6
    2418:	00000200 	andeq	r0, r0, r0, lsl #4
    241c:	1d9c0100 	ldfnes	f0, [ip]
    2420:	00000515 	andeq	r0, r0, r5, lsl r5
    2424:	06015b01 	streq	r5, [r1], -r1, lsl #22
    2428:	080009e0 	stmdaeq	r0, {r5, r6, r7, r8, fp}
    242c:	00000044 	andeq	r0, r0, r4, asr #32
    2430:	05d19c01 	ldrbeq	r9, [r1, #3073]	; 0xc01
    2434:	8a280000 	bhi	a0243c <__Stack_Size+0xa0203c>
    2438:	0100000f 	tsteq	r0, pc
    243c:	6a08015c 	bvs	2029b4 <__Stack_Size+0x2025b4>
    2440:	ad000000 	stcge	0, cr0, [r0, #-0]
    2444:	a7000009 	strge	r0, [r0, -r9]
    2448:	29000009 	stmdbcs	r0, {r0, r3}
    244c:	080009fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, fp}
    2450:	00000697 	muleq	r0, r7, r6
    2454:	000a042a 	andeq	r0, sl, sl, lsr #8
    2458:	0006a408 	andeq	sl, r6, r8, lsl #8
    245c:	0a182a00 	beq	60cc64 <__Stack_Size+0x60c864>
    2460:	06b00800 	ldrteq	r0, [r0], r0, lsl #16
    2464:	2b000000 	blcs	246c <__Stack_Size+0x206c>
    2468:	000002da 	ldrdeq	r0, [r0], -sl
    246c:	9c064b01 			; <UNDEFINED> instruction: 0x9c064b01
    2470:	10000000 	andne	r0, r0, r0
    2474:	3408000b 	strcc	r0, [r8], #-11
    2478:	01000002 	tsteq	r0, r2
    247c:	00066b9c 	muleq	r6, ip, fp
    2480:	0f8a2c00 	svceq	0x008a2c00
    2484:	52010000 	andpl	r0, r1, #0
    2488:	00006a08 	andeq	r6, r0, r8, lsl #20
    248c:	000a0600 	andeq	r0, sl, r0, lsl #12
    2490:	0009d600 	andeq	sp, r9, r0, lsl #12
    2494:	0b622900 	bleq	188c89c <__Stack_Size+0x188c49c>
    2498:	06bc0800 	ldrteq	r0, [ip], r0, lsl #16
    249c:	66290000 	strtvs	r0, [r9], -r0
    24a0:	c808000b 	stmdagt	r8, {r0, r1, r3}
    24a4:	22000006 	andcs	r0, r0, #6
    24a8:	08000b6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, fp}
    24ac:	0000067d 	andeq	r0, r0, sp, ror r6
    24b0:	00000628 	andeq	r0, r0, r8, lsr #12
    24b4:	05500123 	ldrbeq	r0, [r0, #-291]	; 0xfffffedd
    24b8:	0020000c 	eoreq	r0, r0, ip
    24bc:	74220008 	strtvc	r0, [r2], #-8
    24c0:	d508000b 	strle	r0, [r8, #-11]
    24c4:	3d000006 	stccc	0, cr0, [r0, #-24]	; 0xffffffe8
    24c8:	23000006 	movwcs	r0, #6
    24cc:	0a035001 	beq	d64d8 <__Stack_Size+0xd60d8>
    24d0:	2900424d 	stmdbcs	r0, {r0, r2, r3, r6, r9, lr}
    24d4:	08000b8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, fp}
    24d8:	000006bc 			; <UNDEFINED> instruction: 0x000006bc
    24dc:	000b9029 	andeq	r9, fp, r9, lsr #32
    24e0:	0006c808 	andeq	ip, r6, r8, lsl #16
    24e4:	0bd22900 	bleq	ff48c8ec <BootRAM+0xe3fd08d>
    24e8:	06e10800 	strbteq	r0, [r1], r0, lsl #16
    24ec:	06290000 	strteq	r0, [r9], -r0
    24f0:	4d08000c 	stcmi	0, cr0, [r8, #-48]	; 0xffffffd0
    24f4:	29000004 	stmdbcs	r0, {r2}
    24f8:	08000c40 	stmdaeq	r0, {r6, sl, fp}
    24fc:	000006ee 	andeq	r0, r0, lr, ror #13
    2500:	00ea2d00 	rsceq	r2, sl, r0, lsl #26
    2504:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    2508:	00098406 	andeq	r8, r9, r6, lsl #8
    250c:	00005c08 	andeq	r5, r0, r8, lsl #24
    2510:	2e9c0100 	fmlcse	f0, f4, f0
    2514:	00000b78 	andeq	r0, r0, r8, ror fp
    2518:	00000b78 	andeq	r0, r0, r8, ror fp
    251c:	06010306 	streq	r0, [r1], -r6, lsl #6
    2520:	000d672e 	andeq	r6, sp, lr, lsr #14
    2524:	000d6700 	andeq	r6, sp, r0, lsl #14
    2528:	01020600 	tsteq	r2, r0, lsl #12
    252c:	0be72e06 	bleq	ff9cdd4c <BootRAM+0xe93e4ed>
    2530:	0be70000 	bleq	ff9c2538 <BootRAM+0xe932cd9>
    2534:	08060000 	stmdaeq	r6, {}	; <UNPREDICTABLE>
    2538:	492f0601 	stmdbmi	pc!, {r0, r9, sl}	; <UNPREDICTABLE>
    253c:	49000003 	stmdbmi	r0, {r0, r1}
    2540:	07000003 	streq	r0, [r0, -r3]
    2544:	012f0681 	smlawbeq	pc, r1, r6, r0	; <UNPREDICTABLE>
    2548:	0100000b 	tsteq	r0, fp
    254c:	0600000b 	streq	r0, [r0], -fp
    2550:	d42f06f9 	strtle	r0, [pc], #-1785	; 2558 <__Stack_Size+0x2158>
    2554:	d400000a 	strle	r0, [r0], #-10
    2558:	0600000a 	streq	r0, [r0], -sl
    255c:	c42e06fd 	strtgt	r0, [lr], #-1789	; 0xfffff903
    2560:	c400000b 	strgt	r0, [r0], #-11
    2564:	0600000b 	streq	r0, [r0], -fp
    2568:	2f060106 	svccs	0x00060106
    256c:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
    2570:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
    2574:	2e06ee06 	cdpcs	14, 0, cr14, cr6, cr6, {0}
    2578:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    257c:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2580:	05010a06 	streq	r0, [r1, #-2566]	; 0xfffff5fa
    2584:	000c672e 	andeq	r6, ip, lr, lsr #14
    2588:	000c6700 	andeq	r6, ip, r0, lsl #14
    258c:	01050600 	tsteq	r5, r0, lsl #12
    2590:	0dc20006 	stcleq	0, cr0, [r2, #24]
    2594:	00040000 	andeq	r0, r4, r0
    2598:	00000cce 	andeq	r0, r0, lr, asr #25
    259c:	03770104 	cmneq	r7, #4, 2
    25a0:	3f0c0000 	svccc	0x000c0000
    25a4:	1b000011 	blne	25f0 <__Stack_Size+0x21f0>
    25a8:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    25ac:	00000003 	andeq	r0, r0, r3
    25b0:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
    25b4:	02000017 	andeq	r0, r0, #23
    25b8:	01a50504 			; <UNDEFINED> instruction: 0x01a50504
    25bc:	02020000 	andeq	r0, r2, #0
    25c0:	0006c205 	andeq	ip, r6, r5, lsl #4
    25c4:	06010200 	streq	r0, [r1], -r0, lsl #4
    25c8:	0000066e 	andeq	r0, r0, lr, ror #12
    25cc:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    25d0:	1d240200 	sfmne	f0, 4, [r4, #-0]
    25d4:	0000004b 	andeq	r0, r0, fp, asr #32
    25d8:	00003a04 	andeq	r3, r0, r4, lsl #20
    25dc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    25e0:	00000330 	andeq	r0, r0, r0, lsr r3
    25e4:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    25e8:	1d250200 	sfmne	f0, 4, [r5, #-0]
    25ec:	0000005e 	andeq	r0, r0, lr, asr r0
    25f0:	0e070202 	cdpeq	2, 0, cr0, cr7, cr2, {0}
    25f4:	03000004 	movweq	r0, #4
    25f8:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    25fc:	00701d26 	rsbseq	r1, r0, r6, lsr #26
    2600:	01020000 	mrseq	r0, (UNDEF: 2)
    2604:	00066c08 	andeq	r6, r6, r8, lsl #24
    2608:	10570500 	subsne	r0, r7, r0, lsl #10
    260c:	01070000 	mrseq	r0, (UNDEF: 7)
    2610:	00000070 	andeq	r0, r0, r0, ror r0
    2614:	9c0e1603 	stcls	6, cr1, [lr], {3}
    2618:	06000000 	streq	r0, [r0], -r0
    261c:	00001152 	andeq	r1, r0, r2, asr r1
    2620:	103d0600 	eorsne	r0, sp, r0, lsl #12
    2624:	06010000 	streq	r0, [r1], -r0
    2628:	000010f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    262c:	58070002 	stmdapl	r7, {r1}
    2630:	03000010 	movweq	r0, #16
    2634:	0077021c 	rsbseq	r0, r7, ip, lsl r2
    2638:	7c080000 	stcvc	0, cr0, [r8], {-0}
    263c:	01000012 	tsteq	r0, r2, lsl r0
    2640:	520502e3 	andpl	r0, r5, #805306382	; 0x3000000e
    2644:	00000000 	andeq	r0, r0, r0
    2648:	06000000 	streq	r0, [r0], -r0
    264c:	01000000 	mrseq	r0, (UNDEF: 0)
    2650:	0001039c 	muleq	r1, ip, r3
    2654:	11770900 	cmnne	r7, r0, lsl #18
    2658:	e3010000 	movw	r0, #4096	; 0x1000
    265c:	00521202 	subseq	r1, r2, r2, lsl #4
    2660:	0b1a0000 	bleq	682668 <__Stack_Size+0x682268>
    2664:	0b160000 	bleq	58266c <__Stack_Size+0x58226c>
    2668:	9e0a0000 	cdpls	0, 0, cr0, cr10, cr0, {0}
    266c:	01000012 	tsteq	r0, r2, lsl r0
    2670:	650602e5 	strvs	r0, [r6, #-741]	; 0xfffffd1b
    2674:	3f000000 	svccc	0x00000000
    2678:	3b00000b 	blcc	26ac <__Stack_Size+0x22ac>
    267c:	0a00000b 	beq	26b0 <__Stack_Size+0x22b0>
    2680:	00001232 	andeq	r1, r0, r2, lsr r2
    2684:	0702e601 	streq	lr, [r2, -r1, lsl #12]
    2688:	00000052 	andeq	r0, r0, r2, asr r0
    268c:	00000b64 	andeq	r0, r0, r4, ror #22
    2690:	00000b60 	andeq	r0, r0, r0, ror #22
    2694:	118c0800 	orrne	r0, ip, r0, lsl #16
    2698:	d6010000 	strle	r0, [r1], -r0
    269c:	00520502 	subseq	r0, r2, r2, lsl #10
    26a0:	00000000 	andeq	r0, r0, r0
    26a4:	00060000 	andeq	r0, r6, r0
    26a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    26ac:	00000156 	andeq	r0, r0, r6, asr r1
    26b0:	0068620b 	rsbeq	r6, r8, fp, lsl #4
    26b4:	0f02d601 	svceq	0x0002d601
    26b8:	00000065 	andeq	r0, r0, r5, rrx
    26bc:	00000bb3 			; <UNDEFINED> instruction: 0x00000bb3
    26c0:	00000baf 	andeq	r0, r0, pc, lsr #23
    26c4:	006c620c 	rsbeq	r6, ip, ip, lsl #4
    26c8:	1602d601 	strne	sp, [r2], -r1, lsl #12
    26cc:	00000065 	andeq	r0, r0, r5, rrx
    26d0:	320a5101 	andcc	r5, sl, #1073741824	; 0x40000000
    26d4:	01000012 	tsteq	r0, r2, lsl r0
    26d8:	520702d8 	andpl	r0, r7, #216, 4	; 0x8000000d
    26dc:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    26e0:	d400000b 	strle	r0, [r0], #-11
    26e4:	0000000b 	andeq	r0, r0, fp
    26e8:	000fea0d 	andeq	lr, pc, sp, lsl #20
    26ec:	02c30100 	sbceq	r0, r3, #0, 2
    26f0:	00000006 	andeq	r0, r0, r6
    26f4:	00004600 	andeq	r4, r0, r0, lsl #12
    26f8:	929c0100 	addsls	r0, ip, #0, 2
    26fc:	09000001 	stmdbeq	r0, {r0}
    2700:	00001364 	andeq	r1, r0, r4, ror #6
    2704:	1802c301 	stmdane	r2, {r0, r8, r9, lr, pc}
    2708:	00000065 	andeq	r0, r0, r5, rrx
    270c:	00000c19 	andeq	r0, r0, r9, lsl ip
    2710:	00000c11 	andeq	r0, r0, r1, lsl ip
    2714:	0011270e 	andseq	r2, r1, lr, lsl #14
    2718:	02c30100 	sbceq	r0, r3, #0, 2
    271c:	00006523 	andeq	r6, r0, r3, lsr #10
    2720:	00510100 	subseq	r0, r1, r0, lsl #2
    2724:	00115e08 	andseq	r5, r1, r8, lsl #28
    2728:	02b20100 	adcseq	r0, r2, #0, 2
    272c:	00009c0d 	andeq	r9, r0, sp, lsl #24
    2730:	00000000 	andeq	r0, r0, r0
    2734:	00004c00 	andeq	r4, r0, r0, lsl #24
    2738:	c39c0100 	orrsgt	r0, ip, #0, 2
    273c:	09000001 	stmdbeq	r0, {r0}
    2740:	00001364 	andeq	r1, r0, r4, ror #6
    2744:	1f02b201 	svcne	0x0002b201
    2748:	00000065 	andeq	r0, r0, r5, rrx
    274c:	00000c57 	andeq	r0, r0, r7, asr ip
    2750:	00000c53 	andeq	r0, r0, r3, asr ip
    2754:	12d20f00 	sbcsne	r0, r2, #0, 30
    2758:	a6010000 	strge	r0, [r1], -r0
    275c:	00520502 	subseq	r0, r2, r2, lsl #10
    2760:	01e20000 	mvneq	r0, r0
    2764:	64100000 	ldrvs	r0, [r0], #-0
    2768:	01000013 	tsteq	r0, r3, lsl r0
    276c:	651a02a6 	ldrvs	r0, [sl, #-678]	; 0xfffffd5a
    2770:	00000000 	andeq	r0, r0, r0
    2774:	0012630f 	andseq	r6, r2, pc, lsl #6
    2778:	029a0100 	addseq	r0, sl, #0, 2
    277c:	00005205 	andeq	r5, r0, r5, lsl #4
    2780:	00020100 	andeq	r0, r2, r0, lsl #2
    2784:	13641000 	cmnne	r4, #0
    2788:	9a010000 	bls	42790 <__Stack_Size+0x42390>
    278c:	00651a02 	rsbeq	r1, r5, r2, lsl #20
    2790:	0d000000 	stceq	0, cr0, [r0, #-0]
    2794:	00001383 	andeq	r1, r0, r3, lsl #7
    2798:	06028e01 	streq	r8, [r2], -r1, lsl #28
    279c:	00000000 	andeq	r0, r0, r0
    27a0:	00000060 	andeq	r0, r0, r0, rrx
    27a4:	02929c01 	addseq	r9, r2, #256	; 0x100
    27a8:	64090000 	strvs	r0, [r9], #-0
    27ac:	01000013 	tsteq	r0, r3, lsl r0
    27b0:	651b028e 	ldrvs	r0, [fp, #-654]	; 0xfffffd72
    27b4:	80000000 	andhi	r0, r0, r0
    27b8:	7800000c 	stmdavc	r0, {r2, r3}
    27bc:	0900000c 	stmdbeq	r0, {r2, r3}
    27c0:	00001127 	andeq	r1, r0, r7, lsr #2
    27c4:	26028e01 	strcs	r8, [r2], -r1, lsl #28
    27c8:	00000065 	andeq	r0, r0, r5, rrx
    27cc:	00000cc0 	andeq	r0, r0, r0, asr #25
    27d0:	00000cba 			; <UNDEFINED> instruction: 0x00000cba
    27d4:	00109d09 	andseq	r9, r0, r9, lsl #26
    27d8:	028e0100 	addeq	r0, lr, #0, 2
    27dc:	00005230 	andeq	r5, r0, r0, lsr r2
    27e0:	000cf600 	andeq	pc, ip, r0, lsl #12
    27e4:	000cec00 	andeq	lr, ip, r0, lsl #24
    27e8:	00001100 	andeq	r1, r0, r0, lsl #2
    27ec:	003a0000 	eorseq	r0, sl, r0
    27f0:	750a0000 	strvc	r0, [sl, #-0]
    27f4:	01000012 	tsteq	r0, r2, lsl r0
    27f8:	92030290 	andls	r0, r3, #144, 4
    27fc:	3d000002 	stccc	0, cr0, [r0, #-8]
    2800:	3b00000d 	blcc	283c <__Stack_Size+0x243c>
    2804:	1200000d 	andne	r0, r0, #13
    2808:	00000380 	andeq	r0, r0, r0, lsl #7
    280c:	00106c0a 	andseq	r6, r0, sl, lsl #24
    2810:	02900100 	addseq	r0, r0, #0, 2
    2814:	00005203 	andeq	r5, r0, r3, lsl #4
    2818:	000d5800 	andeq	r5, sp, r0, lsl #16
    281c:	000d5000 	andeq	r5, sp, r0
    2820:	00000000 	andeq	r0, r0, r0
    2824:	00460413 	subeq	r0, r6, r3, lsl r4
    2828:	e40d0000 	str	r0, [sp], #-0
    282c:	01000012 	tsteq	r0, r2, lsl r0
    2830:	00060282 	andeq	r0, r6, r2, lsl #5
    2834:	60000000 	andvs	r0, r0, r0
    2838:	01000000 	mrseq	r0, (UNDEF: 0)
    283c:	0003299c 	muleq	r3, ip, r9
    2840:	13640900 	cmnne	r4, #0, 18
    2844:	82010000 	andhi	r0, r1, #0
    2848:	00651b02 	rsbeq	r1, r5, r2, lsl #22
    284c:	0d980000 	ldceq	0, cr0, [r8]
    2850:	0d900000 	ldceq	0, cr0, [r0]
    2854:	27090000 	strcs	r0, [r9, -r0]
    2858:	01000011 	tsteq	r0, r1, lsl r0
    285c:	65260282 	strvs	r0, [r6, #-642]!	; 0xfffffd7e
    2860:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    2864:	d200000d 	andle	r0, r0, #13
    2868:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    286c:	0000109d 	muleq	r0, sp, r0
    2870:	30028201 	andcc	r8, r2, r1, lsl #4
    2874:	00000052 	andeq	r0, r0, r2, asr r0
    2878:	00000e0e 	andeq	r0, r0, lr, lsl #28
    287c:	00000e04 	andeq	r0, r0, r4, lsl #28
    2880:	00000011 	andeq	r0, r0, r1, lsl r0
    2884:	00003a00 	andeq	r3, r0, r0, lsl #20
    2888:	12750a00 	rsbsne	r0, r5, #0, 20
    288c:	84010000 	strhi	r0, [r1], #-0
    2890:	02920302 	addseq	r0, r2, #134217728	; 0x8000000
    2894:	0e550000 	cdpeq	0, 5, cr0, cr5, cr0, {0}
    2898:	0e530000 	cdpeq	0, 5, cr0, cr3, cr0, {0}
    289c:	68120000 	ldmdavs	r2, {}	; <UNPREDICTABLE>
    28a0:	0a000003 	beq	28b4 <__Stack_Size+0x24b4>
    28a4:	0000106c 	andeq	r1, r0, ip, rrx
    28a8:	03028401 	movweq	r8, #9217	; 0x2401
    28ac:	00000052 	andeq	r0, r0, r2, asr r0
    28b0:	00000e70 	andeq	r0, r0, r0, ror lr
    28b4:	00000e68 	andeq	r0, r0, r8, ror #28
    28b8:	0d000000 	stceq	0, cr0, [r0, #-0]
    28bc:	000011d7 	ldrdeq	r1, [r0], -r7
    28c0:	06027601 	streq	r7, [r2], -r1, lsl #12
    28c4:	00000000 	andeq	r0, r0, r0
    28c8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    28cc:	03f09c01 	mvnseq	r9, #256	; 0x100
    28d0:	64090000 	strvs	r0, [r9], #-0
    28d4:	01000013 	tsteq	r0, r3, lsl r0
    28d8:	651b0276 	ldrvs	r0, [fp, #-630]	; 0xfffffd8a
    28dc:	b0000000 	andlt	r0, r0, r0
    28e0:	a800000e 	stmdage	r0, {r1, r2, r3}
    28e4:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    28e8:	00001127 	andeq	r1, r0, r7, lsr #2
    28ec:	26027601 	strcs	r7, [r2], -r1, lsl #12
    28f0:	00000065 	andeq	r0, r0, r5, rrx
    28f4:	00000ef2 	strdeq	r0, [r0], -r2
    28f8:	00000eea 	andeq	r0, r0, sl, ror #29
    28fc:	00109d09 	andseq	r9, r0, r9, lsl #26
    2900:	02760100 	rsbseq	r0, r6, #0, 2
    2904:	00005230 	andeq	r5, r0, r0, lsr r2
    2908:	000f3800 	andeq	r3, pc, r0, lsl #16
    290c:	000f2c00 	andeq	r2, pc, r0, lsl #24
    2910:	02f81400 	rscseq	r1, r8, #0, 8
    2914:	03b90000 			; <UNDEFINED> instruction: 0x03b90000
    2918:	750a0000 	strvc	r0, [sl, #-0]
    291c:	01000012 	tsteq	r0, r2, lsl r0
    2920:	92030278 	andls	r0, r3, #120, 4	; 0x80000007
    2924:	8f000002 	svchi	0x00000002
    2928:	8b00000f 	blhi	296c <__Stack_Size+0x256c>
    292c:	1200000f 	andne	r0, r0, #15
    2930:	00000310 	andeq	r0, r0, r0, lsl r3
    2934:	00106c0a 	andseq	r6, r0, sl, lsl #24
    2938:	02780100 	rsbseq	r0, r8, #0, 2
    293c:	00005203 	andeq	r5, r0, r3, lsl #4
    2940:	000fb500 	andeq	fp, pc, r0, lsl #10
    2944:	000fad00 	andeq	sl, pc, r0, lsl #26
    2948:	12000000 	andne	r0, r0, #0
    294c:	00000330 	andeq	r0, r0, r0, lsr r3
    2950:	0012750a 	andseq	r7, r2, sl, lsl #10
    2954:	02780100 	rsbseq	r0, r8, #0, 2
    2958:	00029203 	andeq	r9, r2, r3, lsl #4
    295c:	000ff100 	andeq	pc, pc, r0, lsl #2
    2960:	000fed00 	andeq	lr, pc, r0, lsl #26
    2964:	03481200 	movteq	r1, #33280	; 0x8200
    2968:	6c0a0000 	stcvs	0, cr0, [sl], {-0}
    296c:	01000010 	tsteq	r0, r0, lsl r0
    2970:	52030278 	andpl	r0, r3, #120, 4	; 0x80000007
    2974:	17000000 	strne	r0, [r0, -r0]
    2978:	0f000010 	svceq	0x00000010
    297c:	00000010 	andeq	r0, r0, r0, lsl r0
    2980:	ad0f0000 	stcge	0, cr0, [pc, #-0]	; 2988 <__Stack_Size+0x2588>
    2984:	01000011 	tsteq	r0, r1, lsl r0
    2988:	5205026a 	andpl	r0, r5, #-1610612730	; 0xa0000006
    298c:	0f000000 	svceq	0x00000000
    2990:	10000004 	andne	r0, r0, r4
    2994:	00001364 	andeq	r1, r0, r4, ror #6
    2998:	19026a01 	stmdbne	r2, {r0, r9, fp, sp, lr}
    299c:	00000065 	andeq	r0, r0, r5, rrx
    29a0:	13170f00 	tstne	r7, #0, 30
    29a4:	5f010000 	svcpl	0x00010000
    29a8:	00520502 	subseq	r0, r2, r2, lsl #10
    29ac:	042e0000 	strteq	r0, [lr], #-0
    29b0:	64100000 	ldrvs	r0, [r0], #-0
    29b4:	01000013 	tsteq	r0, r3, lsl r0
    29b8:	6519025f 	ldrvs	r0, [r9, #-607]	; 0xfffffda1
    29bc:	00000000 	andeq	r0, r0, r0
    29c0:	00100a15 	andseq	r0, r0, r5, lsl sl
    29c4:	02540100 	subseq	r0, r4, #0, 2
    29c8:	00045606 	andeq	r5, r4, r6, lsl #12
    29cc:	13641000 	cmnne	r4, #0
    29d0:	54010000 	strpl	r0, [r1], #-0
    29d4:	00651a02 	rsbeq	r1, r5, r2, lsl #20
    29d8:	6d100000 	ldcvs	0, cr0, [r0, #-0]
    29dc:	01000011 	tsteq	r0, r1, lsl r0
    29e0:	52260254 	eorpl	r0, r6, #84, 4	; 0x40000005
    29e4:	00000000 	andeq	r0, r0, r0
    29e8:	00110815 	andseq	r0, r1, r5, lsl r8
    29ec:	02480100 	subeq	r0, r8, #0, 2
    29f0:	00047e06 	andeq	r7, r4, r6, lsl #28
    29f4:	13641000 	cmnne	r4, #0
    29f8:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    29fc:	00651a02 	rsbeq	r1, r5, r2, lsl #20
    2a00:	f6100000 			; <UNDEFINED> instruction: 0xf6100000
    2a04:	01000012 	tsteq	r0, r2, lsl r0
    2a08:	52260248 	eorpl	r0, r6, #72, 4	; 0x80000004
    2a0c:	00000000 	andeq	r0, r0, r0
    2a10:	0010d60d 	andseq	sp, r0, sp, lsl #12
    2a14:	023c0100 	eorseq	r0, ip, #0, 2
    2a18:	00000006 	andeq	r0, r0, r6
    2a1c:	00004000 	andeq	r4, r0, r0
    2a20:	d59c0100 	ldrle	r0, [ip, #256]	; 0x100
    2a24:	09000004 	stmdbeq	r0, {r2}
    2a28:	00001364 	andeq	r1, r0, r4, ror #6
    2a2c:	1a023c01 	bne	91a38 <__Stack_Size+0x91638>
    2a30:	00000065 	andeq	r0, r0, r5, rrx
    2a34:	00001053 	andeq	r1, r0, r3, asr r0
    2a38:	0000104f 	andeq	r1, r0, pc, asr #32
    2a3c:	0012f609 	andseq	pc, r2, r9, lsl #12
    2a40:	023c0100 	eorseq	r0, ip, #0, 2
    2a44:	00005226 	andeq	r5, r0, r6, lsr #4
    2a48:	00107800 	andseq	r7, r0, r0, lsl #16
    2a4c:	00107400 	andseq	r7, r0, r0, lsl #8
    2a50:	116d0900 	cmnne	sp, r0, lsl #18
    2a54:	3c010000 	stccc	0, cr0, [r1], {-0}
    2a58:	00523502 	subseq	r3, r2, r2, lsl #10
    2a5c:	109d0000 	addsne	r0, sp, r0
    2a60:	10990000 	addsne	r0, r9, r0
    2a64:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2a68:	00001291 	muleq	r0, r1, r2
    2a6c:	05022f01 	streq	r2, [r2, #-3841]	; 0xfffff0ff
    2a70:	00000052 	andeq	r0, r0, r2, asr r0
    2a74:	00000000 	andeq	r0, r0, r0
    2a78:	00000024 	andeq	r0, r0, r4, lsr #32
    2a7c:	05069c01 	streq	r9, [r6, #-3073]	; 0xfffff3ff
    2a80:	64090000 	strvs	r0, [r9], #-0
    2a84:	01000013 	tsteq	r0, r3, lsl r0
    2a88:	6515022f 	ldrvs	r0, [r5, #-559]	; 0xfffffdd1
    2a8c:	c2000000 	andgt	r0, r0, #0
    2a90:	be000010 	mcrlt	0, 0, r0, cr0, cr0, {0}
    2a94:	00000010 	andeq	r0, r0, r0, lsl r0
    2a98:	0012b608 	andseq	fp, r2, r8, lsl #12
    2a9c:	02240100 	eoreq	r0, r4, #0, 2
    2aa0:	00005205 	andeq	r5, r0, r5, lsl #4
    2aa4:	00000000 	andeq	r0, r0, r0
    2aa8:	00002400 	andeq	r2, r0, r0, lsl #8
    2aac:	379c0100 	ldrcc	r0, [ip, r0, lsl #2]
    2ab0:	09000005 	stmdbeq	r0, {r0, r2}
    2ab4:	00001364 	andeq	r1, r0, r4, ror #6
    2ab8:	15022401 	strne	r2, [r2, #-1025]	; 0xfffffbff
    2abc:	00000065 	andeq	r0, r0, r5, rrx
    2ac0:	000010e7 	andeq	r1, r0, r7, ror #1
    2ac4:	000010e3 	andeq	r1, r0, r3, ror #1
    2ac8:	07b70d00 	ldreq	r0, [r7, r0, lsl #26]!
    2acc:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2ad0:	0e680602 	cdpeq	6, 6, cr0, cr8, cr2, {0}
    2ad4:	00440800 	subeq	r0, r4, r0, lsl #16
    2ad8:	9c010000 	stcls	0, cr0, [r1], {-0}
    2adc:	000005af 	andeq	r0, r0, pc, lsr #11
    2ae0:	00136409 	andseq	r6, r3, r9, lsl #8
    2ae4:	02190100 	andseq	r0, r9, #0, 2
    2ae8:	00006516 	andeq	r6, r0, r6, lsl r5
    2aec:	00110c00 	andseq	r0, r1, r0, lsl #24
    2af0:	00110800 	andseq	r0, r1, r0, lsl #16
    2af4:	109d0900 	addsne	r0, sp, r0, lsl #18
    2af8:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2afc:	00522202 	subseq	r2, r2, r2, lsl #4
    2b00:	11350000 	teqne	r5, r0
    2b04:	112d0000 			; <UNDEFINED> instruction: 0x112d0000
    2b08:	c0120000 	andsgt	r0, r2, r0
    2b0c:	0a000002 	beq	2b1c <__Stack_Size+0x271c>
    2b10:	00001275 	andeq	r1, r0, r5, ror r2
    2b14:	03021b01 	movweq	r1, #11009	; 0x2b01
    2b18:	00000292 	muleq	r0, r2, r2
    2b1c:	00001171 	andeq	r1, r0, r1, ror r1
    2b20:	0000116f 	andeq	r1, r0, pc, ror #2
    2b24:	0002d812 	andeq	sp, r2, r2, lsl r8
    2b28:	106c0a00 	rsbne	r0, ip, r0, lsl #20
    2b2c:	1b010000 	blne	42b34 <__Stack_Size+0x42734>
    2b30:	00520302 	subseq	r0, r2, r2, lsl #6
    2b34:	118c0000 	orrne	r0, ip, r0
    2b38:	11840000 	orrne	r0, r4, r0
    2b3c:	00000000 	andeq	r0, r0, r0
    2b40:	13000d00 	movwne	r0, #3328	; 0xd00
    2b44:	0d010000 	stceq	0, cr0, [r1, #-0]
    2b48:	00000602 	andeq	r0, r0, r2, lsl #12
    2b4c:	00260000 	eoreq	r0, r6, r0
    2b50:	9c010000 	stcls	0, cr0, [r1], {-0}
    2b54:	00000606 	andeq	r0, r0, r6, lsl #12
    2b58:	0012750e 	andseq	r7, r2, lr, lsl #10
    2b5c:	020d0100 	andeq	r0, sp, #0, 2
    2b60:	0006061b 	andeq	r0, r6, fp, lsl r6
    2b64:	09500100 	ldmdbeq	r0, {r8}^
    2b68:	0000109d 	muleq	r0, sp, r0
    2b6c:	27020d01 	strcs	r0, [r2, -r1, lsl #26]
    2b70:	00000052 	andeq	r0, r0, r2, asr r0
    2b74:	000011ca 	andeq	r1, r0, sl, asr #3
    2b78:	000011c4 	andeq	r1, r0, r4, asr #3
    2b7c:	0002a812 	andeq	sl, r2, r2, lsl r8
    2b80:	106c0a00 	rsbne	r0, ip, r0, lsl #20
    2b84:	0f010000 	svceq	0x00010000
    2b88:	00520302 	subseq	r0, r2, r2, lsl #6
    2b8c:	11fc0000 	mvnsne	r0, r0
    2b90:	11f60000 	mvnsne	r0, r0
    2b94:	00000000 	andeq	r0, r0, r0
    2b98:	003a0413 	eorseq	r0, sl, r3, lsl r4
    2b9c:	f40d0000 	vst4.8	{d0-d3}, [sp], r0
    2ba0:	01000011 	tsteq	r0, r1, lsl r0
    2ba4:	48060201 	stmdami	r6, {r0, r9}
    2ba8:	2008000e 	andcs	r0, r8, lr
    2bac:	01000000 	mrseq	r0, (UNDEF: 0)
    2bb0:	0006489c 	muleq	r6, ip, r8
    2bb4:	13640900 	cmnne	r4, #0, 18
    2bb8:	01010000 	mrseq	r0, (UNDEF: 1)
    2bbc:	00651602 	rsbeq	r1, r5, r2, lsl #12
    2bc0:	12290000 	eorne	r0, r9, #0
    2bc4:	12250000 	eorne	r0, r5, #0
    2bc8:	9d0e0000 	stcls	0, cr0, [lr, #-0]
    2bcc:	01000010 	tsteq	r0, r0, lsl r0
    2bd0:	52220201 	eorpl	r0, r2, #268435456	; 0x10000000
    2bd4:	01000000 	mrseq	r0, (UNDEF: 0)
    2bd8:	fc080051 	stc2	0, cr0, [r8], {81}	; 0x51
    2bdc:	01000010 	tsteq	r0, r0, lsl r0
    2be0:	520501f5 	andpl	r0, r5, #1073741885	; 0x4000003d
    2be4:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    2be8:	2008000e 	andcs	r0, r8, lr
    2bec:	01000000 	mrseq	r0, (UNDEF: 0)
    2bf0:	0006799c 	muleq	r6, ip, r9
    2bf4:	13640900 	cmnne	r4, #0, 18
    2bf8:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    2bfc:	00651401 	rsbeq	r1, r5, r1, lsl #8
    2c00:	124e0000 	subne	r0, lr, #0
    2c04:	124a0000 	subne	r0, sl, #0
    2c08:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2c0c:	0000133d 	andeq	r1, r0, sp, lsr r3
    2c10:	0501ea01 	streq	lr, [r1, #-2561]	; 0xfffff5ff
    2c14:	00000052 	andeq	r0, r0, r2, asr r0
    2c18:	08000e08 	stmdaeq	r0, {r3, r9, sl, fp}
    2c1c:	00000020 	andeq	r0, r0, r0, lsr #32
    2c20:	06aa9c01 	strteq	r9, [sl], r1, lsl #24
    2c24:	64090000 	strvs	r0, [r9], #-0
    2c28:	01000013 	tsteq	r0, r3, lsl r0
    2c2c:	651401ea 	ldrvs	r0, [r4, #-490]	; 0xfffffe16
    2c30:	73000000 	movwvc	r0, #0
    2c34:	6f000012 	svcvs	0x00000012
    2c38:	00000012 	andeq	r0, r0, r2, lsl r0
    2c3c:	0013770d 	andseq	r7, r3, sp, lsl #14
    2c40:	01df0100 	bicseq	r0, pc, r0, lsl #2
    2c44:	00000006 	andeq	r0, r0, r6
    2c48:	00002400 	andeq	r2, r0, r0, lsl #8
    2c4c:	ec9c0100 	ldfs	f0, [ip], {0}
    2c50:	09000006 	stmdbeq	r0, {r1, r2}
    2c54:	00001364 	andeq	r1, r0, r4, ror #6
    2c58:	1501df01 	strne	sp, [r1, #-3841]	; 0xfffff0ff
    2c5c:	00000065 	andeq	r0, r0, r5, rrx
    2c60:	00001298 	muleq	r0, r8, r2
    2c64:	00001294 	muleq	r0, r4, r2
    2c68:	00125d09 	andseq	r5, r2, r9, lsl #26
    2c6c:	01df0100 	bicseq	r0, pc, r0, lsl #2
    2c70:	00005221 	andeq	r5, r0, r1, lsr #4
    2c74:	0012bd00 	andseq	fp, r2, r0, lsl #26
    2c78:	0012b900 	andseq	fp, r2, r0, lsl #18
    2c7c:	930d0000 	movwls	r0, #53248	; 0xd000
    2c80:	01000011 	tsteq	r0, r1, lsl r0
    2c84:	000601d3 	ldrdeq	r0, [r6], -r3
    2c88:	24000000 	strcs	r0, [r0], #-0
    2c8c:	01000000 	mrseq	r0, (UNDEF: 0)
    2c90:	00072e9c 	muleq	r7, ip, lr
    2c94:	13640900 	cmnne	r4, #0, 18
    2c98:	d3010000 	movwle	r0, #4096	; 0x1000
    2c9c:	00651501 	rsbeq	r1, r5, r1, lsl #10
    2ca0:	12e20000 	rscne	r0, r2, #0
    2ca4:	12de0000 	sbcsne	r0, lr, #0
    2ca8:	5d090000 	stcpl	0, cr0, [r9, #-0]
    2cac:	01000012 	tsteq	r0, r2, lsl r0
    2cb0:	522101d3 	eorpl	r0, r1, #-1073741772	; 0xc0000034
    2cb4:	07000000 	streq	r0, [r0, -r0]
    2cb8:	03000013 	movweq	r0, #19
    2cbc:	00000013 	andeq	r0, r0, r3, lsl r0
    2cc0:	00113208 	andseq	r3, r1, r8, lsl #4
    2cc4:	01c70100 	biceq	r0, r7, r0, lsl #2
    2cc8:	00006504 	andeq	r6, r0, r4, lsl #10
    2ccc:	00000000 	andeq	r0, r0, r0
    2cd0:	00001200 	andeq	r1, r0, r0, lsl #4
    2cd4:	5f9c0100 	svcpl	0x009c0100
    2cd8:	09000007 	stmdbeq	r0, {r0, r1, r2}
    2cdc:	00001364 	andeq	r1, r0, r4, ror #6
    2ce0:	1401c701 	strne	ip, [r1], #-1793	; 0xfffff8ff
    2ce4:	00000065 	andeq	r0, r0, r5, rrx
    2ce8:	0000132c 	andeq	r1, r0, ip, lsr #6
    2cec:	00001328 	andeq	r1, r0, r8, lsr #6
    2cf0:	10a40d00 	adcne	r0, r4, r0, lsl #26
    2cf4:	bc010000 	stclt	0, cr0, [r1], {-0}
    2cf8:	00000601 	andeq	r0, r0, r1, lsl #12
    2cfc:	001e0000 	andseq	r0, lr, r0
    2d00:	9c010000 	stcls	0, cr0, [r1], {-0}
    2d04:	0000079b 	muleq	r0, fp, r7
    2d08:	00136409 	andseq	r6, r3, r9, lsl #8
    2d0c:	01bc0100 			; <UNDEFINED> instruction: 0x01bc0100
    2d10:	00006516 	andeq	r6, r0, r6, lsl r5
    2d14:	00135100 	andseq	r5, r3, r0, lsl #2
    2d18:	00134d00 	andseq	r4, r3, r0, lsl #26
    2d1c:	10750e00 	rsbsne	r0, r5, r0, lsl #28
    2d20:	bc010000 	stclt	0, cr0, [r1], {-0}
    2d24:	00652101 	rsbeq	r2, r5, r1, lsl #2
    2d28:	51010000 	mrspl	r0, (UNDEF: 1)
    2d2c:	13490d00 	movtne	r0, #40192	; 0x9d00
    2d30:	b0010000 	andlt	r0, r1, r0
    2d34:	0de20601 	stcleq	6, cr0, [r2, #4]!
    2d38:	00260800 	eoreq	r0, r6, r0, lsl #16
    2d3c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2d40:	000007c8 	andeq	r0, r0, r8, asr #15
    2d44:	00136409 	andseq	r6, r3, r9, lsl #8
    2d48:	01b00100 	lslseq	r0, r0, #2
    2d4c:	00006516 	andeq	r6, r0, r6, lsl r5
    2d50:	00137600 	andseq	r7, r3, r0, lsl #12
    2d54:	00137200 	andseq	r7, r3, r0, lsl #4
    2d58:	410d0000 	mrsmi	r0, (UNDEF: 13)
    2d5c:	01000012 	tsteq	r0, r2, lsl r0
    2d60:	bc0601a5 	stflts	f0, [r6], {165}	; 0xa5
    2d64:	2608000d 	strcs	r0, [r8], -sp
    2d68:	01000000 	mrseq	r0, (UNDEF: 0)
    2d6c:	0007f59c 	muleq	r7, ip, r5
    2d70:	13640900 	cmnne	r4, #0, 18
    2d74:	a5010000 	strge	r0, [r1, #-0]
    2d78:	00651601 	rsbeq	r1, r5, r1, lsl #12
    2d7c:	139b0000 	orrsne	r0, fp, #0
    2d80:	13970000 	orrsne	r0, r7, #0
    2d84:	0d000000 	stceq	0, cr0, [r0, #-0]
    2d88:	0000119f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    2d8c:	06019a01 	streq	r9, [r1], -r1, lsl #20
    2d90:	00000000 	andeq	r0, r0, r0
    2d94:	00000020 	andeq	r0, r0, r0, lsr #32
    2d98:	08229c01 	stmdaeq	r2!, {r0, sl, fp, ip, pc}
    2d9c:	64090000 	strvs	r0, [r9], #-0
    2da0:	01000013 	tsteq	r0, r3, lsl r0
    2da4:	6517019a 	ldrvs	r0, [r7, #-410]	; 0xfffffe66
    2da8:	c0000000 	andgt	r0, r0, r0
    2dac:	bc000013 	stclt	0, cr0, [r0], {19}
    2db0:	00000013 	andeq	r0, r0, r3, lsl r0
    2db4:	0010bf0d 	andseq	fp, r0, sp, lsl #30
    2db8:	018f0100 	orreq	r0, pc, r0, lsl #2
    2dbc:	00000006 	andeq	r0, r0, r6
    2dc0:	00002000 	andeq	r2, r0, r0
    2dc4:	4f9c0100 	svcmi	0x009c0100
    2dc8:	09000008 	stmdbeq	r0, {r3}
    2dcc:	00001364 	andeq	r1, r0, r4, ror #6
    2dd0:	17018f01 	strne	r8, [r1, -r1, lsl #30]
    2dd4:	00000065 	andeq	r0, r0, r5, rrx
    2dd8:	000013e5 	andeq	r1, r0, r5, ror #7
    2ddc:	000013e1 	andeq	r1, r0, r1, ror #7
    2de0:	12c30d00 	sbcne	r0, r3, #0, 26
    2de4:	84010000 	strhi	r0, [r1], #-0
    2de8:	00000601 	andeq	r0, r0, r1, lsl #12
    2dec:	001c0000 	andseq	r0, ip, r0
    2df0:	9c010000 	stcls	0, cr0, [r1], {-0}
    2df4:	0000087c 	andeq	r0, r0, ip, ror r8
    2df8:	00136409 	andseq	r6, r3, r9, lsl #8
    2dfc:	01840100 	orreq	r0, r4, r0, lsl #2
    2e00:	00006518 	andeq	r6, r0, r8, lsl r5
    2e04:	00140a00 	andseq	r0, r4, r0, lsl #20
    2e08:	00140600 	andseq	r0, r4, r0, lsl #12
    2e0c:	c80d0000 	stmdagt	sp, {}	; <UNPREDICTABLE>
    2e10:	01000011 	tsteq	r0, r1, lsl r0
    2e14:	00060179 	andeq	r0, r6, r9, ror r1
    2e18:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2e1c:	01000000 	mrseq	r0, (UNDEF: 0)
    2e20:	0008a99c 	muleq	r8, ip, r9
    2e24:	13640900 	cmnne	r4, #0, 18
    2e28:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    2e2c:	00651801 	rsbeq	r1, r5, r1, lsl #16
    2e30:	142f0000 	strtne	r0, [pc], #-0	; 2e38 <__Stack_Size+0x2a38>
    2e34:	142b0000 	strtne	r0, [fp], #-0
    2e38:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2e3c:	00001083 	andeq	r1, r0, r3, lsl #1
    2e40:	05016e01 	streq	r6, [r1, #-3585]	; 0xfffff1ff
    2e44:	00000052 	andeq	r0, r0, r2, asr r0
    2e48:	00000000 	andeq	r0, r0, r0
    2e4c:	0000001a 	andeq	r0, r0, sl, lsl r0
    2e50:	08da9c01 	ldmeq	sl, {r0, sl, fp, ip, pc}^
    2e54:	64090000 	strvs	r0, [r9], #-0
    2e58:	01000013 	tsteq	r0, r3, lsl r0
    2e5c:	6519016e 	ldrvs	r0, [r9, #-366]	; 0xfffffe92
    2e60:	54000000 	strpl	r0, [r0], #-0
    2e64:	50000014 	andpl	r0, r0, r4, lsl r0
    2e68:	00000014 	andeq	r0, r0, r4, lsl r0
    2e6c:	000ff908 	andeq	pc, pc, r8, lsl #18
    2e70:	01630100 	cmneq	r3, r0, lsl #2
    2e74:	00005205 	andeq	r5, r0, r5, lsl #4
    2e78:	00000000 	andeq	r0, r0, r0
    2e7c:	00001a00 	andeq	r1, r0, r0, lsl #20
    2e80:	0b9c0100 	bleq	fe703288 <BootRAM+0xd673a29>
    2e84:	09000009 	stmdbeq	r0, {r0, r3}
    2e88:	00001364 	andeq	r1, r0, r4, ror #6
    2e8c:	19016301 	stmdbne	r1, {r0, r8, r9, sp, lr}
    2e90:	00000065 	andeq	r0, r0, r5, rrx
    2e94:	00001479 	andeq	r1, r0, r9, ror r4
    2e98:	00001475 	andeq	r1, r0, r5, ror r4
    2e9c:	120e1500 	andne	r1, lr, #0, 10
    2ea0:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    2ea4:	09260601 	stmdbeq	r6!, {r0, r9, sl}
    2ea8:	64100000 	ldrvs	r0, [r0], #-0
    2eac:	01000013 	tsteq	r0, r3, lsl r0
    2eb0:	651b0158 	ldrvs	r0, [fp, #-344]	; 0xfffffea8
    2eb4:	00000000 	andeq	r0, r0, r0
    2eb8:	00117c15 	andseq	r7, r1, r5, lsl ip
    2ebc:	014d0100 	mrseq	r0, (UNDEF: 93)
    2ec0:	00094106 	andeq	r4, r9, r6, lsl #2
    2ec4:	13641000 	cmnne	r4, #0
    2ec8:	4d010000 	stcmi	0, cr0, [r1, #-0]
    2ecc:	00651901 	rsbeq	r1, r5, r1, lsl #18
    2ed0:	15000000 	strne	r0, [r0, #-0]
    2ed4:	0000124e 	andeq	r1, r0, lr, asr #4
    2ed8:	06014201 	streq	r4, [r1], -r1, lsl #4
    2edc:	0000095c 	andeq	r0, r0, ip, asr r9
    2ee0:	00136410 	andseq	r6, r3, r0, lsl r4
    2ee4:	01420100 	mrseq	r0, (UNDEF: 82)
    2ee8:	00006518 	andeq	r6, r0, r8, lsl r5
    2eec:	8d150000 	ldchi	0, cr0, [r5, #-0]
    2ef0:	01000007 	tsteq	r0, r7
    2ef4:	77060137 	smladxvc	r6, r7, r1, r0
    2ef8:	10000009 	andne	r0, r0, r9
    2efc:	00001364 	andeq	r1, r0, r4, ror #6
    2f00:	1a013701 	bne	50b0c <__Stack_Size+0x5070c>
    2f04:	00000065 	andeq	r0, r0, r5, rrx
    2f08:	12010d00 	andne	r0, r1, #0, 26
    2f0c:	2c010000 	stccs	0, cr0, [r1], {-0}
    2f10:	0d9c0601 	ldceq	6, cr0, [ip, #4]
    2f14:	001c0800 	andseq	r0, ip, r0, lsl #16
    2f18:	9c010000 	stcls	0, cr0, [r1], {-0}
    2f1c:	000009a4 	andeq	r0, r0, r4, lsr #19
    2f20:	00136409 	andseq	r6, r3, r9, lsl #8
    2f24:	012c0100 			; <UNDEFINED> instruction: 0x012c0100
    2f28:	00006516 	andeq	r6, r0, r6, lsl r5
    2f2c:	00149e00 	andseq	r9, r4, r0, lsl #28
    2f30:	00149a00 	andseq	r9, r4, r0, lsl #20
    2f34:	e90d0000 	stmdb	sp, {}	; <UNPREDICTABLE>
    2f38:	01000011 	tsteq	r0, r1, lsl r0
    2f3c:	00060120 	andeq	r0, r6, r0, lsr #2
    2f40:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    2f44:	01000000 	mrseq	r0, (UNDEF: 0)
    2f48:	0009d19c 	muleq	r9, ip, r1
    2f4c:	13640900 	cmnne	r4, #0, 18
    2f50:	20010000 	andcs	r0, r1, r0
    2f54:	00651401 	rsbeq	r1, r5, r1, lsl #8
    2f58:	14c30000 	strbne	r0, [r3], #0
    2f5c:	14bf0000 	ldrtne	r0, [pc], #0	; 2f64 <__Stack_Size+0x2b64>
    2f60:	0d000000 	stceq	0, cr0, [r0, #-0]
    2f64:	0000096d 	andeq	r0, r0, sp, ror #18
    2f68:	06011401 	streq	r1, [r1], -r1, lsl #8
    2f6c:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
    2f70:	0000001e 	andeq	r0, r0, lr, lsl r0
    2f74:	0a1d9c01 	beq	769f80 <__Stack_Size+0x769b80>
    2f78:	64090000 	strvs	r0, [r9], #-0
    2f7c:	01000013 	tsteq	r0, r3, lsl r0
    2f80:	65160114 	ldrvs	r0, [r6, #-276]	; 0xfffffeec
    2f84:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    2f88:	e4000014 	str	r0, [r0], #-20	; 0xffffffec
    2f8c:	11000014 	tstne	r0, r4, lsl r0
    2f90:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
    2f94:	0000001c 	andeq	r0, r0, ip, lsl r0
    2f98:	0004840a 	andeq	r8, r4, sl, lsl #8
    2f9c:	01160100 	tsteq	r6, r0, lsl #2
    2fa0:	00005203 	andeq	r5, r0, r3, lsl #4
    2fa4:	00151100 	andseq	r1, r5, r0, lsl #2
    2fa8:	00150900 	andseq	r0, r5, r0, lsl #18
    2fac:	0d000000 	stceq	0, cr0, [r0, #-0]
    2fb0:	0000101b 	andeq	r1, r0, fp, lsl r0
    2fb4:	06010801 	streq	r0, [r1], -r1, lsl #16
    2fb8:	00000000 	andeq	r0, r0, r0
    2fbc:	0000001e 	andeq	r0, r0, lr, lsl r0
    2fc0:	0a699c01 	beq	1a69fcc <__Stack_Size+0x1a69bcc>
    2fc4:	64090000 	strvs	r0, [r9], #-0
    2fc8:	01000013 	tsteq	r0, r3, lsl r0
    2fcc:	65160108 	ldrvs	r0, [r6, #-264]	; 0xfffffef8
    2fd0:	5f000000 	svcpl	0x00000000
    2fd4:	5b000015 	blpl	3030 <__Stack_Size+0x2c30>
    2fd8:	11000015 	tstne	r0, r5, lsl r0
    2fdc:	00000000 	andeq	r0, r0, r0
    2fe0:	0000001c 	andeq	r0, r0, ip, lsl r0
    2fe4:	0004840a 	andeq	r8, r4, sl, lsl #8
    2fe8:	010a0100 	mrseq	r0, (UNDEF: 26)
    2fec:	00005203 	andeq	r5, r0, r3, lsl #4
    2ff0:	00158800 	andseq	r8, r5, r0, lsl #16
    2ff4:	00158000 	andseq	r8, r5, r0
    2ff8:	16000000 	strne	r0, [r0], -r0
    2ffc:	00001049 	andeq	r1, r0, r9, asr #32
    3000:	5205fc01 	andpl	pc, r5, #256	; 0x100
    3004:	00000000 	andeq	r0, r0, r0
    3008:	12000000 	andne	r0, r0, #0
    300c:	01000000 	mrseq	r0, (UNDEF: 0)
    3010:	000a989c 	muleq	sl, ip, r8
    3014:	13641700 	cmnne	r4, #0, 14
    3018:	fc010000 	stc2	0, cr0, [r1], {-0}
    301c:	00006516 	andeq	r6, r0, r6, lsl r5
    3020:	0015d100 	andseq	sp, r5, r0, lsl #2
    3024:	0015cd00 	andseq	ip, r5, r0, lsl #26
    3028:	19160000 	ldmdbne	r6, {}	; <UNPREDICTABLE>
    302c:	01000011 	tsteq	r0, r1, lsl r0
    3030:	005205f0 	ldrsheq	r0, [r2], #-80	; 0xffffffb0
    3034:	00000000 	andeq	r0, r0, r0
    3038:	00120000 	andseq	r0, r2, r0
    303c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3040:	00000ac7 	andeq	r0, r0, r7, asr #21
    3044:	00136417 	andseq	r6, r3, r7, lsl r4
    3048:	16f00100 	ldrbtne	r0, [r0], r0, lsl #2
    304c:	00000065 	andeq	r0, r0, r5, rrx
    3050:	000015f6 	strdeq	r1, [r0], -r6
    3054:	000015f2 	strdeq	r1, [r0], -r2
    3058:	10281800 	eorne	r1, r8, r0, lsl #16
    305c:	db010000 	blle	43064 <__Stack_Size+0x42c64>
    3060:	00000006 	andeq	r0, r0, r6
    3064:	00002600 	andeq	r2, r0, r0, lsl #12
    3068:	339c0100 	orrscc	r0, ip, #0, 2
    306c:	1700000b 	strne	r0, [r0, -fp]
    3070:	00001364 	andeq	r1, r0, r4, ror #6
    3074:	651edb01 	ldrvs	sp, [lr, #-2817]	; 0xfffff4ff
    3078:	1b000000 	blne	3080 <__Stack_Size+0x2c80>
    307c:	17000016 	smladne	r0, r6, r0, r0
    3080:	19000016 	stmdbne	r0, {r1, r2, r4}
    3084:	00001127 	andeq	r1, r0, r7, lsr #2
    3088:	6529db01 	strvs	sp, [r9, #-2817]!	; 0xfffff4ff
    308c:	01000000 	mrseq	r0, (UNDEF: 0)
    3090:	13281a51 			; <UNDEFINED> instruction: 0x13281a51
    3094:	dd010000 	stcle	0, cr0, [r1, #-0]
    3098:	00005207 	andeq	r5, r0, r7, lsl #4
    309c:	00164000 	andseq	r4, r6, r0
    30a0:	00163c00 	andseq	r3, r6, r0, lsl #24
    30a4:	0c491b00 	mcrreq	11, 0, r1, r9, cr0
    30a8:	00000000 	andeq	r0, r0, r0
    30ac:	90030000 	andls	r0, r3, r0
    30b0:	01000002 	tsteq	r0, r2
    30b4:	5a1c1ade 	bpl	709c34 <__Stack_Size+0x709834>
    30b8:	6200000c 	andvs	r0, r0, #12
    30bc:	5e000016 	mcrpl	0, 0, r0, cr0, cr6, {0}
    30c0:	00000016 	andeq	r0, r0, r6, lsl r0
    30c4:	10b11800 	adcsne	r1, r1, r0, lsl #16
    30c8:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    30cc:	00000006 	andeq	r0, r0, r6
    30d0:	00002a00 	andeq	r2, r0, r0, lsl #20
    30d4:	8a9c0100 	bhi	fe7034dc <BootRAM+0xd673c7d>
    30d8:	1700000b 	strne	r0, [r0, -fp]
    30dc:	00001364 	andeq	r1, r0, r4, ror #6
    30e0:	6517ce01 	ldrvs	ip, [r7, #-3585]	; 0xfffff1ff
    30e4:	87000000 	strhi	r0, [r0, -r0]
    30e8:	83000016 	movwhi	r0, #22
    30ec:	19000016 	stmdbne	r0, {r1, r2, r4}
    30f0:	00000f23 	andeq	r0, r0, r3, lsr #30
    30f4:	5223ce01 	eorpl	ip, r3, #1, 28
    30f8:	01000000 	mrseq	r0, (UNDEF: 0)
    30fc:	00001151 	andeq	r1, r0, r1, asr r1
    3100:	00280000 	eoreq	r0, r8, r0
    3104:	841a0000 	ldrhi	r0, [sl], #-0
    3108:	01000004 	tsteq	r0, r4
    310c:	005203d0 	ldrsbeq	r0, [r2], #-48	; 0xffffffd0
    3110:	16aa0000 	strtne	r0, [sl], r0
    3114:	16a80000 	strtne	r0, [r8], r0
    3118:	00000000 	andeq	r0, r0, r0
    311c:	00135618 	andseq	r5, r3, r8, lsl r6
    3120:	06c10100 	strbeq	r0, [r1], r0, lsl #2
    3124:	08000d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp}
    3128:	0000002a 	andeq	r0, r0, sl, lsr #32
    312c:	0be19c01 	bleq	ff86a138 <BootRAM+0xe7da8d9>
    3130:	64170000 	ldrvs	r0, [r7], #-0
    3134:	01000013 	tsteq	r0, r3, lsl r0
    3138:	006517c1 	rsbeq	r1, r5, r1, asr #15
    313c:	16c10000 	strbne	r0, [r1], r0
    3140:	16bd0000 	ldrtne	r0, [sp], r0
    3144:	23190000 	tstcs	r9, #0
    3148:	0100000f 	tsteq	r0, pc
    314c:	005223c1 	subseq	r2, r2, r1, asr #7
    3150:	51010000 	mrspl	r0, (UNDEF: 1)
    3154:	000d5411 	andeq	r5, sp, r1, lsl r4
    3158:	00002808 	andeq	r2, r0, r8, lsl #16
    315c:	04841a00 	streq	r1, [r4], #2560	; 0xa00
    3160:	c3010000 	movwgt	r0, #4096	; 0x1000
    3164:	00005203 	andeq	r5, r0, r3, lsl #4
    3168:	0016e400 	andseq	lr, r6, r0, lsl #8
    316c:	0016e200 	andseq	lr, r6, r0, lsl #4
    3170:	16000000 	strne	r0, [r0], -r0
    3174:	000011be 			; <UNDEFINED> instruction: 0x000011be
    3178:	5205b401 	andpl	fp, r5, #16777216	; 0x1000000
    317c:	00000000 	andeq	r0, r0, r0
    3180:	12000000 	andne	r0, r0, #0
    3184:	01000000 	mrseq	r0, (UNDEF: 0)
    3188:	000c109c 	muleq	ip, ip, r0
    318c:	13641700 	cmnne	r4, #0, 14
    3190:	b4010000 	strlt	r0, [r1], #-0
    3194:	00006512 	andeq	r6, r0, r2, lsl r5
    3198:	0016fb00 	andseq	pc, r6, r0, lsl #22
    319c:	0016f700 	andseq	pc, r6, r0, lsl #14
    31a0:	e7180000 	ldr	r0, [r8, -r0]
    31a4:	01000010 	tsteq	r0, r0, lsl r0
    31a8:	000006a8 	andeq	r0, r0, r8, lsr #13
    31ac:	001c0000 	andseq	r0, ip, r0
    31b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    31b4:	00000c49 	andeq	r0, r0, r9, asr #24
    31b8:	00136417 	andseq	r6, r3, r7, lsl r4
    31bc:	13a80100 			; <UNDEFINED> instruction: 0x13a80100
    31c0:	00000065 	andeq	r0, r0, r5, rrx
    31c4:	00001720 	andeq	r1, r0, r0, lsr #14
    31c8:	0000171c 	andeq	r1, r0, ip, lsl r7
    31cc:	00112c19 	andseq	r2, r1, r9, lsl ip
    31d0:	1fa80100 	svcne	0x00a80100
    31d4:	00000052 	andeq	r0, r0, r2, asr r0
    31d8:	1d005101 	stfnes	f5, [r0, #-4]
    31dc:	00001285 	andeq	r1, r0, r5, lsl #5
    31e0:	52059b01 	andpl	r9, r5, #1024	; 0x400
    31e4:	01000000 	mrseq	r0, (UNDEF: 0)
    31e8:	00000c67 	andeq	r0, r0, r7, ror #24
    31ec:	0013641e 	andseq	r6, r3, lr, lsl r4
    31f0:	149b0100 	ldrne	r0, [fp], #256	; 0x100
    31f4:	00000065 	andeq	r0, r0, r5, rrx
    31f8:	136b1800 	cmnne	fp, #0, 16
    31fc:	8f010000 	svchi	0x00010000
    3200:	00000006 	andeq	r0, r0, r6
    3204:	00000e00 	andeq	r0, r0, r0, lsl #28
    3208:	a09c0100 	addsge	r0, ip, r0, lsl #2
    320c:	1700000c 	strne	r0, [r0, -ip]
    3210:	00001364 	andeq	r1, r0, r4, ror #6
    3214:	65158f01 	ldrvs	r8, [r5, #-3841]	; 0xfffff0ff
    3218:	45000000 	strmi	r0, [r0, #-0]
    321c:	41000017 	tstmi	r0, r7, lsl r0
    3220:	19000017 	stmdbne	r0, {r0, r1, r2, r4}
    3224:	00001237 	andeq	r1, r0, r7, lsr r2
    3228:	52218f01 	eorpl	r8, r1, #1, 30
    322c:	01000000 	mrseq	r0, (UNDEF: 0)
    3230:	201f0051 	andscs	r0, pc, r1, asr r0	; <UNPREDICTABLE>
    3234:	01000012 	tsteq	r0, r2, lsl r0
    3238:	00520582 	subseq	r0, r2, r2, lsl #11
    323c:	00000000 	andeq	r0, r0, r0
    3240:	00100000 	andseq	r0, r0, r0
    3244:	9c010000 	stcls	0, cr0, [r1], {-0}
    3248:	0012ac18 	andseq	sl, r2, r8, lsl ip
    324c:	06760100 	ldrbteq	r0, [r6], -r0, lsl #2
    3250:	00000000 	andeq	r0, r0, r0
    3254:	00000014 	andeq	r0, r0, r4, lsl r0
    3258:	0ce19c01 	stcleq	12, cr9, [r1], #4
    325c:	37170000 	ldrcc	r0, [r7, -r0]
    3260:	01000012 	tsteq	r0, r2, lsl r0
    3264:	00521476 	subseq	r1, r2, r6, ror r4
    3268:	176a0000 	strbne	r0, [sl, -r0]!
    326c:	17660000 	strbne	r0, [r6, -r0]!
    3270:	1f000000 	svcne	0x00000000
    3274:	00001094 	muleq	r0, r4, r0
    3278:	52056a01 	andpl	r6, r5, #4096	; 0x1000
    327c:	00000000 	andeq	r0, r0, r0
    3280:	10000000 	andne	r0, r0, r0
    3284:	01000000 	mrseq	r0, (UNDEF: 0)
    3288:	10cd189c 	smullne	r1, sp, ip, r8
    328c:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    3290:	00000006 	andeq	r0, r0, r6
    3294:	00000c00 	andeq	r0, r0, r0, lsl #24
    3298:	1c9c0100 	ldfnes	f0, [ip], {0}
    329c:	1900000d 	stmdbne	r0, {r0, r2, r3}
    32a0:	00001237 	andeq	r1, r0, r7, lsr r2
    32a4:	52135e01 	andspl	r5, r3, #1, 28
    32a8:	01000000 	mrseq	r0, (UNDEF: 0)
    32ac:	101f0050 	andsne	r0, pc, r0, asr r0	; <UNPREDICTABLE>
    32b0:	01000013 	tsteq	r0, r3, lsl r0
    32b4:	00520552 	subseq	r0, r2, r2, asr r5
    32b8:	00000000 	andeq	r0, r0, r0
    32bc:	00100000 	andseq	r0, r0, r0
    32c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    32c4:	00122a1f 	andseq	r2, r2, pc, lsl sl
    32c8:	05460100 	strbeq	r0, [r6, #-256]	; 0xffffff00
    32cc:	00000052 	andeq	r0, r0, r2, asr r0
    32d0:	00000000 	andeq	r0, r0, r0
    32d4:	00000010 	andeq	r0, r0, r0, lsl r0
    32d8:	64189c01 	ldrvs	r9, [r8], #-3073	; 0xfffff3ff
    32dc:	01000010 	tsteq	r0, r0, lsl r0
    32e0:	0000063a 	andeq	r0, r0, sl, lsr r6
    32e4:	000c0000 	andeq	r0, ip, r0
    32e8:	9c010000 	stcls	0, cr0, [r1], {-0}
    32ec:	00000d6d 	andeq	r0, r0, sp, ror #26
    32f0:	00123719 	andseq	r3, r2, r9, lsl r7
    32f4:	123a0100 	eorsne	r0, sl, #0, 2
    32f8:	00000052 	andeq	r0, r0, r2, asr r0
    32fc:	1f005001 	svcne	0x00005001
    3300:	0000107b 	andeq	r1, r0, fp, ror r0
    3304:	52052e01 	andpl	r2, r5, #1, 28
    3308:	00000000 	andeq	r0, r0, r0
    330c:	10000000 	andne	r0, r0, r0
    3310:	01000000 	mrseq	r0, (UNDEF: 0)
    3314:	12a4189c 	adcne	r1, r4, #156, 16	; 0x9c0000
    3318:	22010000 	andcs	r0, r1, #0
    331c:	00000006 	andeq	r0, r0, r6
    3320:	00000c00 	andeq	r0, r0, r0, lsl #24
    3324:	a89c0100 	ldmge	ip, {r8}
    3328:	1900000d 	stmdbne	r0, {r0, r2, r3}
    332c:	00001237 	andeq	r1, r0, r7, lsr r2
    3330:	52122201 	andspl	r2, r2, #268435456	; 0x10000000
    3334:	01000000 	mrseq	r0, (UNDEF: 0)
    3338:	49200050 	stmdbmi	r0!, {r4, r6}
    333c:	0000000c 	andeq	r0, r0, ip
    3340:	10000000 	andne	r0, r0, r0
    3344:	01000000 	mrseq	r0, (UNDEF: 0)
    3348:	0c5a1c9c 	mrrceq	12, 9, r1, sl, cr12
    334c:	178f0000 	strne	r0, [pc, r0]
    3350:	178b0000 	strne	r0, [fp, r0]
    3354:	00000000 	andeq	r0, r0, r0
    3358:	00000294 	muleq	r0, r4, r2
    335c:	0f060004 	svceq	0x00060004
    3360:	01040000 	mrseq	r0, (UNDEF: 4)
    3364:	00000377 	andeq	r0, r0, r7, ror r3
    3368:	0013c80c 	andseq	ip, r3, ip, lsl #16
    336c:	00001b00 	andeq	r1, r0, r0, lsl #22
    3370:	00052800 	andeq	r2, r5, r0, lsl #16
    3374:	00000000 	andeq	r0, r0, r0
    3378:	00209a00 	eoreq	r9, r0, r0, lsl #20
    337c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    3380:	000001a5 	andeq	r0, r0, r5, lsr #3
    3384:	c2050202 	andgt	r0, r5, #536870912	; 0x20000000
    3388:	02000006 	andeq	r0, r0, #6
    338c:	066e0601 	strbteq	r0, [lr], -r1, lsl #12
    3390:	75030000 	strvc	r0, [r3, #-0]
    3394:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
    3398:	00461d24 	subeq	r1, r6, r4, lsr #26
    339c:	04020000 	streq	r0, [r2], #-0
    33a0:	00033007 	andeq	r3, r3, r7
    33a4:	31750300 	cmncc	r5, r0, lsl #6
    33a8:	25020036 	strcs	r0, [r2, #-54]	; 0xffffffca
    33ac:	00005e1d 	andeq	r5, r0, sp, lsl lr
    33b0:	004d0400 	subeq	r0, sp, r0, lsl #8
    33b4:	02020000 	andeq	r0, r2, #0
    33b8:	00040e07 	andeq	r0, r4, r7, lsl #28
    33bc:	38750300 	ldmdacc	r5!, {r8, r9}^
    33c0:	1d260200 	sfmne	f0, 4, [r6, #-0]
    33c4:	00000070 	andeq	r0, r0, r0, ror r0
    33c8:	6c080102 	stfvss	f0, [r8], {2}
    33cc:	05000006 	streq	r0, [r0, #-6]
    33d0:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    33d4:	15022a03 	strne	r2, [r2, #-2563]	; 0xfffff5fd
    33d8:	00000059 	andeq	r0, r0, r9, asr r0
    33dc:	84040706 	strhi	r0, [r4], #-1798	; 0xfffff8fa
    33e0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    33e4:	000013ab 	andeq	r1, r0, fp, lsr #7
    33e8:	4d0cf204 	sfmmi	f7, 1, [ip, #-16]
    33ec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    33f0:	000013b6 			; <UNDEFINED> instruction: 0x000013b6
    33f4:	4d0cf304 	stcmi	3, cr15, [ip, #-16]
    33f8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    33fc:	000013f3 	strdeq	r1, [r0], -r3
    3400:	650b1d05 	strvs	r1, [fp, #-3333]	; 0xfffff2fb
    3404:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3408:	0000008b 	andeq	r0, r0, fp, lsl #1
    340c:	05051701 	streq	r1, [r5, #-1793]	; 0xfffff8ff
    3410:	000aea03 	andeq	lr, sl, r3, lsl #20
    3414:	00970920 	addseq	r0, r7, r0, lsr #18
    3418:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    341c:	ec030505 	cfstr32	mvfx0, [r3], {5}
    3420:	0a20000a 	beq	803450 <__Stack_Size+0x803050>
    3424:	00000085 	andeq	r0, r0, r5, lsl #1
    3428:	000000db 	ldrdeq	r0, [r0], -fp
    342c:	0000db0b 	andeq	sp, r0, fp, lsl #22
    3430:	02000600 	andeq	r0, r0, #0, 12
    3434:	03350704 	teqeq	r5, #4, 14	; 0x100000
    3438:	96080000 	strls	r0, [r8], -r0
    343c:	01000000 	mrseq	r0, (UNDEF: 0)
    3440:	00cb0f1b 	sbceq	r0, fp, fp, lsl pc
    3444:	0b080000 	bleq	20344c <__Stack_Size+0x20304c>
    3448:	01000008 	tsteq	r0, r8
    344c:	00cb0f1c 	sbceq	r0, fp, ip, lsl pc
    3450:	950c0000 	strls	r0, [ip, #-0]
    3454:	01000013 	tsteq	r0, r3, lsl r0
    3458:	0000069e 	muleq	r0, lr, r6
    345c:	00800000 	addeq	r0, r0, r0
    3460:	9c010000 	stcls	0, cr0, [r1], {-0}
    3464:	00000125 	andeq	r0, r0, r5, lsr #2
    3468:	0013c10d 	andseq	ip, r3, sp, lsl #2
    346c:	07a00100 	streq	r0, [r0, r0, lsl #2]!
    3470:	0000003a 	andeq	r0, r0, sl, lsr r0
    3474:	000017b6 			; <UNDEFINED> instruction: 0x000017b6
    3478:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    347c:	03420c00 	movteq	r0, #11264	; 0x2c00
    3480:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    3484:	000eac06 	andeq	sl, lr, r6, lsl #24
    3488:	00019408 	andeq	r9, r1, r8, lsl #8
    348c:	739c0100 	orrsvc	r0, ip, #0, 2
    3490:	0d000002 	stceq	0, cr0, [r0, #-8]
    3494:	000013c1 	andeq	r1, r0, r1, asr #7
    3498:	3a072b01 	bcc	1ce0a4 <__Stack_Size+0x1cdca4>
    349c:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    34a0:	ec000017 	stc	0, cr0, [r0], {23}
    34a4:	0e000017 	mcreq	0, 0, r0, cr0, cr7, {0}
    34a8:	08000ef2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, sl, fp}
    34ac:	00000012 	andeq	r0, r0, r2, lsl r0
    34b0:	00000171 	andeq	r0, r0, r1, ror r1
    34b4:	0004840d 	andeq	r8, r4, sp, lsl #8
    34b8:	073c0100 	ldreq	r0, [ip, -r0, lsl #2]!
    34bc:	0000004d 	andeq	r0, r0, sp, asr #32
    34c0:	00001856 	andeq	r1, r0, r6, asr r8
    34c4:	0000184e 	andeq	r1, r0, lr, asr #16
    34c8:	0f040e00 	svceq	0x00040e00
    34cc:	00160800 	andseq	r0, r6, r0, lsl #16
    34d0:	01930000 	orrseq	r0, r3, r0
    34d4:	840d0000 	strhi	r0, [sp], #-0
    34d8:	01000004 	tsteq	r0, r4
    34dc:	004d073d 	subeq	r0, sp, sp, lsr r7
    34e0:	18b20000 	ldmne	r2!, {}	; <UNPREDICTABLE>
    34e4:	18a60000 	stmiane	r6!, {}	; <UNPREDICTABLE>
    34e8:	0f000000 	svceq	0x00000000
    34ec:	000001a5 	andeq	r0, r0, r5, lsr #3
    34f0:	00048410 	andeq	r8, r4, r0, lsl r4
    34f4:	0b4e0100 	bleq	13838fc <__Stack_Size+0x13834fc>
    34f8:	0000004d 	andeq	r0, r0, sp, asr #32
    34fc:	01b70f00 			; <UNDEFINED> instruction: 0x01b70f00
    3500:	84100000 	ldrhi	r0, [r0], #-0
    3504:	01000004 	tsteq	r0, r4
    3508:	004d0b4f 	subeq	r0, sp, pc, asr #22
    350c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    3510:	08000f3a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, fp}
    3514:	00000000 	andeq	r0, r0, r0
    3518:	000001d3 	ldrdeq	r0, [r0], -r3
    351c:	00048411 	andeq	r8, r4, r1, lsl r4
    3520:	0b5f0100 	bleq	17c3928 <__Stack_Size+0x17c3528>
    3524:	0000004d 	andeq	r0, r0, sp, asr #32
    3528:	0f005301 	svceq	0x00005301
    352c:	000001e5 	andeq	r0, r0, r5, ror #3
    3530:	00048410 	andeq	r8, r4, r0, lsl r4
    3534:	0b600100 	bleq	180393c <__Stack_Size+0x180353c>
    3538:	0000004d 	andeq	r0, r0, sp, asr #32
    353c:	0fa60e00 	svceq	0x00a60e00
    3540:	00020800 	andeq	r0, r2, r0, lsl #16
    3544:	02010000 	andeq	r0, r1, #0
    3548:	84110000 	ldrhi	r0, [r1], #-0
    354c:	01000004 	tsteq	r0, r4
    3550:	004d0b68 	subeq	r0, sp, r8, ror #22
    3554:	53010000 	movwpl	r0, #4096	; 0x1000
    3558:	02130f00 	andseq	r0, r3, #0, 30
    355c:	84100000 	ldrhi	r0, [r0], #-0
    3560:	01000004 	tsteq	r0, r4
    3564:	004d0b69 	subeq	r0, sp, r9, ror #22
    3568:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    356c:	08000f3a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, fp}
    3570:	00000020 	andeq	r0, r0, r0, lsr #32
    3574:	00000235 	andeq	r0, r0, r5, lsr r2
    3578:	0004840d 	andeq	r8, r4, sp, lsl #8
    357c:	0b720100 	bleq	1c83984 <__Stack_Size+0x1c83584>
    3580:	0000004d 	andeq	r0, r0, sp, asr #32
    3584:	0000192f 	andeq	r1, r0, pc, lsr #18
    3588:	00001927 	andeq	r1, r0, r7, lsr #18
    358c:	0f5a0e00 	svceq	0x005a0e00
    3590:	00260800 	eoreq	r0, r6, r0, lsl #16
    3594:	02570000 	subseq	r0, r7, #0
    3598:	840d0000 	strhi	r0, [sp], #-0
    359c:	01000004 	tsteq	r0, r4
    35a0:	004d0b73 	subeq	r0, sp, r3, ror fp
    35a4:	19730000 	ldmdbne	r3!, {}^	; <UNPREDICTABLE>
    35a8:	19710000 	ldmdbne	r1!, {}^	; <UNPREDICTABLE>
    35ac:	12000000 	andne	r0, r0, #0
    35b0:	08000f3a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, fp}
    35b4:	00000273 	andeq	r0, r0, r3, ror r2
    35b8:	000fa612 	andeq	sl, pc, r2, lsl r6	; <UNPREDICTABLE>
    35bc:	00027f08 	andeq	r7, r2, r8, lsl #30
    35c0:	0fc01200 	svceq	0x00c01200
    35c4:	028b0800 	addeq	r0, fp, #0, 16
    35c8:	13000000 	movwne	r0, #0
    35cc:	000013da 	ldrdeq	r1, [r0], -sl
    35d0:	000013da 	ldrdeq	r1, [r0], -sl
    35d4:	1304dc04 	movwne	sp, #19460	; 0x4c04
    35d8:	0000139c 	muleq	r0, ip, r3
    35dc:	0000139c 	muleq	r0, ip, r3
    35e0:	1304d904 	movwne	sp, #18692	; 0x4904
    35e4:	000013e6 	andeq	r1, r0, r6, ror #7
    35e8:	000013e6 	andeq	r1, r0, r6, ror #7
    35ec:	0004db04 	andeq	sp, r4, r4, lsl #22
    35f0:	00000478 	andeq	r0, r0, r8, ror r4
    35f4:	10120004 	andsne	r0, r2, r4
    35f8:	01040000 	mrseq	r0, (UNDEF: 4)
    35fc:	00000377 	andeq	r0, r0, r7, ror r3
    3600:	0014050c 	andseq	r0, r4, ip, lsl #10
    3604:	00001b00 	andeq	r1, r0, r0, lsl #22
    3608:	00054000 	andeq	r4, r5, r0
    360c:	00000000 	andeq	r0, r0, r0
    3610:	0022be00 	eoreq	fp, r2, r0, lsl #28
    3614:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    3618:	000001a5 	andeq	r0, r0, r5, lsr #3
    361c:	c2050202 	andgt	r0, r5, #536870912	; 0x20000000
    3620:	02000006 	andeq	r0, r0, #6
    3624:	066e0601 	strbteq	r0, [lr], -r1, lsl #12
    3628:	04020000 	streq	r0, [r2], #-0
    362c:	00033007 	andeq	r3, r3, r7
    3630:	31750300 	cmncc	r5, r0, lsl #6
    3634:	25020036 	strcs	r0, [r2, #-54]	; 0xffffffca
    3638:	00004d1d 	andeq	r4, r0, sp, lsl sp
    363c:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3640:	0000040e 	andeq	r0, r0, lr, lsl #8
    3644:	00387503 	eorseq	r7, r8, r3, lsl #10
    3648:	5f1d2602 	svcpl	0x001d2602
    364c:	02000000 	andeq	r0, r0, #0
    3650:	066c0801 	strbteq	r0, [ip], -r1, lsl #16
    3654:	04040000 	streq	r0, [r4], #-0
    3658:	00000054 	andeq	r0, r0, r4, asr r0
    365c:	00075f05 	andeq	r5, r7, r5, lsl #30
    3660:	5f010700 	svcpl	0x00010700
    3664:	03000000 	movweq	r0, #0
    3668:	00970e2d 	addseq	r0, r7, sp, lsr #28
    366c:	01060000 	mrseq	r0, (UNDEF: 6)
    3670:	00000009 	andeq	r0, r0, r9
    3674:	00042106 	andeq	r2, r4, r6, lsl #2
    3678:	9e060100 	adflss	f0, f6, f0
    367c:	02000007 	andeq	r0, r0, #7
    3680:	0001d106 	andeq	sp, r1, r6, lsl #2
    3684:	07000300 	streq	r0, [r0, -r0, lsl #6]
    3688:	00000760 	andeq	r0, r0, r0, ror #14
    368c:	6c033403 	cfstrsvs	mvf3, [r3], {3}
    3690:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3694:	00000926 	andeq	r0, r0, r6, lsr #18
    3698:	1038030c 	eorsne	r0, r8, ip, lsl #6
    369c:	000000e5 	andeq	r0, r0, r5, ror #1
    36a0:	00024709 	andeq	r4, r2, r9, lsl #14
    36a4:	08500300 	ldmdaeq	r0, {r8, r9}^
    36a8:	00000041 	andeq	r0, r0, r1, asr #32
    36ac:	02ce0900 	sbceq	r0, lr, #0, 18
    36b0:	51030000 	mrspl	r0, (UNDEF: 3)
    36b4:	00004108 	andeq	r4, r0, r8, lsl #2
    36b8:	d1090200 	mrsle	r0, R9_fiq
    36bc:	03000015 	movweq	r0, #21
    36c0:	00410852 	subeq	r0, r1, r2, asr r8
    36c4:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    36c8:	0000019c 	muleq	r0, ip, r1
    36cc:	f40b5303 	vst2.8	{d5-d8}, [fp], r3
    36d0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    36d4:	00660a00 	rsbeq	r0, r6, r0, lsl #20
    36d8:	00f40000 	rscseq	r0, r4, r0
    36dc:	410b0000 	mrsmi	r0, (UNDEF: 11)
    36e0:	00000000 	andeq	r0, r0, r0
    36e4:	00e50404 	rsceq	r0, r5, r4, lsl #8
    36e8:	27070000 	strcs	r0, [r7, -r0]
    36ec:	03000009 	movweq	r0, #9
    36f0:	00a30254 	adceq	r0, r3, r4, asr r2
    36f4:	420c0000 	andmi	r0, ip, #0
    36f8:	03020057 	movweq	r0, #8279	; 0x2057
    36fc:	012d0a62 			; <UNDEFINED> instruction: 0x012d0a62
    3700:	620d0000 	andvs	r0, sp, #0
    3704:	03003062 	movweq	r3, #98	; 0x62
    3708:	00540865 	subseq	r0, r4, r5, ror #16
    370c:	0d000000 	stceq	0, cr0, [r0, #-0]
    3710:	00316262 	eorseq	r6, r1, r2, ror #4
    3714:	54086603 	strpl	r6, [r8], #-1539	; 0xfffff9fd
    3718:	01000000 	mrseq	r0, (UNDEF: 0)
    371c:	03020e00 	movweq	r0, #11776	; 0x2e00
    3720:	014c095f 	cmpeq	ip, pc, asr r9
    3724:	770f0000 	strvc	r0, [pc, -r0]
    3728:	07610300 	strbeq	r0, [r1, -r0, lsl #6]!
    372c:	00000041 	andeq	r0, r0, r1, asr #32
    3730:	0077620f 	rsbseq	r6, r7, pc, lsl #4
    3734:	06036803 	streq	r6, [r3], -r3, lsl #16
    3738:	00000001 	andeq	r0, r0, r1
    373c:	00043607 	andeq	r3, r4, r7, lsl #12
    3740:	03690300 	cmneq	r9, #0, 6
    3744:	0000012d 	andeq	r0, r0, sp, lsr #2
    3748:	0000a008 	andeq	sl, r0, r8
    374c:	6b031c00 	blvs	ca754 <__Stack_Size+0xca354>
    3750:	0001f510 	andeq	pc, r1, r0, lsl r5	; <UNPREDICTABLE>
    3754:	057a0900 	ldrbeq	r0, [sl, #-2304]!	; 0xfffff700
    3758:	6d030000 	stcvs	0, cr0, [r3, #-0]
    375c:	00005406 	andeq	r5, r0, r6, lsl #8
    3760:	c5090000 	strgt	r0, [r9, #-0]
    3764:	03000001 	movweq	r0, #1
    3768:	0054066e 	subseq	r0, r4, lr, ror #12
    376c:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    3770:	0000044f 	andeq	r0, r0, pc, asr #8
    3774:	4c0a6f03 	stcmi	15, cr6, [sl], {3}
    3778:	02000001 	andeq	r0, r0, #1
    377c:	00019109 	andeq	r9, r1, r9, lsl #2
    3780:	0a700300 	beq	1c04388 <__Stack_Size+0x1c03f88>
    3784:	0000014c 	andeq	r0, r0, ip, asr #2
    3788:	08390904 	ldmdaeq	r9!, {r2, r8, fp}
    378c:	71030000 	mrsvc	r0, (UNDEF: 3)
    3790:	00014c0a 	andeq	r4, r1, sl, lsl #24
    3794:	54090600 	strpl	r0, [r9], #-1536	; 0xfffffa00
    3798:	03000009 	movweq	r0, #9
    379c:	00540673 	subseq	r0, r4, r3, ror r6
    37a0:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    37a4:	00000353 	andeq	r0, r0, r3, asr r3
    37a8:	54067403 	strpl	r7, [r6], #-1027	; 0xfffffbfd
    37ac:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    37b0:	0004a809 	andeq	sl, r4, r9, lsl #16
    37b4:	06750300 	ldrbteq	r0, [r5], -r0, lsl #6
    37b8:	00000054 	andeq	r0, r0, r4, asr r0
    37bc:	088e090a 	stmeq	lr, {r1, r3, r8, fp}
    37c0:	76030000 	strvc	r0, [r3], -r0
    37c4:	00005406 	andeq	r5, r0, r6, lsl #8
    37c8:	46090b00 	strmi	r0, [r9], -r0, lsl #22
    37cc:	03000006 	movweq	r0, #6
    37d0:	00540677 	subseq	r0, r4, r7, ror r6
    37d4:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    37d8:	0000073d 	andeq	r0, r0, sp, lsr r7
    37dc:	fa117a03 	blx	461ff0 <__Stack_Size+0x461bf0>
    37e0:	10000000 	andne	r0, r0, r0
    37e4:	00a10700 	adceq	r0, r1, r0, lsl #14
    37e8:	7b030000 	blvc	c37f0 <__Stack_Size+0xc33f0>
    37ec:	00015802 	andeq	r5, r1, r2, lsl #16
    37f0:	076c0800 	strbeq	r0, [ip, -r0, lsl #16]!
    37f4:	03340000 	teqeq	r4, #0
    37f8:	02b8107d 	adcseq	r1, r8, #125	; 0x7d
    37fc:	67090000 	strvs	r0, [r9, -r0]
    3800:	03000005 	movweq	r0, #5
    3804:	02b90a7f 	adcseq	r0, r9, #520192	; 0x7f000
    3808:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    380c:	000003fe 	strdeq	r0, [r0], -lr
    3810:	b90a8003 	stmdblt	sl, {r0, r1, pc}
    3814:	04000002 	streq	r0, [r0], #-2
    3818:	0007c409 	andeq	ip, r7, r9, lsl #8
    381c:	0a830300 	beq	fe0c4424 <BootRAM+0xd034bc5>
    3820:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
    3824:	07d60908 	ldrbeq	r0, [r6, r8, lsl #18]
    3828:	84030000 	strhi	r0, [r3], #-0
    382c:	0002b90a 	andeq	fp, r2, sl, lsl #18
    3830:	48090c00 	stmdami	r9, {sl, fp}
    3834:	03000005 	movweq	r0, #5
    3838:	02ce0c96 	sbceq	r0, lr, #38400	; 0x9600
    383c:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
    3840:	00000721 	andeq	r0, r0, r1, lsr #14
    3844:	ce0ca103 	mvfgte	f2, f3
    3848:	14000002 	strne	r0, [r0], #-2
    384c:	0004f909 	andeq	pc, r4, r9, lsl #18
    3850:	0dab0300 	stceq	3, cr0, [fp]
    3854:	000002e8 	andeq	r0, r0, r8, ror #5
    3858:	017d0918 	cmneq	sp, r8, lsl r9
    385c:	ad030000 	stcge	0, cr0, [r3, #-0]
    3860:	0000f409 	andeq	pc, r0, r9, lsl #8
    3864:	b1091c00 	tstlt	r9, r0, lsl #24
    3868:	03000001 	movweq	r0, #1
    386c:	00f409ae 	rscseq	r0, r4, lr, lsr #19
    3870:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    3874:	00000848 	andeq	r0, r0, r8, asr #16
    3878:	f409af03 			; <UNDEFINED> instruction: 0xf409af03
    387c:	24000000 	strcs	r0, [r0], #-0
    3880:	00062e09 	andeq	r2, r6, r9, lsl #28
    3884:	09b00300 	ldmibeq	r0!, {r8, r9}
    3888:	000000f4 	strdeq	r0, [r0], -r4
    388c:	05a50928 	streq	r0, [r5, #2344]!	; 0x928
    3890:	b2030000 	andlt	r0, r3, #0
    3894:	00006607 	andeq	r6, r0, r7, lsl #12
    3898:	ce092c00 	cdpgt	12, 0, cr2, cr9, cr0, {0}
    389c:	03000015 	movweq	r0, #21
    38a0:	005406b3 	ldrheq	r0, [r4], #-99	; 0xffffff9d
    38a4:	00300000 	eorseq	r0, r0, r0
    38a8:	b8040410 	stmdalt	r4, {r4, sl}
    38ac:	0a000002 	beq	38bc <__Stack_Size+0x34bc>
    38b0:	00000097 	muleq	r0, r7, r0
    38b4:	000002ce 	andeq	r0, r0, lr, asr #5
    38b8:	0000540b 	andeq	r5, r0, fp, lsl #8
    38bc:	04040000 	streq	r0, [r4], #-0
    38c0:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
    38c4:	0000970a 	andeq	r9, r0, sl, lsl #14
    38c8:	0002e800 	andeq	lr, r2, r0, lsl #16
    38cc:	00540b00 	subseq	r0, r4, r0, lsl #22
    38d0:	540b0000 	strpl	r0, [fp], #-0
    38d4:	00000000 	andeq	r0, r0, r0
    38d8:	02d40404 	sbcseq	r0, r4, #4, 8	; 0x4000000
    38dc:	6d070000 	stcvs	0, cr0, [r7, #-0]
    38e0:	03000007 	movweq	r0, #7
    38e4:	020102b5 	andeq	r0, r1, #1342177291	; 0x5000000b
    38e8:	7a080000 	bvc	2038f0 <__Stack_Size+0x2034f0>
    38ec:	24000006 	strcs	r0, [r0], #-6
    38f0:	7d10b703 	ldcvc	7, cr11, [r0, #-12]
    38f4:	09000003 	stmdbeq	r0, {r0, r1}
    38f8:	000006e7 	andeq	r0, r0, r7, ror #13
    38fc:	b90ab903 	stmdblt	sl, {r0, r1, r8, fp, ip, sp, pc}
    3900:	00000002 	andeq	r0, r0, r2
    3904:	0005e309 	andeq	lr, r5, r9, lsl #6
    3908:	0aba0300 	beq	fee84510 <BootRAM+0xddf4cb1>
    390c:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
    3910:	05ff0904 	ldrbeq	r0, [pc, #2308]!	; 421c <__Stack_Size+0x3e1c>
    3914:	bb030000 	bllt	c391c <__Stack_Size+0xc351c>
    3918:	0002b90a 	andeq	fp, r2, sl, lsl #18
    391c:	49090800 	stmdbmi	r9, {fp}
    3920:	03000001 	movweq	r0, #1
    3924:	02b90abc 	adcseq	r0, r9, #188, 20	; 0xbc000
    3928:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    392c:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
    3930:	b90abd03 	stmdblt	sl, {r0, r1, r8, sl, fp, ip, sp, pc}
    3934:	10000002 	andne	r0, r0, r2
    3938:	00043d09 	andeq	r3, r4, r9, lsl #26
    393c:	0abe0300 	beq	fef84544 <BootRAM+0xdef4ce5>
    3940:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
    3944:	00c60914 	sbceq	r0, r6, r4, lsl r9
    3948:	bf030000 	svclt	0x00030000
    394c:	0002b90a 	andeq	fp, r2, sl, lsl #18
    3950:	cd091800 	stcgt	8, cr1, [r9, #-0]
    3954:	03000005 	movweq	r0, #5
    3958:	02b90ac0 	adcseq	r0, r9, #192, 20	; 0xc0000
    395c:	091c0000 	ldmdbeq	ip, {}	; <UNPREDICTABLE>
    3960:	00000080 	andeq	r0, r0, r0, lsl #1
    3964:	b90ac103 	stmdblt	sl, {r0, r1, r8, lr, pc}
    3968:	20000002 	andcs	r0, r0, r2
    396c:	067b0700 	ldrbteq	r0, [fp], -r0, lsl #14
    3970:	c3030000 	movwgt	r0, #12288	; 0x3000
    3974:	0002fa01 	andeq	pc, r2, r1, lsl #20
    3978:	06111100 	ldreq	r1, [r1], -r0, lsl #2
    397c:	ec030000 	stc	0, cr0, [r3], {-0}
    3980:	0002ee14 	andeq	lr, r2, r4, lsl lr
    3984:	14191100 	ldrne	r1, [r9], #-256	; 0xffffff00
    3988:	ed030000 	stc	0, cr0, [r3, #-0]
    398c:	00037d20 	andeq	r7, r3, r0, lsr #26
    3990:	14301100 	ldrtne	r1, [r0], #-256	; 0xffffff00
    3994:	ef030000 	svc	0x00030000
    3998:	0001f514 	andeq	pc, r1, r4, lsl r5	; <UNPREDICTABLE>
    399c:	13f31100 	mvnsne	r1, #0, 2
    39a0:	1d040000 	stcne	0, cr0, [r4, #-0]
    39a4:	0000540b 	andeq	r5, r0, fp, lsl #8
    39a8:	02331100 	eorseq	r1, r3, #0, 2
    39ac:	22040000 	andcs	r0, r4, #0
    39b0:	0003c515 	andeq	ip, r3, r5, lsl r5
    39b4:	f5040400 			; <UNDEFINED> instruction: 0xf5040400
    39b8:	11000001 	tstne	r0, r1
    39bc:	00000559 	andeq	r0, r0, r9, asr r5
    39c0:	d7152504 	ldrle	r2, [r5, -r4, lsl #10]
    39c4:	04000003 	streq	r0, [r0], #-3
    39c8:	0002ee04 	andeq	lr, r2, r4, lsl #28
    39cc:	14181100 	ldrne	r1, [r8], #-256	; 0xffffff00
    39d0:	2a040000 	bcs	1039d8 <__Stack_Size+0x1035d8>
    39d4:	0003e920 	andeq	lr, r3, r0, lsr #18
    39d8:	7d040400 	cfstrsvc	mvf0, [r4, #-0]
    39dc:	11000003 	tstne	r0, r3
    39e0:	000013fb 	strdeq	r1, [r0], -fp
    39e4:	410c2c04 	tstmi	ip, r4, lsl #24
    39e8:	11000000 	mrsne	r0, (UNDEF: 0)
    39ec:	000004d3 	ldrdeq	r0, [r0], -r3
    39f0:	410c2d04 	tstmi	ip, r4, lsl #26
    39f4:	12000000 	andne	r0, r0, #0
    39f8:	000003ad 	andeq	r0, r0, sp, lsr #7
    39fc:	05051801 	streq	r1, [r5, #-2049]	; 0xfffff7ff
    3a00:	000b0c03 	andeq	r0, fp, r3, lsl #24
    3a04:	03b91220 			; <UNDEFINED> instruction: 0x03b91220
    3a08:	1d010000 	stcne	0, cr0, [r1, #-0]
    3a0c:	1003050e 	andne	r0, r3, lr, lsl #10
    3a10:	1220000b 	eorne	r0, r0, #11
    3a14:	000003cb 	andeq	r0, r0, fp, asr #7
    3a18:	050e2001 	streq	r2, [lr, #-1]
    3a1c:	000b1403 	andeq	r1, fp, r3, lsl #8
    3a20:	03ef1220 	mvneq	r1, #32, 4
    3a24:	25010000 	strcs	r0, [r1, #-0]
    3a28:	00030505 	andeq	r0, r3, r5, lsl #10
    3a2c:	12000000 	andne	r0, r0, #0
    3a30:	000003fb 	strdeq	r0, [r0], -fp
    3a34:	05062601 	streq	r2, [r6, #-1537]	; 0xfffff9ff
    3a38:	000b1c03 	andeq	r1, fp, r3, lsl #24
    3a3c:	03a11220 			; <UNDEFINED> instruction: 0x03a11220
    3a40:	27010000 	strcs	r0, [r1, -r0]
    3a44:	f003050d 			; <UNDEFINED> instruction: 0xf003050d
    3a48:	1220000a 	eorne	r0, r0, #10
    3a4c:	000003dd 	ldrdeq	r0, [r0], -sp
    3a50:	051a2801 	ldreq	r2, [sl, #-2049]	; 0xfffff7ff
    3a54:	000b1803 	andeq	r1, fp, r3, lsl #16
    3a58:	05631320 	strbeq	r1, [r3, #-800]!	; 0xfffffce0
    3a5c:	35010000 	strcc	r0, [r1, #-0]
    3a60:	00104006 	andseq	r4, r0, r6
    3a64:	00003408 	andeq	r3, r0, r8, lsl #8
    3a68:	009c0100 	addseq	r0, ip, r0, lsl #2
    3a6c:	00000f19 	andeq	r0, r0, r9, lsl pc
    3a70:	112a0004 			; <UNDEFINED> instruction: 0x112a0004
    3a74:	01040000 	mrseq	r0, (UNDEF: 4)
    3a78:	00000377 	andeq	r0, r0, r7, ror r3
    3a7c:	00144a0c 	andseq	r4, r4, ip, lsl #20
    3a80:	00001b00 	andeq	r1, r0, r0, lsl #22
    3a84:	00064800 	andeq	r4, r6, r0, lsl #16
    3a88:	00000000 	andeq	r0, r0, r0
    3a8c:	00235b00 	eoreq	r5, r3, r0, lsl #22
    3a90:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    3a94:	000001a5 	andeq	r0, r0, r5, lsr #3
    3a98:	c2050202 	andgt	r0, r5, #536870912	; 0x20000000
    3a9c:	02000006 	andeq	r0, r0, #6
    3aa0:	066e0601 	strbteq	r0, [lr], -r1, lsl #12
    3aa4:	75030000 	strvc	r0, [r3, #-0]
    3aa8:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
    3aac:	00461d24 	subeq	r1, r6, r4, lsr #26
    3ab0:	04020000 	streq	r0, [r2], #-0
    3ab4:	00033007 	andeq	r3, r3, r7
    3ab8:	00460400 	subeq	r0, r6, r0, lsl #8
    3abc:	75030000 	strvc	r0, [r3, #-0]
    3ac0:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    3ac4:	005e1d25 	subseq	r1, lr, r5, lsr #26
    3ac8:	02020000 	andeq	r0, r2, #0
    3acc:	00040e07 	andeq	r0, r4, r7, lsl #28
    3ad0:	38750300 	ldmdacc	r5!, {r8, r9}^
    3ad4:	1d260200 	sfmne	f0, 4, [r6, #-0]
    3ad8:	00000070 	andeq	r0, r0, r0, ror r0
    3adc:	6c080102 	stfvss	f0, [r8], {2}
    3ae0:	05000006 	streq	r0, [r0, #-6]
    3ae4:	0000046f 	andeq	r0, r0, pc, ror #8
    3ae8:	4d252c02 	stcmi	12, cr2, [r5, #-8]!
    3aec:	06000000 	streq	r0, [r0], -r0
    3af0:	00700107 	rsbseq	r0, r0, r7, lsl #2
    3af4:	36020000 	strcc	r0, [r2], -r0
    3af8:	00009e01 	andeq	r9, r0, r1, lsl #28
    3afc:	05f90700 	ldrbeq	r0, [r9, #1792]!	; 0x700
    3b00:	07000000 	streq	r0, [r0, -r0]
    3b04:	00000767 	andeq	r0, r0, r7, ror #14
    3b08:	6a050001 	bvs	143b14 <__Stack_Size+0x143714>
    3b0c:	02000004 	andeq	r0, r0, #4
    3b10:	00830139 	addeq	r0, r3, r9, lsr r1
    3b14:	20080000 	andcs	r0, r8, r0
    3b18:	07000003 	streq	r0, [r0, -r3]
    3b1c:	00007001 	andeq	r7, r0, r1
    3b20:	0e160300 	cdpeq	3, 1, cr0, cr6, cr0, {0}
    3b24:	000000d5 	ldrdeq	r0, [r0], -r5
    3b28:	00015b07 	andeq	r5, r1, r7, lsl #22
    3b2c:	61070000 	mrsvs	r0, (UNDEF: 7)
    3b30:	01000002 	tsteq	r0, r2
    3b34:	00081e07 	andeq	r1, r8, r7, lsl #28
    3b38:	5a070200 	bpl	1c4340 <__Stack_Size+0x1c3f40>
    3b3c:	03000004 	movweq	r0, #4
    3b40:	067f0800 	ldrbteq	r0, [pc], -r0, lsl #16
    3b44:	01070000 	mrseq	r0, (UNDEF: 7)
    3b48:	00000070 	andeq	r0, r0, r0, ror r0
    3b4c:	3c0e1f03 	stccc	15, cr1, [lr], {3}
    3b50:	07000001 	streq	r0, [r0, -r1]
    3b54:	000015ae 	andeq	r1, r0, lr, lsr #11
    3b58:	17d50700 	ldrbne	r0, [r5, r0, lsl #14]
    3b5c:	07010000 	streq	r0, [r1, -r0]
    3b60:	00000d17 	andeq	r0, r0, r7, lsl sp
    3b64:	15b90702 	ldrne	r0, [r9, #1794]!	; 0x702
    3b68:	07030000 	streq	r0, [r3, -r0]
    3b6c:	00000cbb 			; <UNDEFINED> instruction: 0x00000cbb
    3b70:	176c0704 	strbne	r0, [ip, -r4, lsl #14]!
    3b74:	07050000 	streq	r0, [r5, -r0]
    3b78:	000017a1 	andeq	r1, r0, r1, lsr #15
    3b7c:	16230706 	strtne	r0, [r3], -r6, lsl #14
    3b80:	07070000 	streq	r0, [r7, -r0]
    3b84:	00001682 	andeq	r1, r0, r2, lsl #13
    3b88:	16d30708 	ldrbne	r0, [r3], r8, lsl #14
    3b8c:	07090000 	streq	r0, [r9, -r0]
    3b90:	00001584 	andeq	r1, r0, r4, lsl #11
    3b94:	1632070a 	ldrtne	r0, [r2], -sl, lsl #14
    3b98:	070b0000 	streq	r0, [fp, -r0]
    3b9c:	000016f5 	strdeq	r1, [r0], -r5
    3ba0:	1601070c 	strne	r0, [r1], -ip, lsl #14
    3ba4:	000c0000 	andeq	r0, ip, r0
    3ba8:	0016a308 	andseq	sl, r6, r8, lsl #6
    3bac:	70010700 	andvc	r0, r1, r0, lsl #14
    3bb0:	03000000 	movweq	r0, #0
    3bb4:	016d0e32 	cmneq	sp, r2, lsr lr
    3bb8:	fa070000 	blx	1c3bc0 <__Stack_Size+0x1c37c0>
    3bbc:	01000014 	tsteq	r0, r4, lsl r0
    3bc0:	00174d07 	andseq	r4, r7, r7, lsl #26
    3bc4:	0c070200 	sfmeq	f0, 4, [r7], {-0}
    3bc8:	03000015 	movweq	r0, #21
    3bcc:	00170407 	andseq	r0, r7, r7, lsl #8
    3bd0:	39070400 	stmdbcc	r7, {sl}
    3bd4:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    3bd8:	16400800 	strbne	r0, [r0], -r0, lsl #16
    3bdc:	01070000 	mrseq	r0, (UNDEF: 7)
    3be0:	00000070 	andeq	r0, r0, r0, ror r0
    3be4:	8c0e3c03 	stchi	12, cr3, [lr], {3}
    3be8:	07000001 	streq	r0, [r0, -r1]
    3bec:	0000145d 	andeq	r1, r0, sp, asr r4
    3bf0:	14b90700 	ldrtne	r0, [r9], #1792	; 0x700
    3bf4:	00010000 	andeq	r0, r1, r0
    3bf8:	00169408 	andseq	r9, r6, r8, lsl #8
    3bfc:	70010700 	andvc	r0, r1, r0, lsl #14
    3c00:	04000000 	streq	r0, [r0], #-0
    3c04:	01db0e16 	bicseq	r0, fp, r6, lsl lr
    3c08:	b0070000 	andlt	r0, r7, r0
    3c0c:	00000017 	andeq	r0, r0, r7, lsl r0
    3c10:	0016b407 	andseq	fp, r6, r7, lsl #8
    3c14:	44070100 	strmi	r0, [r7], #-256	; 0xffffff00
    3c18:	02000015 	andeq	r0, r0, #21
    3c1c:	0017e807 	andseq	lr, r7, r7, lsl #16
    3c20:	3f070300 	svccc	0x00070300
    3c24:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    3c28:	0017e307 	andseq	lr, r7, r7, lsl #6
    3c2c:	c6070500 	strgt	r0, [r7], -r0, lsl #10
    3c30:	06000017 			; <UNDEFINED> instruction: 0x06000017
    3c34:	0016e507 	andseq	lr, r6, r7, lsl #10
    3c38:	ce070700 	cdpgt	7, 0, cr0, cr7, cr0, {0}
    3c3c:	08000014 	stmdaeq	r0, {r2, r4}
    3c40:	00157407 	andseq	r7, r5, r7, lsl #8
    3c44:	09000900 	stmdbeq	r0, {r8, fp}
    3c48:	000000f2 	strdeq	r0, [r0], -r2
    3c4c:	10240408 	eorne	r0, r4, r8, lsl #8
    3c50:	00000203 	andeq	r0, r0, r3, lsl #4
    3c54:	0001860a 	andeq	r8, r1, sl, lsl #12
    3c58:	07260400 	streq	r0, [r6, -r0, lsl #8]!
    3c5c:	00000203 	andeq	r0, r0, r3, lsl #4
    3c60:	05bd0a00 	ldreq	r0, [sp, #2560]!	; 0xa00
    3c64:	27040000 	strcs	r0, [r4, -r0]
    3c68:	00005207 	andeq	r5, r0, r7, lsl #4
    3c6c:	0b000400 	bleq	4c74 <__Stack_Size+0x4874>
    3c70:	00006504 	andeq	r6, r0, r4, lsl #10
    3c74:	08b00500 	ldmeq	r0!, {r8, sl}
    3c78:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
    3c7c:	0001db01 	andeq	sp, r1, r1, lsl #22
    3c80:	075f0800 	ldrbeq	r0, [pc, -r0, lsl #16]
    3c84:	01070000 	mrseq	r0, (UNDEF: 7)
    3c88:	00000070 	andeq	r0, r0, r0, ror r0
    3c8c:	400e2d04 	andmi	r2, lr, r4, lsl #26
    3c90:	07000002 	streq	r0, [r0, -r2]
    3c94:	00000901 	andeq	r0, r0, r1, lsl #18
    3c98:	04210700 	strteq	r0, [r1], #-1792	; 0xfffff900
    3c9c:	07010000 	streq	r0, [r1, -r0]
    3ca0:	0000079e 	muleq	r0, lr, r7
    3ca4:	01d10702 	bicseq	r0, r1, r2, lsl #14
    3ca8:	00030000 	andeq	r0, r3, r0
    3cac:	00076005 	andeq	r6, r7, r5
    3cb0:	03340400 	teqeq	r4, #0, 8
    3cb4:	00000215 	andeq	r0, r0, r5, lsl r2
    3cb8:	00092609 	andeq	r2, r9, r9, lsl #12
    3cbc:	38040c00 	stmdacc	r4, {sl, fp}
    3cc0:	00028e10 	andeq	r8, r2, r0, lsl lr
    3cc4:	02470a00 	subeq	r0, r7, #0, 20
    3cc8:	50040000 	andpl	r0, r4, r0
    3ccc:	00005208 	andeq	r5, r0, r8, lsl #4
    3cd0:	ce0a0000 	cdpgt	0, 0, cr0, cr10, cr0, {0}
    3cd4:	04000002 	streq	r0, [r0], #-2
    3cd8:	00520851 	subseq	r0, r2, r1, asr r8
    3cdc:	0a020000 	beq	83ce4 <__Stack_Size+0x838e4>
    3ce0:	000015d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    3ce4:	52085204 	andpl	r5, r8, #4, 4	; 0x40000000
    3ce8:	04000000 	streq	r0, [r0], #-0
    3cec:	00019c0a 	andeq	r9, r1, sl, lsl #24
    3cf0:	0b530400 	bleq	14c4cf8 <__Stack_Size+0x14c48f8>
    3cf4:	0000029d 	muleq	r0, sp, r2
    3cf8:	030c0008 	movweq	r0, #49160	; 0xc008
    3cfc:	9d000002 	stcls	0, cr0, [r0, #-8]
    3d00:	0d000002 	stceq	0, cr0, [r0, #-8]
    3d04:	00000052 	andeq	r0, r0, r2, asr r0
    3d08:	8e040b00 	vmlahi.f64	d0, d4, d0
    3d0c:	05000002 	streq	r0, [r0, #-2]
    3d10:	00000927 	andeq	r0, r0, r7, lsr #18
    3d14:	4c025404 	cfstrsmi	mvf5, [r2], {4}
    3d18:	09000002 	stmdbeq	r0, {r1}
    3d1c:	000007f7 	strdeq	r0, [r0], -r7
    3d20:	10580402 	subsne	r0, r8, r2, lsl #8
    3d24:	000002d7 	ldrdeq	r0, [r0], -r7
    3d28:	0009450a 	andeq	r4, r9, sl, lsl #10
    3d2c:	065a0400 	ldrbeq	r0, [sl], -r0, lsl #8
    3d30:	00000065 	andeq	r0, r0, r5, rrx
    3d34:	03630a00 	cmneq	r3, #0, 20
    3d38:	5b040000 	blpl	103d40 <__Stack_Size+0x103940>
    3d3c:	00006506 	andeq	r6, r0, r6, lsl #10
    3d40:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
    3d44:	000007f8 	strdeq	r0, [r0], -r8
    3d48:	af015d04 	svcge	0x00015d04
    3d4c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3d50:	02005742 	andeq	r5, r0, #17301504	; 0x1080000
    3d54:	0a0a6204 	beq	29c56c <__Stack_Size+0x29c16c>
    3d58:	0f000003 	svceq	0x00000003
    3d5c:	00306262 	eorseq	r6, r0, r2, ror #4
    3d60:	65086504 	strvs	r6, [r8, #-1284]	; 0xfffffafc
    3d64:	00000000 	andeq	r0, r0, r0
    3d68:	3162620f 	cmncc	r2, pc, lsl #4
    3d6c:	08660400 	stmdaeq	r6!, {sl}^
    3d70:	00000065 	andeq	r0, r0, r5, rrx
    3d74:	02100001 	andseq	r0, r0, #1
    3d78:	29095f04 	stmdbcs	r9, {r2, r8, r9, sl, fp, ip, lr}
    3d7c:	11000003 	tstne	r0, r3
    3d80:	61040077 	tstvs	r4, r7, ror r0
    3d84:	00005207 	andeq	r5, r0, r7, lsl #4
    3d88:	77621100 	strbvc	r1, [r2, -r0, lsl #2]!
    3d8c:	03680400 	cmneq	r8, #0, 8
    3d90:	000002e3 	andeq	r0, r0, r3, ror #5
    3d94:	04360500 	ldrteq	r0, [r6], #-1280	; 0xfffffb00
    3d98:	69040000 	stmdbvs	r4, {}	; <UNPREDICTABLE>
    3d9c:	00030a03 	andeq	r0, r3, r3, lsl #20
    3da0:	00a00900 	adceq	r0, r0, r0, lsl #18
    3da4:	041c0000 	ldreq	r0, [ip], #-0
    3da8:	03d2106b 	bicseq	r1, r2, #107	; 0x6b
    3dac:	7a0a0000 	bvc	283db4 <__Stack_Size+0x2839b4>
    3db0:	04000005 	streq	r0, [r0], #-5
    3db4:	0065066d 	rsbeq	r0, r5, sp, ror #12
    3db8:	0a000000 	beq	3dc0 <__Stack_Size+0x39c0>
    3dbc:	000001c5 	andeq	r0, r0, r5, asr #3
    3dc0:	65066e04 	strvs	r6, [r6, #-3588]	; 0xfffff1fc
    3dc4:	01000000 	mrseq	r0, (UNDEF: 0)
    3dc8:	00044f0a 	andeq	r4, r4, sl, lsl #30
    3dcc:	0a6f0400 	beq	1bc4dd4 <__Stack_Size+0x1bc49d4>
    3dd0:	00000329 	andeq	r0, r0, r9, lsr #6
    3dd4:	01910a02 	orrseq	r0, r1, r2, lsl #20
    3dd8:	70040000 	andvc	r0, r4, r0
    3ddc:	0003290a 	andeq	r2, r3, sl, lsl #18
    3de0:	390a0400 	stmdbcc	sl, {sl}
    3de4:	04000008 	streq	r0, [r0], #-8
    3de8:	03290a71 			; <UNDEFINED> instruction: 0x03290a71
    3dec:	0a060000 	beq	183df4 <__Stack_Size+0x1839f4>
    3df0:	00000954 	andeq	r0, r0, r4, asr r9
    3df4:	65067304 	strvs	r7, [r6, #-772]	; 0xfffffcfc
    3df8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3dfc:	0003530a 	andeq	r5, r3, sl, lsl #6
    3e00:	06740400 	ldrbteq	r0, [r4], -r0, lsl #8
    3e04:	00000065 	andeq	r0, r0, r5, rrx
    3e08:	04a80a09 	strteq	r0, [r8], #2569	; 0xa09
    3e0c:	75040000 	strvc	r0, [r4, #-0]
    3e10:	00006506 	andeq	r6, r0, r6, lsl #10
    3e14:	8e0a0a00 	vmlahi.f32	s0, s20, s0
    3e18:	04000008 	streq	r0, [r0], #-8
    3e1c:	00650676 	rsbeq	r0, r5, r6, ror r6
    3e20:	0a0b0000 	beq	2c3e28 <__Stack_Size+0x2c3a28>
    3e24:	00000646 	andeq	r0, r0, r6, asr #12
    3e28:	65067704 	strvs	r7, [r6, #-1796]	; 0xfffff8fc
    3e2c:	0c000000 	stceq	0, cr0, [r0], {-0}
    3e30:	00073d0a 	andeq	r3, r7, sl, lsl #26
    3e34:	117a0400 	cmnne	sl, r0, lsl #8
    3e38:	000002a3 	andeq	r0, r0, r3, lsr #5
    3e3c:	a1050010 	tstge	r5, r0, lsl r0
    3e40:	04000000 	streq	r0, [r0], #-0
    3e44:	0335027b 	teqeq	r5, #-1342177273	; 0xb0000007
    3e48:	6c090000 	stcvs	0, cr0, [r9], {-0}
    3e4c:	34000007 	strcc	r0, [r0], #-7
    3e50:	95107d04 	ldrls	r7, [r0, #-3332]	; 0xfffff2fc
    3e54:	0a000004 	beq	3e6c <__Stack_Size+0x3a6c>
    3e58:	00000567 	andeq	r0, r0, r7, ror #10
    3e5c:	960a7f04 	strls	r7, [sl], -r4, lsl #30
    3e60:	00000004 	andeq	r0, r0, r4
    3e64:	0003fe0a 	andeq	pc, r3, sl, lsl #28
    3e68:	0a800400 	beq	fe004e70 <BootRAM+0xcf75611>
    3e6c:	00000496 	muleq	r0, r6, r4
    3e70:	07c40a04 	strbeq	r0, [r4, r4, lsl #20]
    3e74:	83040000 	movwhi	r0, #16384	; 0x4000
    3e78:	0004960a 	andeq	r9, r4, sl, lsl #12
    3e7c:	d60a0800 	strle	r0, [sl], -r0, lsl #16
    3e80:	04000007 	streq	r0, [r0], #-7
    3e84:	04960a84 	ldreq	r0, [r6], #2692	; 0xa84
    3e88:	0a0c0000 	beq	303e90 <__Stack_Size+0x303a90>
    3e8c:	00000548 	andeq	r0, r0, r8, asr #10
    3e90:	ab0c9604 	blge	3296a8 <__Stack_Size+0x3292a8>
    3e94:	10000004 	andne	r0, r0, r4
    3e98:	0007210a 	andeq	r2, r7, sl, lsl #2
    3e9c:	0ca10400 	cfstrseq	mvf0, [r1]
    3ea0:	000004ab 	andeq	r0, r0, fp, lsr #9
    3ea4:	04f90a14 	ldrbteq	r0, [r9], #2580	; 0xa14
    3ea8:	ab040000 	blge	103eb0 <__Stack_Size+0x103ab0>
    3eac:	0004c50d 	andeq	ip, r4, sp, lsl #10
    3eb0:	7d0a1800 	stcvc	8, cr1, [sl, #-0]
    3eb4:	04000001 	streq	r0, [r0], #-1
    3eb8:	029d09ad 	addseq	r0, sp, #2834432	; 0x2b4000
    3ebc:	0a1c0000 	beq	703ec4 <__Stack_Size+0x703ac4>
    3ec0:	000001b1 			; <UNDEFINED> instruction: 0x000001b1
    3ec4:	9d09ae04 	stcls	14, cr10, [r9, #-16]
    3ec8:	20000002 	andcs	r0, r0, r2
    3ecc:	0008480a 	andeq	r4, r8, sl, lsl #16
    3ed0:	09af0400 	stmibeq	pc!, {sl}	; <UNPREDICTABLE>
    3ed4:	0000029d 	muleq	r0, sp, r2
    3ed8:	062e0a24 	strteq	r0, [lr], -r4, lsr #20
    3edc:	b0040000 	andlt	r0, r4, r0
    3ee0:	00029d09 	andeq	r9, r2, r9, lsl #26
    3ee4:	a50a2800 	strge	r2, [sl, #-2048]	; 0xfffff800
    3ee8:	04000005 	streq	r0, [r0], #-5
    3eec:	020307b2 	andeq	r0, r3, #46661632	; 0x2c80000
    3ef0:	0a2c0000 	beq	b03ef8 <__Stack_Size+0xb03af8>
    3ef4:	000015ce 	andeq	r1, r0, lr, asr #11
    3ef8:	6506b304 	strvs	fp, [r6, #-772]	; 0xfffffcfc
    3efc:	30000000 	andcc	r0, r0, r0
    3f00:	040b1200 	streq	r1, [fp], #-512	; 0xfffffe00
    3f04:	00000495 	muleq	r0, r5, r4
    3f08:	0002400c 	andeq	r4, r2, ip
    3f0c:	0004ab00 	andeq	sl, r4, r0, lsl #22
    3f10:	00650d00 	rsbeq	r0, r5, r0, lsl #26
    3f14:	0b000000 	bleq	3f1c <__Stack_Size+0x3b1c>
    3f18:	00049c04 	andeq	r9, r4, r4, lsl #24
    3f1c:	02400c00 	subeq	r0, r0, #0, 24
    3f20:	04c50000 	strbeq	r0, [r5], #0
    3f24:	650d0000 	strvs	r0, [sp, #-0]
    3f28:	0d000000 	stceq	0, cr0, [r0, #-0]
    3f2c:	00000065 	andeq	r0, r0, r5, rrx
    3f30:	b1040b00 	tstlt	r4, r0, lsl #22
    3f34:	05000004 	streq	r0, [r0, #-4]
    3f38:	0000076d 	andeq	r0, r0, sp, ror #14
    3f3c:	de02b504 	cfsh32le	mvfx11, mvfx2, #4
    3f40:	09000003 	stmdbeq	r0, {r0, r1}
    3f44:	0000067a 	andeq	r0, r0, sl, ror r6
    3f48:	10b70424 	adcsne	r0, r7, r4, lsr #8
    3f4c:	0000055a 	andeq	r0, r0, sl, asr r5
    3f50:	0006e70a 	andeq	lr, r6, sl, lsl #14
    3f54:	0ab90400 	beq	fee44f5c <BootRAM+0xddb56fd>
    3f58:	00000496 	muleq	r0, r6, r4
    3f5c:	05e30a00 	strbeq	r0, [r3, #2560]!	; 0xa00
    3f60:	ba040000 	blt	103f68 <__Stack_Size+0x103b68>
    3f64:	0004960a 	andeq	r9, r4, sl, lsl #12
    3f68:	ff0a0400 			; <UNDEFINED> instruction: 0xff0a0400
    3f6c:	04000005 	streq	r0, [r0], #-5
    3f70:	04960abb 	ldreq	r0, [r6], #2747	; 0xabb
    3f74:	0a080000 	beq	203f7c <__Stack_Size+0x203b7c>
    3f78:	00000149 	andeq	r0, r0, r9, asr #2
    3f7c:	960abc04 	strls	fp, [sl], -r4, lsl #24
    3f80:	0c000004 	stceq	0, cr0, [r0], {4}
    3f84:	0006b30a 	andeq	fp, r6, sl, lsl #6
    3f88:	0abd0400 	beq	fef44f90 <BootRAM+0xdeb5731>
    3f8c:	00000496 	muleq	r0, r6, r4
    3f90:	043d0a10 	ldrteq	r0, [sp], #-2576	; 0xfffff5f0
    3f94:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
    3f98:	0004960a 	andeq	r9, r4, sl, lsl #12
    3f9c:	c60a1400 	strgt	r1, [sl], -r0, lsl #8
    3fa0:	04000000 	streq	r0, [r0], #-0
    3fa4:	04960abf 	ldreq	r0, [r6], #2751	; 0xabf
    3fa8:	0a180000 	beq	603fb0 <__Stack_Size+0x603bb0>
    3fac:	000005cd 	andeq	r0, r0, sp, asr #11
    3fb0:	960ac004 	strls	ip, [sl], -r4
    3fb4:	1c000004 	stcne	0, cr0, [r0], {4}
    3fb8:	0000800a 	andeq	r8, r0, sl
    3fbc:	0ac10400 	beq	ff044fc4 <BootRAM+0xdfb5765>
    3fc0:	00000496 	muleq	r0, r6, r4
    3fc4:	7b050020 	blvc	14404c <__Stack_Size+0x143c4c>
    3fc8:	04000006 	streq	r0, [r0], #-6
    3fcc:	04d701c3 	ldrbeq	r0, [r7], #451	; 0x1c3
    3fd0:	11130000 	tstne	r3, r0
    3fd4:	04000006 	streq	r0, [r0], #-6
    3fd8:	04cb14ec 	strbeq	r1, [fp], #1260	; 0x4ec
    3fdc:	f5130000 			; <UNDEFINED> instruction: 0xf5130000
    3fe0:	04000001 	streq	r0, [r0], #-1
    3fe4:	02d711ee 	sbcseq	r1, r7, #-2147483589	; 0x8000003b
    3fe8:	ab130000 	blge	4c3ff0 <__Stack_Size+0x4c3bf0>
    3fec:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    3ff0:	00520cf2 	ldrsheq	r0, [r2], #-194	; 0xffffff3e
    3ff4:	b6130000 	ldrlt	r0, [r3], -r0
    3ff8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    3ffc:	00520cf3 	ldrsheq	r0, [r2], #-195	; 0xffffff3d
    4000:	33130000 	tstcc	r3, #0
    4004:	05000002 	streq	r0, [r0, #-2]
    4008:	05a21522 	streq	r1, [r2, #1314]!	; 0x522
    400c:	040b0000 	streq	r0, [fp], #-0
    4010:	000003d2 	ldrdeq	r0, [r0], -r2
    4014:	00055913 	andeq	r5, r5, r3, lsl r9
    4018:	15250500 	strne	r0, [r5, #-1280]!	; 0xfffffb00
    401c:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
    4020:	04cb040b 	strbeq	r0, [fp], #1035	; 0x40b
    4024:	18130000 	ldmdane	r3, {}	; <UNPREDICTABLE>
    4028:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    402c:	05c6202a 	strbeq	r2, [r6, #42]	; 0x2a
    4030:	040b0000 	streq	r0, [fp], #-0
    4034:	0000055a 	andeq	r0, r0, sl, asr r5
    4038:	00178914 	andseq	r8, r7, r4, lsl r9
    403c:	08240100 	stmdaeq	r4!, {r8}
    4040:	00000329 	andeq	r0, r0, r9, lsr #6
    4044:	0b200305 	bleq	804c60 <__Stack_Size+0x804860>
    4048:	c5142000 	ldrgt	r2, [r4, #-0]
    404c:	01000015 	tsteq	r0, r5, lsl r0
    4050:	009e0625 	addseq	r0, lr, r5, lsr #12
    4054:	03050000 	movweq	r0, #20480	; 0x5000
    4058:	20000b1e 	andcs	r0, r0, lr, lsl fp
    405c:	00147315 	andseq	r7, r4, r5, lsl r3
    4060:	03f10100 	mvnseq	r0, #0, 2
    4064:	00000006 	andeq	r0, r0, r6
    4068:	00000200 	andeq	r0, r0, r0, lsl #4
    406c:	169c0100 	ldrne	r0, [ip], r0, lsl #2
    4070:	00000085 	andeq	r0, r0, r5, lsl #1
    4074:	0603dd01 	streq	sp, [r3], -r1, lsl #26
    4078:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
    407c:	0000003c 	andeq	r0, r0, ip, lsr r0
    4080:	06589c01 	ldrbeq	r9, [r8], -r1, lsl #24
    4084:	56170000 	ldrpl	r0, [r7], -r0
    4088:	01006c61 	tsteq	r0, r1, ror #24
    408c:	651a03dd 	ldrvs	r0, [sl, #-989]	; 0xfffffc23
    4090:	8c000000 	stchi	0, cr0, [r0], {-0}
    4094:	86000019 			; <UNDEFINED> instruction: 0x86000019
    4098:	18000019 	stmdane	r0, {r0, r3, r4}
    409c:	df010069 	svcle	0x00010069
    40a0:	003a0703 	eorseq	r0, sl, r3, lsl #14
    40a4:	19ba0000 	ldmibne	sl!, {}	; <UNPREDICTABLE>
    40a8:	19b80000 	ldmibne	r8!, {}	; <UNPREDICTABLE>
    40ac:	6e180000 	cdpvs	0, 1, cr0, cr8, cr0, {0}
    40b0:	01005045 	tsteq	r0, r5, asr #32
    40b4:	3a0703e0 	bcc	1c503c <__Stack_Size+0x1c4c3c>
    40b8:	cf000000 	svcgt	0x00000000
    40bc:	cd000019 	stcgt	0, cr0, [r0, #-100]	; 0xffffff9c
    40c0:	00000019 	andeq	r0, r0, r9, lsl r0
    40c4:	00143c19 	andseq	r3, r4, r9, lsl ip
    40c8:	03c90100 	biceq	r0, r9, #0, 2
    40cc:	00006504 	andeq	r6, r0, r4, lsl #10
    40d0:	0013fc00 	andseq	pc, r3, r0, lsl #24
    40d4:	00004008 	andeq	r4, r0, r8
    40d8:	839c0100 	orrshi	r0, ip, #0, 2
    40dc:	1a000006 	bne	40fc <__Stack_Size+0x3cfc>
    40e0:	0800140a 	stmdaeq	r0, {r1, r3, sl, ip}
    40e4:	00000ea9 	andeq	r0, r0, r9, lsr #29
    40e8:	0150011b 	cmpeq	r0, fp, lsl r1
    40ec:	1c000030 	stcne	0, cr0, [r0], {48}	; 0x30
    40f0:	000013e6 	andeq	r1, r0, r6, ror #7
    40f4:	0403a001 	streq	sl, [r3], #-1
    40f8:	00000065 	andeq	r0, r0, r5, rrx
    40fc:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
    4100:	000000c4 	andeq	r0, r0, r4, asr #1
    4104:	076e9c01 	strbeq	r9, [lr, -r1, lsl #24]!
    4108:	541d0000 	ldrpl	r0, [sp], #-0
    410c:	01000009 	tsteq	r0, r9
    4110:	3a0703a2 	bcc	1c4fa0 <__Stack_Size+0x1c4ba0>
    4114:	ec000000 	stc	0, cr0, [r0], {-0}
    4118:	e2000019 	and	r0, r0, #25
    411c:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
    4120:	00000b16 	andeq	r0, r0, r6, lsl fp
    4124:	0800171c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, ip}
    4128:	06300001 	ldrteq	r0, [r0], -r1
    412c:	a6010000 	strge	r0, [r1], -r0
    4130:	07640503 	strbeq	r0, [r4, -r3, lsl #10]!
    4134:	301f0000 	andscc	r0, pc, r0
    4138:	20000006 	andcs	r0, r0, r6
    413c:	00000b24 	andeq	r0, r0, r4, lsr #22
    4140:	00001a3d 	andeq	r1, r0, sp, lsr sl
    4144:	00001a39 	andeq	r1, r0, r9, lsr sl
    4148:	000b3120 	andeq	r3, fp, r0, lsr #2
    414c:	001a6100 	andseq	r6, sl, r0, lsl #2
    4150:	001a5f00 	andseq	r5, sl, r0, lsl #30
    4154:	0b3e2100 	bleq	f8c55c <__Stack_Size+0xf8c15c>
    4158:	17240000 	strne	r0, [r4, -r0]!
    415c:	002a0800 	eoreq	r0, sl, r0, lsl #16
    4160:	074e0000 	strbeq	r0, [lr, -r0]
    4164:	3f200000 	svccc	0x00200000
    4168:	8000000b 	andhi	r0, r0, fp
    416c:	7c00001a 	stcvc	0, cr0, [r0], {26}
    4170:	2000001a 	andcs	r0, r0, sl, lsl r0
    4174:	00000b4c 	andeq	r0, r0, ip, asr #22
    4178:	00001aa4 	andeq	r1, r0, r4, lsr #21
    417c:	00001a9e 	muleq	r0, lr, sl
    4180:	00173022 	andseq	r3, r7, r2, lsr #32
    4184:	00072408 	andeq	r2, r7, r8, lsl #8
    4188:	50011b00 	andpl	r1, r1, r0, lsl #22
    418c:	00007502 	andeq	r7, r0, r2, lsl #10
    4190:	00174423 	andseq	r4, r7, r3, lsr #8
    4194:	000eb608 	andeq	fp, lr, r8, lsl #12
    4198:	00073700 	andeq	r3, r7, r0, lsl #14
    419c:	50011b00 	andpl	r1, r1, r0, lsl #22
    41a0:	1a003001 	bne	101ac <__Stack_Size+0xfdac>
    41a4:	0800174e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, sl, ip}
    41a8:	00000ec3 	andeq	r0, r0, r3, asr #29
    41ac:	0250011b 	subseq	r0, r0, #-1073741818	; 0xc0000006
    41b0:	011b0077 	tsteq	fp, r7, ror r0
    41b4:	00750252 	rsbseq	r0, r5, r2, asr r2
    41b8:	621a0000 	andsvs	r0, sl, #0
    41bc:	cf080017 	svcgt	0x00080017
    41c0:	1b00000e 	blne	4200 <__Stack_Size+0x3e00>
    41c4:	30015001 	andcc	r5, r1, r1
    41c8:	0151011b 	cmpeq	r1, fp, lsl r1
    41cc:	00000030 	andeq	r0, r0, r0, lsr r0
    41d0:	00178424 	andseq	r8, r7, r4, lsr #8
    41d4:	00065808 	andeq	r5, r6, r8, lsl #16
    41d8:	da1c0000 	ble	7041e0 <__Stack_Size+0x703de0>
    41dc:	01000013 	tsteq	r0, r3, lsl r0
    41e0:	65040378 	strvs	r0, [r4, #-888]	; 0xfffffc88
    41e4:	0c000000 	stceq	0, cr0, [r0], {-0}
    41e8:	5c080018 	stcpl	0, cr0, [r8], {24}
    41ec:	01000000 	mrseq	r0, (UNDEF: 0)
    41f0:	0007ba9c 	muleq	r7, ip, sl
    41f4:	09541d00 	ldmdbeq	r4, {r8, sl, fp, ip}^
    41f8:	7a010000 	bvc	44200 <__Stack_Size+0x43e00>
    41fc:	003a0703 	eorseq	r0, sl, r3, lsl #14
    4200:	1b050000 	blne	144208 <__Stack_Size+0x143e08>
    4204:	1afd0000 	bne	fff4420c <BootRAM+0xeeb49ad>
    4208:	20250000 	eorcs	r0, r5, r0
    420c:	30080018 	andcc	r0, r8, r8, lsl r0
    4210:	2400000a 	strcs	r0, [r0], #-10
    4214:	08001830 	stmdaeq	r0, {r4, r5, fp, ip}
    4218:	00000658 	andeq	r0, r0, r8, asr r6
    421c:	00184625 	andseq	r4, r8, r5, lsr #12
    4220:	00060308 	andeq	r0, r6, r8, lsl #6
    4224:	9c1c0000 	ldcls	0, cr0, [ip], {-0}
    4228:	01000013 	tsteq	r0, r3, lsl r0
    422c:	6504034c 	strvs	r0, [r4, #-844]	; 0xfffffcb4
    4230:	3c000000 	stccc	0, cr0, [r0], {-0}
    4234:	d0080014 	andle	r0, r8, r4, lsl r0
    4238:	01000002 	tsteq	r0, r2
    423c:	00095f9c 	muleq	r9, ip, pc	; <UNPREDICTABLE>
    4240:	01042600 	tsteq	r4, r0, lsl #12
    4244:	f603034f 			; <UNDEFINED> instruction: 0xf603034f
    4248:	27000007 	strcs	r0, [r0, -r7]
    424c:	51010062 	tstpl	r1, r2, rrx
    4250:	02030903 	andeq	r0, r3, #49152	; 0xc000
    4254:	77270000 	strvc	r0, [r7, -r0]!
    4258:	03520100 	cmpeq	r2, #0, 2
    425c:	00095f0a 	andeq	r5, r9, sl, lsl #30
    4260:	5f1d0000 	svcpl	0x001d0000
    4264:	01000017 	tsteq	r0, r7, lsl r0
    4268:	d5050353 	strle	r0, [r5, #-851]	; 0xfffffcad
    426c:	42000007 	andmi	r0, r0, #7
    4270:	4000001b 	andmi	r0, r0, fp, lsl r0
    4274:	1e00001b 	mcrne	0, 0, r0, cr0, cr11, {0}
    4278:	000009f1 	strdeq	r0, [r0], -r1
    427c:	08001484 	stmdaeq	r0, {r2, r7, sl, ip}
    4280:	05c00001 	strbeq	r0, [r0, #1]
    4284:	67010000 	strvs	r0, [r1, -r0]
    4288:	08960503 	ldmeq	r6, {r0, r1, r8, sl}
    428c:	c01f0000 	andsgt	r0, pc, r0
    4290:	20000005 	andcs	r0, r0, r5
    4294:	000009ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4298:	00001b81 	andeq	r1, r0, r1, lsl #23
    429c:	00001b65 	andeq	r1, r0, r5, ror #22
    42a0:	000a0c20 	andeq	r0, sl, r0, lsr #24
    42a4:	001c4b00 	andseq	r4, ip, r0, lsl #22
    42a8:	001c2b00 	andseq	r2, ip, r0, lsl #22
    42ac:	0a192000 	beq	64c2b4 <__Stack_Size+0x64beb4>
    42b0:	1d670000 	stclne	0, cr0, [r7, #-0]
    42b4:	1d630000 	stclne	0, cr0, [r3, #-0]
    42b8:	26280000 	strtcs	r0, [r8], -r0
    42bc:	a600000a 	strge	r0, [r0], -sl
    42c0:	25080014 	strcs	r0, [r8, #-20]	; 0xffffffec
    42c4:	08001494 	stmdaeq	r0, {r2, r4, r7, sl, ip}
    42c8:	00000e64 	andeq	r0, r0, r4, ror #28
    42cc:	0014ee22 	andseq	lr, r4, r2, lsr #28
    42d0:	00087008 	andeq	r7, r8, r8
    42d4:	50011b00 	andpl	r1, r1, r0, lsl #22
    42d8:	00007502 	andeq	r7, r0, r2, lsl #10
    42dc:	00150625 	andseq	r0, r5, r5, lsr #12
    42e0:	000bb608 	andeq	fp, fp, r8, lsl #12
    42e4:	15222500 	strne	r2, [r2, #-1280]!	; 0xfffffb00
    42e8:	0c6f0800 	stcleq	8, cr0, [pc], #-0	; 42f0 <__Stack_Size+0x3ef0>
    42ec:	30250000 	eorcc	r0, r5, r0
    42f0:	07080015 	smladeq	r8, r5, r0, r0
    42f4:	2500000e 	strcs	r0, [r0, #-14]
    42f8:	08001542 	stmdaeq	r0, {r1, r6, r8, sl, ip}
    42fc:	00000bcd 	andeq	r0, r0, sp, asr #23
    4300:	651e0000 	ldrvs	r0, [lr, #-0]
    4304:	4a000009 	bmi	4330 <__Stack_Size+0x3f30>
    4308:	02080015 	andeq	r0, r8, #21
    430c:	0005e000 	andeq	lr, r5, r0
    4310:	036c0100 	cmneq	ip, #0, 2
    4314:	00095505 	andeq	r5, r9, r5, lsl #10
    4318:	05e01f00 	strbeq	r1, [r0, #3840]!	; 0xf00
    431c:	73200000 	nopvc	{0}	; <UNPREDICTABLE>
    4320:	9e000009 	cdpls	0, 0, cr0, cr0, cr9, {0}
    4324:	8600001d 			; <UNDEFINED> instruction: 0x8600001d
    4328:	2000001d 	andcs	r0, r0, sp, lsl r0
    432c:	00000980 	andeq	r0, r0, r0, lsl #19
    4330:	00001e39 	andeq	r1, r0, r9, lsr lr
    4334:	00001e31 	andeq	r1, r0, r1, lsr lr
    4338:	00098d20 	andeq	r8, r9, r0, lsr #26
    433c:	001e7900 	andseq	r7, lr, r0, lsl #18
    4340:	001e6d00 	andseq	r6, lr, r0, lsl #26
    4344:	099a2000 	ldmibeq	sl, {sp}
    4348:	1eef0000 	cdpne	0, 14, cr0, cr15, cr0, {0}
    434c:	1eed0000 	cdpne	0, 14, cr0, cr13, cr0, {0}
    4350:	a7200000 	strge	r0, [r0, -r0]!
    4354:	09000009 	stmdbeq	r0, {r0, r3}
    4358:	0700001f 	smladeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    435c:	2000001f 	andcs	r0, r0, pc, lsl r0
    4360:	000009b4 			; <UNDEFINED> instruction: 0x000009b4
    4364:	00001f28 	andeq	r1, r0, r8, lsr #30
    4368:	00001f24 	andeq	r1, r0, r4, lsr #30
    436c:	0009c120 	andeq	ip, r9, r0, lsr #2
    4370:	001f4a00 	andseq	r4, pc, r0, lsl #20
    4374:	001f4800 	andseq	r4, pc, r0, lsl #16
    4378:	09ce2900 	stmibeq	lr, {r8, fp, sp}^
    437c:	06000000 	streq	r0, [r0], -r0
    4380:	09280000 	stmdbeq	r8!, {}	; <UNPREDICTABLE>
    4384:	d3200000 	nople	{0}	; <UNPREDICTABLE>
    4388:	65000009 	strvs	r0, [r0, #-9]
    438c:	5d00001f 	stcpl	0, cr0, [r0, #-124]	; 0xffffff84
    4390:	0000001f 	andeq	r0, r0, pc, lsl r0
    4394:	0009e129 	andeq	lr, r9, r9, lsr #2
    4398:	00061800 	andeq	r1, r6, r0, lsl #16
    439c:	00094700 	andeq	r4, r9, r0, lsl #14
    43a0:	09e22a00 	stmibeq	r2!, {r9, fp, sp}^
    43a4:	91020000 	mrsls	r0, (UNDEF: 2)
    43a8:	16cc256c 	strbne	r2, [ip], ip, ror #10
    43ac:	0a300800 	beq	c063b4 <__Stack_Size+0xc05fb4>
    43b0:	2b000000 	blcs	43b8 <__Stack_Size+0x3fb8>
    43b4:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    43b8:	0250011b 	subseq	r0, r0, #-1073741818	; 0xc0000006
    43bc:	00000075 	andeq	r0, r0, r5, ror r0
    43c0:	162c2400 	strtne	r2, [ip], -r0, lsl #8
    43c4:	06580800 	ldrbeq	r0, [r8], -r0, lsl #16
    43c8:	0b000000 	bleq	43d0 <__Stack_Size+0x3fd0>
    43cc:	00005204 	andeq	r5, r0, r4, lsl #4
    43d0:	14e62c00 	strbtne	r2, [r6], #3072	; 0xc00
    43d4:	97010000 	strls	r0, [r1, -r0]
    43d8:	f1010602 			; <UNDEFINED> instruction: 0xf1010602
    43dc:	2d000009 	stccs	0, cr0, [r0, #-36]	; 0xffffffdc
    43e0:	00000961 	andeq	r0, r0, r1, ror #18
    43e4:	09029901 	stmdbeq	r2, {r0, r8, fp, ip, pc}
    43e8:	0000029d 	muleq	r0, sp, r2
    43ec:	00146c2d 	andseq	r6, r4, sp, lsr #24
    43f0:	029a0100 	addseq	r0, sl, #0, 2
    43f4:	0002400a 	andeq	r4, r2, sl
    43f8:	17bb2d00 	ldrne	r2, [fp, r0, lsl #26]!
    43fc:	9b010000 	blls	44404 <__Stack_Size+0x44004>
    4400:	003a0702 	eorseq	r0, sl, r2, lsl #14
    4404:	782d0000 	stmdavc	sp!, {}	; <UNPREDICTABLE>
    4408:	01000017 	tsteq	r0, r7, lsl r0
    440c:	3a07029d 	bcc	1c4e88 <__Stack_Size+0x1c4a88>
    4410:	2d000000 	stccs	0, cr0, [r0, #-0]
    4414:	0000148a 	andeq	r1, r0, sl, lsl #9
    4418:	19029d01 	stmdbne	r2, {r0, r8, sl, fp, ip, pc}
    441c:	0000003a 	andeq	r0, r0, sl, lsr r0
    4420:	0002d22d 	andeq	sp, r2, sp, lsr #4
    4424:	029e0100 	addseq	r0, lr, #0, 2
    4428:	00003a07 	andeq	r3, r0, r7, lsl #20
    442c:	0e482d00 	cdpeq	13, 4, cr2, cr8, cr0, {0}
    4430:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    4434:	003a1002 	eorseq	r1, sl, r2
    4438:	e12e0000 			; <UNDEFINED> instruction: 0xe12e0000
    443c:	2d000009 	stccs	0, cr0, [r0, #-36]	; 0xffffffdc
    4440:	000014f2 	strdeq	r1, [r0], -r2
    4444:	0a02a901 	beq	ae850 <__Stack_Size+0xae450>
    4448:	00000065 	andeq	r0, r0, r5, rrx
    444c:	4b2d2f00 	blmi	b50054 <__Stack_Size+0xb4fc54>
    4450:	01000002 	tsteq	r0, r2
    4454:	770a0325 	strvc	r0, [sl, -r5, lsr #6]
    4458:	00000000 	andeq	r0, r0, r0
    445c:	14e42c00 	strbtne	r2, [r4], #3072	; 0xc00
    4460:	1b010000 	blne	44468 <__Stack_Size+0x44068>
    4464:	30010602 	andcc	r0, r1, r2, lsl #12
    4468:	2d00000a 	stccs	0, cr0, [r0, #-40]	; 0xffffffd8
    446c:	0000146c 	andeq	r1, r0, ip, ror #8
    4470:	0a021d01 	beq	8b87c <__Stack_Size+0x8b47c>
    4474:	00000240 	andeq	r0, r0, r0, asr #4
    4478:	00157a2d 	andseq	r7, r5, sp, lsr #20
    447c:	021e0100 	andseq	r0, lr, #0, 2
    4480:	00003a07 	andeq	r3, r0, r7, lsl #20
    4484:	09542d00 	ldmdbeq	r4, {r8, sl, fp, sp}^
    4488:	1f010000 	svcne	0x00010000
    448c:	003a0702 	eorseq	r0, sl, r2, lsl #14
    4490:	df300000 	svcle	0x00300000
    4494:	01000014 	tsteq	r0, r4, lsl r0
    4498:	0001028b 	andeq	r0, r1, fp, lsl #5
    449c:	0014ad31 	andseq	sl, r4, r1, lsr sp
    44a0:	01e00100 	mvneq	r0, r0, lsl #2
    44a4:	00114806 	andseq	r4, r1, r6, lsl #16
    44a8:	0000ac08 	andeq	sl, r0, r8, lsl #24
    44ac:	109c0100 	addsne	r0, ip, r0, lsl #2
    44b0:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    44b4:	00001764 	andeq	r1, r0, r4, ror #14
    44b8:	1201e201 	andne	lr, r1, #268435456	; 0x10000000
    44bc:	00000b10 	andeq	r0, r0, r0, lsl fp
    44c0:	00001f9b 	muleq	r0, fp, pc	; <UNPREDICTABLE>
    44c4:	00001f99 	muleq	r0, r9, pc	; <UNPREDICTABLE>
    44c8:	0017191d 	andseq	r1, r7, sp, lsl r9
    44cc:	01e30100 	mvneq	r0, r0, lsl #2
    44d0:	00003a07 	andeq	r3, r0, r7, lsl #20
    44d4:	001fb600 	andseq	fp, pc, r0, lsl #12
    44d8:	001fb000 	andseq	fp, pc, r0
    44dc:	09541d00 	ldmdbeq	r4, {r8, sl, fp, ip}^
    44e0:	e4010000 	str	r0, [r1], #-0
    44e4:	003a0701 	eorseq	r0, sl, r1, lsl #14
    44e8:	1ff70000 	svcne	0x00f70000
    44ec:	1fe70000 	svcne	0x00e70000
    44f0:	7f1d0000 	svcvc	0x001d0000
    44f4:	01000014 	tsteq	r0, r4, lsl r0
    44f8:	030701e6 	movweq	r0, #29158	; 0x71e6
    44fc:	77000002 	strvc	r0, [r0, -r2]
    4500:	73000020 	movwvc	r0, #32
    4504:	1d000020 	stcne	0, cr0, [r0, #-128]	; 0xffffff80
    4508:	00001538 	andeq	r1, r0, r8, lsr r5
    450c:	0701e701 	streq	lr, [r1, -r1, lsl #14]
    4510:	0000003a 	andeq	r0, r0, sl, lsr r0
    4514:	0000209b 	muleq	r0, fp, r0
    4518:	00002095 	muleq	r0, r5, r0
    451c:	00156232 	andseq	r6, r5, r2, lsr r2
    4520:	02100100 	andseq	r0, r0, #0, 2
    4524:	00117e01 	andseq	r7, r1, r1, lsl #28
    4528:	11a62208 			; <UNDEFINED> instruction: 0x11a62208
    452c:	0acd0800 	beq	ff346534 <BootRAM+0xe2b6cd5>
    4530:	011b0000 	tsteq	fp, r0
    4534:	00740250 	rsbseq	r0, r4, r0, asr r2
    4538:	11ae2300 			; <UNDEFINED> instruction: 0x11ae2300
    453c:	0edc0800 	cdpeq	8, 13, cr0, cr12, cr0, {0}
    4540:	0ae00000 	beq	ff804548 <BootRAM+0xe774ce9>
    4544:	011b0000 	tsteq	fp, r0
    4548:	00300150 	eorseq	r0, r0, r0, asr r1
    454c:	0011b823 	andseq	fp, r1, r3, lsr #16
    4550:	000ee908 	andeq	lr, lr, r8, lsl #18
    4554:	000afa00 	andeq	pc, sl, r0, lsl #20
    4558:	50011b00 	andpl	r1, r1, r0, lsl #22
    455c:	1b007902 	blne	2296c <__Stack_Size+0x2256c>
    4560:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    4564:	c01a0000 	andsgt	r0, sl, r0
    4568:	cf080011 	svcgt	0x00080011
    456c:	1b00000e 	blne	45ac <__Stack_Size+0x41ac>
    4570:	30015001 	andcc	r5, r1, r1
    4574:	0251011b 	subseq	r0, r1, #-1073741818	; 0xc0000006
    4578:	00000074 	andeq	r0, r0, r4, ror r0
    457c:	02a3040b 	adceq	r0, r3, #184549376	; 0xb000000
    4580:	942c0000 	strtls	r0, [ip], #-0
    4584:	01000017 	tsteq	r0, r7, lsl r0
    4588:	010601a7 	smlatbeq	r6, r7, r1, r0
    458c:	00000b5b 	andeq	r0, r0, fp, asr fp
    4590:	0017642d 	andseq	r6, r7, sp, lsr #8
    4594:	01a90100 			; <UNDEFINED> instruction: 0x01a90100
    4598:	000b1012 	andeq	r1, fp, r2, lsl r0
    459c:	15322d00 	ldrne	r2, [r2, #-3328]!	; 0xfffff300
    45a0:	aa010000 	bge	445a8 <__Stack_Size+0x441a8>
    45a4:	003a0701 	eorseq	r0, sl, r1, lsl #14
    45a8:	2d2f0000 	stccs	0, cr0, [pc, #-0]	; 45b0 <__Stack_Size+0x41b0>
    45ac:	00001483 	andeq	r1, r0, r3, lsl #9
    45b0:	0901b001 	stmdbeq	r1, {r0, ip, sp, pc}
    45b4:	00000203 	andeq	r0, r0, r3, lsl #4
    45b8:	0015382d 	andseq	r3, r5, sp, lsr #16
    45bc:	01b10100 			; <UNDEFINED> instruction: 0x01b10100
    45c0:	00003a09 	andeq	r3, r0, r9, lsl #20
    45c4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    45c8:	0000085c 	andeq	r0, r0, ip, asr r8
    45cc:	05019201 	streq	r9, [r1, #-513]	; 0xfffffdff
    45d0:	00000203 	andeq	r0, r0, r3, lsl #4
    45d4:	080013e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, ip}
    45d8:	0000001c 	andeq	r0, r0, ip, lsl r0
    45dc:	0bb09c01 	bleq	fec2b5e8 <BootRAM+0xdb9bd89>
    45e0:	38330000 	ldmdacc	r3!, {}	; <UNPREDICTABLE>
    45e4:	01000015 	tsteq	r0, r5, lsl r0
    45e8:	52240192 	eorpl	r0, r4, #-2147483612	; 0x80000024
    45ec:	fc000000 	stc2	0, cr0, [r0], {-0}
    45f0:	f4000020 	vst4.8	{d0-d3}, [r0 :128], r0
    45f4:	34000020 	strcc	r0, [r0], #-32	; 0xffffffe0
    45f8:	000015fb 	strdeq	r1, [r0], -fp
    45fc:	3c019201 	sfmcc	f1, 1, [r1], {1}
    4600:	00000bb0 			; <UNDEFINED> instruction: 0x00000bb0
    4604:	d21d5101 	andsle	r5, sp, #1073741824	; 0x40000000
    4608:	01000002 	tsteq	r0, r2
    460c:	3a080194 	bcc	204c64 <__Stack_Size+0x204864>
    4610:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    4614:	36000021 	strcc	r0, [r0], -r1, lsr #32
    4618:	00000021 	andeq	r0, r0, r1, lsr #32
    461c:	0209040b 	andeq	r0, r9, #184549376	; 0xb000000
    4620:	e1350000 	teq	r5, r0
    4624:	01000015 	tsteq	r0, r5, lsl r0
    4628:	40080178 	andmi	r0, r8, r8, ror r1
    462c:	bc000002 	stclt	0, cr0, [r0], {2}
    4630:	24080013 	strcs	r0, [r8], #-19	; 0xffffffed
    4634:	01000000 	mrseq	r0, (UNDEF: 0)
    4638:	15921c9c 	ldrne	r1, [r2, #3228]	; 0xc9c
    463c:	42010000 	andmi	r0, r1, #0
    4640:	02400801 	subeq	r0, r0, #65536	; 0x10000
    4644:	13400000 	movtne	r0, #0
    4648:	007c0800 	rsbseq	r0, ip, r0, lsl #16
    464c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4650:	00000c6f 	andeq	r0, r0, pc, ror #24
    4654:	0017f11d 	andseq	pc, r7, sp, lsl r1	; <UNPREDICTABLE>
    4658:	01440100 	mrseq	r0, (UNDEF: 84)
    465c:	00003a0a 	andeq	r3, r0, sl, lsl #20
    4660:	00214f00 	eoreq	r4, r1, r0, lsl #30
    4664:	00214b00 	eoreq	r4, r1, r0, lsl #22
    4668:	17781d00 	ldrbne	r1, [r8, -r0, lsl #26]!
    466c:	45010000 	strmi	r0, [r1, #-0]
    4670:	003a0a01 	eorseq	r0, sl, r1, lsl #20
    4674:	217d0000 	cmncs	sp, r0
    4678:	21770000 	cmncs	r7, r0
    467c:	72180000 	andsvc	r0, r8, #0
    4680:	01005045 	tsteq	r0, r5, asr #32
    4684:	3a0a0146 	bcc	284ba4 <__Stack_Size+0x2847a4>
    4688:	c2000000 	andgt	r0, r0, #0
    468c:	bc000021 	stclt	0, cr0, [r0], {33}	; 0x21
    4690:	1d000021 	stcne	0, cr0, [r0, #-132]	; 0xffffff7c
    4694:	00000e48 	andeq	r0, r0, r8, asr #28
    4698:	09014701 	stmdbeq	r1, {r0, r8, r9, sl, lr}
    469c:	0000003a 	andeq	r0, r0, sl, lsr r0
    46a0:	00002203 	andeq	r2, r0, r3, lsl #4
    46a4:	00002201 	andeq	r2, r0, r1, lsl #4
    46a8:	00056836 	andeq	r6, r5, r6, lsr r8
    46ac:	000c5300 	andeq	r5, ip, r0, lsl #6
    46b0:	04842d00 	streq	r2, [r4], #3328	; 0xd00
    46b4:	63010000 	movwvs	r0, #4096	; 0x1000
    46b8:	00520701 	subseq	r0, r2, r1, lsl #14
    46bc:	1f000000 	svcne	0x00000000
    46c0:	00000598 	muleq	r0, r8, r5
    46c4:	0004841d 	andeq	r8, r4, sp, lsl r4
    46c8:	01690100 	cmneq	r9, r0, lsl #2
    46cc:	00005207 	andeq	r5, r0, r7, lsl #4
    46d0:	00221a00 	eoreq	r1, r2, r0, lsl #20
    46d4:	00221600 	eoreq	r1, r2, r0, lsl #12
    46d8:	37000000 	strcc	r0, [r0, -r0]
    46dc:	0000166c 	andeq	r1, r0, ip, ror #12
    46e0:	4008e901 	andmi	lr, r8, r1, lsl #18
    46e4:	74000002 	strvc	r0, [r0], #-2
    46e8:	cc080012 	stcgt	0, cr0, [r8], {18}
    46ec:	01000000 	mrseq	r0, (UNDEF: 0)
    46f0:	000d829c 	muleq	sp, ip, r2
    46f4:	14d63800 	ldrbne	r3, [r6], #2048	; 0x800
    46f8:	eb010000 	bl	44700 <__Stack_Size+0x44300>
    46fc:	00003a0b 	andeq	r3, r0, fp, lsl #20
    4700:	00224c00 	eoreq	r4, r2, r0, lsl #24
    4704:	00223e00 	eoreq	r3, r2, r0, lsl #28
    4708:	0e483800 	cdpeq	8, 4, cr3, cr8, cr0, {0}
    470c:	ec010000 	stc	0, cr0, [r1], {-0}
    4710:	00003a0b 	andeq	r3, r0, fp, lsl #20
    4714:	0022c600 	eoreq	ip, r2, r0, lsl #12
    4718:	0022c400 	eoreq	ip, r2, r0, lsl #8
    471c:	12923900 	addsne	r3, r2, #0, 18
    4720:	00940800 	addseq	r0, r4, r0, lsl #16
    4724:	dc3a0000 	ldcle	0, cr0, [sl], #-0
    4728:	01000015 	tsteq	r0, r5, lsl r0
    472c:	0d820df6 	stceq	13, cr0, [r2, #984]	; 0x3d8
    4730:	78380000 	ldmdavc	r8!, {}	; <UNPREDICTABLE>
    4734:	01000017 	tsteq	r0, r7, lsl r0
    4738:	003a09f7 	ldrshteq	r0, [sl], -r7
    473c:	22e10000 	rsccs	r0, r1, #0
    4740:	22d90000 	sbcscs	r0, r9, #0
    4744:	f1380000 			; <UNDEFINED> instruction: 0xf1380000
    4748:	01000017 	tsteq	r0, r7, lsl r0
    474c:	003a09f8 	ldrshteq	r0, [sl], -r8
    4750:	23260000 			; <UNDEFINED> instruction: 0x23260000
    4754:	23200000 	nopcs	{0}	; <UNPREDICTABLE>
    4758:	723b0000 	eorsvc	r0, fp, #0
    475c:	01005045 	tsteq	r0, r5, asr #32
    4760:	003a09f9 	ldrshteq	r0, [sl], -r9
    4764:	23660000 	cmncs	r6, #0
    4768:	235e0000 	cmpcs	lr, #0
    476c:	123c0000 	eorsne	r0, ip, #0
    4770:	00080013 	andeq	r0, r8, r3, lsl r0
    4774:	1d000000 	stcne	0, cr0, [r0, #-0]
    4778:	2d00000d 	stccs	0, cr0, [r0, #-52]	; 0xffffffcc
    477c:	00000484 	andeq	r0, r0, r4, lsl #9
    4780:	0b012a01 	bleq	4ef8c <__Stack_Size+0x4eb8c>
    4784:	00000052 	andeq	r0, r0, r2, asr r0
    4788:	13123c00 	tstne	r2, #0, 24
    478c:	000e0800 	andeq	r0, lr, r0, lsl #16
    4790:	0d400000 	stcleq	0, cr0, [r0, #-0]
    4794:	841d0000 	ldrhi	r0, [sp], #-0
    4798:	01000004 	tsteq	r0, r4
    479c:	520b012f 	andpl	r0, fp, #-1073741813	; 0xc000000b
    47a0:	ad000000 	stcge	0, cr0, [r0, #-0]
    47a4:	a5000023 	strge	r0, [r0, #-35]	; 0xffffffdd
    47a8:	00000023 	andeq	r0, r0, r3, lsr #32
    47ac:	0012e623 	andseq	lr, r2, r3, lsr #12
    47b0:	000ef508 	andeq	pc, lr, r8, lsl #10
    47b4:	000d5400 	andeq	r5, sp, r0, lsl #8
    47b8:	50011b00 	andpl	r1, r1, r0, lsl #22
    47bc:	00007402 	andeq	r7, r0, r2, lsl #8
    47c0:	0012ee23 	andseq	lr, r2, r3, lsr #28
    47c4:	000f0208 	andeq	r0, pc, r8, lsl #4
    47c8:	000d6e00 	andeq	r6, sp, r0, lsl #28
    47cc:	50011b00 	andpl	r1, r1, r0, lsl #22
    47d0:	1b007402 	blne	217e0 <__Stack_Size+0x213e0>
    47d4:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    47d8:	12250030 	eorne	r0, r5, #48	; 0x30
    47dc:	a9080013 	stmdbge	r8, {r0, r1, r4}
    47e0:	2500000e 	strcs	r0, [r0, #-14]
    47e4:	08001324 	stmdaeq	r0, {r2, r5, r8, r9, ip}
    47e8:	00000f0f 	andeq	r0, r0, pc, lsl #30
    47ec:	040b0000 	streq	r0, [fp], #-0
    47f0:	000002d7 	ldrdeq	r0, [r0], -r7
    47f4:	00172637 	andseq	r2, r7, r7, lsr r6
    47f8:	059b0100 	ldreq	r0, [fp, #256]	; 0x100
    47fc:	00000203 	andeq	r0, r0, r3, lsl #4
    4800:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
    4804:	0000008c 	andeq	r0, r0, ip, lsl #1
    4808:	0e079c01 	cdpeq	12, 0, cr9, cr7, cr1, {0}
    480c:	383d0000 	ldmdacc	sp!, {}	; <UNPREDICTABLE>
    4810:	01000015 	tsteq	r0, r5, lsl r0
    4814:	00521c9b 			; <UNDEFINED> instruction: 0x00521c9b
    4818:	23fb0000 	mvnscs	r0, #0
    481c:	23f70000 	mvnscs	r0, #0
    4820:	dc3c0000 	ldcle	0, cr0, [ip], #-0
    4824:	18080010 	stmdane	r8, {r4}
    4828:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    482c:	3800000d 	stmdacc	r0, {r0, r2, r3}
    4830:	0000035b 	andeq	r0, r0, fp, asr r3
    4834:	6508a901 	strvs	sl, [r8, #-2305]	; 0xfffff6ff
    4838:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    483c:	1c000024 	stcne	0, cr0, [r0], {36}	; 0x24
    4840:	00000024 	andeq	r0, r0, r4, lsr #32
    4844:	0005501f 	andeq	r5, r5, pc, lsl r0
    4848:	17783800 	ldrbne	r3, [r8, -r0, lsl #16]!
    484c:	c3010000 	movwgt	r0, #4096	; 0x1000
    4850:	00006508 	andeq	r6, r0, r8, lsl #10
    4854:	00243300 	eoreq	r3, r4, r0, lsl #6
    4858:	00243100 	eoreq	r3, r4, r0, lsl #2
    485c:	17f13800 	ldrbne	r3, [r1, r0, lsl #16]!
    4860:	c4010000 	strgt	r0, [r1], #-0
    4864:	00006508 	andeq	r6, r0, r8, lsl #10
    4868:	00244c00 	eoreq	r4, r4, r0, lsl #24
    486c:	00244a00 	eoreq	r4, r4, r0, lsl #20
    4870:	37000000 	strcc	r0, [r0, -r0]
    4874:	0000154c 	andeq	r1, r0, ip, asr #10
    4878:	40087801 	andmi	r7, r8, r1, lsl #16
    487c:	2c000002 	stccs	0, cr0, [r0], {2}
    4880:	48080012 	stmdami	r8, {r1, r4}
    4884:	01000000 	mrseq	r0, (UNDEF: 0)
    4888:	000e359c 	muleq	lr, ip, r5
    488c:	65523b00 	ldrbvs	r3, [r2, #-2816]	; 0xfffff500
    4890:	0a7a0100 	beq	1e84c98 <__Stack_Size+0x1e84898>
    4894:	00000240 	andeq	r0, r0, r0, asr #4
    4898:	00002463 	andeq	r2, r0, r3, ror #8
    489c:	0000245f 	andeq	r2, r0, pc, asr r4
    48a0:	160d3700 	strne	r3, [sp], -r0, lsl #14
    48a4:	63010000 	movwvs	r0, #4096	; 0x1000
    48a8:	00020305 	andeq	r0, r2, r5, lsl #6
    48ac:	00109800 	andseq	r9, r0, r0, lsl #16
    48b0:	00002408 	andeq	r2, r0, r8, lsl #8
    48b4:	649c0100 	ldrvs	r0, [ip], #256	; 0x100
    48b8:	3d00000e 	stccc	0, cr0, [r0, #-56]	; 0xffffffc8
    48bc:	00001538 	andeq	r1, r0, r8, lsr r5
    48c0:	521f6301 	andspl	r6, pc, #67108864	; 0x4000000
    48c4:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
    48c8:	81000024 	tsthi	r0, r4, lsr #32
    48cc:	00000024 	andeq	r0, r0, r4, lsr #32
    48d0:	0014933e 	andseq	r9, r4, lr, lsr r3
    48d4:	084a0100 	stmdaeq	sl, {r8}^
    48d8:	00000240 	andeq	r0, r0, r0, asr #4
    48dc:	080011f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip}
    48e0:	00000038 	andeq	r0, r0, r8, lsr r0
    48e4:	52379c01 	eorspl	r9, r7, #256	; 0x100
    48e8:	01000016 	tsteq	r0, r6, lsl r0
    48ec:	02030535 	andeq	r0, r3, #222298112	; 0xd400000
    48f0:	10740000 	rsbsne	r0, r4, r0
    48f4:	00240800 	eoreq	r0, r4, r0, lsl #16
    48f8:	9c010000 	stcls	0, cr0, [r1], {-0}
    48fc:	00000ea9 	andeq	r0, r0, r9, lsr #29
    4900:	0015383d 	andseq	r3, r5, sp, lsr r8
    4904:	23350100 	teqcs	r5, #0, 2
    4908:	00000052 	andeq	r0, r0, r2, asr r0
    490c:	000024cb 	andeq	r2, r0, fp, asr #9
    4910:	000024c3 	andeq	r2, r0, r3, asr #9
    4914:	07b73f00 	ldreq	r3, [r7, r0, lsl #30]!
    4918:	07b70000 	ldreq	r0, [r7, r0]!
    491c:	57060000 	strpl	r0, [r6, -r0]
    4920:	fc3f0602 	ldc2	6, cr0, [pc], #-8	; 4920 <__Stack_Size+0x4520>
    4924:	fc000010 	stc2	0, cr0, [r0], {16}
    4928:	06000010 			; <UNDEFINED> instruction: 0x06000010
    492c:	40050254 	andmi	r0, r5, r4, asr r2
    4930:	000016bf 			; <UNDEFINED> instruction: 0x000016bf
    4934:	000016bf 			; <UNDEFINED> instruction: 0x000016bf
    4938:	3f061a07 	svccc	0x00061a07
    493c:	000011f4 	strdeq	r1, [r0], -r4
    4940:	000011f4 	strdeq	r1, [r0], -r4
    4944:	06025606 	streq	r5, [r2], -r6, lsl #12
    4948:	00133d3f 	andseq	r3, r3, pc, lsr sp
    494c:	00133d00 	andseq	r3, r3, r0, lsl #26
    4950:	02530600 	subseq	r0, r3, #0, 12
    4954:	151e4005 	ldrne	r4, [lr, #-5]
    4958:	151e0000 	ldrne	r0, [lr, #-0]
    495c:	19070000 	stmdbne	r7, {}	; <UNPREDICTABLE>
    4960:	13493f06 	movtne	r3, #40710	; 0x9f06
    4964:	13490000 	movtne	r0, #36864	; 0x9000
    4968:	4e060000 	cdpmi	0, 0, cr0, cr6, cr0, {0}
    496c:	563f0602 	ldrtpl	r0, [pc], -r2, lsl #12
    4970:	56000013 			; <UNDEFINED> instruction: 0x56000013
    4974:	06000013 			; <UNDEFINED> instruction: 0x06000013
    4978:	3f06023a 	svccc	0x0006023a
    497c:	00001241 	andeq	r1, r0, r1, asr #4
    4980:	00001241 	andeq	r1, r0, r1, asr #4
    4984:	06024d06 	streq	r4, [r2], -r6, lsl #26
    4988:	0001bf00 	andeq	fp, r1, r0, lsl #30
    498c:	26000400 	strcs	r0, [r0], -r0, lsl #8
    4990:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    4994:	00037701 	andeq	r7, r3, r1, lsl #14
    4998:	17f90c00 	ldrbne	r0, [r9, r0, lsl #24]!
    499c:	001b0000 	andseq	r0, fp, r0
    49a0:	06d00000 	ldrbeq	r0, [r0], r0
    49a4:	00000000 	andeq	r0, r0, r0
    49a8:	2f2f0000 	svccs	0x002f0000
    49ac:	04020000 	streq	r0, [r2], #-0
    49b0:	0001a505 	andeq	sl, r1, r5, lsl #10
    49b4:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    49b8:	000006c2 	andeq	r0, r0, r2, asr #13
    49bc:	6e060102 	adfvss	f0, f6, f2
    49c0:	03000006 	movweq	r0, #6
    49c4:	00323375 	eorseq	r3, r2, r5, ror r3
    49c8:	461d2402 	ldrmi	r2, [sp], -r2, lsl #8
    49cc:	02000000 	andeq	r0, r0, #0
    49d0:	03300704 	teqeq	r0, #4, 14	; 0x100000
    49d4:	75030000 	strvc	r0, [r3, #-0]
    49d8:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    49dc:	00591d25 	subseq	r1, r9, r5, lsr #26
    49e0:	02020000 	andeq	r0, r2, #0
    49e4:	00040e07 	andeq	r0, r4, r7, lsl #28
    49e8:	38750300 	ldmdacc	r5!, {r8, r9}^
    49ec:	1d260200 	sfmne	f0, 4, [r6, #-0]
    49f0:	0000006b 	andeq	r0, r0, fp, rrx
    49f4:	6c080102 	stfvss	f0, [r8], {2}
    49f8:	04000006 	streq	r0, [r0], #-6
    49fc:	00006004 	andeq	r6, r0, r4
    4a00:	16bf0500 	ldrtne	r0, [pc], r0, lsl #10
    4a04:	3c010000 	stccc	0, cr0, [r1], {-0}
    4a08:	00188606 	andseq	r8, r8, r6, lsl #12
    4a0c:	00001e08 	andeq	r1, r0, r8, lsl #28
    4a10:	039c0100 	orrseq	r0, ip, #0, 2
    4a14:	06000001 	streq	r0, [r0], -r1
    4a18:	00001819 	andeq	r1, r0, r9, lsl r8
    4a1c:	721e3c01 	andsvc	r3, lr, #256	; 0x100
    4a20:	0d000000 	stceq	0, cr0, [r0, #-0]
    4a24:	05000025 	streq	r0, [r0, #-37]	; 0xffffffdb
    4a28:	06000025 	streq	r0, [r0], -r5, lsr #32
    4a2c:	00001828 	andeq	r1, r0, r8, lsr #16
    4a30:	4d2c3c01 	stcmi	12, cr3, [ip, #-4]!
    4a34:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    4a38:	45000025 	strmi	r0, [r0, #-37]	; 0xffffffdb
    4a3c:	06000025 	streq	r0, [r0], -r5, lsr #32
    4a40:	00001811 	andeq	r1, r0, r1, lsl r8
    4a44:	4d3d3c01 	ldcmi	12, cr3, [sp, #-4]!
    4a48:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    4a4c:	6a000025 	bvs	4ae8 <__Stack_Size+0x46e8>
    4a50:	07000025 	streq	r0, [r0, -r5, lsr #32]
    4a54:	3e01006e 	cdpcc	0, 0, cr0, cr1, cr14, {3}
    4a58:	00003a07 	andeq	r3, r0, r7, lsl #20
    4a5c:	00259100 	eoreq	r9, r5, r0, lsl #2
    4a60:	00258f00 	eoreq	r8, r5, r0, lsl #30
    4a64:	00690700 	rsbeq	r0, r9, r0, lsl #14
    4a68:	3a073f01 	bcc	1d4674 <__Stack_Size+0x1d4274>
    4a6c:	aa000000 	bge	4a74 <__Stack_Size+0x4674>
    4a70:	a4000025 	strge	r0, [r0], #-37	; 0xffffffdb
    4a74:	08000025 	stmdaeq	r0, {r0, r2, r5}
    4a78:	00001834 	andeq	r1, r0, r4, lsr r8
    4a7c:	03084001 	movweq	r4, #32769	; 0x8001
    4a80:	db000001 	blle	4a8c <__Stack_Size+0x468c>
    4a84:	d5000025 	strle	r0, [r0, #-37]	; 0xffffffdb
    4a88:	00000025 	andeq	r0, r0, r5, lsr #32
    4a8c:	003a0404 	eorseq	r0, sl, r4, lsl #8
    4a90:	1e050000 	cdpne	0, 0, cr0, cr5, cr0, {0}
    4a94:	01000015 	tsteq	r0, r5, lsl r0
    4a98:	18680623 	stmdane	r8!, {r0, r1, r5, r9, sl}^
    4a9c:	001e0800 	andseq	r0, lr, r0, lsl #16
    4aa0:	9c010000 	stcls	0, cr0, [r1], {-0}
    4aa4:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    4aa8:	00181906 	andseq	r1, r8, r6, lsl #18
    4aac:	1e230100 	sufnes	f0, f3, f0
    4ab0:	00000072 	andeq	r0, r0, r2, ror r0
    4ab4:	0000260e 	andeq	r2, r0, lr, lsl #12
    4ab8:	00002606 	andeq	r2, r0, r6, lsl #12
    4abc:	00182806 	andseq	r2, r8, r6, lsl #16
    4ac0:	2c230100 	stfcss	f0, [r3], #-0
    4ac4:	0000004d 	andeq	r0, r0, sp, asr #32
    4ac8:	0000264a 	andeq	r2, r0, sl, asr #12
    4acc:	00002646 	andeq	r2, r0, r6, asr #12
    4ad0:	00181106 	andseq	r1, r8, r6, lsl #2
    4ad4:	3d230100 	stfccs	f0, [r3, #-0]
    4ad8:	0000004d 	andeq	r0, r0, sp, asr #32
    4adc:	0000266f 	andeq	r2, r0, pc, ror #12
    4ae0:	0000266b 	andeq	r2, r0, fp, ror #12
    4ae4:	01006e07 	tsteq	r0, r7, lsl #28
    4ae8:	003a0725 	eorseq	r0, sl, r5, lsr #14
    4aec:	26920000 	ldrcs	r0, [r2], r0
    4af0:	26900000 	ldrcs	r0, [r0], r0
    4af4:	69070000 	stmdbvs	r7, {}	; <UNPREDICTABLE>
    4af8:	07260100 	streq	r0, [r6, -r0, lsl #2]!
    4afc:	0000003a 	andeq	r0, r0, sl, lsr r0
    4b00:	000026ab 	andeq	r2, r0, fp, lsr #13
    4b04:	000026a5 	andeq	r2, r0, r5, lsr #13
    4b08:	00180b08 	andseq	r0, r8, r8, lsl #22
    4b0c:	0a260100 	beq	984f14 <__Stack_Size+0x984b14>
    4b10:	0000003a 	andeq	r0, r0, sl, lsr r0
    4b14:	000026da 	ldrdeq	r2, [r0], -sl
    4b18:	000026d6 	ldrdeq	r2, [r0], -r6
    4b1c:	00182208 	andseq	r2, r8, r8, lsl #4
    4b20:	11260100 			; <UNDEFINED> instruction: 0x11260100
    4b24:	0000003a 	andeq	r0, r0, sl, lsr r0
    4b28:	00002708 	andeq	r2, r0, r8, lsl #14
    4b2c:	00002706 	andeq	r2, r0, r6, lsl #14
    4b30:	00183408 	andseq	r3, r8, r8, lsl #8
    4b34:	08270100 	stmdaeq	r7!, {r8}
    4b38:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    4b3c:	00002734 	andeq	r2, r0, r4, lsr r7
    4b40:	0000272c 	andeq	r2, r0, ip, lsr #14
    4b44:	4d040400 	cfstrsmi	mvf0, [r4, #-0]
    4b48:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	10001101 	andne	r1, r0, r1, lsl #2
       4:	03065506 	movweq	r5, #25862	; 0x6506
       8:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    gpio_write_bit( bank,pin,1-onState);
       c:	0005130e 	andeq	r1, r5, lr, lsl #6
      10:	11010000 	mrsne	r0, (UNDEF: 1)
{
      14:	11061000 	mrsne	r1, (UNDEF: 6)
    gpio_write_bit( bank,pin,1-onState);
      18:	03011201 	movweq	r1, #4609	; 0x1201
    while (count-- > 0)
      1c:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
}
      20:	0005130e 	andeq	r1, r5, lr, lsl #6
        for (c = rate; c > 0; c--)
      24:	11010000 	mrsne	r0, (UNDEF: 1)
      28:	130e2501 	movwne	r2, #58625	; 0xe501
        gpio_write_bit( bank,pin,onState);
      2c:	1b0e030b 	blne	380c60 <__Stack_Size+0x380860>
      30:	1117550e 	tstne	r7, lr, lsl #10
        for (c = rate; c > 0; c--)
      34:	00171001 	andseq	r1, r7, r1
        gpio_write_bit( bank,pin,1-onState);
      38:	00240200 	eoreq	r0, r4, r0, lsl #4
      3c:	0b3e0b0b 	bleq	f82c70 <__Stack_Size+0xf82870>
      40:	00000e03 	andeq	r0, r0, r3, lsl #28
      44:	03001603 	movweq	r1, #1539	; 0x603
        for (c = rate; c > 0; c--)
      48:	3b0b3a08 	blcc	2ce870 <__Stack_Size+0x2ce470>
            asm volatile("nop");
      4c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
        for (c = rate; c > 0; c--)
      50:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
__RESETFAULTMASK:
      54:	13490035 	movtne	r0, #36917	; 0x9035
__SETFAULTMASK:
      58:	16050000 	strne	r0, [r5], -r0
__READ_FAULTMASK:
      5c:	3a0e0300 	bcc	380c64 <__Stack_Size+0x380864>
__BASEPRICONFIG:
      60:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}

      64:	0013490b 	andseq	r4, r3, fp, lsl #18
__GetBASEPRI:
      68:	01040600 	tsteq	r4, r0, lsl #12

      6c:	0b0b0b3e 	bleq	2c2d6c <__Stack_Size+0x2c296c>
  REV16 r0, r0
      70:	0b3a1349 	bleq	e84d9c <__Stack_Size+0xe8499c>

      74:	0b390b3b 	bleq	e42d68 <__Stack_Size+0xe42968>
      78:	00001301 	andeq	r1, r0, r1, lsl #6
      7c:	03002807 	movweq	r2, #2055	; 0x807
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      80:	000b1c0e 	andeq	r1, fp, lr, lsl #24
      84:	01130800 	tsteq	r3, r0, lsl #16
      88:	0b3a0b0b 	bleq	e82cbc <__Stack_Size+0xe828bc>
}
      8c:	0b390b3b 	bleq	e42d80 <__Stack_Size+0xe42980>
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      90:	00001301 	andeq	r1, r0, r1, lsl #6
      94:	03000d09 	movweq	r0, #3337	; 0xd09
      98:	3b0b3a0e 	blcc	2ce8d8 <__Stack_Size+0x2ce4d8>
      9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      a0:	000b3813 	andeq	r3, fp, r3, lsl r8
}
      a4:	000f0a00 	andeq	r0, pc, r0, lsl #20
      a8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
      ac:	150b0000 	strne	r0, [fp, #-0]
      b0:	00192700 	andseq	r2, r9, r0, lsl #14
      b4:	00340c00 	eorseq	r0, r4, r0, lsl #24
      b8:	0b3a0e03 	bleq	e838cc <__Stack_Size+0xe834cc>
      bc:	0b39053b 	bleq	e415b0 <__Stack_Size+0xe411b0>
      c0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
      c4:	0000193c 	andeq	r1, r0, ip, lsr r9
      c8:	0301040d 	movweq	r0, #5133	; 0x140d
      cc:	0b0b3e0e 	bleq	2cf90c <__Stack_Size+0x2cf50c>
      d0:	3a13490b 	bcc	4d2504 <__Stack_Size+0x4d2104>
      d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      d8:	0013010b 	andseq	r0, r3, fp, lsl #2
      dc:	01130e00 	tsteq	r3, r0, lsl #28
      e0:	0b0b0e03 	bleq	2c38f4 <__Stack_Size+0x2c34f4>
      e4:	0b3b0b3a 	bleq	ec2dd4 <__Stack_Size+0xec29d4>
      e8:	13010b39 	movwne	r0, #6969	; 0x1b39
      ec:	150f0000 	strne	r0, [pc, #-0]	; f4 <_Minimum_Stack_Size-0xc>
      f0:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
      f4:	00130113 	andseq	r0, r3, r3, lsl r1
      f8:	00051000 	andeq	r1, r5, r0
      fc:	00001349 	andeq	r1, r0, r9, asr #6
     100:	03011311 	movweq	r1, #4881	; 0x1311
     104:	3a0b0b08 	bcc	2c2d2c <__Stack_Size+0x2c292c>
     108:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     10c:	0013010b 	andseq	r0, r3, fp, lsl #2
     110:	000d1200 	andeq	r1, sp, r0, lsl #4
     114:	0b3a0803 	bleq	e82128 <__Stack_Size+0xe81d28>
     118:	0b390b3b 	bleq	e42e0c <__Stack_Size+0xe42a0c>
     11c:	0b381349 	bleq	e04e48 <__Stack_Size+0xe04a48>
     120:	17130000 	ldrne	r0, [r3, -r0]
     124:	3a0b0b01 	bcc	2c2d30 <__Stack_Size+0x2c2930>
     128:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     12c:	0013010b 	andseq	r0, r3, fp, lsl #2
     130:	000d1400 	andeq	r1, sp, r0, lsl #8
     134:	0b3a0803 	bleq	e82148 <__Stack_Size+0xe81d48>
     138:	0b390b3b 	bleq	e42e2c <__Stack_Size+0xe42a2c>
     13c:	00001349 	andeq	r1, r0, r9, asr #6
     140:	03003415 	movweq	r3, #1045	; 0x415
     144:	3b0b3a0e 	blcc	2ce984 <__Stack_Size+0x2ce584>
     148:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     14c:	3c193f13 	ldccc	15, cr3, [r9], {19}
     150:	16000019 			; <UNDEFINED> instruction: 0x16000019
     154:	13490101 	movtne	r0, #37121	; 0x9101
     158:	00001301 	andeq	r1, r0, r1, lsl #6
     15c:	49002117 	stmdbmi	r0, {r0, r1, r2, r4, r8, sp}
     160:	000b2f13 	andeq	r2, fp, r3, lsl pc
     164:	00241800 	eoreq	r1, r4, r0, lsl #16
     168:	0b3e0b0b 	bleq	f82d9c <__Stack_Size+0xf8299c>
     16c:	00000803 	andeq	r0, r0, r3, lsl #16
     170:	47003419 	smladmi	r0, r9, r4, r3
     174:	3b0b3a13 	blcc	2ce9c8 <__Stack_Size+0x2ce5c8>
     178:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     17c:	1a000018 	bne	1e4 <_Minimum_Stack_Size+0xe4>
     180:	00000021 	andeq	r0, r0, r1, lsr #32
     184:	0300341b 	movweq	r3, #1051	; 0x41b
     188:	3b0b3a0e 	blcc	2ce9c8 <__Stack_Size+0x2ce5c8>
     18c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     190:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     194:	1c000018 	stcne	0, cr0, [r0], {24}
     198:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     19c:	0b3a0e03 	bleq	e839b0 <__Stack_Size+0xe835b0>
     1a0:	0b39053b 	bleq	e41694 <__Stack_Size+0xe41294>
     1a4:	01111927 	tsteq	r1, r7, lsr #18
     1a8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     1ac:	01194296 			; <UNDEFINED> instruction: 0x01194296
     1b0:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     1b4:	01018289 	smlabbeq	r1, r9, r2, r8
     1b8:	13310111 	teqne	r1, #1073741828	; 0x40000004
     1bc:	00001301 	andeq	r1, r0, r1, lsl #6
     1c0:	01828a1e 	orreq	r8, r2, lr, lsl sl
     1c4:	91180200 	tstls	r8, r0, lsl #4
     1c8:	00001842 	andeq	r1, r0, r2, asr #16
     1cc:	0182891f 	orreq	r8, r2, pc, lsl r9
     1d0:	31011100 	mrscc	r1, (UNDEF: 17)
     1d4:	20000013 	andcs	r0, r0, r3, lsl r0
     1d8:	00018289 	andeq	r8, r1, r9, lsl #5
     1dc:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
     1e0:	00133119 	andseq	r3, r3, r9, lsl r1
     1e4:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
     1e8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     1ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     1f0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     1f4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     1f8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     1fc:	00130119 	andseq	r0, r3, r9, lsl r1
     200:	00342200 	eorseq	r2, r4, r0, lsl #4
     204:	0b3a0e03 	bleq	e83a18 <__Stack_Size+0xe83618>
     208:	0b39053b 	bleq	e416fc <__Stack_Size+0xe412fc>
     20c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     210:	89230000 	stmdbhi	r3!, {}	; <UNPREDICTABLE>
     214:	11010182 	smlabbne	r1, r2, r1, r0
     218:	00133101 	andseq	r3, r3, r1, lsl #2
     21c:	002e2400 	eoreq	r2, lr, r0, lsl #8
     220:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     224:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     228:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     22c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     230:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     234:	25000019 	strcs	r0, [r0, #-25]	; 0xffffffe7
     238:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     23c:	0b3a0e03 	bleq	e83a50 <__Stack_Size+0xe83650>
     240:	0b39053b 	bleq	e41734 <__Stack_Size+0xe41334>
     244:	00001927 	andeq	r1, r0, r7, lsr #18
     248:	3f012e26 	svccc	0x00012e26
     24c:	3a0e0319 	bcc	380eb8 <__Stack_Size+0x380ab8>
     250:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     254:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     258:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     25c:	97184006 	ldrls	r4, [r8, -r6]
     260:	13011942 	movwne	r1, #6466	; 0x1942
     264:	05270000 	streq	r0, [r7, #-0]!
     268:	3a080300 	bcc	200e70 <__Stack_Size+0x200a70>
     26c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     270:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     274:	1742b717 	smlaldne	fp, r2, r7, r7
     278:	34280000 	strtcc	r0, [r8], #-0
     27c:	3a0e0300 	bcc	380e84 <__Stack_Size+0x380a84>
     280:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     284:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     288:	1742b717 	smlaldne	fp, r2, r7, r7
     28c:	05290000 	streq	r0, [r9, #-0]!
     290:	3a0e0300 	bcc	380e98 <__Stack_Size+0x380a98>
     294:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     298:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     29c:	1742b717 	smlaldne	fp, r2, r7, r7
     2a0:	052a0000 	streq	r0, [sl, #-0]!
     2a4:	3a0e0300 	bcc	380eac <__Stack_Size+0x380aac>
     2a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     2ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     2b0:	2b000018 	blcs	318 <_Minimum_Stack_Size+0x218>
     2b4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     2b8:	0b3a0e03 	bleq	e83acc <__Stack_Size+0xe836cc>
     2bc:	0b39053b 	bleq	e417b0 <__Stack_Size+0xe413b0>
     2c0:	13491927 	movtne	r1, #39207	; 0x9927
     2c4:	13010b20 	movwne	r0, #6944	; 0x1b20
     2c8:	052c0000 	streq	r0, [ip, #-0]!
     2cc:	3a0e0300 	bcc	380ed4 <__Stack_Size+0x380ad4>
     2d0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     2d4:	0013490b 	andseq	r4, r3, fp, lsl #18
     2d8:	00342d00 	eorseq	r2, r4, r0, lsl #26
     2dc:	0b3a0e03 	bleq	e83af0 <__Stack_Size+0xe836f0>
     2e0:	0b39053b 	bleq	e417d4 <__Stack_Size+0xe413d4>
     2e4:	00001349 	andeq	r1, r0, r9, asr #6
     2e8:	3f002e2e 	svccc	0x00002e2e
     2ec:	3a0e0319 	bcc	380f58 <__Stack_Size+0x380b58>
     2f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     2f4:	2019270b 	andscs	r2, r9, fp, lsl #14
     2f8:	2f00000b 	svccs	0x0000000b
     2fc:	0111010b 	tsteq	r1, fp, lsl #2
     300:	13010612 	movwne	r0, #5650	; 0x1612
     304:	89300000 	ldmdbhi	r0!, {}	; <UNPREDICTABLE>
     308:	11010182 	smlabbne	r1, r2, r1, r0
     30c:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     310:	00001331 	andeq	r1, r0, r1, lsr r3
     314:	3f002e31 	svccc	0x00002e31
     318:	3a0e0319 	bcc	380f84 <__Stack_Size+0x380b84>
     31c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     320:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     324:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     328:	97184006 	ldrls	r4, [r8, -r6]
     32c:	00001942 	andeq	r1, r0, r2, asr #18
     330:	3f012e32 	svccc	0x00012e32
     334:	3a0e0319 	bcc	380fa0 <__Stack_Size+0x380ba0>
     338:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     33c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     340:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     344:	97184006 	ldrls	r4, [r8, -r6]
     348:	13011942 	movwne	r1, #6466	; 0x1942
     34c:	34330000 	ldrtcc	r0, [r3], #-0
     350:	3a0e0300 	bcc	380f58 <__Stack_Size+0x380b58>
     354:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     358:	1c13490b 			; <UNDEFINED> instruction: 0x1c13490b
     35c:	3400000b 	strcc	r0, [r0], #-11
     360:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     364:	0b3a0e03 	bleq	e83b78 <__Stack_Size+0xe83778>
     368:	0b390b3b 	bleq	e4305c <__Stack_Size+0xe42c5c>
     36c:	01111927 	tsteq	r1, r7, lsr #18
     370:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     374:	01194297 			; <UNDEFINED> instruction: 0x01194297
     378:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
     37c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     380:	0b3b0b3a 	bleq	ec3070 <__Stack_Size+0xec2c70>
     384:	13490b39 	movtne	r0, #39737	; 0x9b39
     388:	00001802 	andeq	r1, r0, r2, lsl #16
     38c:	03003436 	movweq	r3, #1078	; 0x436
     390:	3b0b3a0e 	blcc	2cebd0 <__Stack_Size+0x2ce7d0>
     394:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     398:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
     39c:	00001742 	andeq	r1, r0, r2, asr #14
     3a0:	3f002e37 	svccc	0x00002e37
     3a4:	3a0e0319 	bcc	381010 <__Stack_Size+0x380c10>
     3a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3ac:	2019270b 	andscs	r2, r9, fp, lsl #14
     3b0:	3800000b 	stmdacc	r0, {r0, r1, r3}
     3b4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     3b8:	0b3a0e03 	bleq	e83bcc <__Stack_Size+0xe837cc>
     3bc:	0b390b3b 	bleq	e430b0 <__Stack_Size+0xe42cb0>
     3c0:	00001927 	andeq	r1, r0, r7, lsr #18
     3c4:	03003439 	movweq	r3, #1081	; 0x439
     3c8:	3b0b3a0e 	blcc	2cec08 <__Stack_Size+0x2ce808>
     3cc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     3d0:	00180213 	andseq	r0, r8, r3, lsl r2
     3d4:	011d3a00 	tsteq	sp, r0, lsl #20
     3d8:	01521331 	cmpeq	r2, r1, lsr r3
     3dc:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
     3e0:	590b5817 	stmdbpl	fp, {r0, r1, r2, r4, fp, ip, lr}
     3e4:	010b570b 	tsteq	fp, fp, lsl #14
     3e8:	3b000013 	blcc	43c <__Stack_Size+0x3c>
     3ec:	1331002e 	teqne	r1, #46	; 0x2e
     3f0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     3f4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     3f8:	3c000019 	stccc	0, cr0, [r0], {25}
     3fc:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     400:	06120111 			; <UNDEFINED> instruction: 0x06120111
     404:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     408:	00130119 	andseq	r0, r3, r9, lsl r1
     40c:	00053d00 	andeq	r3, r5, r0, lsl #26
     410:	17021331 	smladxne	r2, r1, r3, r1
     414:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     418:	00343e00 	eorseq	r3, r4, r0, lsl #28
     41c:	17021331 	smladxne	r2, r1, r3, r1
     420:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     424:	011d3f00 	tsteq	sp, r0, lsl #30
     428:	01521331 	cmpeq	r2, r1, lsr r3
     42c:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
     430:	590b5817 	stmdbpl	fp, {r0, r1, r2, r4, fp, ip, lr}
     434:	010b5705 	tsteq	fp, r5, lsl #14
     438:	40000013 	andmi	r0, r0, r3, lsl r0
     43c:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
     440:	89410000 	stmdbhi	r1, {}^	; <UNPREDICTABLE>
     444:	11010182 	smlabbne	r1, r2, r1, r0
     448:	42000001 	andmi	r0, r0, #1
     44c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     450:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     454:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     458:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     45c:	000b5705 	andeq	r5, fp, r5, lsl #14
     460:	002e4300 	eoreq	r4, lr, r0, lsl #6
     464:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     468:	0e030e6e 	cdpeq	14, 0, cr0, cr3, cr14, {3}
     46c:	0b3b0b3a 	bleq	ec315c <__Stack_Size+0xec2d5c>
     470:	00000b39 	andeq	r0, r0, r9, lsr fp
     474:	3f002e44 	svccc	0x00002e44
     478:	6e193c19 	mrcvs	12, 0, r3, cr9, cr9, {0}
     47c:	3a0e030e 	bcc	3810bc <__Stack_Size+0x380cbc>
     480:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     484:	0000000b 	andeq	r0, r0, fp
     488:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     48c:	030b130e 	movweq	r1, #45838	; 0xb30e
     490:	100e1b0e 	andne	r1, lr, lr, lsl #22
     494:	02000017 	andeq	r0, r0, #23
     498:	0b0b0024 	bleq	2c0530 <__Stack_Size+0x2c0130>
     49c:	0e030b3e 	vmoveq.16	d3[0], r0
     4a0:	16030000 	strne	r0, [r3], -r0
     4a4:	3a080300 	bcc	2010ac <__Stack_Size+0x200cac>
     4a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4ac:	0013490b 	andseq	r4, r3, fp, lsl #18
     4b0:	01130400 	tsteq	r3, r0, lsl #8
     4b4:	0b0b0e03 	bleq	2c3cc8 <__Stack_Size+0x2c38c8>
     4b8:	0b3b0b3a 	bleq	ec31a8 <__Stack_Size+0xec2da8>
     4bc:	13010b39 	movwne	r0, #6969	; 0x1b39
     4c0:	0d050000 	stceq	0, cr0, [r5, #-0]
     4c4:	3a0e0300 	bcc	3810cc <__Stack_Size+0x380ccc>
     4c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4cc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     4d0:	0600000b 	streq	r0, [r0], -fp
     4d4:	0b0b000f 	bleq	2c0518 <__Stack_Size+0x2c0118>
     4d8:	00001349 	andeq	r1, r0, r9, asr #6
     4dc:	03001607 	movweq	r1, #1543	; 0x607
     4e0:	3b0b3a0e 	blcc	2ced20 <__Stack_Size+0x2ce920>
     4e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     4e8:	08000013 	stmdaeq	r0, {r0, r1, r4}
     4ec:	0b0b0024 	bleq	2c0584 <__Stack_Size+0x2c0184>
     4f0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     4f4:	34090000 	strcc	r0, [r9], #-0
     4f8:	3a0e0300 	bcc	381100 <__Stack_Size+0x380d00>
     4fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     500:	3f13490b 	svccc	0x0013490b
     504:	00193c19 	andseq	r3, r9, r9, lsl ip
     508:	01010a00 	tsteq	r1, r0, lsl #20
     50c:	13011349 	movwne	r1, #4937	; 0x1349
     510:	210b0000 	mrscs	r0, (UNDEF: 11)
     514:	2f134900 	svccs	0x00134900
     518:	0c00000b 	stceq	0, cr0, [r0], {11}
     51c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     520:	0b3b0b3a 	bleq	ec3210 <__Stack_Size+0xec2e10>
     524:	13490b39 	movtne	r0, #39737	; 0x9b39
     528:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     52c:	340d0000 	strcc	r0, [sp], #-0
     530:	3a134700 	bcc	4d2138 <__Stack_Size+0x4d1d38>
     534:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     538:	0018020b 	andseq	r0, r8, fp, lsl #4
     53c:	11010000 	mrsne	r0, (UNDEF: 1)
     540:	130e2501 	movwne	r2, #58625	; 0xe501
     544:	1b0e030b 	blne	381178 <__Stack_Size+0x380d78>
     548:	1117550e 	tstne	r7, lr, lsl #10
     54c:	00171001 	andseq	r1, r7, r1
     550:	00240200 	eoreq	r0, r4, r0, lsl #4
     554:	0b3e0b0b 	bleq	f83188 <__Stack_Size+0xf82d88>
     558:	00000e03 	andeq	r0, r0, r3, lsl #28
     55c:	03001603 	movweq	r1, #1539	; 0x603
     560:	3b0b3a08 	blcc	2ced88 <__Stack_Size+0x2ce988>
     564:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     568:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     56c:	0b3e0104 	bleq	f80984 <__Stack_Size+0xf80584>
     570:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     574:	0b3b0b3a 	bleq	ec3264 <__Stack_Size+0xec2e64>
     578:	13010b39 	movwne	r0, #6969	; 0x1b39
     57c:	28050000 	stmdacs	r5, {}	; <UNPREDICTABLE>
     580:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     584:	0600000b 	streq	r0, [r0], -fp
     588:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     58c:	0b3b0b3a 	bleq	ec327c <__Stack_Size+0xec2e7c>
     590:	13490b39 	movtne	r0, #39737	; 0x9b39
     594:	24070000 	strcs	r0, [r7], #-0
     598:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     59c:	0008030b 	andeq	r0, r8, fp, lsl #6
     5a0:	012e0800 			; <UNDEFINED> instruction: 0x012e0800
     5a4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     5a8:	0b3b0b3a 	bleq	ec3298 <__Stack_Size+0xec2e98>
     5ac:	13490b39 	movtne	r0, #39737	; 0x9b39
     5b0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     5b4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     5b8:	00130119 	andseq	r0, r3, r9, lsl r1
     5bc:	00340900 	eorseq	r0, r4, r0, lsl #18
     5c0:	0b3a0e03 	bleq	e83dd4 <__Stack_Size+0xe839d4>
     5c4:	0b390b3b 	bleq	e432b8 <__Stack_Size+0xe42eb8>
     5c8:	17021349 	strne	r1, [r2, -r9, asr #6]
     5cc:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     5d0:	010b0a00 	tsteq	fp, r0, lsl #20
     5d4:	13011755 	movwne	r1, #5973	; 0x1755
     5d8:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
     5dc:	11000182 	smlabbne	r0, r2, r1, r0
     5e0:	00133101 	andseq	r3, r3, r1, lsl #2
     5e4:	82890c00 	addhi	r0, r9, #0, 24
     5e8:	01110101 	tsteq	r1, r1, lsl #2
     5ec:	13011331 	movwne	r1, #4913	; 0x1331
     5f0:	8a0d0000 	bhi	3405f8 <__Stack_Size+0x3401f8>
     5f4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     5f8:	18429118 	stmdane	r2, {r3, r4, r8, ip, pc}^
     5fc:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     600:	3c193f00 	ldccc	15, cr3, [r9], {-0}
     604:	030e6e19 	movweq	r6, #60953	; 0xee19
     608:	3b0b3a0e 	blcc	2cee48 <__Stack_Size+0x2cea48>
     60c:	000b390b 	andeq	r3, fp, fp, lsl #18
     610:	002e0f00 	eoreq	r0, lr, r0, lsl #30
     614:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     618:	0e030e6e 	cdpeq	14, 0, cr0, cr3, cr14, {3}
     61c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     620:	00000b39 	andeq	r0, r0, r9, lsr fp
     624:	01110100 	tsteq	r1, r0, lsl #2
     628:	0b130e25 	bleq	4c3ec4 <__Stack_Size+0x4c3ac4>
     62c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     630:	01111755 	tsteq	r1, r5, asr r7
     634:	00001710 	andeq	r1, r0, r0, lsl r7
     638:	0b002402 	bleq	9648 <__Stack_Size+0x9248>
     63c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     640:	0300000e 	movweq	r0, #14
     644:	08030016 	stmdaeq	r3, {r1, r2, r4}
     648:	0b3b0b3a 	bleq	ec3338 <__Stack_Size+0xec2f38>
     64c:	13490b39 	movtne	r0, #39737	; 0x9b39
     650:	26040000 	strcs	r0, [r4], -r0
     654:	00134900 	andseq	r4, r3, r0, lsl #18
     658:	00350500 	eorseq	r0, r5, r0, lsl #10
     65c:	00001349 	andeq	r1, r0, r9, asr #6
     660:	03001606 	movweq	r1, #1542	; 0x606
     664:	3b0b3a0e 	blcc	2ceea4 <__Stack_Size+0x2ceaa4>
     668:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     66c:	07000013 	smladeq	r0, r3, r0, r0
     670:	0b3e0104 	bleq	f80a88 <__Stack_Size+0xf80688>
     674:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     678:	0b3b0b3a 	bleq	ec3368 <__Stack_Size+0xec2f68>
     67c:	13010b39 	movwne	r0, #6969	; 0x1b39
     680:	28080000 	stmdacs	r8, {}	; <UNPREDICTABLE>
     684:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     688:	0900000b 	stmdbeq	r0, {r0, r1, r3}
     68c:	0b0b0113 	bleq	2c0ae0 <__Stack_Size+0x2c06e0>
     690:	0b3b0b3a 	bleq	ec3380 <__Stack_Size+0xec2f80>
     694:	13010b39 	movwne	r0, #6969	; 0x1b39
     698:	0d0a0000 	stceq	0, cr0, [sl, #-0]
     69c:	3a080300 	bcc	2012a4 <__Stack_Size+0x200ea4>
     6a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6a4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     6a8:	0b00000b 	bleq	6dc <__Stack_Size+0x2dc>
     6ac:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     6b0:	0b3b0b3a 	bleq	ec33a0 <__Stack_Size+0xec2fa0>
     6b4:	13490b39 	movtne	r0, #39737	; 0x9b39
     6b8:	00000b38 	andeq	r0, r0, r8, lsr fp
     6bc:	0b01130c 	bleq	452f4 <__Stack_Size+0x44ef4>
     6c0:	3b0b3a05 	blcc	2ceedc <__Stack_Size+0x2ceadc>
     6c4:	010b390b 	tsteq	fp, fp, lsl #18
     6c8:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     6cc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     6d0:	0b3b0b3a 	bleq	ec33c0 <__Stack_Size+0xec2fc0>
     6d4:	13490b39 	movtne	r0, #39737	; 0x9b39
     6d8:	00000538 	andeq	r0, r0, r8, lsr r5
     6dc:	03000d0e 	movweq	r0, #3342	; 0xd0e
     6e0:	3b0b3a08 	blcc	2cef08 <__Stack_Size+0x2ceb08>
     6e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6e8:	00053813 	andeq	r3, r5, r3, lsl r8
     6ec:	01010f00 	tsteq	r1, r0, lsl #30
     6f0:	13011349 	movwne	r1, #4937	; 0x1349
     6f4:	21100000 	tstcs	r0, r0
     6f8:	2f134900 	svccs	0x00134900
     6fc:	1100000b 	tstne	r0, fp
     700:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     704:	0b3a0b0b 	bleq	e83338 <__Stack_Size+0xe82f38>
     708:	0b390b3b 	bleq	e433fc <__Stack_Size+0xe42ffc>
     70c:	00001301 	andeq	r1, r0, r1, lsl #6
     710:	27001512 	smladcs	r0, r2, r5, r1
     714:	13000019 	movwne	r0, #25
     718:	0b0b000f 	bleq	2c075c <__Stack_Size+0x2c035c>
     71c:	00001349 	andeq	r1, r0, r9, asr #6
     720:	03003414 	movweq	r3, #1044	; 0x414
     724:	3b0b3a0e 	blcc	2cef64 <__Stack_Size+0x2ceb64>
     728:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     72c:	3c193f13 	ldccc	15, cr3, [r9], {19}
     730:	15000019 	strne	r0, [r0, #-25]	; 0xffffffe7
     734:	0b0b0024 	bleq	2c07cc <__Stack_Size+0x2c03cc>
     738:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     73c:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
     740:	03193f01 	tsteq	r9, #1, 30
     744:	3b0b3a0e 	blcc	2cef84 <__Stack_Size+0x2ceb84>
     748:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     74c:	11134919 	tstne	r3, r9, lsl r9
     750:	40061201 	andmi	r1, r6, r1, lsl #4
     754:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     758:	00001301 	andeq	r1, r0, r1, lsl #6
     75c:	03003417 	movweq	r3, #1047	; 0x417
     760:	3b0b3a0e 	blcc	2cefa0 <__Stack_Size+0x2ceba0>
     764:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     768:	00061c13 	andeq	r1, r6, r3, lsl ip
     76c:	00051800 	andeq	r1, r5, r0, lsl #16
     770:	0b3a0803 	bleq	e82784 <__Stack_Size+0xe82384>
     774:	0b39053b 	bleq	e41c68 <__Stack_Size+0xe41868>
     778:	17021349 	strne	r1, [r2, -r9, asr #6]
     77c:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     780:	00341900 	eorseq	r1, r4, r0, lsl #18
     784:	0b3a0e03 	bleq	e83f98 <__Stack_Size+0xe83b98>
     788:	0b39053b 	bleq	e41c7c <__Stack_Size+0xe4187c>
     78c:	17021349 	strne	r1, [r2, -r9, asr #6]
     790:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     794:	002e1a00 	eoreq	r1, lr, r0, lsl #20
     798:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     79c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     7a0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     7a4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     7a8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     7ac:	1b000019 	blne	818 <__Stack_Size+0x418>
     7b0:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     7b4:	0b3a0e03 	bleq	e83fc8 <__Stack_Size+0xe83bc8>
     7b8:	0b39053b 	bleq	e41cac <__Stack_Size+0xe418ac>
     7bc:	0b201927 	bleq	806c60 <__Stack_Size+0x806860>
     7c0:	051c0000 	ldreq	r0, [ip, #-0]
     7c4:	3a0e0300 	bcc	3813cc <__Stack_Size+0x380fcc>
     7c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     7cc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     7d0:	1742b717 	smlaldne	fp, r2, r7, r7
     7d4:	051d0000 	ldreq	r0, [sp, #-0]
     7d8:	3a0e0300 	bcc	3813e0 <__Stack_Size+0x380fe0>
     7dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     7e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     7e4:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
     7e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     7ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     7f0:	13490b39 	movtne	r0, #39737	; 0x9b39
     7f4:	00001802 	andeq	r1, r0, r2, lsl #16
     7f8:	0182891f 	orreq	r8, r2, pc, lsl r9
     7fc:	31011100 	mrscc	r1, (UNDEF: 17)
     800:	20000013 	andcs	r0, r0, r3, lsl r0
     804:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     808:	0b3a0e03 	bleq	e8401c <__Stack_Size+0xe83c1c>
     80c:	0b39053b 	bleq	e41d00 <__Stack_Size+0xe41900>
     810:	01111927 	tsteq	r1, r7, lsr #18
     814:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     818:	01194297 			; <UNDEFINED> instruction: 0x01194297
     81c:	21000013 	tstcs	r0, r3, lsl r0
     820:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     824:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     828:	13490b39 	movtne	r0, #39737	; 0x9b39
     82c:	00000d1c 	andeq	r0, r0, ip, lsl sp
     830:	3f012e22 	svccc	0x00012e22
     834:	3a0e0319 	bcc	3814a0 <__Stack_Size+0x3810a0>
     838:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     83c:	1113490b 	tstne	r3, fp, lsl #18
     840:	40061201 	andmi	r1, r6, r1, lsl #4
     844:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     848:	00001301 	andeq	r1, r0, r1, lsl #6
     84c:	03003423 	movweq	r3, #1059	; 0x423
     850:	3b0b3a0e 	blcc	2cf090 <__Stack_Size+0x2cec90>
     854:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     858:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
     85c:	00001742 	andeq	r1, r0, r2, asr #14
     860:	01828924 	orreq	r8, r2, r4, lsr #18
     864:	31011101 	tstcc	r1, r1, lsl #2
     868:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
     86c:	0001828a 	andeq	r8, r1, sl, lsl #5
     870:	42911802 	addsmi	r1, r1, #131072	; 0x20000
     874:	26000018 			; <UNDEFINED> instruction: 0x26000018
     878:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     87c:	0b3a0e03 	bleq	e84090 <__Stack_Size+0xe83c90>
     880:	0b390b3b 	bleq	e43574 <__Stack_Size+0xe43174>
     884:	01111927 	tsteq	r1, r7, lsr #18
     888:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     88c:	01194297 			; <UNDEFINED> instruction: 0x01194297
     890:	27000013 	smladcs	r0, r3, r0, r0
     894:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     898:	0b3b0b3a 	bleq	ec3588 <__Stack_Size+0xec3188>
     89c:	13490b39 	movtne	r0, #39737	; 0x9b39
     8a0:	00001802 	andeq	r1, r0, r2, lsl #16
     8a4:	03000528 	movweq	r0, #1320	; 0x528
     8a8:	3b0b3a0e 	blcc	2cf0e8 <__Stack_Size+0x2cece8>
     8ac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8b0:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
     8b4:	00001742 	andeq	r1, r0, r2, asr #14
     8b8:	31001d29 	tstcc	r0, r9, lsr #26
     8bc:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     8c0:	17550b42 	ldrbne	r0, [r5, -r2, asr #22]
     8c4:	0b590b58 	bleq	164362c <__Stack_Size+0x164322c>
     8c8:	00000b57 	andeq	r0, r0, r7, asr fp
     8cc:	0182892a 	orreq	r8, r2, sl, lsr #18
     8d0:	95011101 	strls	r1, [r1, #-257]	; 0xfffffeff
     8d4:	13311942 	teqne	r1, #1081344	; 0x108000
     8d8:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     8dc:	03193f01 	tsteq	r9, #1, 30
     8e0:	3b0b3a0e 	blcc	2cf120 <__Stack_Size+0x2ced20>
     8e4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     8e8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     8ec:	01184006 	tsteq	r8, r6
     8f0:	2c000013 	stccs	0, cr0, [r0], {19}
     8f4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     8f8:	0b3a0e03 	bleq	e8410c <__Stack_Size+0xe83d0c>
     8fc:	0b390b3b 	bleq	e435f0 <__Stack_Size+0xe431f0>
     900:	13491927 	movtne	r1, #39207	; 0x9927
     904:	06120111 			; <UNDEFINED> instruction: 0x06120111
     908:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     90c:	00130119 	andseq	r0, r3, r9, lsl r1
     910:	00342d00 	eorseq	r2, r4, r0, lsl #26
     914:	0b3a0803 	bleq	e82928 <__Stack_Size+0xe82528>
     918:	0b390b3b 	bleq	e4360c <__Stack_Size+0xe4320c>
     91c:	17021349 	strne	r1, [r2, -r9, asr #6]
     920:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     924:	010b2e00 	tsteq	fp, r0, lsl #28
     928:	06120111 			; <UNDEFINED> instruction: 0x06120111
     92c:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
     930:	03193f00 	tsteq	r9, #0, 30
     934:	3b0b3a0e 	blcc	2cf174 <__Stack_Size+0x2ced74>
     938:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     93c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     940:	97184006 	ldrls	r4, [r8, -r6]
     944:	00001942 	andeq	r1, r0, r2, asr #18
     948:	03003430 	movweq	r3, #1072	; 0x430
     94c:	3b0b3a0e 	blcc	2cf18c <__Stack_Size+0x2ced8c>
     950:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     954:	000b1c13 	andeq	r1, fp, r3, lsl ip
     958:	00053100 	andeq	r3, r5, r0, lsl #2
     95c:	0b3a0803 	bleq	e82970 <__Stack_Size+0xe82570>
     960:	0b390b3b 	bleq	e43654 <__Stack_Size+0xe43254>
     964:	17021349 	strne	r1, [r2, -r9, asr #6]
     968:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     96c:	82893200 	addhi	r3, r9, #0, 4
     970:	01110101 	tsteq	r1, r1, lsl #2
     974:	13011331 	movwne	r1, #4913	; 0x1331
     978:	05330000 	ldreq	r0, [r3, #-0]!
     97c:	3a080300 	bcc	201584 <__Stack_Size+0x201184>
     980:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     984:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     988:	34000018 	strcc	r0, [r0], #-24	; 0xffffffe8
     98c:	1331002e 	teqne	r1, #46	; 0x2e
     990:	06120111 			; <UNDEFINED> instruction: 0x06120111
     994:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     998:	35000019 	strcc	r0, [r0, #-25]	; 0xffffffe7
     99c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     9a0:	0e6e193c 			; <UNDEFINED> instruction: 0x0e6e193c
     9a4:	0b3a0e03 	bleq	e841b8 <__Stack_Size+0xe83db8>
     9a8:	0b390b3b 	bleq	e4369c <__Stack_Size+0xe4329c>
     9ac:	01000000 	mrseq	r0, (UNDEF: 0)
     9b0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     9b4:	0e030b13 	vmoveq.32	d3[0], r0
     9b8:	17550e1b 	smmlane	r5, fp, lr, r0
     9bc:	17100111 			; <UNDEFINED> instruction: 0x17100111
     9c0:	24020000 	strcs	r0, [r2], #-0
     9c4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     9c8:	000e030b 	andeq	r0, lr, fp, lsl #6
     9cc:	00160300 	andseq	r0, r6, r0, lsl #6
     9d0:	0b3a0803 	bleq	e829e4 <__Stack_Size+0xe825e4>
     9d4:	0b390b3b 	bleq	e436c8 <__Stack_Size+0xe432c8>
     9d8:	00001349 	andeq	r1, r0, r9, asr #6
     9dc:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     9e0:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     9e4:	0b3e0104 	bleq	f80dfc <__Stack_Size+0xf809fc>
     9e8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     9ec:	0b3b0b3a 	bleq	ec36dc <__Stack_Size+0xec32dc>
     9f0:	13010b39 	movwne	r0, #6969	; 0x1b39
     9f4:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
     9f8:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     9fc:	0700000b 	streq	r0, [r0, -fp]
     a00:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     a04:	0b3b0b3a 	bleq	ec36f4 <__Stack_Size+0xec32f4>
     a08:	13490b39 	movtne	r0, #39737	; 0x9b39
     a0c:	0f080000 	svceq	0x00080000
     a10:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     a14:	09000013 	stmdbeq	r0, {r0, r1, r4}
     a18:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     a1c:	0b3a0b0b 	bleq	e83650 <__Stack_Size+0xe83250>
     a20:	0b390b3b 	bleq	e43714 <__Stack_Size+0xe43314>
     a24:	00001301 	andeq	r1, r0, r1, lsl #6
     a28:	03000d0a 	movweq	r0, #3338	; 0xd0a
     a2c:	3b0b3a0e 	blcc	2cf26c <__Stack_Size+0x2cee6c>
     a30:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     a34:	000b3813 	andeq	r3, fp, r3, lsl r8
     a38:	01150b00 	tsteq	r5, r0, lsl #22
     a3c:	13491927 	movtne	r1, #39207	; 0x9927
     a40:	00001301 	andeq	r1, r0, r1, lsl #6
     a44:	4900050c 	stmdbmi	r0, {r2, r3, r8, sl}
     a48:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     a4c:	08030113 	stmdaeq	r3, {r0, r1, r4, r8}
     a50:	0b3a0b0b 	bleq	e83684 <__Stack_Size+0xe83284>
     a54:	0b390b3b 	bleq	e43748 <__Stack_Size+0xe43348>
     a58:	00001301 	andeq	r1, r0, r1, lsl #6
     a5c:	03000d0e 	movweq	r0, #3342	; 0xd0e
     a60:	3b0b3a08 	blcc	2cf288 <__Stack_Size+0x2cee88>
     a64:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     a68:	000b3813 	andeq	r3, fp, r3, lsl r8
     a6c:	01170f00 	tsteq	r7, r0, lsl #30
     a70:	0b3a0b0b 	bleq	e836a4 <__Stack_Size+0xe832a4>
     a74:	0b390b3b 	bleq	e43768 <__Stack_Size+0xe43368>
     a78:	00001301 	andeq	r1, r0, r1, lsl #6
     a7c:	03000d10 	movweq	r0, #3344	; 0xd10
     a80:	3b0b3a08 	blcc	2cf2a8 <__Stack_Size+0x2ceea8>
     a84:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     a88:	11000013 	tstne	r0, r3, lsl r0
     a8c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     a90:	0b3b0b3a 	bleq	ec3780 <__Stack_Size+0xec3380>
     a94:	13490b39 	movtne	r0, #39737	; 0x9b39
     a98:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     a9c:	24120000 	ldrcs	r0, [r2], #-0
     aa0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     aa4:	0008030b 	andeq	r0, r8, fp, lsl #6
     aa8:	01041300 	mrseq	r1, LR_abt
     aac:	0b3e0e03 	bleq	f842c0 <__Stack_Size+0xf83ec0>
     ab0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     ab4:	0b3b0b3a 	bleq	ec37a4 <__Stack_Size+0xec33a4>
     ab8:	13010b39 	movwne	r0, #6969	; 0x1b39
     abc:	28140000 	ldmdacs	r4, {}	; <UNPREDICTABLE>
     ac0:	1c080300 	stcne	3, cr0, [r8], {-0}
     ac4:	1500000b 	strne	r0, [r0, #-11]
     ac8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     acc:	0b3b0b3a 	bleq	ec37bc <__Stack_Size+0xec33bc>
     ad0:	13490b39 	movtne	r0, #39737	; 0x9b39
     ad4:	00001802 	andeq	r1, r0, r2, lsl #16
     ad8:	03003416 	movweq	r3, #1046	; 0x416
     adc:	3b0b3a0e 	blcc	2cf31c <__Stack_Size+0x2cef1c>
     ae0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ae4:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     ae8:	17000018 	smladne	r0, r8, r0, r0
     aec:	13470034 	movtne	r0, #28724	; 0x7034
     af0:	0b3b0b3a 	bleq	ec37e0 <__Stack_Size+0xec33e0>
     af4:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
     af8:	01180000 	tsteq	r8, r0
     afc:	01134901 	tsteq	r3, r1, lsl #18
     b00:	19000013 	stmdbne	r0, {r0, r1, r4}
     b04:	13490021 	movtne	r0, #36897	; 0x9021
     b08:	0000052f 	andeq	r0, r0, pc, lsr #10
     b0c:	0300341a 	movweq	r3, #1050	; 0x41a
     b10:	3b0b3a0e 	blcc	2cf350 <__Stack_Size+0x2cef50>
     b14:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b18:	0b018813 	bleq	62b6c <__Stack_Size+0x6276c>
     b1c:	00001802 	andeq	r1, r0, r2, lsl #16
     b20:	3f002e1b 	svccc	0x00002e1b
     b24:	3a0e0319 	bcc	381790 <__Stack_Size+0x381390>
     b28:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b2c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     b30:	97184006 	ldrls	r4, [r8, -r6]
     b34:	00001942 	andeq	r1, r0, r2, asr #18
     b38:	3f002e1c 	svccc	0x00002e1c
     b3c:	3a0e0319 	bcc	3817a8 <__Stack_Size+0x3813a8>
     b40:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b44:	1113490b 	tstne	r3, fp, lsl #18
     b48:	40061201 	andmi	r1, r6, r1, lsl #4
     b4c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     b50:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
     b54:	03193f01 	tsteq	r9, #1, 30
     b58:	3b0b3a0e 	blcc	2cf398 <__Stack_Size+0x2cef98>
     b5c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     b60:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     b64:	97184006 	ldrls	r4, [r8, -r6]
     b68:	13011942 	movwne	r1, #6466	; 0x1942
     b6c:	051e0000 	ldreq	r0, [lr, #-0]
     b70:	3a0e0300 	bcc	381778 <__Stack_Size+0x381378>
     b74:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b78:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     b7c:	1f000018 	svcne	0x00000018
     b80:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     b84:	0b3a0e03 	bleq	e84398 <__Stack_Size+0xe83f98>
     b88:	0b39053b 	bleq	e4207c <__Stack_Size+0xe41c7c>
     b8c:	13491927 	movtne	r1, #39207	; 0x9927
     b90:	06120111 			; <UNDEFINED> instruction: 0x06120111
     b94:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     b98:	20000019 	andcs	r0, r0, r9, lsl r0
     b9c:	08030034 	stmdaeq	r3, {r2, r4, r5}
     ba0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ba4:	13490b39 	movtne	r0, #39737	; 0x9b39
     ba8:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
     bac:	21000017 	tstcs	r0, r7, lsl r0
     bb0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     bb4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     bb8:	13490b39 	movtne	r0, #39737	; 0x9b39
     bbc:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
     bc0:	11010182 	smlabbne	r1, r2, r1, r0
     bc4:	01133101 	tsteq	r3, r1, lsl #2
     bc8:	23000013 	movwcs	r0, #19
     bcc:	0001828a 	andeq	r8, r1, sl, lsl #5
     bd0:	42911802 	addsmi	r1, r1, #131072	; 0x20000
     bd4:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
     bd8:	01018289 	smlabbeq	r1, r9, r2, r8
     bdc:	13310111 	teqne	r1, #1073741828	; 0x40000004
     be0:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     be4:	03193f01 	tsteq	r9, #1, 30
     be8:	3b0b3a0e 	blcc	2cf428 <__Stack_Size+0x2cf028>
     bec:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     bf0:	11134919 	tstne	r3, r9, lsl r9
     bf4:	40061201 	andmi	r1, r6, r1, lsl #4
     bf8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     bfc:	00001301 	andeq	r1, r0, r1, lsl #6
     c00:	03000526 	movweq	r0, #1318	; 0x526
     c04:	3b0b3a0e 	blcc	2cf444 <__Stack_Size+0x2cf044>
     c08:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     c0c:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
     c10:	00001742 	andeq	r1, r0, r2, asr #14
     c14:	3f002e27 	svccc	0x00002e27
     c18:	3a0e0319 	bcc	381884 <__Stack_Size+0x381484>
     c1c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c20:	1119270b 	tstne	r9, fp, lsl #14
     c24:	40061201 	andmi	r1, r6, r1, lsl #4
     c28:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     c2c:	34280000 	strtcc	r0, [r8], #-0
     c30:	3a0e0300 	bcc	381838 <__Stack_Size+0x381438>
     c34:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c38:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     c3c:	1742b717 	smlaldne	fp, r2, r7, r7
     c40:	89290000 	stmdbhi	r9!, {}	; <UNPREDICTABLE>
     c44:	11000182 	smlabbne	r0, r2, r1, r0
     c48:	00133101 	andseq	r3, r3, r1, lsl #2
     c4c:	82892a00 	addhi	r2, r9, #0, 20
     c50:	01110001 	tsteq	r1, r1
     c54:	31194295 			; <UNDEFINED> instruction: 0x31194295
     c58:	2b000013 	blcs	cac <__Stack_Size+0x8ac>
     c5c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     c60:	0b3a0e03 	bleq	e84474 <__Stack_Size+0xe84074>
     c64:	0b390b3b 	bleq	e43958 <__Stack_Size+0xe43558>
     c68:	13491927 	movtne	r1, #39207	; 0x9927
     c6c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c70:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     c74:	00130119 	andseq	r0, r3, r9, lsl r1
     c78:	00342c00 	eorseq	r2, r4, r0, lsl #24
     c7c:	0b3a0e03 	bleq	e84490 <__Stack_Size+0xe84090>
     c80:	0b390b3b 	bleq	e43974 <__Stack_Size+0xe43574>
     c84:	17021349 	strne	r1, [r2, -r9, asr #6]
     c88:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     c8c:	002e2d00 	eoreq	r2, lr, r0, lsl #26
     c90:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     c94:	0b3b0b3a 	bleq	ec3984 <__Stack_Size+0xec3584>
     c98:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     c9c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ca0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     ca4:	2e000019 	mcrcs	0, 0, r0, cr0, cr9, {0}
     ca8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     cac:	0e6e193c 			; <UNDEFINED> instruction: 0x0e6e193c
     cb0:	0b3a0e03 	bleq	e844c4 <__Stack_Size+0xe840c4>
     cb4:	0b39053b 	bleq	e421a8 <__Stack_Size+0xe41da8>
     cb8:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
     cbc:	3c193f00 	ldccc	15, cr3, [r9], {-0}
     cc0:	030e6e19 	movweq	r6, #60953	; 0xee19
     cc4:	3b0b3a0e 	blcc	2cf504 <__Stack_Size+0x2cf104>
     cc8:	000b390b 	andeq	r3, fp, fp, lsl #18
     ccc:	11010000 	mrsne	r0, (UNDEF: 1)
     cd0:	130e2501 	movwne	r2, #58625	; 0xe501
     cd4:	1b0e030b 	blne	381908 <__Stack_Size+0x381508>
     cd8:	1117550e 	tstne	r7, lr, lsl #10
     cdc:	00171001 	andseq	r1, r7, r1
     ce0:	00240200 	eoreq	r0, r4, r0, lsl #4
     ce4:	0b3e0b0b 	bleq	f83918 <__Stack_Size+0xf83518>
     ce8:	00000e03 	andeq	r0, r0, r3, lsl #28
     cec:	03001603 	movweq	r1, #1539	; 0x603
     cf0:	3b0b3a08 	blcc	2cf518 <__Stack_Size+0x2cf118>
     cf4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     cf8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     cfc:	13490035 	movtne	r0, #36917	; 0x9035
     d00:	04050000 	streq	r0, [r5], #-0
     d04:	3e0e0301 	cdpcc	3, 0, cr0, cr14, cr1, {0}
     d08:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     d0c:	3b0b3a13 	blcc	2cf560 <__Stack_Size+0x2cf160>
     d10:	010b390b 	tsteq	fp, fp, lsl #18
     d14:	06000013 			; <UNDEFINED> instruction: 0x06000013
     d18:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     d1c:	00000b1c 	andeq	r0, r0, ip, lsl fp
     d20:	03001607 	movweq	r1, #1543	; 0x607
     d24:	3b0b3a0e 	blcc	2cf564 <__Stack_Size+0x2cf164>
     d28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     d2c:	08000013 	stmdaeq	r0, {r0, r1, r4}
     d30:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     d34:	0b3a0e03 	bleq	e84548 <__Stack_Size+0xe84148>
     d38:	0b39053b 	bleq	e4222c <__Stack_Size+0xe41e2c>
     d3c:	13491927 	movtne	r1, #39207	; 0x9927
     d40:	06120111 			; <UNDEFINED> instruction: 0x06120111
     d44:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     d48:	00130119 	andseq	r0, r3, r9, lsl r1
     d4c:	00050900 	andeq	r0, r5, r0, lsl #18
     d50:	0b3a0e03 	bleq	e84564 <__Stack_Size+0xe84164>
     d54:	0b39053b 	bleq	e42248 <__Stack_Size+0xe41e48>
     d58:	17021349 	strne	r1, [r2, -r9, asr #6]
     d5c:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     d60:	00340a00 	eorseq	r0, r4, r0, lsl #20
     d64:	0b3a0e03 	bleq	e84578 <__Stack_Size+0xe84178>
     d68:	0b39053b 	bleq	e4225c <__Stack_Size+0xe41e5c>
     d6c:	17021349 	strne	r1, [r2, -r9, asr #6]
     d70:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     d74:	00050b00 	andeq	r0, r5, r0, lsl #22
     d78:	0b3a0803 	bleq	e82d8c <__Stack_Size+0xe8298c>
     d7c:	0b39053b 	bleq	e42270 <__Stack_Size+0xe41e70>
     d80:	17021349 	strne	r1, [r2, -r9, asr #6]
     d84:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     d88:	00050c00 	andeq	r0, r5, r0, lsl #24
     d8c:	0b3a0803 	bleq	e82da0 <__Stack_Size+0xe829a0>
     d90:	0b39053b 	bleq	e42284 <__Stack_Size+0xe41e84>
     d94:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     d98:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
     d9c:	03193f01 	tsteq	r9, #1, 30
     da0:	3b0b3a0e 	blcc	2cf5e0 <__Stack_Size+0x2cf1e0>
     da4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     da8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     dac:	97184006 	ldrls	r4, [r8, -r6]
     db0:	13011942 	movwne	r1, #6466	; 0x1942
     db4:	050e0000 	streq	r0, [lr, #-0]
     db8:	3a0e0300 	bcc	3819c0 <__Stack_Size+0x3815c0>
     dbc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     dc0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     dc4:	0f000018 	svceq	0x00000018
     dc8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     dcc:	0b3a0e03 	bleq	e845e0 <__Stack_Size+0xe841e0>
     dd0:	0b39053b 	bleq	e422c4 <__Stack_Size+0xe41ec4>
     dd4:	13491927 	movtne	r1, #39207	; 0x9927
     dd8:	00001301 	andeq	r1, r0, r1, lsl #6
     ddc:	03000510 	movweq	r0, #1296	; 0x510
     de0:	3b0b3a0e 	blcc	2cf620 <__Stack_Size+0x2cf220>
     de4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     de8:	11000013 	tstne	r0, r3, lsl r0
     dec:	0111010b 	tsteq	r1, fp, lsl #2
     df0:	00000612 	andeq	r0, r0, r2, lsl r6
     df4:	55010b12 	strpl	r0, [r1, #-2834]	; 0xfffff4ee
     df8:	13000017 	movwne	r0, #23
     dfc:	0b0b000f 	bleq	2c0e40 <__Stack_Size+0x2c0a40>
     e00:	00001349 	andeq	r1, r0, r9, asr #6
     e04:	55010b14 	strpl	r0, [r1, #-2836]	; 0xfffff4ec
     e08:	00130117 	andseq	r0, r3, r7, lsl r1
     e0c:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
     e10:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     e14:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e18:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     e1c:	00001301 	andeq	r1, r0, r1, lsl #6
     e20:	3f012e16 	svccc	0x00012e16
     e24:	3a0e0319 	bcc	381a90 <__Stack_Size+0x381690>
     e28:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e2c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     e30:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     e34:	97184006 	ldrls	r4, [r8, -r6]
     e38:	13011942 	movwne	r1, #6466	; 0x1942
     e3c:	05170000 	ldreq	r0, [r7, #-0]
     e40:	3a0e0300 	bcc	381a48 <__Stack_Size+0x381648>
     e44:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e48:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e4c:	1742b717 	smlaldne	fp, r2, r7, r7
     e50:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     e54:	03193f01 	tsteq	r9, #1, 30
     e58:	3b0b3a0e 	blcc	2cf698 <__Stack_Size+0x2cf298>
     e5c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     e60:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     e64:	97184006 	ldrls	r4, [r8, -r6]
     e68:	13011942 	movwne	r1, #6466	; 0x1942
     e6c:	05190000 	ldreq	r0, [r9, #-0]
     e70:	3a0e0300 	bcc	381a78 <__Stack_Size+0x381678>
     e74:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e78:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e7c:	1a000018 	bne	ee4 <__Stack_Size+0xae4>
     e80:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     e84:	0b3b0b3a 	bleq	ec3b74 <__Stack_Size+0xec3774>
     e88:	13490b39 	movtne	r0, #39737	; 0x9b39
     e8c:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
     e90:	1b000017 	blne	ef4 <__Stack_Size+0xaf4>
     e94:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     e98:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     e9c:	5817550b 	ldmdapl	r7, {r0, r1, r3, r8, sl, ip, lr}
     ea0:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     ea4:	1c00000b 	stcne	0, cr0, [r0], {11}
     ea8:	13310005 	teqne	r1, #5
     eac:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
     eb0:	1d000017 	stcne	0, cr0, [r0, #-92]	; 0xffffffa4
     eb4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     eb8:	0b3a0e03 	bleq	e846cc <__Stack_Size+0xe842cc>
     ebc:	0b390b3b 	bleq	e43bb0 <__Stack_Size+0xe437b0>
     ec0:	13491927 	movtne	r1, #39207	; 0x9927
     ec4:	13010b20 	movwne	r0, #6944	; 0x1b20
     ec8:	051e0000 	ldreq	r0, [lr, #-0]
     ecc:	3a0e0300 	bcc	381ad4 <__Stack_Size+0x3816d4>
     ed0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ed4:	0013490b 	andseq	r4, r3, fp, lsl #18
     ed8:	002e1f00 	eoreq	r1, lr, r0, lsl #30
     edc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     ee0:	0b3b0b3a 	bleq	ec3bd0 <__Stack_Size+0xec37d0>
     ee4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     ee8:	01111349 	tsteq	r1, r9, asr #6
     eec:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ef0:	00194297 	mulseq	r9, r7, r2
     ef4:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
     ef8:	01111331 	tsteq	r1, r1, lsr r3
     efc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     f00:	00194297 	mulseq	r9, r7, r2
     f04:	11010000 	mrsne	r0, (UNDEF: 1)
     f08:	130e2501 	movwne	r2, #58625	; 0xe501
     f0c:	1b0e030b 	blne	381b40 <__Stack_Size+0x381740>
     f10:	1117550e 	tstne	r7, lr, lsl #10
     f14:	00171001 	andseq	r1, r7, r1
     f18:	00240200 	eoreq	r0, r4, r0, lsl #4
     f1c:	0b3e0b0b 	bleq	f83b50 <__Stack_Size+0xf83750>
     f20:	00000e03 	andeq	r0, r0, r3, lsl #28
     f24:	03001603 	movweq	r1, #1539	; 0x603
     f28:	3b0b3a08 	blcc	2cf750 <__Stack_Size+0x2cf350>
     f2c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f30:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     f34:	13490035 	movtne	r0, #36917	; 0x9035
     f38:	34050000 	strcc	r0, [r5], #-0
     f3c:	3a0e0300 	bcc	381b44 <__Stack_Size+0x381744>
     f40:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f44:	3f13490b 	svccc	0x0013490b
     f48:	00193c19 	andseq	r3, r9, r9, lsl ip
     f4c:	00150600 	andseq	r0, r5, r0, lsl #12
     f50:	00001927 	andeq	r1, r0, r7, lsr #18
     f54:	0b000f07 	bleq	4b78 <__Stack_Size+0x4778>
     f58:	0013490b 	andseq	r4, r3, fp, lsl #18
     f5c:	00340800 	eorseq	r0, r4, r0, lsl #16
     f60:	0b3a0e03 	bleq	e84774 <__Stack_Size+0xe84374>
     f64:	0b390b3b 	bleq	e43c58 <__Stack_Size+0xe43858>
     f68:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     f6c:	0000193c 	andeq	r1, r0, ip, lsr r9
     f70:	47003409 	strmi	r3, [r0, -r9, lsl #8]
     f74:	3b0b3a13 	blcc	2cf7c8 <__Stack_Size+0x2cf3c8>
     f78:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
     f7c:	0a000018 	beq	fe4 <__Stack_Size+0xbe4>
     f80:	13490101 	movtne	r0, #37121	; 0x9101
     f84:	00001301 	andeq	r1, r0, r1, lsl #6
     f88:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
     f8c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     f90:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
     f94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     f98:	0b3b0b3a 	bleq	ec3c88 <__Stack_Size+0xec3888>
     f9c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     fa0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     fa4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     fa8:	00130119 	andseq	r0, r3, r9, lsl r1
     fac:	00340d00 	eorseq	r0, r4, r0, lsl #26
     fb0:	0b3a0e03 	bleq	e847c4 <__Stack_Size+0xe843c4>
     fb4:	0b390b3b 	bleq	e43ca8 <__Stack_Size+0xe438a8>
     fb8:	17021349 	strne	r1, [r2, -r9, asr #6]
     fbc:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
     fc0:	010b0e00 	tsteq	fp, r0, lsl #28
     fc4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     fc8:	00001301 	andeq	r1, r0, r1, lsl #6
     fcc:	01010b0f 	tsteq	r1, pc, lsl #22
     fd0:	10000013 	andne	r0, r0, r3, lsl r0
     fd4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     fd8:	0b3b0b3a 	bleq	ec3cc8 <__Stack_Size+0xec38c8>
     fdc:	13490b39 	movtne	r0, #39737	; 0x9b39
     fe0:	34110000 	ldrcc	r0, [r1], #-0
     fe4:	3a0e0300 	bcc	381bec <__Stack_Size+0x3817ec>
     fe8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ff0:	12000018 	andne	r0, r0, #24
     ff4:	00018289 	andeq	r8, r1, r9, lsl #5
     ff8:	13310111 	teqne	r1, #1073741828	; 0x40000004
     ffc:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    1000:	3c193f00 	ldccc	15, cr3, [r9], {-0}
    1004:	030e6e19 	movweq	r6, #60953	; 0xee19
    1008:	3b0b3a0e 	blcc	2cf848 <__Stack_Size+0x2cf448>
    100c:	000b390b 	andeq	r3, fp, fp, lsl #18
    1010:	11010000 	mrsne	r0, (UNDEF: 1)
    1014:	130e2501 	movwne	r2, #58625	; 0xe501
    1018:	1b0e030b 	blne	381c4c <__Stack_Size+0x38184c>
    101c:	1117550e 	tstne	r7, lr, lsl #10
    1020:	00171001 	andseq	r1, r7, r1
    1024:	00240200 	eoreq	r0, r4, r0, lsl #4
    1028:	0b3e0b0b 	bleq	f83c5c <__Stack_Size+0xf8385c>
    102c:	00000e03 	andeq	r0, r0, r3, lsl #28
    1030:	03001603 	movweq	r1, #1539	; 0x603
    1034:	3b0b3a08 	blcc	2cf85c <__Stack_Size+0x2cf45c>
    1038:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    103c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1040:	0b0b000f 	bleq	2c1084 <__Stack_Size+0x2c0c84>
    1044:	00001349 	andeq	r1, r0, r9, asr #6
    1048:	03010405 	movweq	r0, #5125	; 0x1405
    104c:	0b0b3e0e 	bleq	2d088c <__Stack_Size+0x2d048c>
    1050:	3a13490b 	bcc	4d3484 <__Stack_Size+0x4d3084>
    1054:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1058:	0013010b 	andseq	r0, r3, fp, lsl #2
    105c:	00280600 	eoreq	r0, r8, r0, lsl #12
    1060:	0b1c0e03 	bleq	704874 <__Stack_Size+0x704474>
    1064:	16070000 	strne	r0, [r7], -r0
    1068:	3a0e0300 	bcc	381c70 <__Stack_Size+0x381870>
    106c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1070:	0013490b 	andseq	r4, r3, fp, lsl #18
    1074:	01130800 	tsteq	r3, r0, lsl #16
    1078:	0b0b0e03 	bleq	2c488c <__Stack_Size+0x2c448c>
    107c:	0b3b0b3a 	bleq	ec3d6c <__Stack_Size+0xec396c>
    1080:	13010b39 	movwne	r0, #6969	; 0x1b39
    1084:	0d090000 	stceq	0, cr0, [r9, #-0]
    1088:	3a0e0300 	bcc	381c90 <__Stack_Size+0x381890>
    108c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1090:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1094:	0a00000b 	beq	10c8 <__Stack_Size+0xcc8>
    1098:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    109c:	13011349 	movwne	r1, #4937	; 0x1349
    10a0:	050b0000 	streq	r0, [fp, #-0]
    10a4:	00134900 	andseq	r4, r3, r0, lsl #18
    10a8:	01130c00 	tsteq	r3, r0, lsl #24
    10ac:	0b0b0803 	bleq	2c30c0 <__Stack_Size+0x2c2cc0>
    10b0:	0b3b0b3a 	bleq	ec3da0 <__Stack_Size+0xec39a0>
    10b4:	13010b39 	movwne	r0, #6969	; 0x1b39
    10b8:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    10bc:	3a080300 	bcc	201cc4 <__Stack_Size+0x2018c4>
    10c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10c4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    10c8:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    10cc:	0b0b0117 	bleq	2c1530 <__Stack_Size+0x2c1130>
    10d0:	0b3b0b3a 	bleq	ec3dc0 <__Stack_Size+0xec39c0>
    10d4:	13010b39 	movwne	r0, #6969	; 0x1b39
    10d8:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 10e0 <__Stack_Size+0xce0>
    10dc:	3a080300 	bcc	201ce4 <__Stack_Size+0x2018e4>
    10e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10e4:	0013490b 	andseq	r4, r3, fp, lsl #18
    10e8:	00151000 	andseq	r1, r5, r0
    10ec:	00001927 	andeq	r1, r0, r7, lsr #18
    10f0:	03003411 	movweq	r3, #1041	; 0x411
    10f4:	3b0b3a0e 	blcc	2cf934 <__Stack_Size+0x2cf534>
    10f8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    10fc:	3c193f13 	ldccc	15, cr3, [r9], {19}
    1100:	12000019 	andne	r0, r0, #25
    1104:	13470034 	movtne	r0, #28724	; 0x7034
    1108:	0b3b0b3a 	bleq	ec3df8 <__Stack_Size+0xec39f8>
    110c:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
    1110:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    1114:	03193f00 	tsteq	r9, #0, 30
    1118:	3b0b3a0e 	blcc	2cf958 <__Stack_Size+0x2cf558>
    111c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1120:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1124:	00184006 	andseq	r4, r8, r6
    1128:	11010000 	mrsne	r0, (UNDEF: 1)
    112c:	130e2501 	movwne	r2, #58625	; 0xe501
    1130:	1b0e030b 	blne	381d64 <__Stack_Size+0x381964>
    1134:	1117550e 	tstne	r7, lr, lsl #10
    1138:	00171001 	andseq	r1, r7, r1
    113c:	00240200 	eoreq	r0, r4, r0, lsl #4
    1140:	0b3e0b0b 	bleq	f83d74 <__Stack_Size+0xf83974>
    1144:	00000e03 	andeq	r0, r0, r3, lsl #28
    1148:	03001603 	movweq	r1, #1539	; 0x603
    114c:	3b0b3a08 	blcc	2cf974 <__Stack_Size+0x2cf574>
    1150:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1154:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1158:	13490035 	movtne	r0, #36917	; 0x9035
    115c:	16050000 	strne	r0, [r5], -r0
    1160:	3a0e0300 	bcc	381d68 <__Stack_Size+0x381968>
    1164:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1168:	0013490b 	andseq	r4, r3, fp, lsl #18
    116c:	01040600 	tsteq	r4, r0, lsl #12
    1170:	0b0b0b3e 	bleq	2c3e70 <__Stack_Size+0x2c3a70>
    1174:	0b3a1349 	bleq	e85ea0 <__Stack_Size+0xe85aa0>
    1178:	0b390b3b 	bleq	e43e6c <__Stack_Size+0xe43a6c>
    117c:	00001301 	andeq	r1, r0, r1, lsl #6
    1180:	03002807 	movweq	r2, #2055	; 0x807
    1184:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1188:	01040800 	tsteq	r4, r0, lsl #16
    118c:	0b3e0e03 	bleq	f849a0 <__Stack_Size+0xf845a0>
    1190:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1194:	0b3b0b3a 	bleq	ec3e84 <__Stack_Size+0xec3a84>
    1198:	13010b39 	movwne	r0, #6969	; 0x1b39
    119c:	13090000 	movwne	r0, #36864	; 0x9000
    11a0:	0b0e0301 	bleq	381dac <__Stack_Size+0x3819ac>
    11a4:	3b0b3a0b 	blcc	2cf9d8 <__Stack_Size+0x2cf5d8>
    11a8:	010b390b 	tsteq	fp, fp, lsl #18
    11ac:	0a000013 	beq	1200 <__Stack_Size+0xe00>
    11b0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    11b4:	0b3b0b3a 	bleq	ec3ea4 <__Stack_Size+0xec3aa4>
    11b8:	13490b39 	movtne	r0, #39737	; 0x9b39
    11bc:	00000b38 	andeq	r0, r0, r8, lsr fp
    11c0:	0b000f0b 	bleq	4df4 <__Stack_Size+0x49f4>
    11c4:	0013490b 	andseq	r4, r3, fp, lsl #18
    11c8:	01150c00 	tsteq	r5, r0, lsl #24
    11cc:	13491927 	movtne	r1, #39207	; 0x9927
    11d0:	00001301 	andeq	r1, r0, r1, lsl #6
    11d4:	4900050d 	stmdbmi	r0, {r0, r2, r3, r8, sl}
    11d8:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    11dc:	08030113 	stmdaeq	r3, {r0, r1, r4, r8}
    11e0:	0b3a0b0b 	bleq	e83e14 <__Stack_Size+0xe83a14>
    11e4:	0b390b3b 	bleq	e43ed8 <__Stack_Size+0xe43ad8>
    11e8:	00001301 	andeq	r1, r0, r1, lsl #6
    11ec:	03000d0f 	movweq	r0, #3343	; 0xd0f
    11f0:	3b0b3a08 	blcc	2cfa18 <__Stack_Size+0x2cf618>
    11f4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    11f8:	000b3813 	andeq	r3, fp, r3, lsl r8
    11fc:	01171000 	tsteq	r7, r0
    1200:	0b3a0b0b 	bleq	e83e34 <__Stack_Size+0xe83a34>
    1204:	0b390b3b 	bleq	e43ef8 <__Stack_Size+0xe43af8>
    1208:	00001301 	andeq	r1, r0, r1, lsl #6
    120c:	03000d11 	movweq	r0, #3345	; 0xd11
    1210:	3b0b3a08 	blcc	2cfa38 <__Stack_Size+0x2cf638>
    1214:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1218:	12000013 	andne	r0, r0, #19
    121c:	19270015 	stmdbne	r7!, {r0, r2, r4}
    1220:	34130000 	ldrcc	r0, [r3], #-0
    1224:	3a0e0300 	bcc	381e2c <__Stack_Size+0x381a2c>
    1228:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    122c:	3f13490b 	svccc	0x0013490b
    1230:	00193c19 	andseq	r3, r9, r9, lsl ip
    1234:	00341400 	eorseq	r1, r4, r0, lsl #8
    1238:	0b3a0e03 	bleq	e84a4c <__Stack_Size+0xe8464c>
    123c:	0b390b3b 	bleq	e43f30 <__Stack_Size+0xe43b30>
    1240:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1244:	00001802 	andeq	r1, r0, r2, lsl #16
    1248:	3f002e15 	svccc	0x00002e15
    124c:	3a0e0319 	bcc	381eb8 <__Stack_Size+0x381ab8>
    1250:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1254:	1119270b 	tstne	r9, fp, lsl #14
    1258:	40061201 	andmi	r1, r6, r1, lsl #4
    125c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1260:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
    1264:	03193f01 	tsteq	r9, #1, 30
    1268:	3b0b3a0e 	blcc	2cfaa8 <__Stack_Size+0x2cf6a8>
    126c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1270:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1274:	97184006 	ldrls	r4, [r8, -r6]
    1278:	13011942 	movwne	r1, #6466	; 0x1942
    127c:	05170000 	ldreq	r0, [r7, #-0]
    1280:	3a080300 	bcc	201e88 <__Stack_Size+0x201a88>
    1284:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1288:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    128c:	1742b717 	smlaldne	fp, r2, r7, r7
    1290:	34180000 	ldrcc	r0, [r8], #-0
    1294:	3a080300 	bcc	201e9c <__Stack_Size+0x201a9c>
    1298:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    129c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    12a0:	1742b717 	smlaldne	fp, r2, r7, r7
    12a4:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    12a8:	03193f01 	tsteq	r9, #1, 30
    12ac:	3b0b3a0e 	blcc	2cfaec <__Stack_Size+0x2cf6ec>
    12b0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    12b4:	11134919 	tstne	r3, r9, lsl r9
    12b8:	40061201 	andmi	r1, r6, r1, lsl #4
    12bc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    12c0:	00001301 	andeq	r1, r0, r1, lsl #6
    12c4:	0182891a 	orreq	r8, r2, sl, lsl r9
    12c8:	31011101 	tstcc	r1, r1, lsl #2
    12cc:	1b000013 	blne	1320 <__Stack_Size+0xf20>
    12d0:	0001828a 	andeq	r8, r1, sl, lsl #5
    12d4:	42911802 	addsmi	r1, r1, #131072	; 0x20000
    12d8:	1c000018 	stcne	0, cr0, [r0], {24}
    12dc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    12e0:	0b3a0e03 	bleq	e84af4 <__Stack_Size+0xe846f4>
    12e4:	0b39053b 	bleq	e427d8 <__Stack_Size+0xe423d8>
    12e8:	13491927 	movtne	r1, #39207	; 0x9927
    12ec:	06120111 			; <UNDEFINED> instruction: 0x06120111
    12f0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    12f4:	00130119 	andseq	r0, r3, r9, lsl r1
    12f8:	00341d00 	eorseq	r1, r4, r0, lsl #26
    12fc:	0b3a0e03 	bleq	e84b10 <__Stack_Size+0xe84710>
    1300:	0b39053b 	bleq	e427f4 <__Stack_Size+0xe423f4>
    1304:	17021349 	strne	r1, [r2, -r9, asr #6]
    1308:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
    130c:	011d1e00 	tsteq	sp, r0, lsl #28
    1310:	01521331 	cmpeq	r2, r1, lsr r3
    1314:	550542b8 	strpl	r4, [r5, #-696]	; 0xfffffd48
    1318:	590b5817 	stmdbpl	fp, {r0, r1, r2, r4, fp, ip, lr}
    131c:	010b5705 	tsteq	fp, r5, lsl #14
    1320:	1f000013 	svcne	0x00000013
    1324:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
    1328:	34200000 	strtcc	r0, [r0], #-0
    132c:	02133100 	andseq	r3, r3, #0, 2
    1330:	1742b717 	smlaldne	fp, r2, r7, r7
    1334:	0b210000 	bleq	84133c <__Stack_Size+0x840f3c>
    1338:	11133101 	tstne	r3, r1, lsl #2
    133c:	01061201 	tsteq	r6, r1, lsl #4
    1340:	22000013 	andcs	r0, r0, #19
    1344:	01018289 	smlabbeq	r1, r9, r2, r8
    1348:	13010111 	movwne	r0, #4369	; 0x1111
    134c:	89230000 	stmdbhi	r3!, {}	; <UNPREDICTABLE>
    1350:	11010182 	smlabbne	r1, r2, r1, r0
    1354:	01133101 	tsteq	r3, r1, lsl #2
    1358:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    135c:	00018289 	andeq	r8, r1, r9, lsl #5
    1360:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
    1364:	00133119 	andseq	r3, r3, r9, lsl r1
    1368:	82892500 	addhi	r2, r9, #0, 10
    136c:	01110001 	tsteq	r1, r1
    1370:	00001331 	andeq	r1, r0, r1, lsr r3
    1374:	0b011726 	bleq	47014 <__Stack_Size+0x46c14>
    1378:	3b0b3a0b 	blcc	2cfbac <__Stack_Size+0x2cf7ac>
    137c:	010b3905 	tsteq	fp, r5, lsl #18
    1380:	27000013 	smladcs	r0, r3, r0, r0
    1384:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1388:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    138c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1390:	0a280000 	beq	a01398 <__Stack_Size+0xa00f98>
    1394:	11133100 	tstne	r3, r0, lsl #2
    1398:	29000001 	stmdbcs	r0, {r0}
    139c:	1331010b 	teqne	r1, #-1073741822	; 0xc0000002
    13a0:	13011755 	movwne	r1, #5973	; 0x1755
    13a4:	342a0000 	strtcc	r0, [sl], #-0
    13a8:	02133100 	andseq	r3, r3, #0, 2
    13ac:	2b000018 	blcs	1414 <__Stack_Size+0x1014>
    13b0:	01018289 	smlabbeq	r1, r9, r2, r8
    13b4:	00000111 	andeq	r0, r0, r1, lsl r1
    13b8:	03012e2c 	movweq	r2, #7724	; 0x1e2c
    13bc:	3b0b3a0e 	blcc	2cfbfc <__Stack_Size+0x2cf7fc>
    13c0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    13c4:	010b2019 	tsteq	fp, r9, lsl r0
    13c8:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    13cc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    13d0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    13d8:	0b2e0000 	bleq	b813e0 <__Stack_Size+0xb80fe0>
    13dc:	00130101 	andseq	r0, r3, r1, lsl #2
    13e0:	010b2f00 	tsteq	fp, r0, lsl #30
    13e4:	0a300000 	beq	c013ec <__Stack_Size+0xc00fec>
    13e8:	3a0e0300 	bcc	381ff0 <__Stack_Size+0x381bf0>
    13ec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13f0:	3100000b 	tstcc	r0, fp
    13f4:	0e03012e 	adfeqsp	f0, f3, #0.5
    13f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13fc:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1400:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1404:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1408:	00130119 	andseq	r0, r3, r9, lsl r1
    140c:	000a3200 	andeq	r3, sl, r0, lsl #4
    1410:	0b3a0e03 	bleq	e84c24 <__Stack_Size+0xe84824>
    1414:	0b39053b 	bleq	e42908 <__Stack_Size+0xe42508>
    1418:	00000111 	andeq	r0, r0, r1, lsl r1
    141c:	03000533 	movweq	r0, #1331	; 0x533
    1420:	3b0b3a0e 	blcc	2cfc60 <__Stack_Size+0x2cf860>
    1424:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1428:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    142c:	00001742 	andeq	r1, r0, r2, asr #14
    1430:	03000534 	movweq	r0, #1332	; 0x534
    1434:	3b0b3a0e 	blcc	2cfc74 <__Stack_Size+0x2cf874>
    1438:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    143c:	00180213 	andseq	r0, r8, r3, lsl r2
    1440:	002e3500 	eoreq	r3, lr, r0, lsl #10
    1444:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1448:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    144c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1450:	01111349 	tsteq	r1, r9, asr #6
    1454:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1458:	00194296 	mulseq	r9, r6, r2
    145c:	010b3600 	tsteq	fp, r0, lsl #12
    1460:	13011755 	movwne	r1, #5973	; 0x1755
    1464:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
    1468:	03193f01 	tsteq	r9, #1, 30
    146c:	3b0b3a0e 	blcc	2cfcac <__Stack_Size+0x2cf8ac>
    1470:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1474:	11134919 	tstne	r3, r9, lsl r9
    1478:	40061201 	andmi	r1, r6, r1, lsl #4
    147c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1480:	00001301 	andeq	r1, r0, r1, lsl #6
    1484:	03003438 	movweq	r3, #1080	; 0x438
    1488:	3b0b3a0e 	blcc	2cfcc8 <__Stack_Size+0x2cf8c8>
    148c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1490:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    1494:	00001742 	andeq	r1, r0, r2, asr #14
    1498:	11010b39 	tstne	r1, r9, lsr fp
    149c:	00061201 	andeq	r1, r6, r1, lsl #4
    14a0:	00343a00 	eorseq	r3, r4, r0, lsl #20
    14a4:	0b3a0e03 	bleq	e84cb8 <__Stack_Size+0xe848b8>
    14a8:	0b390b3b 	bleq	e4419c <__Stack_Size+0xe43d9c>
    14ac:	00001349 	andeq	r1, r0, r9, asr #6
    14b0:	0300343b 	movweq	r3, #1083	; 0x43b
    14b4:	3b0b3a08 	blcc	2cfcdc <__Stack_Size+0x2cf8dc>
    14b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    14bc:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    14c0:	00001742 	andeq	r1, r0, r2, asr #14
    14c4:	11010b3c 	tstne	r1, ip, lsr fp
    14c8:	01061201 	tsteq	r6, r1, lsl #4
    14cc:	3d000013 	stccc	0, cr0, [r0, #-76]	; 0xffffffb4
    14d0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    14d4:	0b3b0b3a 	bleq	ec41c4 <__Stack_Size+0xec3dc4>
    14d8:	13490b39 	movtne	r0, #39737	; 0x9b39
    14dc:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
    14e0:	3e000017 	mcrcc	0, 0, r0, cr0, cr7, {0}
    14e4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    14e8:	0b3a0e03 	bleq	e84cfc <__Stack_Size+0xe848fc>
    14ec:	0b390b3b 	bleq	e441e0 <__Stack_Size+0xe43de0>
    14f0:	13491927 	movtne	r1, #39207	; 0x9927
    14f4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    14f8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    14fc:	3f000019 	svccc	0x00000019
    1500:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    1504:	0e6e193c 			; <UNDEFINED> instruction: 0x0e6e193c
    1508:	0b3a0e03 	bleq	e84d1c <__Stack_Size+0xe8491c>
    150c:	0b39053b 	bleq	e42a00 <__Stack_Size+0xe42600>
    1510:	2e400000 	cdpcs	0, 4, cr0, cr0, cr0, {0}
    1514:	3c193f00 	ldccc	15, cr3, [r9], {-0}
    1518:	030e6e19 	movweq	r6, #60953	; 0xee19
    151c:	3b0b3a0e 	blcc	2cfd5c <__Stack_Size+0x2cf95c>
    1520:	000b390b 	andeq	r3, fp, fp, lsl #18
    1524:	11010000 	mrsne	r0, (UNDEF: 1)
    1528:	130e2501 	movwne	r2, #58625	; 0xe501
    152c:	1b0e030b 	blne	382160 <__Stack_Size+0x381d60>
    1530:	1117550e 	tstne	r7, lr, lsl #10
    1534:	00171001 	andseq	r1, r7, r1
    1538:	00240200 	eoreq	r0, r4, r0, lsl #4
    153c:	0b3e0b0b 	bleq	f84170 <__Stack_Size+0xf83d70>
    1540:	00000e03 	andeq	r0, r0, r3, lsl #28
    1544:	03001603 	movweq	r1, #1539	; 0x603
    1548:	3b0b3a08 	blcc	2cfd70 <__Stack_Size+0x2cf970>
    154c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1550:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1554:	0b0b000f 	bleq	2c1598 <__Stack_Size+0x2c1198>
    1558:	00001349 	andeq	r1, r0, r9, asr #6
    155c:	3f012e05 	svccc	0x00012e05
    1560:	3a0e0319 	bcc	3821cc <__Stack_Size+0x381dcc>
    1564:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1568:	1119270b 	tstne	r9, fp, lsl #14
    156c:	40061201 	andmi	r1, r6, r1, lsl #4
    1570:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1574:	00001301 	andeq	r1, r0, r1, lsl #6
    1578:	03000506 	movweq	r0, #1286	; 0x506
    157c:	3b0b3a0e 	blcc	2cfdbc <__Stack_Size+0x2cf9bc>
    1580:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1584:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    1588:	00001742 	andeq	r1, r0, r2, asr #14
    158c:	03003407 	movweq	r3, #1031	; 0x407
    1590:	3b0b3a08 	blcc	2cfdb8 <__Stack_Size+0x2cf9b8>
    1594:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1598:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    159c:	00001742 	andeq	r1, r0, r2, asr #14
    15a0:	03003408 	movweq	r3, #1032	; 0x408
    15a4:	3b0b3a0e 	blcc	2cfde4 <__Stack_Size+0x2cf9e4>
    15a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    15ac:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    15b0:	00001742 	andeq	r1, r0, r2, asr #14
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	00000071 	andeq	r0, r0, r1, ror r0
       4:	00310003 	eorseq	r0, r1, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
    gpio_write_bit( bank,pin,1-onState);
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
{
      14:	01000000 	mrseq	r0, (UNDEF: 0)
    gpio_write_bit( bank,pin,1-onState);
      18:	73010000 	movwvc	r0, #4096	; 0x1000
    while (count-- > 0)
      1c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
}
      20:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
        for (c = rate; c > 0; c--)
      24:	5f630000 	svcpl	0x00630000
      28:	796c6e6f 	stmdbvc	ip!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
        gpio_write_bit( bank,pin,onState);
      2c:	6174735f 	cmnvs	r4, pc, asr r3
      30:	70757472 	rsbsvc	r7, r5, r2, ror r4
        for (c = rate; c > 0; c--)
      34:	0100732e 	tsteq	r0, lr, lsr #6
        gpio_write_bit( bank,pin,1-onState);
      38:	00000000 	andeq	r0, r0, r0
      3c:	00f00205 	rscseq	r0, r0, r5, lsl #4
      40:	c1030800 	tstgt	r3, r0, lsl #16
      44:	23210100 			; <UNDEFINED> instruction: 0x23210100
        for (c = rate; c > 0; c--)
      48:	23212121 			; <UNDEFINED> instruction: 0x23212121
            asm volatile("nop");
      4c:	21212121 			; <UNDEFINED> instruction: 0x21212121
        for (c = rate; c > 0; c--)
      50:	21232121 			; <UNDEFINED> instruction: 0x21232121
__RESETFAULTMASK:
      54:	22212131 	eorcs	r2, r1, #1073741836	; 0x4000000c
__SETFAULTMASK:
      58:	2068032f 	rsbcs	r0, r8, pc, lsr #6
__READ_FAULTMASK:
      5c:	36322f34 	shasxcc	r2, r2, r4
__BASEPRICONFIG:
      60:	01000202 	tsteq	r0, r2, lsl #4

      64:	02050001 	andeq	r0, r5, #1
__GetBASEPRI:
      68:	08000130 	stmdaeq	r0, {r4, r5, r8}

      6c:	0100eb03 	tsteq	r0, r3, lsl #22
  REV16 r0, r0
      70:	01000102 	tsteq	r0, r2, lsl #2

      74:	0000a201 	andeq	sl, r0, r1, lsl #4
      78:	33000300 	movwcc	r0, #768	; 0x300
      7c:	02000000 	andeq	r0, r0, #0
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      80:	0d0efb01 	vstreq	d15, [lr, #-4]
      84:	01010100 	mrseq	r0, (UNDEF: 17)
      88:	00000001 	andeq	r0, r0, r1
}
      8c:	01000001 	tsteq	r0, r1
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      90:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
      94:	5f32336d 	svcpl	0x0032336d
      98:	0062696c 	rsbeq	r6, r2, ip, ror #18
      9c:	726f6300 	rsbvc	r6, pc, #0, 6
      a0:	6d786574 	cfldr64vs	mvdx6, [r8, #-464]!	; 0xfffffe30
}
      a4:	616d5f33 	cmnvs	sp, r3, lsr pc
      a8:	2e6f7263 	cdpcs	2, 6, cr7, cr15, cr3, {3}
      ac:	00010053 	andeq	r0, r1, r3, asr r0
      b0:	05000000 	streq	r0, [r0, #-0]
      b4:	00000002 	andeq	r0, r0, r2
      b8:	01370300 	teqeq	r7, r0, lsl #6
      bc:	200b0321 	andcs	r0, fp, r1, lsr #6
      c0:	200b0321 	andcs	r0, fp, r1, lsr #6
      c4:	200b0321 	andcs	r0, fp, r1, lsr #6
      c8:	200b032f 	andcs	r0, fp, pc, lsr #6
      cc:	200b032f 	andcs	r0, fp, pc, lsr #6
      d0:	200b032f 	andcs	r0, fp, pc, lsr #6
      d4:	200b0321 	andcs	r0, fp, r1, lsr #6
      d8:	200b032f 	andcs	r0, fp, pc, lsr #6
      dc:	0a032f2f 	beq	cbda0 <__Stack_Size+0xcb9a0>
      e0:	0b032f20 	bleq	cbd68 <__Stack_Size+0xcb968>
      e4:	0b032f20 	bleq	cbd6c <__Stack_Size+0xcb96c>
      e8:	0b032f20 	bleq	cbd70 <__Stack_Size+0xcb970>
      ec:	0b032f20 	bleq	cbd74 <__Stack_Size+0xcb974>
      f0:	0b032120 	bleq	c8578 <__Stack_Size+0xc8178>
      f4:	0b032120 	bleq	c857c <__Stack_Size+0xc817c>
      f8:	0b032f20 	bleq	cbd80 <__Stack_Size+0xcb980>
      fc:	0b032120 	bleq	c8584 <__Stack_Size+0xc8184>
     100:	0b032120 	bleq	c8588 <__Stack_Size+0xc8188>
     104:	0b032f20 	bleq	cbd8c <__Stack_Size+0xcb98c>
     108:	0b032f20 	bleq	cbd90 <__Stack_Size+0xcb990>
     10c:	0a032f20 	beq	cbd94 <__Stack_Size+0xcb994>
     110:	0b032120 	bleq	c8598 <__Stack_Size+0xc8198>
     114:	01022120 	tsteq	r2, r0, lsr #2
     118:	e5010100 	str	r0, [r1, #-256]	; 0xffffff00
     11c:	03000006 	movweq	r0, #6
     120:	0000be00 	andeq	fp, r0, r0, lsl #28
     124:	fb010200 	blx	4092e <__Stack_Size+0x4052e>
     128:	01000d0e 	tsteq	r0, lr, lsl #26
     12c:	00010101 	andeq	r0, r1, r1, lsl #2
     130:	00010000 	andeq	r0, r1, r0
     134:	2f2e0100 	svccs	0x002e0100
     138:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     13c:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     140:	2f2e0062 	svccs	0x002e0062
     144:	5f627375 	svcpl	0x00627375
     148:	0062696c 	rsbeq	r6, r2, ip, ror #18
     14c:	62737500 	rsbsvs	r7, r3, #0, 10
     150:	0000632e 	andeq	r6, r0, lr, lsr #6
     154:	74730000 	ldrbtvc	r0, [r3], #-0
     158:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     15c:	5f783031 	svcpl	0x00783031
     160:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     164:	0100682e 	tsteq	r0, lr, lsr #16
     168:	61680000 	cmnvs	r8, r0
     16c:	61776472 	cmnvs	r7, r2, ror r4
     170:	682e6572 	stmdavs	lr!, {r1, r4, r5, r6, r8, sl, sp, lr}
     174:	00000000 	andeq	r0, r0, r0
     178:	5f627375 	svcpl	0x00627375
     17c:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     180:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     184:	73750000 	cmnvc	r5, #0
     188:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xfffff09e
     18c:	00682e66 	rsbeq	r2, r8, r6, ror #28
     190:	75000002 	strvc	r0, [r0, #-2]
     194:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
     198:	2e736765 	cdpcs	7, 7, cr6, cr3, cr5, {3}
     19c:	00020068 	andeq	r0, r2, r8, rrx
     1a0:	62737500 	rsbsvs	r7, r3, #0, 10
     1a4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     1a8:	00682e74 	rsbeq	r2, r8, r4, ror lr
     1ac:	75000002 	strvc	r0, [r0, #-2]
     1b0:	645f6273 	ldrbvs	r6, [pc], #-627	; 1b8 <_Minimum_Stack_Size+0xb8>
     1b4:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     1b8:	6f747069 	svcvs	0x00747069
     1bc:	00682e72 	rsbeq	r2, r8, r2, ror lr
     1c0:	75000000 	strvc	r0, [r0, #-0]
     1c4:	682e6273 	stmdavs	lr!, {r0, r1, r4, r5, r6, r9, sp, lr}
     1c8:	00000000 	andeq	r0, r0, r0
     1cc:	5f627375 	svcpl	0x00627375
     1d0:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     1d4:	00020068 	andeq	r0, r2, r8, rrx
     1d8:	75666400 	strbvc	r6, [r6, #-1024]!	; 0xfffffc00
     1dc:	0000682e 	andeq	r6, r0, lr, lsr #16
     1e0:	05000000 	streq	r0, [r0, #-0]
     1e4:	02050018 	andeq	r0, r5, #24
     1e8:	08000132 	stmdaeq	r0, {r1, r4, r5, r8}
     1ec:	0102b603 	tsteq	r2, r3, lsl #12
     1f0:	02130105 	andseq	r0, r3, #1073741825	; 0x40000001
     1f4:	01010001 	tsteq	r1, r1
     1f8:	05003c05 	streq	r3, [r0, #-3077]	; 0xfffff3fb
     1fc:	00013402 	andeq	r3, r1, r2, lsl #8
     200:	02ed0308 	rsceq	r0, sp, #8, 6	; 0x20000000
     204:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
     208:	15061005 	strne	r1, [r6, #-5]
     20c:	2e220105 	sufcss	f0, f2, f5
     210:	01000202 	tsteq	r0, r2, lsl #4
     214:	00200501 	eoreq	r0, r0, r1, lsl #10
     218:	01400205 	cmpeq	r0, r5, lsl #4
     21c:	98030800 	stmdals	r3, {fp}
     220:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
     224:	06150513 			; <UNDEFINED> instruction: 0x06150513
     228:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
     22c:	2f060905 	svccs	0x00060905
     230:	01061605 	tsteq	r6, r5, lsl #12
     234:	023e0105 	eorseq	r0, lr, #1073741825	; 0x40000001
     238:	01010005 	tsteq	r1, r5
     23c:	05002005 	streq	r2, [r0, #-5]
     240:	00015802 	andeq	r5, r1, r2, lsl #16
     244:	03b60308 			; <UNDEFINED> instruction: 0x03b60308
     248:	13050501 	movwne	r0, #21761	; 0x5501
     24c:	01061205 	tsteq	r6, r5, lsl #4
     250:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
     254:	01010003 	tsteq	r1, r3
     258:	05001505 	streq	r1, [r0, #-1285]	; 0xfffffafb
     25c:	00016402 	andeq	r6, r1, r2, lsl #8
     260:	029d0308 	addseq	r0, sp, #8, 6	; 0x20000000
     264:	13050501 	movwne	r0, #21761	; 0x5501
     268:	11061505 	tstne	r6, r5, lsl #10
     26c:	05232905 	streq	r2, [r3, #-2309]!	; 0xfffff6fb
     270:	30061e05 	andcc	r1, r6, r5, lsl #28
     274:	01061105 	tsteq	r6, r5, lsl #2
     278:	05213b05 	streq	r3, [r1, #-2821]!	; 0xfffff4fb
     27c:	23051f11 	movwcs	r1, #24337	; 0x5f11
     280:	1f290521 	svcne	0x00290521
     284:	21060505 	tstcs	r6, r5, lsl #10
     288:	01062305 	tsteq	r6, r5, lsl #6
     28c:	0b030505 	bleq	c16a8 <__Stack_Size+0xc12a8>
     290:	03230520 			; <UNDEFINED> instruction: 0x03230520
     294:	05052075 	streq	r2, [r5, #-117]	; 0xffffff8b
     298:	ad3f2206 	lfmge	f2, 4, [pc, #-24]!	; 288 <_Minimum_Stack_Size+0x188>
     29c:	01017401 	tsteq	r1, r1, lsl #8
     2a0:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     2a4:	052e0627 	streq	r0, [lr, #-1575]!	; 0xfffff9d9
     2a8:	3c061405 	cfstrscc	mvf1, [r6], {5}
     2ac:	30a05906 	adccc	r5, r0, r6, lsl #18
     2b0:	01062205 	tsteq	r6, r5, lsl #4
     2b4:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     2b8:	05052022 	streq	r2, [r5, #-34]	; 0xffffffde
     2bc:	3e4c0620 	cdpcc	6, 4, cr0, cr12, cr0, {1}
     2c0:	01061205 	tsteq	r6, r5, lsl #4
     2c4:	052f0505 	streq	r0, [pc, #-1285]!	; fffffdc7 <BootRAM+0xef70568>
     2c8:	12052101 	andne	r2, r5, #1073741824	; 0x40000000
     2cc:	0605052c 	streq	r0, [r5], -ip, lsr #10
     2d0:	000f0221 	andeq	r0, pc, r1, lsr #4
     2d4:	25050101 	strcs	r0, [r5, #-257]	; 0xfffffeff
     2d8:	14020500 	strne	r0, [r2], #-1280	; 0xfffffb00
     2dc:	03080002 	movweq	r0, #32770	; 0x8002
     2e0:	050102f6 	streq	r0, [r1, #-758]	; 0xfffffd0a
     2e4:	0c051305 	stceq	3, cr1, [r5], {5}
     2e8:	023c0106 	eorseq	r0, ip, #-2147483647	; 0x80000001
     2ec:	01010003 	tsteq	r1, r3
     2f0:	05002505 	streq	r2, [r0, #-1285]	; 0xfffffafb
     2f4:	00022002 	andeq	r2, r2, r2
     2f8:	02fa0308 	rscseq	r0, sl, #8, 6	; 0x20000000
     2fc:	13050501 	movwne	r0, #21761	; 0x5501
     300:	01060c05 	tsteq	r6, r5, lsl #24
     304:	0003023c 	andeq	r0, r3, ip, lsr r2
     308:	25050101 	strcs	r0, [r5, #-257]	; 0xfffffeff
     30c:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
     310:	03080002 	movweq	r0, #32770	; 0x8002
     314:	050102fe 	streq	r0, [r1, #-766]	; 0xfffffd02
     318:	08051305 	stmdaeq	r5, {r0, r2, r8, r9, ip}
     31c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     320:	08053d06 	stmdaeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     324:	09050106 	stmdbeq	r5, {r1, r2, r8}
     328:	10053106 	andne	r3, r5, r6, lsl #2
     32c:	01050106 	tsteq	r5, r6, lsl #2
     330:	0502205a 	streq	r2, [r2, #-90]	; 0xffffffa6
     334:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     338:	02050029 	andeq	r0, r5, #41	; 0x29
     33c:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
     340:	01038703 	tsteq	r3, r3, lsl #14
     344:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
     348:	3c01060c 	stccc	6, cr0, [r1], {12}
     34c:	01000302 	tsteq	r0, r2, lsl #6
     350:	00210501 	eoreq	r0, r1, r1, lsl #10
     354:	02580205 	subseq	r0, r8, #1342177280	; 0x50000000
     358:	bc030800 	stclt	8, cr0, [r3], {-0}
     35c:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
     360:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
     364:	050d0621 	streq	r0, [sp, #-1569]	; 0xfffff9df
     368:	21052516 	tstcs	r5, r6, lsl r5
     36c:	2516051b 	ldrcs	r0, [r6, #-1307]	; 0xfffffae5
     370:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
     374:	0905590c 	stmdbeq	r5, {r2, r3, r8, fp, ip, lr}
     378:	0d052e06 	stceq	14, cr2, [r5, #-24]	; 0xffffffe8
     37c:	0c050106 	stfeqs	f0, [r5], {6}
     380:	0608052e 	streq	r0, [r8], -lr, lsr #10
     384:	052e7a03 	streq	r7, [lr, #-2563]!	; 0xfffff5fd
     388:	0c051a0d 			; <UNDEFINED> instruction: 0x0c051a0d
     38c:	0505fe06 	streq	pc, [r5, #-3590]	; 0xfffff1fa
     390:	20160306 	andscs	r0, r6, r6, lsl #6
     394:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
     398:	0513062d 	ldreq	r0, [r3, #-1581]	; 0xfffff9d3
     39c:	0a051f15 	beq	147ff8 <__Stack_Size+0x147bf8>
     3a0:	1e2a0522 	cfsh64ne	mvdx0, mvdx10, #18
     3a4:	21060905 	tstcs	r6, r5, lsl #18
     3a8:	01062d05 	tsteq	r6, r5, lsl #26
     3ac:	21060905 	tstcs	r6, r5, lsl #18
     3b0:	01060a05 	tsteq	r6, r5, lsl #20
     3b4:	22060905 	andcs	r0, r6, #81920	; 0x14000
     3b8:	01061005 	tsteq	r6, r5
     3bc:	16010520 	strne	r0, [r1], -r0, lsr #10
     3c0:	03061105 	movweq	r1, #24837	; 0x6105
     3c4:	0513206b 	ldreq	r2, [r3, #-107]	; 0xffffff95
     3c8:	0511061d 	ldreq	r0, [r1, #-1565]	; 0xfffff9e3
     3cc:	22062111 	andcs	r2, r6, #1073741828	; 0x40000004
     3d0:	061d0513 			; <UNDEFINED> instruction: 0x061d0513
     3d4:	21110511 	tstcs	r1, r1, lsl r5
     3d8:	76031d05 	strvc	r1, [r3], -r5, lsl #26
     3dc:	000d0220 	andeq	r0, sp, r0, lsr #4
     3e0:	23050101 	movwcs	r0, #20737	; 0x5101
     3e4:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
     3e8:	03080002 	movweq	r0, #32770	; 0x8002
     3ec:	050102e3 	streq	r0, [r1, #-739]	; 0xfffffd1d
     3f0:	23051305 	movwcs	r1, #21253	; 0x5305
     3f4:	16051106 	strne	r1, [r5], -r6, lsl #2
     3f8:	2e080521 	cfsh32cs	mvfx0, mvfx8, #17
     3fc:	055e0c05 	ldrbeq	r0, [lr, #-3077]	; 0xfffff3fb
     400:	08052101 	stmdaeq	r5, {r0, r8, sp}
     404:	20780306 	rsbscs	r0, r8, r6, lsl #6
     408:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
     40c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     410:	14052e0c 	strne	r2, [r5], #-3596	; 0xfffff1f4
     414:	0004022f 	andeq	r0, r4, pc, lsr #4
     418:	16050101 	strne	r0, [r5], -r1, lsl #2
     41c:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
     420:	03080003 	movweq	r0, #32771	; 0x8003
     424:	05050127 	streq	r0, [r5, #-295]	; 0xfffffed9
     428:	01011103 	tsteq	r1, r3, lsl #2
     42c:	03061605 	movweq	r1, #26117	; 0x6605
     430:	0505016f 	streq	r0, [r5, #-367]	; 0xfffffe91
     434:	92201103 	eorls	r1, r0, #-1073741824	; 0xc0000000
     438:	142e063a 	strtne	r0, [lr], #-1594	; 0xfffff9c6
     43c:	0f051330 	svceq	0x00051330
     440:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     444:	03040200 	movweq	r0, #16896	; 0x4200
     448:	00130520 	andseq	r0, r3, r0, lsr #10
     44c:	06030402 	streq	r0, [r3], -r2, lsl #8
     450:	00180520 	andseq	r0, r8, r0, lsr #10
     454:	06030402 	streq	r0, [r3], -r2, lsl #8
     458:	00050501 	andeq	r0, r5, r1, lsl #10
     45c:	20030402 	andcs	r0, r3, r2, lsl #8
     460:	9e014006 	cdpls	0, 0, cr4, cr1, cr6, {0}
     464:	06130518 			; <UNDEFINED> instruction: 0x06130518
     468:	2e120501 	cfmul32cs	mvfx0, mvfx2, mvfx1
     46c:	05212205 	streq	r2, [r1, #-517]!	; 0xfffffdfb
     470:	05051f12 	streq	r1, [r5, #-3858]	; 0xfffff0ee
     474:	22052106 	andcs	r2, r5, #-2147483647	; 0x80000001
     478:	2d210106 	stfcss	f0, [r1, #-24]!	; 0xffffffe8
     47c:	2f060505 	svccs	0x00060505
     480:	01062205 	tsteq	r6, r5, lsl #4
     484:	30060505 	andcc	r0, r6, r5, lsl #10
     488:	01062205 	tsteq	r6, r5, lsl #4
     48c:	2f060505 	svccs	0x00060505
     490:	01062205 	tsteq	r6, r5, lsl #4
     494:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
     498:	d7030605 	strle	r0, [r3, -r5, lsl #12]
     49c:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
     4a0:	06010515 			; <UNDEFINED> instruction: 0x06010515
     4a4:	017fa803 	cmneq	pc, r3, lsl #16
     4a8:	d8030505 	stmdale	r3, {r0, r2, r8, sl}
     4ac:	25053c00 	strcs	r3, [r5, #-3072]	; 0xfffff400
     4b0:	03040200 	movweq	r0, #16896	; 0x4200
     4b4:	7f950306 	svcvc	0x00950306
     4b8:	001d052e 	andseq	r0, sp, lr, lsr #10
     4bc:	01030402 	tsteq	r3, r2, lsl #8
     4c0:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     4c4:	01060304 	tsteq	r6, r4, lsl #6
     4c8:	01000d02 	tsteq	r0, r2, lsl #26
     4cc:	00170501 	andseq	r0, r7, r1, lsl #10
     4d0:	00000205 	andeq	r0, r0, r5, lsl #4
     4d4:	a5030000 	strge	r0, [r3, #-0]
     4d8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
     4dc:	00020215 	andeq	r0, r2, r5, lsl r2
     4e0:	17050101 	strne	r0, [r5, -r1, lsl #2]
     4e4:	88020500 	stmdahi	r2, {r8, sl}
     4e8:	03080003 	movweq	r0, #32771	; 0x8003
     4ec:	050101ab 	streq	r0, [r1, #-427]	; 0xfffffe55
     4f0:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
     4f4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     4f8:	05053c0b 	streq	r3, [r5, #-3083]	; 0xfffff3f5
     4fc:	06132106 	ldreq	r2, [r3], -r6, lsl #2
     500:	0531062e 	ldreq	r0, [r1, #-1582]!	; 0xfffff9d2
     504:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     508:	05023d01 	streq	r3, [r2, #-3329]	; 0xfffff2ff
     50c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     510:	0205001a 	andeq	r0, r5, #26
     514:	080003a8 	stmdaeq	r0, {r3, r5, r7, r8, r9}
     518:	0101b503 	tsteq	r1, r3, lsl #10
     51c:	16130505 	ldrne	r0, [r3], -r5, lsl #10
     520:	0d051406 	cfstrseq	mvf1, [r5, #-24]	; 0xffffffe8
     524:	0605052c 	streq	r0, [r5], -ip, lsr #10
     528:	0540133d 	strbeq	r1, [r0, #-829]	; 0xfffffcc3
     52c:	024b0601 	subeq	r0, fp, #1048576	; 0x100000
     530:	01010004 	tsteq	r1, r4
     534:	05002c05 	streq	r2, [r0, #-3077]	; 0xfffff3fb
     538:	0003c802 	andeq	ip, r3, r2, lsl #16
     53c:	01c30308 	biceq	r0, r3, r8, lsl #6
     540:	13050501 	movwne	r0, #21761	; 0x5501
     544:	062c0514 			; <UNDEFINED> instruction: 0x062c0514
     548:	0609050f 	streq	r0, [r9], -pc, lsl #10
     54c:	06080532 			; <UNDEFINED> instruction: 0x06080532
     550:	21180511 	tstcs	r8, r1, lsl r5
     554:	30060505 	andcc	r0, r6, r5, lsl #10
     558:	01061405 	tsteq	r6, r5, lsl #8
     55c:	84060905 	strhi	r0, [r6], #-2309	; 0xfffff6fb
     560:	0122032f 			; <UNDEFINED> instruction: 0x0122032f
     564:	01061805 	tsteq	r6, r5, lsl #16
     568:	03060905 	movweq	r0, #26885	; 0x6905
     56c:	052f2e61 	streq	r2, [pc, #-3681]!	; fffff713 <BootRAM+0xef6feb4>
     570:	0109030d 	tsteq	r9, sp, lsl #6
     574:	01061c05 	tsteq	r6, r5, lsl #24
     578:	03060905 	movweq	r0, #26885	; 0x6905
     57c:	1a052e7a 	bne	14bf6c <__Stack_Size+0x14bb6c>
     580:	09050106 	stmdbeq	r5, {r1, r2, r8}
     584:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
     588:	1a030106 	bne	c09a8 <__Stack_Size+0xc05a8>
     58c:	06090520 	streq	r0, [r9], -r0, lsr #10
     590:	06010521 	streq	r0, [r1], -r1, lsr #10
     594:	06090514 			; <UNDEFINED> instruction: 0x06090514
     598:	05206603 	streq	r6, [r0, #-1539]!	; 0xfffff9fd
     59c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     5a0:	09052019 	stmdbeq	r5, {r0, r3, r4, sp}
     5a4:	14053d06 	strne	r3, [r5], #-3334	; 0xfffff2fa
     5a8:	0c050106 	stfeqs	f0, [r5], {6}
     5ac:	03010520 	movweq	r0, #5408	; 0x1520
     5b0:	09052e19 	stmdbeq	r5, {r0, r3, r4, r9, sl, fp, sp}
     5b4:	206b0306 	rsbcs	r0, fp, r6, lsl #6
     5b8:	01061105 	tsteq	r6, r5, lsl #2
     5bc:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
     5c0:	13210609 			; <UNDEFINED> instruction: 0x13210609
     5c4:	2f062e06 	svccs	0x00062e06
     5c8:	01061805 	tsteq	r6, r5, lsl #16
     5cc:	2f060905 	svccs	0x00060905
     5d0:	01061a05 	tsteq	r6, r5, lsl #20
     5d4:	2f060905 	svccs	0x00060905
     5d8:	06100522 	ldreq	r0, [r0], -r2, lsr #10
     5dc:	20190501 	andscs	r0, r9, r1, lsl #10
     5e0:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
     5e4:	01061405 	tsteq	r6, r5, lsl #8
     5e8:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
     5ec:	062f060d 	strteq	r0, [pc], -sp, lsl #12
     5f0:	2c150514 	cfldr32cs	mvfx0, [r5], {20}
     5f4:	3d060d05 	stccc	13, cr0, [r6, #-20]	; 0xffffffec
     5f8:	06023d13 			; <UNDEFINED> instruction: 0x06023d13
     5fc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     600:	02050019 	andeq	r0, r5, #25
     604:	08000450 	stmdaeq	r0, {r4, r6, sl}
     608:	0101f303 	tsteq	r1, r3, lsl #6	; <UNPREDICTABLE>
     60c:	14130505 	ldrne	r0, [r3], #-1285	; 0xfffffafb
     610:	1d310613 	ldcne	6, cr0, [r1, #-76]!	; 0xffffffb4
     614:	05133006 	ldreq	r3, [r3, #-6]
     618:	05140615 	ldreq	r0, [r4, #-1557]	; 0xfffff9eb
     61c:	2f063a05 	svccs	0x00063a05
     620:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
     624:	06050501 	streq	r0, [r5], -r1, lsl #10
     628:	01053021 	tsteq	r5, r1, lsr #32
     62c:	05021306 	streq	r1, [r2, #-774]	; 0xfffffcfa
     630:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     634:	0205001a 	andeq	r0, r5, #26
     638:	08000478 	stmdaeq	r0, {r3, r4, r5, r6, sl}
     63c:	01028203 	tsteq	r2, r3, lsl #4
     640:	06130505 	ldreq	r0, [r3], -r5, lsl #10
     644:	2f061f2f 	svccs	0x00061f2f
     648:	061f1306 	ldreq	r1, [pc], -r6, lsl #6
     64c:	0105352f 	tsteq	r5, pc, lsr #10
     650:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
     654:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     658:	02050016 	andeq	r0, r5, #22
     65c:	08000494 	stmdaeq	r0, {r2, r4, r7, sl}
     660:	0100d503 	tsteq	r0, r3, lsl #10
     664:	02140105 	andseq	r0, r4, #1073741825	; 0x40000001
     668:	01010002 	tsteq	r1, r2
     66c:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
     670:	00049802 	andeq	r9, r4, r2, lsl #16
     674:	03bc0308 			; <UNDEFINED> instruction: 0x03bc0308
     678:	13050501 	movwne	r0, #21761	; 0x5501
     67c:	06280515 			; <UNDEFINED> instruction: 0x06280515
     680:	1c160501 	cfldr32ne	mvfx0, [r6], {1}
     684:	05242805 	streq	r2, [r4, #-2053]!	; 0xfffff7fb
     688:	052f0605 	streq	r0, [pc, #-1541]!	; 8b <_Minimum_Stack_Size-0x75>
     68c:	0501063a 	streq	r0, [r1, #-1594]	; 0xfffff9c6
     690:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     694:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
     698:	052f0605 	streq	r0, [pc, #-1541]!	; 9b <_Minimum_Stack_Size-0x65>
     69c:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
     6a0:	2b052105 	blcs	148abc <__Stack_Size+0x1486bc>
     6a4:	0605051f 			; <UNDEFINED> instruction: 0x0605051f
     6a8:	0601052f 	streq	r0, [r1], -pc, lsr #10
     6ac:	0003022f 	andeq	r0, r3, pc, lsr #4
     6b0:	14050101 	strne	r0, [r5], #-257	; 0xfffffeff
     6b4:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
     6b8:	03080004 	movweq	r0, #32772	; 0x8004
     6bc:	0501028f 	streq	r0, [r1, #-655]	; 0xfffffd71
     6c0:	14051305 	strne	r1, [r5], #-773	; 0xfffffcfb
     6c4:	29051106 	stmdbcs	r5, {r1, r2, r8, ip}
     6c8:	1e050523 	cfsh32ne	mvfx0, mvfx5, #19
     6cc:	29053006 	stmdbcs	r5, {r1, r2, ip, sp}
     6d0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     6d4:	05303d06 	ldreq	r3, [r0, #-3334]!	; 0xfffff2fa
     6d8:	05130615 	ldreq	r0, [r3, #-1557]	; 0xfffff9eb
     6dc:	15052d05 	strne	r2, [r5, #-3333]	; 0xfffff2fb
     6e0:	1f050521 	svcne	0x00050521
     6e4:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
     6e8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     6ec:	2f302106 	svccs	0x00302106
     6f0:	01061205 	tsteq	r6, r5, lsl #4
     6f4:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
     6f8:	0101000a 	tsteq	r1, sl
     6fc:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
     700:	0004fc02 	andeq	pc, r4, r2, lsl #24
     704:	03c70308 	biceq	r0, r7, #8, 6	; 0x20000000
     708:	13050501 	movwne	r0, #21761	; 0x5501
     70c:	06280513 			; <UNDEFINED> instruction: 0x06280513
     710:	1e160501 	cfmul32ne	mvfx0, mvfx6, mvfx1
     714:	05222805 	streq	r2, [r2, #-2053]!	; 0xfffff7fb
     718:	052f0605 	streq	r0, [pc, #-1541]!	; 11b <_Minimum_Stack_Size+0x1b>
     71c:	0501063a 	streq	r0, [r1, #-1594]	; 0xfffff9c6
     720:	3a052305 	bcc	14933c <__Stack_Size+0x148f3c>
     724:	0605051d 			; <UNDEFINED> instruction: 0x0605051d
     728:	0633052f 	ldrteq	r0, [r3], -pc, lsr #10
     72c:	06050501 	streq	r0, [r5], -r1, lsl #10
     730:	062b052f 	strteq	r0, [fp], -pc, lsr #10
     734:	06050501 	streq	r0, [r5], -r1, lsl #10
     738:	0601052f 	streq	r0, [r1], -pc, lsr #10
     73c:	0003022f 	andeq	r0, r3, pc, lsr #4
     740:	27050101 	strcs	r0, [r5, -r1, lsl #2]
     744:	20020500 	andcs	r0, r2, r0, lsl #10
     748:	03080005 	movweq	r0, #32773	; 0x8005
     74c:	050103d0 	streq	r0, [r1, #-976]	; 0xfffffc30
     750:	0d051305 	stceq	3, cr1, [r5, #-20]	; 0xffffffec
     754:	27050106 	strcs	r0, [r5, -r6, lsl #2]
     758:	210d051f 	tstcs	sp, pc, lsl r5
     75c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
     760:	1c05200d 	stcne	0, cr2, [r5], {13}
     764:	1c0b0524 	cfstr32ne	mvfx0, [fp], {36}	; 0x24
     768:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
     76c:	01060805 	tsteq	r6, r5, lsl #16
     770:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
     774:	09052008 	stmdbeq	r5, {r3, sp}
     778:	054b3d06 	strbeq	r3, [fp, #-3334]	; 0xfffff2fa
     77c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
     780:	05052009 	streq	r2, [r5, #-9]
     784:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
     788:	01060f05 	tsteq	r6, r5, lsl #30
     78c:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
     790:	09052008 	stmdbeq	r5, {r3, sp}
     794:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
     798:	060f056c 	streq	r0, [pc], -ip, ror #10
     79c:	20080501 	andcs	r0, r8, r1, lsl #10
     7a0:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
     7a4:	061f3d06 	ldreq	r3, [pc], -r6, lsl #26
     7a8:	3405052f 	strcc	r0, [r5], #-1327	; 0xfffffad1
     7ac:	01060f05 	tsteq	r6, r5, lsl #30
     7b0:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
     7b4:	054d0609 	strbeq	r0, [sp, #-1545]	; 0xfffff9f7
     7b8:	0905130d 	stmdbeq	r5, {r0, r2, r3, r8, r9, ip}
     7bc:	5e050534 	mcrpl	5, 0, r0, cr5, cr4, {1}
     7c0:	01060f05 	tsteq	r6, r5, lsl #30
     7c4:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
     7c8:	09052008 	stmdbeq	r5, {r3, sp}
     7cc:	05593d06 	ldrbeq	r3, [r9, #-3334]	; 0xfffff2fa
     7d0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     7d4:	055e0605 	ldrbeq	r0, [lr, #-1541]	; 0xfffff9fb
     7d8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     7dc:	09052008 	stmdbeq	r5, {r3, sp}
     7e0:	3e063d06 	cdpcc	13, 0, cr3, cr6, cr6, {0}
     7e4:	0530061e 	ldreq	r0, [r0, #-1566]!	; 0xfffff9e2
     7e8:	0f053405 	svceq	0x00053405
     7ec:	08050106 	stmdaeq	r5, {r1, r2, r8}
     7f0:	06090520 	streq	r0, [r9], -r0, lsr #10
     7f4:	0601054d 	streq	r0, [r1], -sp, asr #10
     7f8:	2a090516 	bcs	241c58 <__Stack_Size+0x241858>
     7fc:	02320105 	eorseq	r0, r2, #1073741825	; 0x40000001
     800:	0101000c 	tsteq	r1, ip
     804:	00000079 	andeq	r0, r0, r9, ror r0
     808:	00730003 	rsbseq	r0, r3, r3
     80c:	01020000 	mrseq	r0, (UNDEF: 2)
     810:	000d0efb 	strdeq	r0, [sp], -fp
     814:	01010101 	tsteq	r1, r1, lsl #2
     818:	01000000 	mrseq	r0, (UNDEF: 0)
     81c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     820:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
     824:	6c5f3233 	lfmvs	f3, 2, [pc], {51}	; 0x33
     828:	2e006269 	cdpcs	2, 0, cr6, cr0, cr9, {3}
     82c:	6273752f 	rsbsvs	r7, r3, #197132288	; 0xbc00000
     830:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
     834:	74730000 	ldrbtvc	r0, [r3], #-0
     838:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     83c:	5f783031 	svcpl	0x00783031
     840:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     844:	0100682e 	tsteq	r0, lr, lsr #16
     848:	73750000 	cmnvc	r5, #0
     84c:	6f635f62 	svcvs	0x00635f62
     850:	682e6572 	stmdavs	lr!, {r1, r4, r5, r6, r8, sl, sp, lr}
     854:	00000200 	andeq	r0, r0, r0, lsl #4
     858:	5f627375 	svcpl	0x00627375
     85c:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
     860:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     864:	682e726f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
     868:	00000000 	andeq	r0, r0, r0
     86c:	5f627375 	svcpl	0x00627375
     870:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
     874:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     878:	632e726f 			; <UNDEFINED> instruction: 0x632e726f
     87c:	00000000 	andeq	r0, r0, r0
     880:	00011600 	andeq	r1, r1, r0, lsl #12
     884:	5d000300 	stcpl	3, cr0, [r0, #-0]
     888:	02000000 	andeq	r0, r0, #0
     88c:	0d0efb01 	vstreq	d15, [lr, #-4]
     890:	01010100 	mrseq	r0, (UNDEF: 17)
     894:	00000001 	andeq	r0, r0, r1
     898:	01000001 	tsteq	r0, r1
     89c:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
     8a0:	5f32336d 	svcpl	0x0032336d
     8a4:	0062696c 	rsbeq	r6, r2, ip, ror #18
     8a8:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     8ac:	00632e6e 	rsbeq	r2, r3, lr, ror #28
     8b0:	64000000 	strvs	r0, [r0], #-0
     8b4:	682e7566 	stmdavs	lr!, {r1, r2, r5, r6, r8, sl, ip, sp, lr}
     8b8:	00000000 	andeq	r0, r0, r0
     8bc:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
     8c0:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
     8c4:	0000682e 	andeq	r6, r0, lr, lsr #16
     8c8:	73750000 	cmnvc	r5, #0
     8cc:	00682e62 	rsbeq	r2, r8, r2, ror #28
     8d0:	73000000 	movwvc	r0, #0
     8d4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     8d8:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
     8dc:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     8e0:	00682e65 	rsbeq	r2, r8, r5, ror #28
     8e4:	00000001 	andeq	r0, r0, r1
     8e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     8ec:	0005ec02 	andeq	lr, r5, r2, lsl #24
     8f0:	01260308 			; <UNDEFINED> instruction: 0x01260308
     8f4:	13130505 	tstne	r3, #20971520	; 0x1400000
     8f8:	06010514 			; <UNDEFINED> instruction: 0x06010514
     8fc:	2405050e 	strcs	r0, [r5], #-1294	; 0xfffffaf2
     900:	2f2f2f06 	svccs	0x002f2f06
     904:	0c05302f 	stceq	0, cr3, [r5], {47}	; 0x2f
     908:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     90c:	200c052e 	andcs	r0, ip, lr, lsr #10
     910:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     914:	1403060d 	strne	r0, [r3], #-1549	; 0xfffff9f3
     918:	0612053c 			; <UNDEFINED> instruction: 0x0612053c
     91c:	3c100501 	cfldr32cc	mvfx0, [r0], {1}
     920:	24061205 	strcs	r1, [r6], #-517	; 0xfffffdfb
     924:	01061605 	tsteq	r6, r5, lsl #12
     928:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
     92c:	0f05381e 	svceq	0x0005381e
     930:	20100306 	andscs	r0, r0, r6, lsl #6
     934:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
     938:	01040200 	mrseq	r0, R12_usr
     93c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     940:	05052001 	streq	r2, [r5, #-1]
     944:	010c0306 	tsteq	ip, r6, lsl #6
     948:	01060905 	tsteq	r6, r5, lsl #18
     94c:	053c0805 	ldreq	r0, [ip, #-2053]!	; 0xfffff7fb
     950:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
     954:	0526060d 	streq	r0, [r6, #-1549]!	; 0xfffff9f3
     958:	0c030605 	stceq	6, cr0, [r3], {5}
     95c:	0601052e 	streq	r0, [r1], -lr, lsr #10
     960:	003e0513 	eorseq	r0, lr, r3, lsl r5
     964:	03010402 	movweq	r0, #5122	; 0x1402
     968:	3a052e4d 	bcc	14c2a4 <__Stack_Size+0x14bea4>
     96c:	01040200 	mrseq	r0, R12_usr
     970:	301e053c 	andscc	r0, lr, ip, lsr r5
     974:	03060d05 	movweq	r0, #27909	; 0x6d05
     978:	11052e15 	tstne	r5, r5, lsl lr
     97c:	10050106 	andne	r0, r5, r6, lsl #2
     980:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
     984:	03090522 	movweq	r0, #38178	; 0x9522
     988:	0d054a0b 	vstreq	s8, [r5, #-44]	; 0xffffffd4
     98c:	0c050106 	stfeqs	f0, [r5], {6}
     990:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
     994:	08023622 	stmdaeq	r2, {r1, r5, r9, sl, ip, sp}
     998:	f7010100 			; <UNDEFINED> instruction: 0xf7010100
     99c:	03000006 	movweq	r0, #6
     9a0:	00005800 	andeq	r5, r0, r0, lsl #16
     9a4:	fb010200 	blx	411ae <__Stack_Size+0x40dae>
     9a8:	01000d0e 	tsteq	r0, lr, lsl #26
     9ac:	00010101 	andeq	r0, r1, r1, lsl #2
     9b0:	00010000 	andeq	r0, r1, r0
     9b4:	2f2e0100 	svccs	0x002e0100
     9b8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     9bc:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     9c0:	68000062 	stmdavs	r0, {r1, r5, r6}
     9c4:	77647261 	strbvc	r7, [r4, -r1, ror #4]!
     9c8:	2e657261 	cdpcs	2, 6, cr7, cr5, cr1, {3}
     9cc:	00000063 	andeq	r0, r0, r3, rrx
     9d0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     9d4:	31663233 	cmncc	r6, r3, lsr r2
     9d8:	745f7830 	ldrbvc	r7, [pc], #-2096	; 9e0 <__Stack_Size+0x5e0>
     9dc:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
     9e0:	00010068 	andeq	r0, r1, r8, rrx
     9e4:	72616800 	rsbvc	r6, r1, #0, 16
     9e8:	72617764 	rsbvc	r7, r1, #100, 14	; 0x1900000
     9ec:	00682e65 	rsbeq	r2, r8, r5, ror #28
     9f0:	75000000 	strvc	r0, [r0, #-0]
     9f4:	682e6273 	stmdavs	lr!, {r0, r1, r4, r5, r6, r9, sp, lr}
     9f8:	00000000 	andeq	r0, r0, r0
     9fc:	002f0500 	eoreq	r0, pc, r0, lsl #10
     a00:	06740205 	ldrbteq	r0, [r4], -r5, lsl #4
     a04:	2c030800 	stccs	8, cr0, [r3], {-0}
     a08:	13050501 	movwne	r0, #21761	; 0x5501
     a0c:	0b050113 	bleq	140e60 <__Stack_Size+0x140a60>
     a10:	05051106 	streq	r1, [r5, #-262]	; 0xfffffefa
     a14:	1f0b052f 	svcne	0x000b052f
     a18:	06210505 	strteq	r0, [r1], -r5, lsl #10
     a1c:	06010558 			; <UNDEFINED> instruction: 0x06010558
     a20:	00010213 	andeq	r0, r1, r3, lsl r2
     a24:	20050101 	andcs	r0, r5, r1, lsl #2
     a28:	00020500 	andeq	r0, r2, r0, lsl #10
     a2c:	03000000 	movweq	r0, #0
     a30:	05050131 	streq	r0, [r5, #-305]	; 0xfffffecf
     a34:	06290514 			; <UNDEFINED> instruction: 0x06290514
     a38:	20090501 	andcs	r0, r9, r1, lsl #10
     a3c:	05202905 	streq	r2, [r0, #-2309]!	; 0xfffff6fb
     a40:	01052008 	tsteq	r5, r8
     a44:	02022e25 	andeq	r2, r2, #592	; 0x250
     a48:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     a4c:	02050018 	andeq	r0, r5, #24
     a50:	08000688 	stmdaeq	r0, {r3, r7, r9, sl}
     a54:	05013a03 	streq	r3, [r1, #-2563]	; 0xfffff5fd
     a58:	0c031405 	cfstrseq	mvf1, [r3], {5}
     a5c:	06010501 	streq	r0, [r1], -r1, lsl #10
     a60:	00020213 	andeq	r0, r2, r3, lsl r2
     a64:	01050101 	tsteq	r5, r1, lsl #2
     a68:	00020500 	andeq	r0, r2, r0, lsl #10
     a6c:	03000000 	movweq	r0, #0
     a70:	050100cc 	streq	r0, [r1, #-204]	; 0xffffff34
     a74:	01051305 	tsteq	r5, r5, lsl #6
     a78:	052e1106 	streq	r1, [lr, #-262]!	; 0xfffffefa
     a7c:	01053d05 	tsteq	r5, r5, lsl #26
     a80:	3d050549 	cfstr32cc	mvfx0, [r5, #-292]	; 0xfffffedc
     a84:	05133006 	ldreq	r3, [r3, #-6]
     a88:	0106010b 	tsteq	r6, fp, lsl #2
     a8c:	0f030105 	svceq	0x00030105
     a90:	000d0520 	andeq	r0, sp, r0, lsr #10
     a94:	06030402 	streq	r0, [r3], -r2, lsl #8
     a98:	052e7503 	streq	r7, [lr, #-1283]!	; 0xfffffafd
     a9c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
     aa0:	20051e03 	andcs	r1, r5, r3, lsl #28
     aa4:	03040200 	movweq	r0, #16896	; 0x4200
     aa8:	18050106 	stmdane	r5, {r1, r2, r8}
     aac:	01040200 	mrseq	r0, R12_usr
     ab0:	09052006 	stmdbeq	r5, {r1, r2, sp}
     ab4:	01040200 	mrseq	r0, R12_usr
     ab8:	33060106 	movwcc	r0, #24838	; 0x6106
     abc:	30063c06 	andcc	r3, r6, r6, lsl #24
     ac0:	01061005 	tsteq	r6, r5
     ac4:	02001805 	andeq	r1, r0, #327680	; 0x50000
     ac8:	20060104 	andcs	r0, r6, r4, lsl #2
     acc:	02000905 	andeq	r0, r0, #81920	; 0x14000
     ad0:	01060104 	tsteq	r6, r4, lsl #2
     ad4:	3c062406 	cfstrscc	mvf2, [r6], {6}
     ad8:	10052e20 	andne	r2, r5, r0, lsr #28
     adc:	052e7503 	streq	r7, [lr, #-1283]!	; 0xfffffafd
     ae0:	0402000d 	streq	r0, [r2], #-13
     ae4:	09030603 	stmdbeq	r3, {r0, r1, r9, sl}
     ae8:	001f052e 	andseq	r0, pc, lr, lsr #10
     aec:	1e030402 	cdpne	4, 0, cr0, cr3, cr2, {0}
     af0:	02002005 	andeq	r2, r0, #5
     af4:	01060304 	tsteq	r6, r4, lsl #6
     af8:	03040200 	movweq	r0, #16896	; 0x4200
     afc:	00010220 	andeq	r0, r1, r0, lsr #4
     b00:	18050101 	stmdane	r5, {r0, r8}
     b04:	8c020500 	cfstr32hi	mvfx0, [r2], {-0}
     b08:	03080006 	movweq	r0, #32774	; 0x8006
     b0c:	050100e1 	streq	r0, [r1, #-225]	; 0xffffff1f
     b10:	58011305 	stmdapl	r1, {r0, r2, r8, r9, ip}
     b14:	134a0113 	movtne	r0, #41235	; 0xa113
     b18:	01136601 	tsteq	r3, r1, lsl #12
     b1c:	4a01134a 	bmi	4584c <__Stack_Size+0x4544c>
     b20:	052e0114 	streq	r0, [lr, #-276]!	; 0xfffffeec
     b24:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     b28:	01010005 	tsteq	r1, r5
     b2c:	05001505 	streq	r1, [r0, #-1285]	; 0xfffffafb
     b30:	0006c802 	andeq	ip, r6, r2, lsl #16
     b34:	00eb0308 	rsceq	r0, fp, r8, lsl #6
     b38:	13050501 	movwne	r0, #21761	; 0x5501
     b3c:	13580114 	cmpne	r8, #20, 2
     b40:	02003005 	andeq	r3, r0, #5
     b44:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
     b48:	0402000b 	streq	r0, [r2], #-11
     b4c:	0d050101 	stfeqs	f0, [r5, #-4]
     b50:	01040200 	mrseq	r0, R12_usr
     b54:	0b050106 	bleq	140f74 <__Stack_Size+0x140b74>
     b58:	01040200 	mrseq	r0, R12_usr
     b5c:	06050520 	streq	r0, [r5], -r0, lsr #10
     b60:	173c0131 			; <UNDEFINED> instruction: 0x173c0131
     b64:	09036601 	stmdbeq	r3, {r0, r9, sl, sp, lr}
     b68:	194a0101 	stmdbne	sl, {r0, r8}^
     b6c:	02040200 	andeq	r0, r4, #0, 4
     b70:	000b0515 	andeq	r0, fp, r5, lsl r5
     b74:	0f020402 	svceq	0x00020402
     b78:	02000d05 	andeq	r0, r0, #320	; 0x140
     b7c:	01060204 	tsteq	r6, r4, lsl #4
     b80:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     b84:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
     b88:	19410605 	stmdbne	r1, {r0, r2, r9, sl}^
     b8c:	05134a01 	ldreq	r4, [r3, #-2561]	; 0xfffff5ff
     b90:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
     b94:	0b050101 	bleq	140fa0 <__Stack_Size+0x140ba0>
     b98:	01040200 	mrseq	r0, R12_usr
     b9c:	000d0501 	andeq	r0, sp, r1, lsl #10
     ba0:	06010402 	streq	r0, [r1], -r2, lsl #8
     ba4:	000b0501 	andeq	r0, fp, r1, lsl #10
     ba8:	20010402 	andcs	r0, r1, r2, lsl #8
     bac:	30060505 	andcc	r0, r6, r5, lsl #10
     bb0:	01061305 	tsteq	r6, r5, lsl #6
     bb4:	4b060505 	blmi	181fd0 <__Stack_Size+0x181bd0>
     bb8:	01061305 	tsteq	r6, r5, lsl #6
     bbc:	024b0105 	subeq	r0, fp, #1073741825	; 0x40000001
     bc0:	01010006 	tsteq	r1, r6
     bc4:	05001f05 	streq	r1, [r0, #-3845]	; 0xfffff0fb
     bc8:	00072402 	andeq	r2, r7, r2, lsl #8
     bcc:	019b0308 	orrseq	r0, fp, r8, lsl #6
     bd0:	03010501 	movweq	r0, #5377	; 0x1501
     bd4:	0102010b 	tsteq	r2, fp, lsl #2
     bd8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     bdc:	02050013 	andeq	r0, r5, #19
     be0:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
     be4:	0101a803 	tsteq	r1, r3, lsl #16
     be8:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
     bec:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     bf0:	09052e08 	stmdbeq	r5, {r3, r9, sl, fp, sp}
     bf4:	0d052106 	stfeqs	f2, [r5, #-24]	; 0xffffffe8
     bf8:	09050106 	stmdbeq	r5, {r1, r2, r8}
     bfc:	10052f06 	andne	r2, r5, r6, lsl #30
     c00:	09050106 	stmdbeq	r5, {r1, r2, r8}
     c04:	12052f06 	andne	r2, r5, #6, 30
     c08:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     c0c:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
     c10:	05160601 	ldreq	r0, [r6, #-1537]	; 0xfffff9ff
     c14:	0402000b 	streq	r0, [r2], #-11
     c18:	11050101 	tstne	r5, r1, lsl #2
     c1c:	01040200 	mrseq	r0, R12_usr
     c20:	0b050106 	bleq	141040 <__Stack_Size+0x140c40>
     c24:	01040200 	mrseq	r0, R12_usr
     c28:	2f010520 	svccs	0x00010520
     c2c:	01000302 	tsteq	r0, r2, lsl #6
     c30:	00210501 	eoreq	r0, r1, r1, lsl #10
     c34:	07440205 	strbeq	r0, [r4, -r5, lsl #4]
     c38:	b4030800 	strlt	r0, [r3], #-2048	; 0xfffff800
     c3c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
     c40:	06090513 			; <UNDEFINED> instruction: 0x06090513
     c44:	06050501 	streq	r0, [r5], -r1, lsl #10
     c48:	060d0522 	streq	r0, [sp], -r2, lsr #10
     c4c:	01052001 	tsteq	r5, r1
     c50:	05022e25 	streq	r2, [r2, #-3621]	; 0xfffff1db
     c54:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     c58:	02050021 	andeq	r0, r5, #33	; 0x21
     c5c:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
     c60:	0101be03 	tsteq	r1, r3, lsl #28
     c64:	13160505 	tstne	r6, #20971520	; 0x1400000
     c68:	09051606 	stmdbeq	r5, {r1, r2, r9, sl, ip}
     c6c:	0605052a 	streq	r0, [r5], -sl, lsr #10
     c70:	2e011422 	cdpcs	4, 0, cr1, cr1, cr2, {1}
     c74:	06250514 			; <UNDEFINED> instruction: 0x06250514
     c78:	20050501 	andcs	r0, r5, r1, lsl #10
     c7c:	20063006 	andcs	r3, r6, r6
     c80:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     c84:	02050001 	andeq	r0, r5, #1
     c88:	0800076c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl}
     c8c:	0101e303 	tsteq	r1, r3, lsl #6
     c90:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
     c94:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
     c98:	055b0609 	ldrbeq	r0, [fp, #-1545]	; 0xfffff9f7
     c9c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     ca0:	055b0609 	ldrbeq	r0, [fp, #-1545]	; 0xfffff9f7
     ca4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     ca8:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
     cac:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     cb0:	08024b01 	stmdaeq	r2, {r0, r8, r9, fp, lr}
     cb4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     cb8:	02050001 	andeq	r0, r5, #1
     cbc:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
     cc0:	0101f203 	tsteq	r1, r3, lsl #4	; <UNPREDICTABLE>
     cc4:	15130505 	ldrne	r0, [r3, #-1285]	; 0xfffffafb
     cc8:	13051406 	movwne	r1, #21510	; 0x5406
     ccc:	1c01052c 	cfstr32ne	mvfx0, [r1], {44}	; 0x2c
     cd0:	05241305 	streq	r1, [r4, #-773]!	; 0xfffffcfb
     cd4:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
     cd8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     cdc:	15053c05 	strne	r3, [r5, #-3077]	; 0xfffff3fb
     ce0:	0609056c 	streq	r0, [r9], -ip, ror #10
     ce4:	17053e26 	strne	r3, [r5, -r6, lsr #28]
     ce8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     cec:	01054f06 	tsteq	r5, r6, lsl #30
     cf0:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
     cf4:	022e6c03 	eoreq	r6, lr, #768	; 0x300
     cf8:	01010009 	tsteq	r1, r9
     cfc:	05003205 	streq	r3, [r0, #-517]	; 0xfffffdfb
     d00:	0007e402 	andeq	lr, r7, r2, lsl #8
     d04:	02900308 	addseq	r0, r0, #8, 6	; 0x20000000
     d08:	13050501 	movwne	r0, #21761	; 0x5501
     d0c:	13131313 	tstne	r3, #1275068416	; 0x4c000000
     d10:	05161314 	ldreq	r1, [r6, #-788]	; 0xfffffcec
     d14:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
     d18:	20740332 	rsbscs	r0, r4, r2, lsr r3
     d1c:	0c032105 	stfeqs	f2, [r3], {5}
     d20:	220c0520 	andcs	r0, ip, #32, 10	; 0x8000000
     d24:	051e1a05 	ldreq	r1, [lr, #-2565]	; 0xfffff5fb
     d28:	05052011 	streq	r2, [r5, #-17]	; 0xffffffef
     d2c:	0c052f06 	stceq	15, cr2, [r5], {6}
     d30:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d34:	05142f06 	ldreq	r2, [r4, #-3846]	; 0xfffff0fa
     d38:	0510060c 	ldreq	r0, [r0, #-1548]	; 0xfffff9f4
     d3c:	2e09030d 	cdpcs	3, 0, cr0, cr9, cr13, {0}
     d40:	79031305 	stmdbvc	r3, {r0, r2, r8, r9, ip}
     d44:	20110520 	andscs	r0, r1, r0, lsr #10
     d48:	2f060505 	svccs	0x00060505
     d4c:	01062405 	tsteq	r6, r5, lsl #8
     d50:	05204105 	streq	r4, [r0, #-261]!	; 0xfffffefb
     d54:	1105233a 	tstne	r5, sl, lsr r3
     d58:	0605051d 			; <UNDEFINED> instruction: 0x0605051d
     d5c:	064c0522 	strbeq	r0, [ip], -r2, lsr #10
     d60:	300c0567 	andcc	r0, ip, r7, ror #10
     d64:	052c5805 	streq	r5, [ip, #-2053]!	; 0xfffff7fb
     d68:	05051f11 	streq	r1, [r5, #-3857]	; 0xfffff0ef
     d6c:	13142106 	tstne	r4, #-2147483647	; 0x80000001
     d70:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
     d74:	7a030611 	bvc	c25c0 <__Stack_Size+0xc21c0>
     d78:	0d052001 	stceq	0, cr2, [r5, #-4]
     d7c:	0c052e23 	stceq	14, cr2, [r5], {35}	; 0x23
     d80:	06050523 	streq	r0, [r5], -r3, lsr #10
     d84:	063c0522 	ldrteq	r0, [ip], -r2, lsr #10
     d88:	06050501 	streq	r0, [r5], -r1, lsl #10
     d8c:	06130531 			; <UNDEFINED> instruction: 0x06130531
     d90:	1f330513 	svcne	0x00330513
     d94:	05213805 	streq	r3, [r1, #-2053]!	; 0xfffff7fb
     d98:	3d052e13 	stccc	14, cr2, [r5, #-76]	; 0xffffffb4
     d9c:	3e01052d 	cfsh32cc	mvfx0, mvfx1, #29
     da0:	01000602 	tsteq	r0, r2, lsl #12
     da4:	001e0501 	andseq	r0, lr, r1, lsl #10
     da8:	08500205 	ldmdaeq	r0, {r0, r2, r9}^
     dac:	b3030800 	movwlt	r0, #14336	; 0x3800
     db0:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
     db4:	14051313 	strne	r1, [r5], #-787	; 0xfffffced
     db8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     dbc:	14055906 	strne	r5, [r5], #-2310	; 0xfffff6fa
     dc0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     dc4:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
     dc8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     dcc:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
     dd0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     dd4:	4a013006 	bmi	4cdf4 <__Stack_Size+0x4c9f4>
     dd8:	13060105 	movwne	r0, #24837	; 0x6105
     ddc:	01000302 	tsteq	r0, r2, lsl #6
     de0:	001e0501 	andseq	r0, lr, r1, lsl #10
     de4:	08740205 	ldmdaeq	r4!, {r0, r2, r9}^
     de8:	cf030800 	svcgt	0x00030800
     dec:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
     df0:	03060517 	movweq	r0, #25879	; 0x6517
     df4:	050101ab 	streq	r0, [r1, #-427]	; 0xfffffe55
     df8:	05011605 	streq	r1, [r1, #-1541]	; 0xfffff9fb
     dfc:	cc03061e 	stcgt	6, cr0, [r3], {30}
     e00:	0520207e 	streq	r2, [r0, #-126]!	; 0xffffff82
     e04:	01b40305 			; <UNDEFINED> instruction: 0x01b40305
     e08:	032e0620 			; <UNDEFINED> instruction: 0x032e0620
     e0c:	2f017ed2 	svccs	0x00017ed2
     e10:	05303231 	ldreq	r3, [r0, #-561]!	; 0xfffffdcf
     e14:	05210601 	streq	r0, [r1, #-1537]!	; 0xfffff9ff
     e18:	022e2d05 	eoreq	r2, lr, #320	; 0x140
     e1c:	01010002 	tsteq	r1, r2
     e20:	05001c05 	streq	r1, [r0, #-3077]	; 0xfffff3fb
     e24:	00089c02 	andeq	r9, r8, r2, lsl #24
     e28:	02bd0308 	adcseq	r0, sp, #8, 6	; 0x20000000
     e2c:	13050501 	movwne	r0, #21761	; 0x5501
     e30:	06110515 			; <UNDEFINED> instruction: 0x06110515
     e34:	00270501 	eoreq	r0, r7, r1, lsl #10
     e38:	06010402 	streq	r0, [r1], -r2, lsl #8
     e3c:	0005053c 	andeq	r0, r5, ip, lsr r5
     e40:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
     e44:	02000905 	andeq	r0, r0, #81920	; 0x14000
     e48:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
     e4c:	0402000b 	streq	r0, [r2], #-11
     e50:	06021f01 	streq	r1, [r2], -r1, lsl #30
     e54:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     e58:	02050023 	andeq	r0, r5, #35	; 0x23
     e5c:	080008b0 	stmdaeq	r0, {r4, r5, r7, fp}
     e60:	0102c903 	tsteq	r2, r3, lsl #18
     e64:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
     e68:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     e6c:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
     e70:	05142e01 	ldreq	r2, [r4, #-3585]	; 0xfffff1ff
     e74:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     e78:	0b050101 	bleq	141284 <__Stack_Size+0x140e84>
     e7c:	01040200 	mrseq	r0, R12_usr
     e80:	000c0501 	andeq	r0, ip, r1, lsl #10
     e84:	06010402 	streq	r0, [r1], -r2, lsl #8
     e88:	000b0501 	andeq	r0, fp, r1, lsl #10
     e8c:	20010402 	andcs	r0, r1, r2, lsl #8
     e90:	2f060505 	svccs	0x00060505
     e94:	1f130601 	svcne	0x00130601
     e98:	01132006 	tsteq	r3, r6
     e9c:	0c051320 	stceq	3, cr1, [r5], {32}
     ea0:	2f050106 	svccs	0x00050106
     ea4:	01040200 	mrseq	r0, R12_usr
     ea8:	0b052006 	bleq	148ec8 <__Stack_Size+0x148ac8>
     eac:	01040200 	mrseq	r0, R12_usr
     eb0:	000c0501 	andeq	r0, ip, r1, lsl #10
     eb4:	06010402 	streq	r0, [r1], -r2, lsl #8
     eb8:	000b0501 	andeq	r0, fp, r1, lsl #10
     ebc:	20010402 	andcs	r0, r1, r2, lsl #8
     ec0:	40060505 	andmi	r0, r6, r5, lsl #10
     ec4:	01050113 	tsteq	r5, r3, lsl r1
     ec8:	05051506 	streq	r1, [r5, #-1286]	; 0xfffffafa
     ecc:	1420061d 	strtne	r0, [r0], #-1565	; 0xfffff9e3
     ed0:	13060105 	movwne	r0, #24837	; 0x6105
     ed4:	01000302 	tsteq	r0, r2, lsl #6
     ed8:	002b0501 	eoreq	r0, fp, r1, lsl #10
     edc:	00000205 	andeq	r0, r0, r5, lsl #4
     ee0:	da030000 	ble	c0ee8 <__Stack_Size+0xc0ae8>
     ee4:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
     ee8:	062b0513 			; <UNDEFINED> instruction: 0x062b0513
     eec:	0b052011 	bleq	148f38 <__Stack_Size+0x148b38>
     ef0:	3d360521 	cfldr32cc	mvfx0, [r6, #-132]!	; 0xffffff7c
     ef4:	2d060b05 	vstrcs	d0, [r6, #-20]	; 0xffffffec
     ef8:	0c050106 	stfeqs	f0, [r5], {6}
     efc:	06090534 			; <UNDEFINED> instruction: 0x06090534
     f00:	06360529 	ldrteq	r0, [r6], -r9, lsr #10
     f04:	200e0501 	andcs	r0, lr, r1, lsl #10
     f08:	204a0c05 	subcs	r0, sl, r5, lsl #24
     f0c:	20420105 	subcs	r0, r2, r5, lsl #2
     f10:	01000302 	tsteq	r0, r2, lsl #6
     f14:	00290501 	eoreq	r0, r9, r1, lsl #10
     f18:	08d80205 	ldmeq	r8, {r0, r2, r9}^
     f1c:	e4030800 	str	r0, [r3], #-2048	; 0xfffff800
     f20:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
     f24:	29051313 	stmdbcs	r5, {r0, r1, r4, r8, r9, ip}
     f28:	05051006 	streq	r1, [r5, #-6]
     f2c:	1c1e0526 	cfldr32ne	mvfx0, [lr], {38}	; 0x26
     f30:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
     f34:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     f38:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
     f3c:	0505200a 	streq	r2, [r5, #-10]
     f40:	09052206 	stmdbeq	r5, {r1, r2, r9, sp}
     f44:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f48:	20012f06 	andcs	r2, r1, r6, lsl #30
     f4c:	002f0516 	eoreq	r0, pc, r6, lsl r5	; <UNPREDICTABLE>
     f50:	01010402 	tsteq	r1, r2, lsl #8
     f54:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     f58:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
     f5c:	0402000c 	streq	r0, [r2], #-12
     f60:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     f64:	0402000b 	streq	r0, [r2], #-11
     f68:	05052001 	streq	r2, [r5, #-1]
     f6c:	1b052f06 	blne	14cb8c <__Stack_Size+0x14c78c>
     f70:	19050106 	stmdbne	r5, {r1, r2, r8}
     f74:	0605052e 	streq	r0, [r5], -lr, lsr #10
     f78:	060c0521 	streq	r0, [ip], -r1, lsr #10
     f7c:	002f0501 	eoreq	r0, pc, r1, lsl #10
     f80:	06010402 	streq	r0, [r1], -r2, lsl #8
     f84:	000b0520 	andeq	r0, fp, r0, lsr #10
     f88:	01010402 	tsteq	r1, r2, lsl #8
     f8c:	02000c05 	andeq	r0, r0, #1280	; 0x500
     f90:	01060104 	tsteq	r6, r4, lsl #2
     f94:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     f98:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     f9c:	052f0605 	streq	r0, [pc, #-1541]!	; 99f <__Stack_Size+0x59f>
     fa0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     fa4:	05052e12 	streq	r2, [r5, #-3602]	; 0xfffff1ee
     fa8:	2f052106 	svccs	0x00052106
     fac:	01040200 	mrseq	r0, R12_usr
     fb0:	000b0501 	andeq	r0, fp, r1, lsl #10
     fb4:	01010402 	tsteq	r1, r2, lsl #8
     fb8:	02000c05 	andeq	r0, r0, #1280	; 0x500
     fbc:	01060104 	tsteq	r6, r4, lsl #2
     fc0:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     fc4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     fc8:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     fcc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     fd0:	012f0605 			; <UNDEFINED> instruction: 0x012f0605
     fd4:	09051520 	stmdbeq	r5, {r5, r8, sl, ip}
     fd8:	01050106 	tsteq	r5, r6, lsl #2
     fdc:	00070225 	andeq	r0, r7, r5, lsr #4
     fe0:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     fe4:	20020500 	andcs	r0, r2, r0, lsl #10
     fe8:	03080009 	movweq	r0, #32777	; 0x8009
     fec:	050102ff 	streq	r0, [r1, #-767]	; 0xfffffd01
     ff0:	3c011605 	stccc	6, cr1, [r1], {5}
     ff4:	13060105 	movwne	r0, #24837	; 0x6105
     ff8:	01000302 	tsteq	r0, r2, lsl #6
     ffc:	00140501 	andseq	r0, r4, r1, lsl #10
    1000:	092c0205 	stmdbeq	ip!, {r0, r2, r9}
    1004:	86030800 	strhi	r0, [r3], -r0, lsl #16
    1008:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    100c:	133c0114 	teqne	ip, #20, 2
    1010:	01053c01 	tsteq	r5, r1, lsl #24
    1014:	06021306 	streq	r1, [r2], -r6, lsl #6
    1018:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    101c:	02050001 	andeq	r0, r5, #1
    1020:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
    1024:	01038f03 	tsteq	r3, r3, lsl #30
    1028:	13130505 	tstne	r3, #20971520	; 0x1400000
    102c:	16061105 	strne	r1, [r6], -r5, lsl #2
    1030:	051c0805 	ldreq	r0, [ip, #-2053]	; 0xfffff7fb
    1034:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    1038:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    103c:	13300605 	teqne	r0, #5242880	; 0x500000
    1040:	11061805 	tstne	r6, r5, lsl #16
    1044:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
    1048:	02203001 	eoreq	r3, r0, #1
    104c:	01010001 	tsteq	r1, r1
    1050:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1054:	00095802 	andeq	r5, r9, r2, lsl #16
    1058:	039b0308 	orrseq	r0, fp, #8, 6	; 0x20000000
    105c:	13050501 	movwne	r0, #21761	; 0x5501
    1060:	06130513 			; <UNDEFINED> instruction: 0x06130513
    1064:	200d0501 	andcs	r0, sp, r1, lsl #10
    1068:	052e3005 	streq	r3, [lr, #-5]!
    106c:	05022f01 	streq	r2, [r2, #-3841]	; 0xfffff0ff
    1070:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1074:	02050001 	andeq	r0, r5, #1
    1078:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
    107c:	0103a103 	tsteq	r3, r3, lsl #2
    1080:	13140505 	tstne	r4, #20971520	; 0x1400000
    1084:	01060a05 	tsteq	r6, r5, lsl #20
    1088:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    108c:	01053410 	tsteq	r5, r0, lsl r4
    1090:	00080222 	andeq	r0, r8, r2, lsr #4
    1094:	070f0101 	streq	r0, [pc, -r1, lsl #2]
    1098:	00030000 	andeq	r0, r3, r0
    109c:	00000082 	andeq	r0, r0, r2, lsl #1
    10a0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    10a4:	0101000d 	tsteq	r1, sp
    10a8:	00000101 	andeq	r0, r0, r1, lsl #2
    10ac:	00000100 	andeq	r0, r0, r0, lsl #2
    10b0:	732f2e01 			; <UNDEFINED> instruction: 0x732f2e01
    10b4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    10b8:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    10bc:	752f2e00 	strvc	r2, [pc, #-3584]!	; 2c4 <_Minimum_Stack_Size+0x1c4>
    10c0:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
    10c4:	00006269 	andeq	r6, r0, r9, ror #4
    10c8:	2e756664 	cdpcs	6, 7, cr6, cr5, cr4, {3}
    10cc:	00000063 	andeq	r0, r0, r3, rrx
    10d0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    10d4:	31663233 	cmncc	r6, r3, lsr r2
    10d8:	745f7830 	ldrbvc	r7, [pc], #-2096	; 10e0 <__Stack_Size+0xce0>
    10dc:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    10e0:	00010068 	andeq	r0, r1, r8, rrx
    10e4:	62737500 	rsbsvs	r7, r3, #0, 10
    10e8:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    10ec:	00682e65 	rsbeq	r2, r8, r5, ror #28
    10f0:	64000002 	strvs	r0, [r0], #-2
    10f4:	682e7566 	stmdavs	lr!, {r1, r2, r5, r6, r8, sl, ip, sp, lr}
    10f8:	00000000 	andeq	r0, r0, r0
    10fc:	5f627375 	svcpl	0x00627375
    1100:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1104:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1108:	61680000 	cmnvs	r8, r0
    110c:	61776472 	cmnvs	r7, r2, ror r4
    1110:	682e6572 	stmdavs	lr!, {r1, r4, r5, r6, r8, sl, sp, lr}
    1114:	00000000 	andeq	r0, r0, r0
    1118:	2e627375 	mcrcs	3, 3, r7, cr2, cr5, {3}
    111c:	00000068 	andeq	r0, r0, r8, rrx
    1120:	14050000 	strne	r0, [r5], #-0
    1124:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    1128:	03080009 	movweq	r0, #32777	; 0x8009
    112c:	05050137 	streq	r0, [r5, #-311]	; 0xfffffec9
    1130:	061a0513 			; <UNDEFINED> instruction: 0x061a0513
    1134:	24190501 	ldrcs	r0, [r9], #-1281	; 0xfffffaff
    1138:	051c1a05 	ldreq	r1, [ip, #-2565]	; 0xfffff5fb
    113c:	052f0605 	streq	r0, [pc, #-1541]!	; b3f <__Stack_Size+0x73f>
    1140:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    1144:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1148:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    114c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1150:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    1154:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1158:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    115c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1160:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    1164:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1168:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    116c:	15052211 	strne	r2, [r5, #-529]	; 0xfffffdef
    1170:	0605051e 			; <UNDEFINED> instruction: 0x0605051e
    1174:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    1178:	06160501 	ldreq	r0, [r6], -r1, lsl #10
    117c:	1305052e 	movwne	r0, #21806	; 0x552e
    1180:	01061105 	tsteq	r6, r5, lsl #2
    1184:	2f060505 	svccs	0x00060505
    1188:	01061005 	tsteq	r6, r5
    118c:	4b060505 	blmi	1825a8 <__Stack_Size+0x1821a8>
    1190:	13061405 	movwne	r1, #25605	; 0x6405
    1194:	051f1305 	ldreq	r1, [pc, #-773]	; e97 <__Stack_Size+0xa97>
    1198:	052f0605 	streq	r0, [pc, #-1541]!	; b9b <__Stack_Size+0x79b>
    119c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    11a0:	052f0605 	streq	r0, [pc, #-1541]!	; ba3 <__Stack_Size+0x7a3>
    11a4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    11a8:	13022f01 	movwne	r2, #12033	; 0x2f01
    11ac:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    11b0:	0205001d 	andeq	r0, r5, #29
    11b4:	080009e0 	stmdaeq	r0, {r5, r6, r7, r8, fp}
    11b8:	0102da03 	tsteq	r2, r3, lsl #20
    11bc:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    11c0:	05130615 	ldreq	r0, [r3, #-1557]	; 0xfffff9eb
    11c4:	08051e1d 	stmdaeq	r5, {r0, r2, r3, r4, r9, sl, fp, ip}
    11c8:	21150521 	tstcs	r5, r1, lsr #10
    11cc:	051f0805 	ldreq	r0, [pc, #-2053]	; 9cf <__Stack_Size+0x5cf>
    11d0:	08052115 	stmdaeq	r5, {r0, r2, r4, r8, sp}
    11d4:	05051d22 	streq	r1, [r5, #-3362]	; 0xfffff2de
    11d8:	05142106 	ldreq	r2, [r4, #-262]	; 0xfffffefa
    11dc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    11e0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    11e4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    11e8:	052f0609 	streq	r0, [pc, #-1545]!	; be7 <__Stack_Size+0x7e7>
    11ec:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    11f0:	2f220609 	svccs	0x00220609
    11f4:	03060105 	movweq	r0, #24837	; 0x6105
    11f8:	0905010d 	stmdbeq	r5, {r0, r2, r3, r8}
    11fc:	052e7303 	streq	r7, [lr, #-771]!	; 0xfffffcfd
    1200:	0530060c 	ldreq	r0, [r0, #-1548]!	; 0xfffff9f4
    1204:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1208:	05420609 	strbeq	r0, [r2, #-1545]	; 0xfffff9f7
    120c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    1210:	052f0609 	streq	r0, [pc, #-1545]!	; c0f <__Stack_Size+0x80f>
    1214:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    1218:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    121c:	05140601 	ldreq	r0, [r4, #-1537]	; 0xfffff9ff
    1220:	01052c09 	tsteq	r5, r9, lsl #24
    1224:	00060230 	andeq	r0, r6, r0, lsr r2
    1228:	1f050101 	svcne	0x00050101
    122c:	00020500 	andeq	r0, r2, r0, lsl #10
    1230:	03000000 	movweq	r0, #0
    1234:	050102f2 	streq	r0, [r1, #-754]	; 0xfffffd0e
    1238:	01021301 	tsteq	r2, r1, lsl #6
    123c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1240:	0205001e 	andeq	r0, r5, #30
    1244:	08000a24 	stmdaeq	r0, {r2, r5, r9, fp}
    1248:	0102f503 	tsteq	r2, r3, lsl #10	; <UNPREDICTABLE>
    124c:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    1250:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1254:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1258:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    125c:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    1260:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    1264:	01052211 	tsteq	r5, r1, lsl r2
    1268:	00050222 	andeq	r0, r5, r2, lsr #4
    126c:	1f050101 	svcne	0x00050101
    1270:	3c020500 	cfstr32cc	mvfx0, [r2], {-0}
    1274:	0308000a 	movweq	r0, #32778	; 0x800a
    1278:	050102fe 	streq	r0, [r1, #-766]	; 0xfffffd02
    127c:	08051305 	stmdaeq	r5, {r0, r2, r8, r9, ip}
    1280:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1284:	2d052106 	stfcss	f2, [r5, #-24]	; 0xffffffe8
    1288:	09050106 	stmdbeq	r5, {r1, r2, r8}
    128c:	10054b06 	andne	r4, r5, r6, lsl #22
    1290:	05220106 	streq	r0, [r2, #-262]!	; 0xfffffefa
    1294:	05022201 	streq	r2, [r2, #-513]	; 0xfffffdff
    1298:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    129c:	0205001f 	andeq	r0, r5, #31
    12a0:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
    12a4:	01038803 	tsteq	r3, r3, lsl #16
    12a8:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    12ac:	0513063b 	ldreq	r0, [r3, #-1595]	; 0xfffff9c5
    12b0:	08052e64 	stmdaeq	r5, {r2, r5, r6, r9, sl, fp, sp}
    12b4:	0609051f 			; <UNDEFINED> instruction: 0x0609051f
    12b8:	06480521 	strbeq	r0, [r8], -r1, lsr #10
    12bc:	204b0501 	subcs	r0, fp, r1, lsl #10
    12c0:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    12c4:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    12c8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    12cc:	052f0609 	streq	r0, [pc, #-1545]!	; ccb <__Stack_Size+0x8cb>
    12d0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    12d4:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    12d8:	20010622 	andcs	r0, r1, r2, lsr #12
    12dc:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
    12e0:	01010008 	tsteq	r1, r8
    12e4:	05001f05 	streq	r1, [r0, #-3845]	; 0xfffff0fb
    12e8:	000a7c02 	andeq	r7, sl, r2, lsl #24
    12ec:	03920308 	orrseq	r0, r2, #8, 6	; 0x20000000
    12f0:	13050501 	movwne	r0, #21761	; 0x5501
    12f4:	13064a05 	movwne	r4, #27141	; 0x6a05
    12f8:	052e5505 	streq	r5, [lr, #-1285]!	; 0xfffffafb
    12fc:	09051f08 	stmdbeq	r5, {r3, r8, r9, sl, fp, ip}
    1300:	3c052106 	stfccs	f2, [r5], {6}
    1304:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    1308:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    130c:	06100521 	ldreq	r0, [r0], -r1, lsr #10
    1310:	06090501 	streq	r0, [r9], -r1, lsl #10
    1314:	06220522 	strteq	r0, [r2], -r2, lsr #10
    1318:	34052e01 	strcc	r2, [r5], #-3585	; 0xfffff1ff
    131c:	2201053c 	andcs	r0, r1, #60, 10	; 0xf000000
    1320:	01000902 	tsteq	r0, r2, lsl #18
    1324:	001c0501 	andseq	r0, ip, r1, lsl #10
    1328:	0aac0205 	beq	feb01b44 <BootRAM+0xda722e5>
    132c:	9b030800 	blls	c3334 <__Stack_Size+0xc2f34>
    1330:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    1334:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    1338:	05011103 	streq	r1, [r1, #-259]	; 0xfffffefd
    133c:	6d03061c 	stcvs	6, cr0, [r3, #-112]	; 0xffffff90
    1340:	2e130301 	cdpcs	3, 1, cr0, cr3, cr1, {0}
    1344:	053e3a05 	ldreq	r3, [lr, #-2565]!	; 0xfffff5fb
    1348:	3a051e0c 	bcc	148b80 <__Stack_Size+0x148780>
    134c:	060d0522 	streq	r0, [sp], -r2, lsr #10
    1350:	063a052e 	ldrteq	r0, [sl], -lr, lsr #10
    1354:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1358:	063a0540 	ldrteq	r0, [sl], -r0, asr #10
    135c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1360:	10053e31 	andne	r3, r5, r1, lsr lr
    1364:	17050106 	strne	r0, [r5, -r6, lsl #2]
    1368:	0015053c 	andseq	r0, r5, ip, lsr r5
    136c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1370:	00170520 	andseq	r0, r7, r0, lsr #10
    1374:	06010402 	streq	r0, [r1], -r2, lsl #8
    1378:	00090501 	andeq	r0, r9, r1, lsl #10
    137c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1380:	33060505 	movwcc	r0, #25861	; 0x6505
    1384:	20061505 	andcs	r1, r6, r5, lsl #10
    1388:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    138c:	05052015 	streq	r2, [r5, #-21]	; 0xffffffeb
    1390:	12053006 	andne	r3, r5, #6
    1394:	01050106 	tsteq	r5, r6, lsl #2
    1398:	000d052f 	andeq	r0, sp, pc, lsr #10
    139c:	06030402 	streq	r0, [r3], -r2, lsl #8
    13a0:	002e7903 	eoreq	r7, lr, r3, lsl #18
    13a4:	06030402 	streq	r0, [r3], -r2, lsl #8
    13a8:	00270501 	eoreq	r0, r7, r1, lsl #10
    13ac:	06030402 	streq	r0, [r3], -r2, lsl #8
    13b0:	00290557 	eoreq	r0, r9, r7, asr r5
    13b4:	06030402 	streq	r0, [r3], -r2, lsl #8
    13b8:	04020001 	streq	r0, [r2], #-1
    13bc:	0a022003 	beq	893d0 <__Stack_Size+0x88fd0>
    13c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    13c4:	0205001f 	andeq	r0, r5, #31
    13c8:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
    13cc:	0100ca03 	tsteq	r0, r3, lsl #20
    13d0:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    13d4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    13d8:	0d05251a 	cfstr32eq	mvfx2, [r5, #-104]	; 0xffffff98
    13dc:	1d1f051b 	cfldr32ne	mvfx0, [pc, #-108]	; 1378 <__Stack_Size+0xf78>
    13e0:	05270805 	streq	r0, [r7, #-2053]!	; 0xfffff7fb
    13e4:	05051c0d 	streq	r1, [r5, #-3085]	; 0xfffff3f3
    13e8:	08052406 	stmdaeq	r5, {r1, r2, sl, sp}
    13ec:	1a050106 	bne	14180c <__Stack_Size+0x14140c>
    13f0:	22080521 	andcs	r0, r8, #138412032	; 0x8400000
    13f4:	0605051d 			; <UNDEFINED> instruction: 0x0605051d
    13f8:	08051421 	stmdaeq	r5, {r0, r5, sl, ip}
    13fc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1400:	11052206 	tstne	r5, r6, lsl #4
    1404:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1408:	19052206 	stmdbne	r5, {r1, r2, r9, sp}
    140c:	0c050106 	stfeqs	f0, [r5], {6}
    1410:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    1414:	06100530 			; <UNDEFINED> instruction: 0x06100530
    1418:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    141c:	0621054b 	strteq	r0, [r1], -fp, asr #10
    1420:	22240501 	eorcs	r0, r4, #4194304	; 0x400000
    1424:	051e2105 	ldreq	r2, [lr, #-261]	; 0xfffffefb
    1428:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    142c:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    1430:	26052111 			; <UNDEFINED> instruction: 0x26052111
    1434:	0611051f 			; <UNDEFINED> instruction: 0x0611051f
    1438:	03190521 	tsteq	r9, #138412032	; 0x8400000
    143c:	2e053c21 	cdpcs	12, 0, cr3, cr5, cr1, {1}
    1440:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    1444:	20018303 	andcs	r8, r1, r3, lsl #6
    1448:	21060d05 	tstcs	r6, r5, lsl #26
    144c:	01062205 	tsteq	r6, r5, lsl #4
    1450:	03061905 	movweq	r1, #26885	; 0x6905
    1454:	052e7ee6 	streq	r7, [lr, #-3814]!	; 0xfffff11a
    1458:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    145c:	053d0619 	ldreq	r0, [sp, #-1561]!	; 0xfffff9e7
    1460:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    1464:	2f310619 	svccs	0x00310619
    1468:	09033d30 	stmdbeq	r3, {r4, r5, r8, sl, fp, ip, sp}
    146c:	05054c01 	streq	r4, [r5, #-3073]	; 0xfffff3ff
    1470:	0101d803 	tsteq	r1, r3, lsl #16
    1474:	01061505 	tsteq	r6, r5, lsl #10
    1478:	05250105 	streq	r0, [r5, #-261]!	; 0xfffffefb
    147c:	9c030619 	stcls	6, cr0, [r3], {25}
    1480:	28054a7e 	stmdacs	r5, {r1, r2, r3, r4, r5, r6, r9, fp, lr}
    1484:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    1488:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    148c:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    1490:	2f3e0619 	svccs	0x003e0619
    1494:	0e031005 	cdpeq	0, 0, cr1, cr3, cr5, {0}
    1498:	0613053c 			; <UNDEFINED> instruction: 0x0613053c
    149c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    14a0:	0622052f 	strteq	r0, [r2], -pc, lsr #10
    14a4:	23370501 	teqcs	r7, #4194304	; 0x400000
    14a8:	051d2205 	ldreq	r2, [sp, #-517]	; 0xfffffdfb
    14ac:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    14b0:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    14b4:	1c05211a 	stfnes	f2, [r5], {26}
    14b8:	060d051f 			; <UNDEFINED> instruction: 0x060d051f
    14bc:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
    14c0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    14c4:	062e053e 			; <UNDEFINED> instruction: 0x062e053e
    14c8:	2e3e0501 	cdpcs	5, 3, cr0, cr14, cr1, {0}
    14cc:	05202e05 	streq	r2, [r0, #-3589]!	; 0xfffff1fb
    14d0:	0d05201d 	stceq	0, cr2, [r5, #-116]	; 0xffffff8c
    14d4:	20052f06 	andcs	r2, r5, r6, lsl #30
    14d8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    14dc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    14e0:	054a1303 	strbeq	r1, [sl, #-771]	; 0xfffffcfd
    14e4:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    14e8:	052f0615 	streq	r0, [pc, #-1557]!	; edb <__Stack_Size+0xadb>
    14ec:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    14f0:	01ae031e 			; <UNDEFINED> instruction: 0x01ae031e
    14f4:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    14f8:	2e7ec603 	cdpcs	6, 7, cr12, cr14, cr3, {0}
    14fc:	01062105 	tsteq	r6, r5, lsl #2
    1500:	06150532 			; <UNDEFINED> instruction: 0x06150532
    1504:	06220521 	strteq	r0, [r2], -r1, lsr #10
    1508:	2e200501 	cfsh64cs	mvdx0, mvdx0, #1
    150c:	2f061505 	svccs	0x00061505
    1510:	0621051e 			; <UNDEFINED> instruction: 0x0621051e
    1514:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1518:	053c0b03 	ldreq	r0, [ip, #-2819]!	; 0xfffff4fd
    151c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1520:	05310610 	ldreq	r0, [r1, #-1552]!	; 0xfffff9f0
    1524:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1528:	2e390321 	cdpcs	3, 3, cr0, cr9, cr1, {1}
    152c:	03061005 	movweq	r1, #24581	; 0x6005
    1530:	13052e49 	movwne	r2, #24137	; 0x5e49
    1534:	d9030106 	stmdble	r3, {r1, r2, r8}
    1538:	0c052000 	stceq	0, cr2, [r5], {-0}
    153c:	7fae0306 	svcvc	0x00ae0306
    1540:	060f052e 	streq	r0, [pc], -lr, lsr #10
    1544:	06090501 	streq	r0, [r9], -r1, lsl #10
    1548:	06190531 			; <UNDEFINED> instruction: 0x06190531
    154c:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    1550:	03061105 	movweq	r1, #24837	; 0x6105
    1554:	25052e1d 	strcs	r2, [r5, #-3613]	; 0xfffff1e3
    1558:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    155c:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    1560:	13053f10 	movwne	r3, #24336	; 0x5f10
    1564:	0c050106 	stfeqs	f0, [r5], {6}
    1568:	0f053506 	svceq	0x00053506
    156c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1570:	1c053006 	stcne	0, cr3, [r5], {6}
    1574:	0c050106 	stfeqs	f0, [r5], {6}
    1578:	060d052e 	streq	r0, [sp], -lr, lsr #10
    157c:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    1580:	2d290513 	cfstr32cs	mvfx0, [r9, #-76]!	; 0xffffffb4
    1584:	21060d05 	tstcs	r6, r5, lsl #26
    1588:	01061c05 	tsteq	r6, r5, lsl #24
    158c:	21060d05 	tstcs	r6, r5, lsl #26
    1590:	01062105 	tsteq	r6, r5, lsl #2
    1594:	33060c05 	movwcc	r0, #27653	; 0x6c05
    1598:	01060f05 	tsteq	r6, r5, lsl #30
    159c:	30060905 	andcc	r0, r6, r5, lsl #18
    15a0:	01061905 	tsteq	r6, r5, lsl #18
    15a4:	2e0c0520 	cfsh32cs	mvfx0, mvfx12, #16
    15a8:	2f060d05 	svccs	0x00060d05
    15ac:	01061005 	tsteq	r6, r5
    15b0:	2f061105 	svccs	0x00061105
    15b4:	01062605 	tsteq	r6, r5, lsl #12
    15b8:	31061105 	tstcc	r6, r5, lsl #2
    15bc:	01062605 	tsteq	r6, r5, lsl #12
    15c0:	31061105 	tstcc	r6, r5, lsl #2
    15c4:	053e1005 	ldreq	r1, [lr, #-5]!
    15c8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    15cc:	3f03060d 	svccc	0x0003060d
    15d0:	0622052e 	strteq	r0, [r2], -lr, lsr #10
    15d4:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    15d8:	052e4303 	streq	r4, [lr, #-771]!	; 0xfffffcfd
    15dc:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    15e0:	05300610 	ldreq	r0, [r0, #-1552]!	; 0xfffff9f0
    15e4:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    15e8:	d9030609 	stmdble	r3, {r0, r3, r9, sl}
    15ec:	1e052e00 	cdpne	14, 0, cr2, cr5, cr0, {0}
    15f0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    15f4:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
    15f8:	0c050106 	stfeqs	f0, [r5], {6}
    15fc:	7fad0306 	svcvc	0x00ad0306
    1600:	060f052e 	streq	r0, [pc], -lr, lsr #10
    1604:	06090501 	streq	r0, [r9], -r1, lsl #10
    1608:	06190531 			; <UNDEFINED> instruction: 0x06190531
    160c:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    1610:	2f060d05 	svccs	0x00060d05
    1614:	01062205 	tsteq	r6, r5, lsl #4
    1618:	06100520 	ldreq	r0, [r0], -r0, lsr #10
    161c:	06130522 	ldreq	r0, [r3], -r2, lsr #10
    1620:	060c0501 	streq	r0, [ip], -r1, lsl #10
    1624:	060f0535 			; <UNDEFINED> instruction: 0x060f0535
    1628:	060c0501 	streq	r0, [ip], -r1, lsl #10
    162c:	060f0535 			; <UNDEFINED> instruction: 0x060f0535
    1630:	060c0501 	streq	r0, [ip], -r1, lsl #10
    1634:	060f0535 			; <UNDEFINED> instruction: 0x060f0535
    1638:	06090501 	streq	r0, [r9], -r1, lsl #10
    163c:	06190531 			; <UNDEFINED> instruction: 0x06190531
    1640:	0c052001 	stceq	0, cr2, [r5], {1}
    1644:	060d052e 	streq	r0, [sp], -lr, lsr #10
    1648:	062a052f 	strteq	r0, [sl], -pc, lsr #10
    164c:	20100501 	andscs	r0, r0, r1, lsl #10
    1650:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    1654:	01063205 	tsteq	r6, r5, lsl #4
    1658:	05212105 	streq	r2, [r1, #-261]!	; 0xfffffefb
    165c:	44051f32 	strmi	r1, [r5], #-3890	; 0xfffff0ce
    1660:	1f320521 	svcne	0x00320521
    1664:	05204205 	streq	r4, [r0, #-517]!	; 0xfffffdfb
    1668:	32052021 	andcc	r2, r5, #33	; 0x21
    166c:	20210520 	eorcs	r0, r1, r0, lsr #10
    1670:	21061105 	tstcs	r6, r5, lsl #2
    1674:	01062105 	tsteq	r6, r5, lsl #2
    1678:	053c3305 	ldreq	r3, [ip, #-773]!	; 0xfffffcfb
    167c:	33052021 	movwcc	r2, #20513	; 0x5021
    1680:	20440520 	subcs	r0, r4, r0, lsr #10
    1684:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    1688:	15052014 	strne	r2, [r5, #-20]	; 0xffffffec
    168c:	22053d06 	andcs	r3, r5, #384	; 0x180
    1690:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    1694:	0d053d06 	stceq	13, cr3, [r5, #-24]	; 0xffffffe8
    1698:	05011403 	streq	r1, [r1, #-1027]	; 0xfffffbfd
    169c:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    16a0:	70030615 	andvc	r0, r3, r5, lsl r6
    16a4:	062f052e 	strteq	r0, [pc], -lr, lsr #10
    16a8:	2e3d0501 	cdpcs	5, 3, cr0, cr13, cr1, {0}
    16ac:	054a2205 	strbeq	r2, [sl, #-517]	; 0xfffffdfb
    16b0:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    16b4:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    16b8:	19052e18 	stmdbne	r5, {r3, r4, r9, sl, fp, sp}
    16bc:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    16c0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    16c4:	11053006 	tstne	r5, r6
    16c8:	06260523 	strteq	r0, [r6], -r3, lsr #10
    16cc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    16d0:	0626052f 	strteq	r0, [r6], -pc, lsr #10
    16d4:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    16d8:	06130530 			; <UNDEFINED> instruction: 0x06130530
    16dc:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    16e0:	06130530 			; <UNDEFINED> instruction: 0x06130530
    16e4:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    16e8:	06130530 			; <UNDEFINED> instruction: 0x06130530
    16ec:	060c0501 	streq	r0, [ip], -r1, lsl #10
    16f0:	060f0544 	streq	r0, [pc], -r4, asr #10
    16f4:	06090501 	streq	r0, [r9], -r1, lsl #10
    16f8:	06190531 			; <UNDEFINED> instruction: 0x06190531
    16fc:	0c052001 	stceq	0, cr2, [r5], {1}
    1700:	060d052e 	streq	r0, [sp], -lr, lsr #10
    1704:	06220530 			; <UNDEFINED> instruction: 0x06220530
    1708:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    170c:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    1710:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1714:	06130530 			; <UNDEFINED> instruction: 0x06130530
    1718:	060d0501 	streq	r0, [sp], -r1, lsl #10
    171c:	06220530 			; <UNDEFINED> instruction: 0x06220530
    1720:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1724:	0622052f 	strteq	r0, [r2], -pc, lsr #10
    1728:	001b0201 	andseq	r0, fp, r1, lsl #4
    172c:	16050101 	strne	r0, [r5], -r1, lsl #2
    1730:	00020500 	andeq	r0, r2, r0, lsl #10
    1734:	03000000 	movweq	r0, #0
    1738:	050103c3 	streq	r0, [r1, #-963]	; 0xfffffc3d
    173c:	18051305 	stmdane	r5, {r0, r2, r8, r9, ip}
    1740:	01050106 	tsteq	r5, r6, lsl #2
    1744:	0004022f 	andeq	r0, r4, pc, lsr #4
    1748:	1f050101 	svcne	0x00050101
    174c:	00020500 	andeq	r0, r2, r0, lsl #10
    1750:	03000000 	movweq	r0, #0
    1754:	050103c7 	streq	r0, [r1, #-967]	; 0xfffffc39
    1758:	19051305 	stmdbne	r5, {r0, r2, r8, r9, ip}
    175c:	01050106 	tsteq	r5, r6, lsl #2
    1760:	0004022f 	andeq	r0, r4, pc, lsr #4
    1764:	19050101 	stmdbne	r5, {r0, r8}
    1768:	44020500 	strmi	r0, [r2], #-1280	; 0xfffffb00
    176c:	0308000d 	movweq	r0, #32781	; 0x800d
    1770:	050103cb 	streq	r0, [r1, #-971]	; 0xfffffc35
    1774:	0c051305 	stceq	3, cr1, [r5], {5}
    1778:	01050106 	tsteq	r5, r6, lsl #2
    177c:	0004022f 	andeq	r0, r4, pc, lsr #4
    1780:	18050101 	stmdane	r5, {r0, r8}
    1784:	50020500 	andpl	r0, r2, r0, lsl #10
    1788:	0308000d 	movweq	r0, #32781	; 0x800d
    178c:	050103cf 	streq	r0, [r1, #-975]	; 0xfffffc31
    1790:	04020005 	streq	r0, [r2], #-5
    1794:	09051301 	stmdbeq	r5, {r0, r8, r9, ip}
    1798:	01040200 	mrseq	r0, R12_usr
    179c:	000b0514 	andeq	r0, fp, r4, lsl r5
    17a0:	1e010402 	cdpne	4, 0, cr0, cr1, cr2, {0}
    17a4:	01000102 	tsteq	r0, r2, lsl #2
    17a8:	0008ed01 	andeq	lr, r8, r1, lsl #26
    17ac:	45000300 	strmi	r0, [r0, #-768]	; 0xfffffd00
    17b0:	02000000 	andeq	r0, r0, #0
    17b4:	0d0efb01 	vstreq	d15, [lr, #-4]
    17b8:	01010100 	mrseq	r0, (UNDEF: 17)
    17bc:	00000001 	andeq	r0, r0, r1
    17c0:	01000001 	tsteq	r0, r1
    17c4:	5f627375 	svcpl	0x00627375
    17c8:	0062696c 	rsbeq	r6, r2, ip, ror #18
    17cc:	62737500 	rsbsvs	r7, r3, #0, 10
    17d0:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    17d4:	00632e73 	rsbeq	r2, r3, r3, ror lr
    17d8:	75000001 	strvc	r0, [r0, #-1]
    17dc:	745f6273 	ldrbvc	r6, [pc], #-627	; 17e4 <__Stack_Size+0x13e4>
    17e0:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    17e4:	00010068 	andeq	r0, r1, r8, rrx
    17e8:	62737500 	rsbsvs	r7, r3, #0, 10
    17ec:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    17f0:	00682e73 	rsbeq	r2, r8, r3, ror lr
    17f4:	00000001 	andeq	r0, r0, r1
    17f8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    17fc:	00000002 	andeq	r0, r0, r2
    1800:	01220300 			; <UNDEFINED> instruction: 0x01220300
    1804:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1808:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
    180c:	01010003 	tsteq	r1, r3
    1810:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1814:	00000002 	andeq	r0, r0, r2
    1818:	012e0300 			; <UNDEFINED> instruction: 0x012e0300
    181c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1820:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1824:	05023d01 	streq	r3, [r2, #-3329]	; 0xfffff2ff
    1828:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    182c:	02050001 	andeq	r0, r5, #1
    1830:	00000000 	andeq	r0, r0, r0
    1834:	05013a03 	streq	r3, [r1, #-2563]	; 0xfffff5fd
    1838:	01051303 	tsteq	r5, r3, lsl #6
    183c:	03023d06 	movweq	r3, #11526	; 0x2d06
    1840:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1844:	02050001 	andeq	r0, r5, #1
    1848:	00000000 	andeq	r0, r0, r0
    184c:	0100c603 	tsteq	r0, r3, lsl #12
    1850:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1854:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1858:	05023d01 	streq	r3, [r2, #-3329]	; 0xfffff2ff
    185c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1860:	02050001 	andeq	r0, r5, #1
    1864:	00000000 	andeq	r0, r0, r0
    1868:	0100d203 	tsteq	r0, r3, lsl #4
    186c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1870:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1874:	05023d01 	streq	r3, [r2, #-3329]	; 0xfffff2ff
    1878:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    187c:	02050001 	andeq	r0, r5, #1
    1880:	00000000 	andeq	r0, r0, r0
    1884:	0100de03 	tsteq	r0, r3, lsl #28
    1888:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    188c:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
    1890:	01010003 	tsteq	r1, r3
    1894:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1898:	00000002 	andeq	r0, r0, r2
    189c:	00ea0300 	rsceq	r0, sl, r0, lsl #6
    18a0:	13030501 	movwne	r0, #13569	; 0x3501
    18a4:	01060a05 	tsteq	r6, r5, lsl #20
    18a8:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    18ac:	01010005 	tsteq	r1, r5
    18b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    18b4:	00000002 	andeq	r0, r0, r2
    18b8:	00f60300 	rscseq	r0, r6, r0, lsl #6
    18bc:	13030501 	movwne	r0, #13569	; 0x3501
    18c0:	01053c06 	tsteq	r5, r6, lsl #24
    18c4:	0004023d 	andeq	r0, r4, sp, lsr r2
    18c8:	01050101 	tsteq	r5, r1, lsl #2
    18cc:	00020500 	andeq	r0, r2, r0, lsl #10
    18d0:	03000000 	movweq	r0, #0
    18d4:	05010182 	streq	r0, [r1, #-386]	; 0xfffffe7e
    18d8:	0a051303 	beq	1464ec <__Stack_Size+0x1460ec>
    18dc:	01050106 	tsteq	r5, r6, lsl #2
    18e0:	0005023d 	andeq	r0, r5, sp, lsr r2
    18e4:	01050101 	tsteq	r5, r1, lsl #2
    18e8:	00020500 	andeq	r0, r2, r0, lsl #10
    18ec:	03000000 	movweq	r0, #0
    18f0:	0501018f 	streq	r0, [r1, #-399]	; 0xfffffe71
    18f4:	20061303 	andcs	r1, r6, r3, lsl #6
    18f8:	02590105 	subseq	r0, r9, #1073741825	; 0x40000001
    18fc:	01010001 	tsteq	r1, r1
    1900:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1904:	00000002 	andeq	r0, r0, r2
    1908:	019b0300 	orrseq	r0, fp, r0, lsl #6
    190c:	13030501 	movwne	r0, #13569	; 0x3501
    1910:	01060a05 	tsteq	r6, r5, lsl #20
    1914:	59010520 	stmdbpl	r1, {r5, r8, sl}
    1918:	01000202 	tsteq	r0, r2, lsl #4
    191c:	00010501 	andeq	r0, r1, r1, lsl #10
    1920:	00000205 	andeq	r0, r0, r5, lsl #4
    1924:	a8030000 	stmdage	r3, {}	; <UNPREDICTABLE>
    1928:	03050101 	movweq	r0, #20737	; 0x5101
    192c:	05200613 	streq	r0, [r0, #-1555]!	; 0xfffff9ed
    1930:	0102bb01 	tsteq	r2, r1, lsl #22
    1934:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1938:	02050001 	andeq	r0, r5, #1
    193c:	00000000 	andeq	r0, r0, r0
    1940:	0101b403 	tsteq	r1, r3, lsl #8
    1944:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1948:	2001060a 	andcs	r0, r1, sl, lsl #12
    194c:	02590105 	subseq	r0, r9, #1073741825	; 0x40000001
    1950:	01010003 	tsteq	r1, r3
    1954:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1958:	000d5402 	andeq	r5, sp, r2, lsl #8
    195c:	01c10308 	biceq	r0, r1, r8, lsl #6
    1960:	13030501 	movwne	r0, #13569	; 0x3501
    1964:	06200601 	strteq	r0, [r0], -r1, lsl #12
    1968:	203c01ac 	eorscs	r0, ip, ip, lsr #3
    196c:	2021053c 	eorcs	r0, r1, ip, lsr r5
    1970:	13060105 	movwne	r0, #24837	; 0x6105
    1974:	01000102 	tsteq	r0, r2, lsl #2
    1978:	00010501 	andeq	r0, r1, r1, lsl #10
    197c:	00000205 	andeq	r0, r0, r5, lsl #4
    1980:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
    1984:	03050101 	movweq	r0, #20737	; 0x5101
    1988:	20060113 	andcs	r0, r6, r3, lsl r1
    198c:	3c01ac06 	stccc	12, cr10, [r1], {6}
    1990:	21053c20 	tstcs	r5, r0, lsr #24
    1994:	06010520 	streq	r0, [r1], -r0, lsr #10
    1998:	00010213 	andeq	r0, r1, r3, lsl r2
    199c:	01050101 	tsteq	r5, r1, lsl #2
    19a0:	00020500 	andeq	r0, r2, r0, lsl #10
    19a4:	03000000 	movweq	r0, #0
    19a8:	050101db 	streq	r0, [r1, #-475]	; 0xfffffe25
    19ac:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    19b0:	7fbd0305 	svcvc	0x00bd0305
    19b4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    19b8:	01060a05 	tsteq	r6, r5, lsl #20
    19bc:	03060520 	movweq	r0, #25888	; 0x6520
    19c0:	054a00c2 	strbeq	r0, [sl, #-194]	; 0xffffff3e
    19c4:	7fbe030a 	svcvc	0x00be030a
    19c8:	03052020 	movweq	r2, #20512	; 0x5020
    19cc:	00c20306 	sbceq	r0, r2, r6, lsl #6
    19d0:	06060501 	streq	r0, [r6], -r1, lsl #10
    19d4:	06050501 	streq	r0, [r5], -r1, lsl #10
    19d8:	05320622 	ldreq	r0, [r2, #-1570]!	; 0xfffff9de
    19dc:	08053e01 	stmdaeq	r5, {r0, r9, sl, fp, ip, sp}
    19e0:	0b051c06 	bleq	148a00 <__Stack_Size+0x148600>
    19e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    19e8:	2e063006 	cdpcs	0, 0, cr3, cr6, cr6, {0}
    19ec:	01000102 	tsteq	r0, r2, lsl #2
    19f0:	00010501 	andeq	r0, r1, r1, lsl #10
    19f4:	00000205 	andeq	r0, r0, r5, lsl #4
    19f8:	f0030000 			; <UNDEFINED> instruction: 0xf0030000
    19fc:	03050101 	movweq	r0, #20737	; 0x5101
    1a00:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    1a04:	01052001 	tsteq	r5, r1
    1a08:	00030259 	andeq	r0, r3, r9, asr r2
    1a0c:	01050101 	tsteq	r5, r1, lsl #2
    1a10:	00020500 	andeq	r0, r2, r0, lsl #10
    1a14:	03000000 	movweq	r0, #0
    1a18:	050101fc 	streq	r0, [r1, #-508]	; 0xfffffe04
    1a1c:	0a051303 	beq	146630 <__Stack_Size+0x146230>
    1a20:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    1a24:	03025901 	movweq	r5, #10497	; 0x2901
    1a28:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1a2c:	02050001 	andeq	r0, r5, #1
    1a30:	00000000 	andeq	r0, r0, r0
    1a34:	01028803 	tsteq	r2, r3, lsl #16
    1a38:	01130305 	tsteq	r3, r5, lsl #6
    1a3c:	9e062006 	cdpls	0, 0, cr2, cr6, cr6, {0}
    1a40:	01010101 	tsteq	r1, r1, lsl #2
    1a44:	26052e06 	strcs	r2, [r5], -r6, lsl #28
    1a48:	01052006 	tsteq	r5, r6
    1a4c:	01021306 	tsteq	r2, r6, lsl #6
    1a50:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1a54:	02050001 	andeq	r0, r5, #1
    1a58:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
    1a5c:	01029403 	tsteq	r2, r3, lsl #8
    1a60:	01130305 	tsteq	r3, r5, lsl #6
    1a64:	9e062006 	cdpls	0, 0, cr2, cr6, cr6, {0}
    1a68:	01010101 	tsteq	r1, r1, lsl #2
    1a6c:	26052e06 	strcs	r2, [r5], -r6, lsl #28
    1a70:	01052006 	tsteq	r5, r6
    1a74:	01021306 	tsteq	r2, r6, lsl #6
    1a78:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1a7c:	02050001 	andeq	r0, r5, #1
    1a80:	00000000 	andeq	r0, r0, r0
    1a84:	0102a003 	tsteq	r2, r3
    1a88:	06130305 	ldreq	r0, [r3], -r5, lsl #6
    1a8c:	c9010520 	stmdbgt	r1, {r5, r8, sl}
    1a90:	01000102 	tsteq	r0, r2, lsl #2
    1a94:	00010501 	andeq	r0, r1, r1, lsl #10
    1a98:	0d9c0205 	lfmeq	f0, 4, [ip, #20]
    1a9c:	ac030800 	stcge	8, cr0, [r3], {-0}
    1aa0:	03050102 	movweq	r0, #20738	; 0x5102
    1aa4:	05200613 	streq	r0, [r0, #-1555]!	; 0xfffff9ed
    1aa8:	0102bb01 	tsteq	r2, r1, lsl #22
    1aac:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ab0:	02050001 	andeq	r0, r5, #1
    1ab4:	00000000 	andeq	r0, r0, r0
    1ab8:	0102e303 	tsteq	r2, r3, lsl #6
    1abc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1ac0:	2001060a 	andcs	r0, r1, sl, lsl #12
    1ac4:	02750105 	rsbseq	r0, r5, #1073741825	; 0x40000001
    1ac8:	01010005 	tsteq	r1, r5
    1acc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1ad0:	00000002 	andeq	r0, r0, r2
    1ad4:	02ee0300 	rsceq	r0, lr, #0, 6
    1ad8:	13030501 	movwne	r0, #13569	; 0x3501
    1adc:	01060a05 	tsteq	r6, r5, lsl #20
    1ae0:	75010520 	strvc	r0, [r1, #-1312]	; 0xfffffae0
    1ae4:	01000502 	tsteq	r0, r2, lsl #10
    1ae8:	00010501 	andeq	r0, r1, r1, lsl #10
    1aec:	00000205 	andeq	r0, r0, r5, lsl #4
    1af0:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    1af4:	03050102 	movweq	r0, #20738	; 0x5102
    1af8:	05200613 	streq	r0, [r0, #-1555]!	; 0xfffff9ed
    1afc:	01029f01 	tsteq	r2, r1, lsl #30
    1b00:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1b04:	02050001 	andeq	r0, r5, #1
    1b08:	00000000 	andeq	r0, r0, r0
    1b0c:	01038403 	tsteq	r3, r3, lsl #8
    1b10:	06130305 	ldreq	r0, [r3], -r5, lsl #6
    1b14:	bb010520 	bllt	42f9c <__Stack_Size+0x42b9c>
    1b18:	01000102 	tsteq	r0, r2, lsl #2
    1b1c:	00010501 	andeq	r0, r1, r1, lsl #10
    1b20:	00000205 	andeq	r0, r0, r5, lsl #4
    1b24:	8f030000 	svchi	0x00030000
    1b28:	03050103 	movweq	r0, #20739	; 0x5103
    1b2c:	05200613 	streq	r0, [r0, #-1555]!	; 0xfffff9ed
    1b30:	0102d701 	tsteq	r2, r1, lsl #14
    1b34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1b38:	02050001 	andeq	r0, r5, #1
    1b3c:	00000000 	andeq	r0, r0, r0
    1b40:	01039a03 	tsteq	r3, r3, lsl #20
    1b44:	06130305 	ldreq	r0, [r3], -r5, lsl #6
    1b48:	d7010520 	strle	r0, [r1, -r0, lsr #10]
    1b4c:	01000102 	tsteq	r0, r2, lsl #2
    1b50:	00010501 	andeq	r0, r1, r1, lsl #10
    1b54:	0dbc0205 	lfmeq	f0, 4, [ip, #20]!
    1b58:	a5030800 	strge	r0, [r3, #-2048]	; 0xfffff800
    1b5c:	03050103 	movweq	r0, #20739	; 0x5103
    1b60:	00200613 	eoreq	r0, r0, r3, lsl r6
    1b64:	06010402 	streq	r0, [r1], -r2, lsl #8
    1b68:	06010574 			; <UNDEFINED> instruction: 0x06010574
    1b6c:	0001029f 	muleq	r1, pc, r2	; <UNPREDICTABLE>
    1b70:	01050101 	tsteq	r5, r1, lsl #2
    1b74:	e2020500 	and	r0, r2, #0, 10
    1b78:	0308000d 	movweq	r0, #32781	; 0x800d
    1b7c:	050103b0 	streq	r0, [r1, #-944]	; 0xfffffc50
    1b80:	20061303 	andcs	r1, r6, r3, lsl #6
    1b84:	01040200 	mrseq	r0, R12_usr
    1b88:	01057406 	tsteq	r5, r6, lsl #8
    1b8c:	01029f06 	tsteq	r2, r6, lsl #30
    1b90:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1b94:	02050001 	andeq	r0, r5, #1
    1b98:	00000000 	andeq	r0, r0, r0
    1b9c:	0103bc03 	tsteq	r3, r3, lsl #24
    1ba0:	06130305 	ldreq	r0, [r3], -r5, lsl #6
    1ba4:	c9010520 	stmdbgt	r1, {r5, r8, sl}
    1ba8:	01000102 	tsteq	r0, r2, lsl #2
    1bac:	00010501 	andeq	r0, r1, r1, lsl #10
    1bb0:	00000205 	andeq	r0, r0, r5, lsl #4
    1bb4:	c7030000 	strgt	r0, [r3, -r0]
    1bb8:	03050103 	movweq	r0, #20739	; 0x5103
    1bbc:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    1bc0:	01052001 	tsteq	r5, r1
    1bc4:	00030259 	andeq	r0, r3, r9, asr r2
    1bc8:	01050101 	tsteq	r5, r1, lsl #2
    1bcc:	00020500 	andeq	r0, r2, r0, lsl #10
    1bd0:	03000000 	movweq	r0, #0
    1bd4:	050103d3 	streq	r0, [r1, #-979]	; 0xfffffc2d
    1bd8:	2e061303 	cdpcs	3, 0, cr1, cr6, cr3, {0}
    1bdc:	67010566 	strvs	r0, [r1, -r6, ror #10]
    1be0:	01000402 	tsteq	r0, r2, lsl #8
    1be4:	00010501 	andeq	r0, r1, r1, lsl #10
    1be8:	00000205 	andeq	r0, r0, r5, lsl #4
    1bec:	df030000 	svcle	0x00030000
    1bf0:	03050103 	movweq	r0, #20739	; 0x5103
    1bf4:	662e0613 			; <UNDEFINED> instruction: 0x662e0613
    1bf8:	024b0105 	subeq	r0, fp, #1073741825	; 0x40000001
    1bfc:	01010006 	tsteq	r1, r6
    1c00:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1c04:	000e0802 	andeq	r0, lr, r2, lsl #16
    1c08:	03ea0308 	mvneq	r0, #8, 6	; 0x20000000
    1c0c:	13030501 	movwne	r0, #13569	; 0x3501
    1c10:	01060a05 	tsteq	r6, r5, lsl #20
    1c14:	67010566 	strvs	r0, [r1, -r6, ror #10]
    1c18:	01000402 	tsteq	r0, r2, lsl #8
    1c1c:	00010501 	andeq	r0, r1, r1, lsl #10
    1c20:	0e280205 	cdpeq	2, 2, cr0, cr8, cr5, {0}
    1c24:	f5030800 			; <UNDEFINED> instruction: 0xf5030800
    1c28:	03050103 	movweq	r0, #20739	; 0x5103
    1c2c:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    1c30:	01056601 	tsteq	r5, r1, lsl #12
    1c34:	0006024b 	andeq	r0, r6, fp, asr #4
    1c38:	01050101 	tsteq	r5, r1, lsl #2
    1c3c:	48020500 	stmdami	r2, {r8, sl}
    1c40:	0308000e 	movweq	r0, #32782	; 0x800e
    1c44:	05010481 	streq	r0, [r1, #-1153]	; 0xfffffb7f
    1c48:	66061303 	strvs	r1, [r6], -r3, lsl #6
    1c4c:	024b0105 	subeq	r0, fp, #1073741825	; 0x40000001
    1c50:	01010006 	tsteq	r1, r6
    1c54:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1c58:	00000002 	andeq	r0, r0, r2
    1c5c:	048d0300 	streq	r0, [sp], #768	; 0x300
    1c60:	13030501 	movwne	r0, #13569	; 0x3501
    1c64:	04020001 	streq	r0, [r2], #-1
    1c68:	02002e01 	andeq	r2, r0, #1, 28
    1c6c:	00200104 	eoreq	r0, r0, r4, lsl #2
    1c70:	20010402 	andcs	r0, r1, r2, lsl #8
    1c74:	01040200 	mrseq	r0, R12_usr
    1c78:	02003c06 	andeq	r3, r0, #1536	; 0x600
    1c7c:	20060104 	andcs	r0, r6, r4, lsl #2
    1c80:	01040200 	mrseq	r0, R12_usr
    1c84:	02002006 	andeq	r2, r0, #6
    1c88:	002e0904 	eoreq	r0, lr, r4, lsl #18
    1c8c:	06090402 	streq	r0, [r9], -r2, lsl #8
    1c90:	00220520 	eoreq	r0, r2, r0, lsr #10
    1c94:	01090402 	tsteq	r9, r2, lsl #8
    1c98:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    1c9c:	13060904 	movwne	r0, #26884	; 0x6904
    1ca0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1ca4:	1f060204 	svcne	0x00060204
    1ca8:	02040200 	andeq	r0, r4, #0, 4
    1cac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1cb0:	02002002 	andeq	r2, r0, #2
    1cb4:	002e0204 	eoreq	r0, lr, r4, lsl #4
    1cb8:	06020402 	streq	r0, [r2], -r2, lsl #8
    1cbc:	00010220 	andeq	r0, r1, r0, lsr #4
    1cc0:	01050101 	tsteq	r5, r1, lsl #2
    1cc4:	68020500 	stmdavs	r2, {r8, sl}
    1cc8:	0308000e 	movweq	r0, #32782	; 0x800e
    1ccc:	05010499 	streq	r0, [r1, #-1177]	; 0xfffffb67
    1cd0:	82061303 	andhi	r1, r6, #201326592	; 0xc000000
    1cd4:	00013c06 	andeq	r3, r1, r6, lsl #24
    1cd8:	20010402 	andcs	r0, r1, r2, lsl #8
    1cdc:	01040200 	mrseq	r0, R12_usr
    1ce0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1ce4:	02002001 	andeq	r2, r0, #1
    1ce8:	3c060104 	stfccs	f0, [r6], {4}
    1cec:	01040200 	mrseq	r0, R12_usr
    1cf0:	02002006 	andeq	r2, r0, #6
    1cf4:	20060104 	andcs	r0, r6, r4, lsl #2
    1cf8:	09040200 	stmdbeq	r4, {r9}
    1cfc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1d00:	00200609 	eoreq	r0, r0, r9, lsl #12
    1d04:	01090402 	tsteq	r9, r2, lsl #8
    1d08:	02002005 	andeq	r2, r0, #5
    1d0c:	05010904 	streq	r0, [r1, #-2308]	; 0xfffff6fc
    1d10:	04020001 	streq	r0, [r2], #-1
    1d14:	05130609 	ldreq	r0, [r3, #-1545]	; 0xfffff9f7
    1d18:	04020003 	streq	r0, [r2], #-3
    1d1c:	001f0602 	andseq	r0, pc, r2, lsl #12
    1d20:	20020402 	andcs	r0, r2, r2, lsl #8
    1d24:	02040200 	andeq	r0, r4, #0, 4
    1d28:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1d2c:	02002e02 	andeq	r2, r0, #2, 28
    1d30:	20060204 	andcs	r0, r6, r4, lsl #4
    1d34:	01000602 	tsteq	r0, r2, lsl #12
    1d38:	00010501 	andeq	r0, r1, r1, lsl #10
    1d3c:	00000205 	andeq	r0, r0, r5, lsl #4
    1d40:	a4030000 	strge	r0, [r3], #-0
    1d44:	03050104 	movweq	r0, #20740	; 0x5104
    1d48:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    1d4c:	01056601 	tsteq	r5, r1, lsl #12
    1d50:	0008024b 	andeq	r0, r8, fp, asr #4
    1d54:	01050101 	tsteq	r5, r1, lsl #2
    1d58:	00020500 	andeq	r0, r2, r0, lsl #10
    1d5c:	03000000 	movweq	r0, #0
    1d60:	050104af 	streq	r0, [r1, #-1199]	; 0xfffffb51
    1d64:	0a051303 	beq	146978 <__Stack_Size+0x146578>
    1d68:	05660106 	strbeq	r0, [r6, #-262]!	; 0xfffffefa
    1d6c:	08024b01 	stmdaeq	r2, {r0, r8, r9, fp, lr}
    1d70:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1d74:	02050001 	andeq	r0, r5, #1
    1d78:	00000000 	andeq	r0, r0, r0
    1d7c:	0104bc03 	tsteq	r4, r3, lsl #24
    1d80:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1d84:	05110601 	ldreq	r0, [r1, #-1537]	; 0xfffff9ff
    1d88:	062e2103 	strteq	r2, [lr], -r3, lsl #2
    1d8c:	3c0601ba 	stfccs	f0, [r6], {186}	; 0xba
    1d90:	0558063c 	ldrbeq	r0, [r8, #-1596]	; 0xfffff9c4
    1d94:	01050132 	tsteq	r5, r2, lsr r1
    1d98:	06021306 	streq	r1, [r2], -r6, lsl #6
    1d9c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1da0:	02050001 	andeq	r0, r5, #1
    1da4:	00000000 	andeq	r0, r0, r0
    1da8:	0104f603 	tsteq	r4, r3, lsl #12	; <UNPREDICTABLE>
    1dac:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1db0:	051f0601 	ldreq	r0, [pc, #-1537]	; 17b7 <__Stack_Size+0x13b7>
    1db4:	02002103 	andeq	r2, r0, #-1073741824	; 0xc0000000
    1db8:	20060104 	andcs	r0, r6, r4, lsl #2
    1dbc:	01040200 	mrseq	r0, R12_usr
    1dc0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1dc4:	00660104 	rsbeq	r0, r6, r4, lsl #2
    1dc8:	06010402 	streq	r0, [r1], -r2, lsl #8
    1dcc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1dd0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1dd4:	00200304 	eoreq	r0, r0, r4, lsl #6
    1dd8:	20030402 	andcs	r0, r3, r2, lsl #8
    1ddc:	03040200 	movweq	r0, #16896	; 0x4200
    1de0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1de4:	003c0603 	eorseq	r0, ip, r3, lsl #12
    1de8:	06030402 	streq	r0, [r3], -r2, lsl #8
    1dec:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1df0:	00200603 	eoreq	r0, r0, r3, lsl #12
    1df4:	2e0b0402 	cdpcs	4, 0, cr0, cr11, cr2, {0}
    1df8:	0b040200 	bleq	102600 <__Stack_Size+0x102200>
    1dfc:	02002006 	andeq	r2, r0, #6
    1e00:	00010b04 	andeq	r0, r1, r4, lsl #22
    1e04:	010b0402 	tsteq	fp, r2, lsl #8
    1e08:	0b040200 	bleq	102610 <__Stack_Size+0x102210>
    1e0c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1e10:	66060b04 	strvs	r0, [r6], -r4, lsl #22
    1e14:	0b040200 	bleq	10261c <__Stack_Size+0x10221c>
    1e18:	04020001 	streq	r0, [r2], #-1
    1e1c:	02002013 	andeq	r2, r0, #19
    1e20:	00201304 	eoreq	r1, r0, r4, lsl #6
    1e24:	20130402 	andscs	r0, r3, r2, lsl #8
    1e28:	13040200 	movwne	r0, #16896	; 0x4200
    1e2c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1e30:	00200613 	eoreq	r0, r0, r3, lsl r6
    1e34:	20130402 	andscs	r0, r3, r2, lsl #8
    1e38:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1e3c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1e40:	00200404 	eoreq	r0, r0, r4, lsl #8
    1e44:	20040402 	andcs	r0, r4, r2, lsl #8
    1e48:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1e4c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1e50:	00200604 	eoreq	r0, r0, r4, lsl #12
    1e54:	20040402 	andcs	r0, r4, r2, lsl #8
    1e58:	02040200 	andeq	r0, r4, #0, 4
    1e5c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1e60:	002e0d04 	eoreq	r0, lr, r4, lsl #26
    1e64:	060d0402 	streq	r0, [sp], -r2, lsl #8
    1e68:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1e6c:	0066060d 	rsbeq	r0, r6, sp, lsl #12
    1e70:	010d0402 	tsteq	sp, r2, lsl #8
    1e74:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    1e78:	04020001 	streq	r0, [r2], #-1
    1e7c:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    1e80:	58060d04 	stmdapl	r6, {r2, r8, sl, fp}
    1e84:	054b0105 	strbeq	r0, [fp, #-261]	; 0xfffffefb
    1e88:	04020003 	streq	r0, [r2], #-3
    1e8c:	001f0612 	andseq	r0, pc, r2, lsl r6	; <UNPREDICTABLE>
    1e90:	20120402 	andscs	r0, r2, r2, lsl #8
    1e94:	12040200 	andne	r0, r4, #0, 4
    1e98:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1e9c:	003c0612 	eorseq	r0, ip, r2, lsl r6
    1ea0:	06120402 	ldreq	r0, [r2], -r2, lsl #8
    1ea4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1ea8:	00200612 	eoreq	r0, r0, r2, lsl r6
    1eac:	2e1a0402 	cfmulscs	mvf0, mvf10, mvf2
    1eb0:	1a040200 	bne	1026b8 <__Stack_Size+0x1022b8>
    1eb4:	2b052006 	blcs	149ed4 <__Stack_Size+0x149ad4>
    1eb8:	1a040200 	bne	1026c0 <__Stack_Size+0x1022c0>
    1ebc:	00010501 	andeq	r0, r1, r1, lsl #10
    1ec0:	061a0402 	ldreq	r0, [sl], -r2, lsl #8
    1ec4:	00070213 	andeq	r0, r7, r3, lsl r2
    1ec8:	01050101 	tsteq	r5, r1, lsl #2
    1ecc:	00020500 	andeq	r0, r2, r0, lsl #10
    1ed0:	03000000 	movweq	r0, #0
    1ed4:	05010582 	streq	r0, [r1, #-1410]	; 0xfffffa7e
    1ed8:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    1edc:	002e0104 	eoreq	r0, lr, r4, lsl #2
    1ee0:	06010402 	streq	r0, [r1], -r2, lsl #8
    1ee4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1ee8:	02006601 	andeq	r6, r0, #1048576	; 0x100000
    1eec:	3c060104 	stfccs	f0, [r6], {4}
    1ef0:	01040200 	mrseq	r0, R12_usr
    1ef4:	04020001 	streq	r0, [r2], #-1
    1ef8:	02002003 	andeq	r2, r0, #3
    1efc:	00200304 	eoreq	r0, r0, r4, lsl #6
    1f00:	20030402 	andcs	r0, r3, r2, lsl #8
    1f04:	03040200 	movweq	r0, #16896	; 0x4200
    1f08:	02003c06 	andeq	r3, r0, #1536	; 0x600
    1f0c:	20060304 	andcs	r0, r6, r4, lsl #6
    1f10:	03040200 	movweq	r0, #16896	; 0x4200
    1f14:	02002006 	andeq	r2, r0, #6
    1f18:	002e0b04 	eoreq	r0, lr, r4, lsl #22
    1f1c:	06040402 	streq	r0, [r4], -r2, lsl #8
    1f20:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1f24:	02002004 	andeq	r2, r0, #4
    1f28:	00200404 	eoreq	r0, r0, r4, lsl #8
    1f2c:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    1f30:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1f34:	02002006 	andeq	r2, r0, #6
    1f38:	00200404 	eoreq	r0, r0, r4, lsl #8
    1f3c:	06020402 	streq	r0, [r2], -r2, lsl #8
    1f40:	04020001 	streq	r0, [r2], #-1
    1f44:	02002e0d 	andeq	r2, r0, #13, 28	; 0xd0
    1f48:	66060d04 	strvs	r0, [r6], -r4, lsl #26
    1f4c:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    1f50:	4a060d04 	bmi	185368 <__Stack_Size+0x184f68>
    1f54:	13060105 	movwne	r0, #24837	; 0x6105
    1f58:	01000502 	tsteq	r0, r2, lsl #10
    1f5c:	00010501 	andeq	r0, r1, r1, lsl #10
    1f60:	00000205 	andeq	r0, r0, r5, lsl #4
    1f64:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    1f68:	03050105 	movweq	r0, #20741	; 0x5105
    1f6c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1f70:	02002e01 	andeq	r2, r0, #1, 28
    1f74:	2e060104 	adfcss	f0, f6, f4
    1f78:	01040200 	mrseq	r0, R12_usr
    1f7c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    1f80:	003c0601 	eorseq	r0, ip, r1, lsl #12
    1f84:	01010402 	tsteq	r1, r2, lsl #8
    1f88:	03040200 	movweq	r0, #16896	; 0x4200
    1f8c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1f90:	02002003 	andeq	r2, r0, #3
    1f94:	00200304 	eoreq	r0, r0, r4, lsl #6
    1f98:	06030402 	streq	r0, [r3], -r2, lsl #8
    1f9c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    1fa0:	00200603 	eoreq	r0, r0, r3, lsl #12
    1fa4:	06030402 	streq	r0, [r3], -r2, lsl #8
    1fa8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1fac:	02002e0b 	andeq	r2, r0, #11, 28	; 0xb0
    1fb0:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
    1fb4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1fb8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1fbc:	02002004 	andeq	r2, r0, #4
    1fc0:	002e0404 	eoreq	r0, lr, r4, lsl #8
    1fc4:	06040402 	streq	r0, [r4], -r2, lsl #8
    1fc8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1fcc:	02002004 	andeq	r2, r0, #4
    1fd0:	01060204 	tsteq	r6, r4, lsl #4
    1fd4:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    1fd8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1fdc:	0566060d 	strbeq	r0, [r6, #-1549]!	; 0xfffff9f3
    1fe0:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    1fe4:	054a060d 	strbeq	r0, [sl, #-1549]	; 0xfffff9f3
    1fe8:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1fec:	01010005 	tsteq	r1, r5
    1ff0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1ff4:	00000002 	andeq	r0, r0, r2
    1ff8:	05b20300 	ldreq	r0, [r2, #768]!	; 0x300
    1ffc:	13030501 	movwne	r0, #13569	; 0x3501
    2000:	01060e05 	tsteq	r6, r5, lsl #28
    2004:	051f0105 	ldreq	r0, [pc, #-261]	; 1f07 <__Stack_Size+0x1b07>
    2008:	0566210e 	strbeq	r2, [r6, #-270]!	; 0xfffffef2
    200c:	06053c0d 	streq	r3, [r5], -sp, lsl #24
    2010:	06080520 	streq	r0, [r8], -r0, lsr #10
    2014:	0614053e 			; <UNDEFINED> instruction: 0x0614053e
    2018:	74130501 	ldrvc	r0, [r3], #-1281	; 0xfffffaff
    201c:	05202905 	streq	r2, [r0, #-2309]!	; 0xfffff6fb
    2020:	0105310b 	tsteq	r5, fp, lsl #2
    2024:	1b0b054b 	blne	2c3558 <__Stack_Size+0x2c3158>
    2028:	01000802 	tsteq	r0, r2, lsl #16
    202c:	00010501 	andeq	r0, r1, r1, lsl #10
    2030:	00000205 	andeq	r0, r0, r5, lsl #4
    2034:	c3030000 	movwgt	r0, #12288	; 0x3000
    2038:	03050105 	movweq	r0, #20741	; 0x5105
    203c:	06060513 			; <UNDEFINED> instruction: 0x06060513
    2040:	06050501 	streq	r0, [r5], -r1, lsl #10
    2044:	cc200630 	stcgt	6, cr0, [r0], #-192	; 0xffffff40
    2048:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    204c:	051c0608 	ldreq	r0, [ip, #-1544]	; 0xfffff9f8
    2050:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2054:	06300605 	ldrteq	r0, [r0], -r5, lsl #12
    2058:	000e0220 	andeq	r0, lr, r0, lsr #4
    205c:	01050101 	tsteq	r5, r1, lsl #2
    2060:	00020500 	andeq	r0, r2, r0, lsl #10
    2064:	03000000 	movweq	r0, #0
    2068:	050105d6 	streq	r0, [r1, #-1494]	; 0xfffffa2a
    206c:	13131303 	tstne	r3, #201326592	; 0xc000000
    2070:	13060105 	movwne	r0, #24837	; 0x6105
    2074:	0001022e 	andeq	r0, r1, lr, lsr #4
    2078:	01050101 	tsteq	r5, r1, lsl #2
    207c:	00020500 	andeq	r0, r2, r0, lsl #10
    2080:	03000000 	movweq	r0, #0
    2084:	050105e3 	streq	r0, [r1, #-1507]	; 0xfffffa1d
    2088:	13131303 	tstne	r3, #201326592	; 0xc000000
    208c:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    2090:	01050106 	tsteq	r5, r6, lsl #2
    2094:	00020221 	andeq	r0, r2, r1, lsr #4
    2098:	02200101 	eoreq	r0, r0, #1073741824	; 0x40000000
    209c:	00030000 	andeq	r0, r3, r0
    20a0:	00000060 	andeq	r0, r0, r0, rrx
    20a4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    20a8:	0101000d 	tsteq	r1, sp
    20ac:	00000101 	andeq	r0, r0, r1, lsl #2
    20b0:	00000100 	andeq	r0, r0, r0, lsl #2
    20b4:	62737501 	rsbsvs	r7, r3, #4194304	; 0x400000
    20b8:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    20bc:	73750000 	cmnvc	r5, #0
    20c0:	6e695f62 	cdpvs	15, 6, cr5, cr9, cr2, {3}
    20c4:	00632e74 	rsbeq	r2, r3, r4, ror lr
    20c8:	75000001 	strvc	r0, [r0, #-1]
    20cc:	745f6273 	ldrbvc	r6, [pc], #-627	; 20d4 <__Stack_Size+0x1cd4>
    20d0:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    20d4:	00010068 	andeq	r0, r1, r8, rrx
    20d8:	62737500 	rsbsvs	r7, r3, #0, 10
    20dc:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    20e0:	00682e73 	rsbeq	r2, r8, r3, ror lr
    20e4:	75000001 	strvc	r0, [r0, #-1]
    20e8:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
    20ec:	2e65726f 	cdpcs	2, 6, cr7, cr5, cr15, {3}
    20f0:	00010068 	andeq	r0, r1, r8, rrx
    20f4:	62737500 	rsbsvs	r7, r3, #0, 10
    20f8:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    20fc:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2100:	00000001 	andeq	r0, r0, r1
    2104:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2108:	000eac02 	andeq	sl, lr, r2, lsl #24
    210c:	01290308 			; <UNDEFINED> instruction: 0x01290308
    2110:	14130305 	ldrne	r0, [r3], #-773	; 0xfffffcfb
    2114:	0f060105 	svceq	0x00060105
    2118:	05311405 	ldreq	r1, [r1, #-1029]!	; 0xfffffbfb
    211c:	0905240d 	stmdbeq	r5, {r0, r2, r3, sl, sp}
    2120:	14052a06 	strne	r2, [r5], #-2566	; 0xfffff5fa
    2124:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    2128:	2014052e 	andscs	r0, r4, lr, lsr #10
    212c:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    2130:	09052012 	stmdbeq	r5, {r1, r4, sp}
    2134:	06050520 	streq	r0, [r5], -r0, lsr #10
    2138:	1a054c22 	bne	1551c8 <__Stack_Size+0x154dc8>
    213c:	0f050106 	svceq	0x00050106
    2140:	2e0d0520 	cfsh32cs	mvfx0, mvfx13, #16
    2144:	2f060505 	svccs	0x00060505
    2148:	01060805 	tsteq	r6, r5, lsl #16
    214c:	36060705 	strcc	r0, [r6], -r5, lsl #14
    2150:	01061405 	tsteq	r6, r5, lsl #8
    2154:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    2158:	12052014 	andne	r2, r5, #20
    215c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    2160:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    2164:	2e120501 	cfmul32cs	mvfx0, mvfx2, mvfx1
    2168:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
    216c:	07052e12 	smladeq	r5, r2, lr, r2
    2170:	58012106 	stmdapl	r1, {r1, r2, r8, sp}
    2174:	06010101 	streq	r0, [r1], -r1, lsl #2
    2178:	0627052e 	strteq	r0, [r7], -lr, lsr #10
    217c:	1307052e 	movwne	r0, #29998	; 0x752e
    2180:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    2184:	01010158 	tsteq	r1, r8, asr r1
    2188:	052e2e06 	streq	r2, [lr, #-3590]!	; 0xfffff1fa
    218c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    2190:	12051707 	andne	r1, r5, #1835008	; 0x1c0000
    2194:	0a050106 	beq	1425b4 <__Stack_Size+0x1421b4>
    2198:	36090520 	strcc	r0, [r9], -r0, lsr #10
    219c:	78030a05 	stmdavc	r3, {r0, r2, r9, fp}
    21a0:	030b052e 	movweq	r0, #46382	; 0xb52e
    21a4:	8306201a 	movwhi	r2, #24602	; 0x601a
    21a8:	13030130 	movwne	r0, #12592	; 0x3130
    21ac:	20580101 	subscs	r0, r8, r1, lsl #2
    21b0:	054a203c 	strbeq	r2, [sl, #-60]	; 0xffffffc4
    21b4:	0b052e2c 	bleq	14da6c <__Stack_Size+0x14d66c>
    21b8:	2e060113 	mcrcs	1, 0, r0, cr6, cr3, {0}
    21bc:	20580620 	subscs	r0, r8, r0, lsr #12
    21c0:	064a203c 			; <UNDEFINED> instruction: 0x064a203c
    21c4:	062c052e 	strteq	r0, [ip], -lr, lsr #10
    21c8:	130b0501 	movwne	r0, #46337	; 0xb501
    21cc:	03060105 	movweq	r0, #24837	; 0x6105
    21d0:	09050120 	stmdbeq	r5, {r5, r8}
    21d4:	2e450306 	cdpcs	3, 4, cr0, cr5, cr6, {0}
    21d8:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    21dc:	060b0501 	streq	r0, [fp], -r1, lsl #10
    21e0:	052e0630 	streq	r0, [lr, #-1584]!	; 0xfffff9d0
    21e4:	0527060e 	streq	r0, [r7, #-1550]!	; 0xfffff9f2
    21e8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    21ec:	0630060b 	ldrteq	r0, [r0], -fp, lsl #12
    21f0:	3067062e 	rsbcc	r0, r7, lr, lsr #12
    21f4:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    21f8:	0517060e 	ldreq	r0, [r7, #-1550]	; 0xfffff9f2
    21fc:	20010611 	andcs	r0, r1, r1, lsl r6
    2200:	22060b05 	andcs	r0, r6, #5120	; 0x1400
    2204:	03070583 	movweq	r0, #30083	; 0x7583
    2208:	10053c0d 	andne	r3, r5, sp, lsl #24
    220c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2210:	0a056706 	beq	15be30 <__Stack_Size+0x15ba30>
    2214:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2218:	05693106 	strbeq	r3, [r9, #-262]!	; 0xfffffefa
    221c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    2220:	07052e0a 	streq	r2, [r5, -sl, lsl #28]
    2224:	0a055c06 	beq	159244 <__Stack_Size+0x158e44>
    2228:	09050106 	stmdbeq	r5, {r1, r2, r8}
    222c:	05e73f06 	strbeq	r3, [r7, #3846]!	; 0xf06
    2230:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    2234:	16022e0a 	strne	r2, [r2], -sl, lsl #28
    2238:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    223c:	02050001 	andeq	r0, r5, #1
    2240:	00000000 	andeq	r0, r0, r0
    2244:	01019e03 	tsteq	r1, r3, lsl #28
    2248:	14130305 	ldrne	r0, [r3], #-773	; 0xfffffcfb
    224c:	0f060105 	svceq	0x00060105
    2250:	05231405 	streq	r1, [r3, #-1029]!	; 0xfffffbfb
    2254:	0d052012 	stceq	0, cr2, [r5, #-72]	; 0xffffffb8
    2258:	06090524 	streq	r0, [r9], -r4, lsr #10
    225c:	0614051c 			; <UNDEFINED> instruction: 0x0614051c
    2260:	3c090501 	cfstr32cc	mvfx0, [r9], {1}
    2264:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
    2268:	01052009 	tsteq	r5, r9
    226c:	05201c03 	streq	r1, [r0, #-3075]!	; 0xfffff3fd
    2270:	66030605 	strvs	r0, [r3], -r5, lsl #12
    2274:	1a054c20 	bne	1552fc <__Stack_Size+0x154efc>
    2278:	0f050106 	svceq	0x00050106
    227c:	2e0d0520 	cfsh32cs	mvfx0, mvfx13, #16
    2280:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2284:	01060e05 	tsteq	r6, r5, lsl #28
    2288:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    228c:	01060805 	tsteq	r6, r5, lsl #16
    2290:	31060705 	tstcc	r6, r5, lsl #14
    2294:	5b062006 	blpl	18a2b4 <__Stack_Size+0x189eb4>
    2298:	01061b05 	tsteq	r6, r5, lsl #22
    229c:	03200805 			; <UNDEFINED> instruction: 0x03200805
    22a0:	0a052e09 	beq	14dacc <__Stack_Size+0x14d6cc>
    22a4:	4a7a0306 	bmi	1e82ec4 <__Stack_Size+0x1e82ac4>
    22a8:	01060d05 	tsteq	r6, r5, lsl #26
    22ac:	06070520 	streq	r0, [r7], -r0, lsr #10
    22b0:	1a058523 	bne	163744 <__Stack_Size+0x163344>
    22b4:	08050106 	stmdaeq	r5, {r1, r2, r8}
    22b8:	000d0220 	andeq	r0, sp, r0, lsr #4
    22bc:	00990101 	addseq	r0, r9, r1, lsl #2
    22c0:	00030000 	andeq	r0, r3, r0
    22c4:	00000053 	andeq	r0, r0, r3, asr r0
    22c8:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    22cc:	0101000d 	tsteq	r1, sp
    22d0:	00000101 	andeq	r0, r0, r1, lsl #2
    22d4:	00000100 	andeq	r0, r0, r0, lsl #2
    22d8:	62737501 	rsbsvs	r7, r3, #4194304	; 0x400000
    22dc:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    22e0:	73750000 	cmnvc	r5, #0
    22e4:	6e695f62 	cdpvs	15, 6, cr5, cr9, cr2, {3}
    22e8:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
    22ec:	00000100 	andeq	r0, r0, r0, lsl #2
    22f0:	5f627375 	svcpl	0x00627375
    22f4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    22f8:	0100682e 	tsteq	r0, lr, lsr #16
    22fc:	73750000 	cmnvc	r5, #0
    2300:	6f635f62 	svcvs	0x00635f62
    2304:	682e6572 	stmdavs	lr!, {r1, r4, r5, r6, r8, sl, sp, lr}
    2308:	00000100 	andeq	r0, r0, r0, lsl #2
    230c:	5f627375 	svcpl	0x00627375
    2310:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2314:	0100682e 	tsteq	r0, lr, lsr #16
    2318:	05000000 	streq	r0, [r0, #-0]
    231c:	02050001 	andeq	r0, r5, #1
    2320:	08001040 	stmdaeq	r0, {r6, ip}
    2324:	05013503 	streq	r3, [r1, #-1283]	; 0xfffffafd
    2328:	10051303 	andne	r1, r5, r3, lsl #6
    232c:	1b050106 	blne	14274c <__Stack_Size+0x14234c>
    2330:	1d100531 	cfldr32ne	mvfx0, [r0, #-196]	; 0xffffff3c
    2334:	21060305 	tstcs	r6, r5, lsl #6
    2338:	01061e05 	tsteq	r6, r5, lsl #28
    233c:	2f060305 	svccs	0x00060305
    2340:	01060d05 	tsteq	r6, r5, lsl #26
    2344:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    2348:	01061b05 	tsteq	r6, r5, lsl #22
    234c:	05230305 	streq	r0, [r3, #-773]!	; 0xfffffcfb
    2350:	03051d1b 	movweq	r1, #23835	; 0x5d1b
    2354:	0e022306 	cdpeq	3, 0, cr2, cr2, cr6, {0}
    2358:	d0010100 	andle	r0, r1, r0, lsl #2
    235c:	0300000b 	movweq	r0, #11
    2360:	00007b00 	andeq	r7, r0, r0, lsl #22
    2364:	fb010200 	blx	42b6e <__Stack_Size+0x4276e>
    2368:	01000d0e 	tsteq	r0, lr, lsl #26
    236c:	00010101 	andeq	r0, r1, r1, lsl #2
    2370:	00010000 	andeq	r0, r1, r0
    2374:	73750100 	cmnvc	r5, #0, 2
    2378:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    237c:	75000062 	strvc	r0, [r0, #-98]	; 0xffffff9e
    2380:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
    2384:	2e65726f 	cdpcs	2, 6, cr7, cr5, cr15, {3}
    2388:	00010063 	andeq	r0, r1, r3, rrx
    238c:	62737500 	rsbsvs	r7, r3, #0, 10
    2390:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    2394:	00682e65 	rsbeq	r2, r8, r5, ror #28
    2398:	75000001 	strvc	r0, [r0, #-1]
    239c:	645f6273 	ldrbvs	r6, [pc], #-627	; 23a4 <__Stack_Size+0x1fa4>
    23a0:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    23a4:	00000100 	andeq	r0, r0, r0, lsl #2
    23a8:	5f627375 	svcpl	0x00627375
    23ac:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    23b0:	0100682e 	tsteq	r0, lr, lsr #16
    23b4:	73750000 	cmnvc	r5, #0
    23b8:	6e695f62 	cdpvs	15, 6, cr5, cr9, cr2, {3}
    23bc:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
    23c0:	00000100 	andeq	r0, r0, r0, lsl #2
    23c4:	5f627375 	svcpl	0x00627375
    23c8:	73676572 	cmnvc	r7, #478150656	; 0x1c800000
    23cc:	0100682e 	tsteq	r0, lr, lsr #16
    23d0:	73750000 	cmnvc	r5, #0
    23d4:	656d5f62 	strbvs	r5, [sp, #-3938]!	; 0xfffff09e
    23d8:	00682e6d 	rsbeq	r2, r8, sp, ror #28
    23dc:	00000001 	andeq	r0, r0, r1
    23e0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    23e4:	00107402 	andseq	r7, r0, r2, lsl #8
    23e8:	01350308 	teqeq	r5, r8, lsl #6
    23ec:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    23f0:	05110601 	ldreq	r0, [r1, #-1537]	; 0xfffff9ff
    23f4:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
    23f8:	29052206 	stmdbcs	r5, {r1, r2, r9, sp}
    23fc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2400:	01053e06 	tsteq	r5, r6, lsl #28
    2404:	03051606 	movweq	r1, #22022	; 0x5606
    2408:	1a051e06 	bne	149c28 <__Stack_Size+0x149828>
    240c:	03050106 	movweq	r0, #20742	; 0x5106
    2410:	052f062e 	streq	r0, [pc, #-1582]!	; 1dea <__Stack_Size+0x19ea>
    2414:	0201060a 	andeq	r0, r1, #10485760	; 0xa00000
    2418:	01010007 	tsteq	r1, r7
    241c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2420:	00109802 	andseq	r9, r0, r2, lsl #16
    2424:	00e30308 	rsceq	r0, r3, r8, lsl #6
    2428:	13030501 	movwne	r0, #13569	; 0x3501
    242c:	11060105 	tstne	r6, r5, lsl #2
    2430:	052f0605 	streq	r0, [pc, #-1541]!	; 1e33 <__Stack_Size+0x1a33>
    2434:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2438:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    243c:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    2440:	05160601 	ldreq	r0, [r6, #-1537]	; 0xfffff9ff
    2444:	051e0603 	ldreq	r0, [lr, #-1539]	; 0xfffff9fd
    2448:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    244c:	2f062e03 	svccs	0x00062e03
    2450:	01060a05 	tsteq	r6, r5, lsl #20
    2454:	01000702 	tsteq	r0, r2, lsl #14
    2458:	00010501 	andeq	r0, r1, r1, lsl #10
    245c:	10bc0205 	adcsne	r0, ip, r5, lsl #4
    2460:	9b030800 	blls	c4468 <__Stack_Size+0xc4068>
    2464:	03050101 	movweq	r0, #20737	; 0x5101
    2468:	06010513 			; <UNDEFINED> instruction: 0x06010513
    246c:	23110511 	tstcs	r1, #71303168	; 0x4400000
    2470:	2e2c0605 	cfmadda32cs	mvax0, mvax0, mvfx12, mvfx5
    2474:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2478:	01062905 	tsteq	r6, r5, lsl #18
    247c:	05210c05 	streq	r0, [r1, #-3077]!	; 0xfffff3fb
    2480:	05051f29 	streq	r1, [r5, #-3881]	; 0xfffff0d7
    2484:	01052106 	tsteq	r5, r6, lsl #2
    2488:	013f0306 	teqeq	pc, r6, lsl #6
    248c:	03060305 	movweq	r0, #25349	; 0x6305
    2490:	10052044 	andne	r2, r5, r4, asr #32
    2494:	03050106 	movweq	r0, #20742	; 0x5106
    2498:	06053106 	streq	r3, [r5], -r6, lsl #2
    249c:	05052006 	streq	r2, [r5, #-6]
    24a0:	08053f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    24a4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    24a8:	08052306 	stmdaeq	r5, {r1, r2, r8, r9, sp}
    24ac:	07050106 	streq	r0, [r5, -r6, lsl #2]
    24b0:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    24b4:	06070540 	streq	r0, [r7], -r0, asr #10
    24b8:	1e080514 	mcrne	5, 0, r0, cr8, cr4, {0}
    24bc:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    24c0:	052e0640 	streq	r0, [lr, #-1600]!	; 0xfffff9c0
    24c4:	01140309 	tsteq	r4, r9, lsl #6
    24c8:	03060305 	movweq	r0, #25349	; 0x6305
    24cc:	1a052011 	bne	14a518 <__Stack_Size+0x14a118>
    24d0:	03050106 	movweq	r0, #20742	; 0x5106
    24d4:	052f062e 	streq	r0, [pc, #-1582]!	; 1eae <__Stack_Size+0x1aae>
    24d8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    24dc:	5e030608 	cfmadd32pl	mvax0, mvfx0, mvfx3, mvfx8
    24e0:	060b052e 	streq	r0, [fp], -lr, lsr #10
    24e4:	06080501 	streq	r0, [r8], -r1, lsl #10
    24e8:	060b0533 			; <UNDEFINED> instruction: 0x060b0533
    24ec:	06050501 	streq	r0, [r5], -r1, lsl #10
    24f0:	08051330 	stmdaeq	r5, {r4, r5, r8, r9, ip}
    24f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    24f8:	05132206 	ldreq	r2, [r3, #-518]	; 0xfffffdfa
    24fc:	0515060b 	ldreq	r0, [r5, #-1547]	; 0xfffff9f5
    2500:	0b057108 	bleq	15e928 <__Stack_Size+0x15e528>
    2504:	1d080523 	cfstr32ne	mvfx0, [r8, #-140]	; 0xffffff74
    2508:	23060705 	movwcs	r0, #26373	; 0x6705
    250c:	01060b05 	tsteq	r6, r5, lsl #22
    2510:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    2514:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    2518:	0b053407 	bleq	14f53c <__Stack_Size+0x14f13c>
    251c:	0a050106 	beq	14293c <__Stack_Size+0x14253c>
    2520:	0c053c2e 	stceq	12, cr3, [r5], {46}	; 0x2e
    2524:	02016c03 	andeq	r6, r1, #768	; 0x300
    2528:	01010009 	tsteq	r1, r9
    252c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2530:	00114802 	andseq	r4, r1, r2, lsl #16
    2534:	03e00308 	mvneq	r0, #8, 6	; 0x20000000
    2538:	13030501 	movwne	r0, #13569	; 0x3501
    253c:	11060105 	tstne	r6, r5, lsl #2
    2540:	052f2905 	streq	r2, [pc, #-2309]!	; 1c43 <__Stack_Size+0x1843>
    2544:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
    2548:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    254c:	14210603 	strtne	r0, [r1], #-1539	; 0xfffff9fd
    2550:	06051413 			; <UNDEFINED> instruction: 0x06051413
    2554:	1b050106 	blne	142974 <__Stack_Size+0x142574>
    2558:	01040200 	mrseq	r0, R12_usr
    255c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2560:	061f053e 			; <UNDEFINED> instruction: 0x061f053e
    2564:	20070501 	andcs	r0, r7, r1, lsl #10
    2568:	05823f06 	streq	r3, [r2, #3846]	; 0xf06
    256c:	0522061e 	streq	r0, [r2, #-1566]!	; 0xfffff9e2
    2570:	18051e07 	stmdane	r5, {r0, r1, r2, r9, sl, fp, ip}
    2574:	07052006 	streq	r2, [r5, -r6]
    2578:	03051313 	movweq	r1, #21267	; 0x5313
    257c:	05012103 	streq	r2, [r1, #-259]	; 0xfffffefd
    2580:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    2584:	07053d01 	streq	r3, [r5, -r1, lsl #26]
    2588:	2e630306 	cdpcs	3, 6, cr0, cr3, cr6, {0}
    258c:	06140513 			; <UNDEFINED> instruction: 0x06140513
    2590:	2107051f 	tstcs	r7, pc, lsl r5
    2594:	34060305 	strcc	r0, [r6], #-773	; 0xfffffcfb
    2598:	01060a05 	tsteq	r6, r5, lsl #20
    259c:	21060305 	tstcs	r6, r5, lsl #6
    25a0:	19061105 	stmdbne	r6, {r0, r2, r8, ip}
    25a4:	79033a05 	stmdbvc	r3, {r0, r2, r9, fp, ip, sp}
    25a8:	06030520 	streq	r0, [r3], -r0, lsr #10
    25ac:	1105174c 	tstne	r5, ip, asr #14
    25b0:	2e3c0106 	rsfcse	f0, f4, f6
    25b4:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    25b8:	76062006 	strvc	r2, [r6], -r6
    25bc:	0618054c 	ldreq	r0, [r8], -ip, asr #10
    25c0:	051f2101 	ldreq	r2, [pc, #-257]	; 24c7 <__Stack_Size+0x20c7>
    25c4:	062f0603 	strteq	r0, [pc], -r3, lsl #12
    25c8:	1f180513 	svcne	0x00180513
    25cc:	2c230305 	stccs	3, cr0, [r3], #-20	; 0xffffffec
    25d0:	1d180522 	cfldr32ne	mvfx0, [r8, #-136]	; 0xffffff78
    25d4:	21060305 	tstcs	r6, r5, lsl #6
    25d8:	000f0214 	andeq	r0, pc, r4, lsl r2	; <UNPREDICTABLE>
    25dc:	01050101 	tsteq	r5, r1, lsl #2
    25e0:	f4020500 	vst3.8	{d0,d2,d4}, [r2], r0
    25e4:	03080011 	movweq	r0, #32785	; 0x8011
    25e8:	050100ca 	streq	r0, [r1, #-202]	; 0xffffff36
    25ec:	01051403 	tsteq	r5, r3, lsl #8
    25f0:	14051006 	strne	r1, [r5], #-6
    25f4:	21130522 	tstcs	r3, r2, lsr #10
    25f8:	051f1405 	ldreq	r1, [pc, #-1029]	; 21fb <__Stack_Size+0x1dfb>
    25fc:	16052006 	strne	r2, [r5], -r6
    2600:	20060520 	andcs	r0, r6, r0, lsr #10
    2604:	052f3b05 	streq	r3, [pc, #-2821]!	; 1b07 <__Stack_Size+0x1707>
    2608:	07052029 	streq	r2, [r5, -r9, lsr #32]
    260c:	06050521 	streq	r0, [r5], -r1, lsr #10
    2610:	06290530 			; <UNDEFINED> instruction: 0x06290530
    2614:	06050501 	streq	r0, [r5], -r1, lsl #10
    2618:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    261c:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    2620:	01052f06 	tsteq	r5, r6, lsl #30
    2624:	0c051806 	stceq	8, cr1, [r5], {6}
    2628:	0009022c 	andeq	r0, r9, ip, lsr #4
    262c:	01050101 	tsteq	r5, r1, lsl #2
    2630:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
    2634:	03080012 	movweq	r0, #32786	; 0x8012
    2638:	050100f8 	streq	r0, [r1, #-248]	; 0xffffff08
    263c:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    2640:	050e0601 	streq	r0, [lr, #-1537]	; 0xfffff9ff
    2644:	3e052409 	cdpcc	4, 0, cr2, cr5, cr9, {0}
    2648:	20090520 	andcs	r0, r9, r0, lsr #10
    264c:	05203e05 	streq	r3, [r0, #-3589]!	; 0xfffff1fb
    2650:	03052009 	movweq	r2, #20489	; 0x5009
    2654:	13054c06 	movwne	r4, #23558	; 0x5c06
    2658:	06050106 	streq	r0, [r5], -r6, lsl #2
    265c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2660:	06080530 			; <UNDEFINED> instruction: 0x06080530
    2664:	001d0501 	andseq	r0, sp, r1, lsl #10
    2668:	20010402 	andcs	r0, r1, r2, lsl #8
    266c:	052f1b05 	streq	r1, [pc, #-2821]!	; 1b6f <__Stack_Size+0x176f>
    2670:	0a052009 	beq	14a69c <__Stack_Size+0x14a29c>
    2674:	07052406 	streq	r2, [r5, -r6, lsl #8]
    2678:	061e0514 			; <UNDEFINED> instruction: 0x061e0514
    267c:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    2680:	35052f06 	strcc	r2, [r5, #-3846]	; 0xfffff0fa
    2684:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    2688:	06070520 	streq	r0, [r7], -r0, lsr #10
    268c:	062e052f 	strteq	r0, [lr], -pc, lsr #10
    2690:	06070501 	streq	r0, [r7], -r1, lsl #10
    2694:	0601052f 	streq	r0, [r1], -pc, lsr #10
    2698:	2d0a0518 	cfstr32cs	mvfx0, [sl, #-96]	; 0xffffffa0
    269c:	01000802 	tsteq	r0, r2, lsl #16
    26a0:	00010501 	andeq	r0, r1, r1, lsl #10
    26a4:	12740205 	rsbsne	r0, r4, #1342177280	; 0x50000000
    26a8:	e9030800 	stmdb	r3, {fp}
    26ac:	03050101 	movweq	r0, #20737	; 0x5101
    26b0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    26b4:	21160511 	tstcs	r6, r1, lsl r5
    26b8:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    26bc:	06060515 			; <UNDEFINED> instruction: 0x06060515
    26c0:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    26c4:	054b2206 	strbeq	r2, [fp, #-518]	; 0xfffffdfa
    26c8:	c6030601 	strgt	r0, [r3], -r1, lsl #12
    26cc:	08050100 	stmdaeq	r5, {r8}
    26d0:	7fbc0306 	svcvc	0x00bc0306
    26d4:	060b052e 	streq	r0, [fp], -lr, lsr #10
    26d8:	06050501 	streq	r0, [r5], -r1, lsl #10
    26dc:	13131330 	tstne	r3, #48, 6	; 0xc0000000
    26e0:	06080514 			; <UNDEFINED> instruction: 0x06080514
    26e4:	3d1b0501 	cfldr32cc	mvfx0, [fp, #-4]
    26e8:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    26ec:	13330605 	teqne	r3, #5242880	; 0x500000
    26f0:	01061d05 	tsteq	r6, r5, lsl #26
    26f4:	21060505 	tstcs	r6, r5, lsl #10
    26f8:	03061505 	movweq	r1, #25861	; 0x6505
    26fc:	0905010e 	stmdbeq	r5, {r1, r2, r3, r8}
    2700:	05207203 	streq	r7, [r0, #-515]!	; 0xfffffdfd
    2704:	142f0605 	strtne	r0, [pc], #-1541	; 270c <__Stack_Size+0x230c>
    2708:	16061005 	strne	r1, [r6], -r5
    270c:	056d1505 	strbeq	r1, [sp, #-1285]!	; 0xfffffafb
    2710:	20750309 	rsbscs	r0, r5, r9, lsl #6
    2714:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    2718:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    271c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    2720:	05400607 	strbeq	r0, [r0, #-1543]	; 0xfffff9f9
    2724:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    2728:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    272c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2730:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    2734:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    2738:	0505202f 	streq	r2, [r5, #-47]	; 0xffffffd1
    273c:	08053406 	stmdaeq	r5, {r1, r2, sl, ip, sp}
    2740:	0b050106 	bleq	142b60 <__Stack_Size+0x142760>
    2744:	1d080523 	cfstr32ne	mvfx0, [r8, #-140]	; 0xffffff74
    2748:	23060705 	movwcs	r0, #26373	; 0x6705
    274c:	01060b05 	tsteq	r6, r5, lsl #22
    2750:	202e0a05 	eorcs	r0, lr, r5, lsl #20
    2754:	22060905 	andcs	r0, r6, #81920	; 0x14000
    2758:	2f062e06 	svccs	0x00062e06
    275c:	02003805 	andeq	r3, r0, #327680	; 0x50000
    2760:	11030704 	tstne	r3, r4, lsl #14
    2764:	0005054a 	andeq	r0, r5, sl, asr #10
    2768:	16070402 	strne	r0, [r7], -r2, lsl #8
    276c:	02001c05 	andeq	r1, r0, #1280	; 0x500
    2770:	01060704 	tsteq	r6, r4, lsl #14
    2774:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2778:	002e0704 	eoreq	r0, lr, r4, lsl #14
    277c:	06070402 	streq	r0, [r7], -r2, lsl #8
    2780:	000c052f 	andeq	r0, ip, pc, lsr #10
    2784:	06070402 	streq	r0, [r7], -r2, lsl #8
    2788:	06070501 	streq	r0, [r7], -r1, lsl #10
    278c:	052e7003 	streq	r7, [lr, #-3]!
    2790:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2794:	052e2e0a 	streq	r2, [lr, #-3594]!	; 0xfffff1f6
    2798:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    279c:	0520060c 	streq	r0, [r0, #-1548]!	; 0xfffff9f4
    27a0:	0623060b 	strteq	r0, [r3], -fp, lsl #12
    27a4:	012f063c 			; <UNDEFINED> instruction: 0x012f063c
    27a8:	013c0117 	teqeq	ip, r7, lsl r1
    27ac:	06010101 	streq	r0, [r1], -r1, lsl #2
    27b0:	11062e2e 	tstne	r6, lr, lsr #28
    27b4:	05202e06 	streq	r2, [r0, #-3590]!	; 0xfffff1fa
    27b8:	0109030a 	tsteq	r9, sl, lsl #6
    27bc:	000c0220 	andeq	r0, ip, r0, lsr #4
    27c0:	01050101 	tsteq	r5, r1, lsl #2
    27c4:	40020500 	andmi	r0, r2, r0, lsl #10
    27c8:	03080013 	movweq	r0, #32787	; 0x8013
    27cc:	050102c2 	streq	r0, [r1, #-706]	; 0xfffffd3e
    27d0:	13131303 	tstne	r3, #201326592	; 0xc000000
    27d4:	01051413 	tsteq	r5, r3, lsl r4
    27d8:	017a0306 	cmneq	sl, r6, lsl #6
    27dc:	05261905 	streq	r1, [r6, #-2309]!	; 0xfffff6fb
    27e0:	200f0327 	andcs	r0, pc, r7, lsr #6
    27e4:	71031905 	tstvc	r3, r5, lsl #18
    27e8:	03270520 			; <UNDEFINED> instruction: 0x03270520
    27ec:	1b05200f 	blne	14a830 <__Stack_Size+0x14a430>
    27f0:	05207103 	streq	r7, [r0, #-259]!	; 0xfffffefd
    27f4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    27f8:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    27fc:	142f0603 	strtne	r0, [pc], #-1539	; 2804 <__Stack_Size+0x2404>
    2800:	16060e05 	strne	r0, [r6], -r5, lsl #28
    2804:	05620705 	strbeq	r0, [r2, #-1797]!	; 0xfffff8fb
    2808:	05052006 	streq	r2, [r5, #-6]
    280c:	0c052406 	cfstrseq	mvf2, [r5], {6}
    2810:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2814:	0c054006 	stceq	0, cr4, [r5], {6}
    2818:	03050106 	movweq	r0, #20742	; 0x5106
    281c:	06053106 	streq	r3, [r5], -r6, lsl #2
    2820:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2824:	2705202f 	strcs	r2, [r5, -pc, lsr #32]
    2828:	01040200 	mrseq	r0, R12_usr
    282c:	21070520 	tstcs	r7, r0, lsr #10
    2830:	06050520 	streq	r0, [r5], -r0, lsr #10
    2834:	06070526 	streq	r0, [r7], -r6, lsr #10
    2838:	1d080515 	cfstr32ne	mvfx0, [r8, #-84]	; 0xffffffac
    283c:	23060705 	movwcs	r0, #26373	; 0x6705
    2840:	03420601 	movteq	r0, #9729	; 0x2601
    2844:	03342e7a 	teqeq	r4, #1952	; 0x7a0
    2848:	2e062e7a 	mcrcs	14, 0, r2, cr6, cr10, {3}
    284c:	06010101 	streq	r0, [r1], -r1, lsl #2
    2850:	207a0318 	rsbscs	r0, sl, r8, lsl r3
    2854:	01013406 	tsteq	r1, r6, lsl #8
    2858:	06010101 	streq	r0, [r1], -r1, lsl #2
    285c:	0634052e 	ldrteq	r0, [r4], -lr, lsr #10
    2860:	15030520 	strne	r0, [r3, #-1312]	; 0xfffffae0
    2864:	01061a05 	tsteq	r6, r5, lsl #20
    2868:	062e0305 	strteq	r0, [lr], -r5, lsl #6
    286c:	060a052f 	streq	r0, [sl], -pc, lsr #10
    2870:	21010501 	tstcs	r1, r1, lsl #10
    2874:	6e030c05 	cdpvs	12, 0, cr0, cr3, cr5, {0}
    2878:	08022020 	stmdaeq	r2, {r5, sp}
    287c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2880:	02050001 	andeq	r0, r5, #1
    2884:	080013bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip}
    2888:	0102f803 	tsteq	r2, r3, lsl #16	; <UNPREDICTABLE>
    288c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    2890:	05110601 	ldreq	r0, [r1, #-1537]	; 0xfffff9ff
    2894:	67062103 	strvs	r2, [r6, -r3, lsl #2]
    2898:	01061a05 	tsteq	r6, r5, lsl #20
    289c:	062e0305 	strteq	r0, [lr], -r5, lsl #6
    28a0:	0601052f 	streq	r0, [r1], -pc, lsr #10
    28a4:	00070213 	andeq	r0, r7, r3, lsl r2
    28a8:	01050101 	tsteq	r5, r1, lsl #2
    28ac:	e0020500 	and	r0, r2, r0, lsl #10
    28b0:	03080013 	movweq	r0, #32787	; 0x8013
    28b4:	05010392 	streq	r0, [r1, #-914]	; 0xfffffc6e
    28b8:	05141303 	ldreq	r1, [r4, #-771]	; 0xfffffcfd
    28bc:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    28c0:	19051d01 	stmdbne	r5, {r0, r8, sl, fp, ip}
    28c4:	20240523 	eorcs	r0, r4, r3, lsr #10
    28c8:	21060305 	tstcs	r6, r5, lsl #6
    28cc:	01060605 	tsteq	r6, r5, lsl #12
    28d0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    28d4:	01064205 	tsteq	r6, r5, lsl #4
    28d8:	052e2905 	streq	r2, [lr, #-2309]!	; 0xfffff6fb
    28dc:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    28e0:	05160601 	ldreq	r0, [r6, #-1537]	; 0xfffff9ff
    28e4:	051f0603 	ldreq	r0, [pc, #-1539]	; 22e9 <__Stack_Size+0x1ee9>
    28e8:	2001061c 	andcs	r0, r1, ip, lsl r6
    28ec:	01000402 	tsteq	r0, r2, lsl #8
    28f0:	00010501 	andeq	r0, r1, r1, lsl #10
    28f4:	13fc0205 	mvnsne	r0, #1342177280	; 0x50000000
    28f8:	c9030800 	stmdbgt	r3, {fp}
    28fc:	03050107 	movweq	r0, #20743	; 0x5107
    2900:	06010513 			; <UNDEFINED> instruction: 0x06010513
    2904:	21030511 	tstcs	r3, r1, lsl r5
    2908:	13056806 	movwne	r6, #22534	; 0x5806
    290c:	06050106 	streq	r0, [r5], -r6, lsl #2
    2910:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    2914:	03054b30 	movweq	r4, #23344	; 0x5b30
    2918:	0601053f 			; <UNDEFINED> instruction: 0x0601053f
    291c:	000d0213 	andeq	r0, sp, r3, lsl r2
    2920:	01050101 	tsteq	r5, r1, lsl #2
    2924:	3c020500 	cfstr32cc	mvfx0, [r2], {-0}
    2928:	03080014 	movweq	r0, #32788	; 0x8014
    292c:	050106cc 	streq	r0, [r1, #-1740]	; 0xfffff934
    2930:	05181403 	ldreq	r1, [r8, #-1027]	; 0xfffffbfd
    2934:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    2938:	20780301 	rsbscs	r0, r8, r1, lsl #6
    293c:	05281d05 	streq	r1, [r8, #-3333]!	; 0xfffff2fb
    2940:	1d055a13 	vstrne	s10, [r5, #-76]	; 0xffffffb4
    2944:	0603051e 			; <UNDEFINED> instruction: 0x0603051e
    2948:	06130530 			; <UNDEFINED> instruction: 0x06130530
    294c:	20060501 	andcs	r0, r6, r1, lsl #10
    2950:	053a1d05 	ldreq	r1, [sl, #-3333]!	; 0xfffff2fb
    2954:	14052031 	strne	r2, [r5], #-49	; 0xffffffcf
    2958:	06050520 	streq	r0, [r5], -r0, lsr #10
    295c:	0626054e 	strteq	r0, [r6], -lr, asr #10
    2960:	20240501 	eorcs	r0, r4, r1, lsl #10
    2964:	21060505 	tstcs	r6, r5, lsl #10
    2968:	01062105 	tsteq	r6, r5, lsl #2
    296c:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    2970:	13210605 			; <UNDEFINED> instruction: 0x13210605
    2974:	01061f05 	tsteq	r6, r5, lsl #30
    2978:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    297c:	13210605 			; <UNDEFINED> instruction: 0x13210605
    2980:	01062005 	tsteq	r6, r5
    2984:	05201e05 	streq	r1, [r0, #-3589]!	; 0xfffff1fb
    2988:	13210605 			; <UNDEFINED> instruction: 0x13210605
    298c:	01062005 	tsteq	r6, r5
    2990:	05201e05 	streq	r1, [r0, #-3589]!	; 0xfffff1fb
    2994:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    2998:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    299c:	052f0603 	streq	r0, [pc, #-1539]!	; 23a1 <__Stack_Size+0x1fa1>
    29a0:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    29a4:	7dba031f 	ldcvc	3, cr0, [sl, #124]!	; 0x7c
    29a8:	03060520 	movweq	r0, #25888	; 0x6520
    29ac:	052002c6 	streq	r0, [r0, #-710]!	; 0xfffffd3a
    29b0:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    29b4:	7db40306 	ldcvc	3, cr0, [r4, #24]!
    29b8:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    29bc:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    29c0:	05200606 	streq	r0, [r0, #-1542]!	; 0xfffff9fa
    29c4:	05400605 	strbeq	r0, [r0, #-1541]	; 0xfffff9fb
    29c8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    29cc:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    29d0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    29d4:	d0030603 	andle	r0, r3, r3, lsl #12
    29d8:	06052e00 	streq	r2, [r5], -r0, lsl #28
    29dc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    29e0:	b403060a 	strlt	r0, [r3], #-1546	; 0xfffff9f6
    29e4:	0d05207f 	stceq	0, cr2, [r5, #-508]	; 0xfffffe04
    29e8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    29ec:	0a053006 	beq	14ea0c <__Stack_Size+0x14e60c>
    29f0:	16050106 	strne	r0, [r5], -r6, lsl #2
    29f4:	0611054f 	ldreq	r0, [r1], -pc, asr #10
    29f8:	2000d703 	andcs	sp, r0, r3, lsl #14
    29fc:	05150305 	ldreq	r0, [r5, #-773]	; 0xfffffcfb
    2a00:	2001061e 	andcs	r0, r1, lr, lsl r6
    2a04:	91032005 	tstls	r3, r5
    2a08:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2a0c:	20062106 	andcs	r2, r6, r6, lsl #2
    2a10:	8f032c05 	svchi	0x00032c05
    2a14:	0b05017e 	bleq	143014 <__Stack_Size+0x142c14>
    2a18:	05203d3d 	streq	r3, [r0, #-3389]!	; 0xfffff2c3
    2a1c:	d8030603 	stmdale	r3, {r0, r1, r9, sl}
    2a20:	90142e00 	andsls	r2, r4, r0, lsl #28
    2a24:	3a061005 	bcc	186a40 <__Stack_Size+0x186640>
    2a28:	03060a05 	movweq	r0, #27141	; 0x6a05
    2a2c:	052e7fb4 	streq	r7, [lr, #-4020]!	; 0xfffff04c
    2a30:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2a34:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    2a38:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    2a3c:	3c030605 	stccc	6, cr0, [r3], {5}
    2a40:	060f053c 			; <UNDEFINED> instruction: 0x060f053c
    2a44:	06050501 	streq	r0, [r5], -r1, lsl #10
    2a48:	06080559 			; <UNDEFINED> instruction: 0x06080559
    2a4c:	30140501 	andscc	r0, r4, r1, lsl #10
    2a50:	42030b05 	andmi	r0, r3, #5120	; 0x1400
    2a54:	05203d2e 	streq	r3, [r0, #-3374]!	; 0xfffff2d2
    2a58:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    2a5c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2a60:	0a052e10 	beq	14e2a8 <__Stack_Size+0x14dea8>
    2a64:	0d052806 	stceq	8, cr2, [r5, #-24]	; 0xffffffe8
    2a68:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2a6c:	0a053006 	beq	14ea8c <__Stack_Size+0x14e68c>
    2a70:	0b050106 	bleq	142e90 <__Stack_Size+0x142a90>
    2a74:	05203d3d 	streq	r3, [r0, #-3389]!	; 0xfffff2c3
    2a78:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    2a7c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2a80:	08052e10 	stmdaeq	r5, {r4, r9, sl, fp, sp}
    2a84:	200b0306 	andcs	r0, fp, r6, lsl #6
    2a88:	01060b05 	tsteq	r6, r5, lsl #22
    2a8c:	31060505 	tstcc	r6, r5, lsl #10
    2a90:	01060805 	tsteq	r6, r5, lsl #16
    2a94:	30060705 	andcc	r0, r6, r5, lsl #14
    2a98:	01061005 	tsteq	r6, r5
    2a9c:	0608052e 	streq	r0, [r8], -lr, lsr #10
    2aa0:	060b0525 	streq	r0, [fp], -r5, lsr #10
    2aa4:	06050501 	streq	r0, [r5], -r1, lsl #10
    2aa8:	06080531 			; <UNDEFINED> instruction: 0x06080531
    2aac:	060a0501 	streq	r0, [sl], -r1, lsl #10
    2ab0:	060d0533 			; <UNDEFINED> instruction: 0x060d0533
    2ab4:	06070501 	streq	r0, [r7], -r1, lsl #10
    2ab8:	06100530 			; <UNDEFINED> instruction: 0x06100530
    2abc:	03052e01 	movweq	r2, #24065	; 0x5e01
    2ac0:	20130306 	andscs	r0, r3, r6, lsl #6
    2ac4:	01060605 	tsteq	r6, r5, lsl #12
    2ac8:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    2acc:	0101eb03 	tsteq	r1, r3, lsl #22
    2ad0:	ab030605 	blge	c42ec <__Stack_Size+0xc3eec>
    2ad4:	0305017e 	movweq	r0, #20862	; 0x517e
    2ad8:	14131314 	ldrne	r1, [r3], #-788	; 0xfffffcec
    2adc:	14131613 	ldrne	r1, [r3], #-1555	; 0xfffff9ed
    2ae0:	01060605 	tsteq	r6, r5, lsl #12
    2ae4:	30060505 	andcc	r0, r6, r5, lsl #10
    2ae8:	01060805 	tsteq	r6, r5, lsl #16
    2aec:	053e0a05 	ldreq	r0, [lr, #-2565]!	; 0xfffff5fb
    2af0:	0a052320 	beq	14b778 <__Stack_Size+0x14b378>
    2af4:	2220051e 	eorcs	r0, r0, #125829120	; 0x7800000
    2af8:	1d060705 	stcne	7, cr0, [r6, #-20]	; 0xffffffec
    2afc:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    2b00:	06090501 	streq	r0, [r9], -r1, lsl #10
    2b04:	06150522 	ldreq	r0, [r5], -r2, lsr #10
    2b08:	03052001 	movweq	r2, #20481	; 0x5001
    2b0c:	00d50306 	sbcseq	r0, r5, r6, lsl #6
    2b10:	06060501 	streq	r0, [r6], -r1, lsl #10
    2b14:	0c052e01 	stceq	14, cr2, [r5], {1}
    2b18:	7fad0306 	svcvc	0x00ad0306
    2b1c:	060f0520 	streq	r0, [pc], -r0, lsr #10
    2b20:	06090501 	streq	r0, [r9], -r1, lsl #10
    2b24:	06150530 			; <UNDEFINED> instruction: 0x06150530
    2b28:	0c052001 	stceq	0, cr2, [r5], {1}
    2b2c:	0f052206 	svceq	0x00052206
    2b30:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b34:	15053006 	strne	r3, [r5, #-6]
    2b38:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2b3c:	0521060e 	streq	r0, [r1, #-1550]!	; 0xfffff9f2
    2b40:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    2b44:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    2b48:	2001060e 	andcs	r0, r1, lr, lsl #12
    2b4c:	06080520 	streq	r0, [r8], -r0, lsr #10
    2b50:	060b0518 			; <UNDEFINED> instruction: 0x060b0518
    2b54:	2e270501 	cfsh64cs	mvdx0, mvdx7, #1
    2b58:	053e0c05 	ldreq	r0, [lr, #-3077]!	; 0xfffff3fb
    2b5c:	05690605 	strbeq	r0, [r9, #-1541]!	; 0xfffff9fb
    2b60:	05200608 	streq	r0, [r0, #-1544]!	; 0xfffff9f8
    2b64:	05203d09 	streq	r3, [r0, #-3337]!	; 0xfffff2f7
    2b68:	05053013 	streq	r3, [r5, #-19]	; 0xffffffed
    2b6c:	203e0306 	eorscs	r0, lr, r6, lsl #6
    2b70:	01062905 	tsteq	r6, r5, lsl #18
    2b74:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
    2b78:	29052406 	stmdbcs	r5, {r1, r2, sl, sp}
    2b7c:	0605051c 			; <UNDEFINED> instruction: 0x0605051c
    2b80:	06260521 	strteq	r0, [r6], -r1, lsr #10
    2b84:	06050501 	streq	r0, [r5], -r1, lsl #10
    2b88:	06060523 	streq	r0, [r6], -r3, lsr #10
    2b8c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2b90:	03030521 	movweq	r0, #13601	; 0x3521
    2b94:	0605010c 	streq	r0, [r5], -ip, lsl #2
    2b98:	13050106 	movwne	r0, #20742	; 0x5106
    2b9c:	201e052e 	andscs	r0, lr, lr, lsr #10
    2ba0:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    2ba4:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    2ba8:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2bac:	b203060a 	andlt	r0, r3, #10485760	; 0xa00000
    2bb0:	0d052e7f 	stceq	14, cr2, [r5, #-508]	; 0xfffffe04
    2bb4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2bb8:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    2bbc:	0a050106 	beq	142fdc <__Stack_Size+0x142bdc>
    2bc0:	211b0558 	tstcs	fp, r8, asr r5
    2bc4:	03200b05 			; <UNDEFINED> instruction: 0x03200b05
    2bc8:	0a052018 	beq	14ac30 <__Stack_Size+0x14a830>
    2bcc:	3c6f0306 	stclcc	3, cr0, [pc], #-24	; 2bbc <__Stack_Size+0x27bc>
    2bd0:	01060d05 	tsteq	r6, r5, lsl #26
    2bd4:	30060705 	andcc	r0, r6, r5, lsl #14
    2bd8:	01062905 	tsteq	r6, r5, lsl #18
    2bdc:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
    2be0:	06120514 			; <UNDEFINED> instruction: 0x06120514
    2be4:	1c0a0516 	cfstr32ne	mvfx0, [sl], {22}
    2be8:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    2bec:	01061205 	tsteq	r6, r5, lsl #4
    2bf0:	05352b05 	ldreq	r2, [r5, #-2821]!	; 0xfffff4fb
    2bf4:	20790312 	rsbscs	r0, r9, r2, lsl r3
    2bf8:	05430a05 	strbeq	r0, [r3, #-2565]	; 0xfffff5fb
    2bfc:	20790310 	rsbscs	r0, r9, r0, lsl r3
    2c00:	40060905 	andmi	r0, r6, r5, lsl #18
    2c04:	01061005 	tsteq	r6, r5
    2c08:	31060705 	tstcc	r6, r5, lsl #14
    2c0c:	01060a05 	tsteq	r6, r5, lsl #20
    2c10:	052e3c05 	streq	r3, [lr, #-3077]!	; 0xfffff3fb
    2c14:	29030605 	stmdbcs	r3, {r0, r2, r9, sl}
    2c18:	060f053c 			; <UNDEFINED> instruction: 0x060f053c
    2c1c:	67080501 	strvs	r0, [r8, -r1, lsl #10]
    2c20:	051f0f05 	ldreq	r0, [pc, #-3845]	; 1d23 <__Stack_Size+0x1923>
    2c24:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2c28:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2c2c:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    2c30:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    2c34:	063d0607 	ldrteq	r0, [sp], -r7, lsl #12
    2c38:	06030501 	streq	r0, [r3], -r1, lsl #10
    2c3c:	0100de03 	tsteq	r0, r3, lsl #28
    2c40:	13060105 	movwne	r0, #24837	; 0x6105
    2c44:	053b0a05 	ldreq	r0, [fp, #-2565]!	; 0xfffff5fb
    2c48:	ff030608 			; <UNDEFINED> instruction: 0xff030608
    2c4c:	0b052e7e 	bleq	14e64c <__Stack_Size+0x14e24c>
    2c50:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2c54:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    2c58:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2c5c:	08053013 	stmdaeq	r5, {r0, r1, r4, ip, sp}
    2c60:	0b053206 	bleq	14f480 <__Stack_Size+0x14f080>
    2c64:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2c68:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    2c6c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2c70:	3c370559 	cfldr32cc	mvfx0, [r7], #-356	; 0xfffffe9c
    2c74:	053d2c05 	ldreq	r2, [sp, #-3077]!	; 0xfffff3fb
    2c78:	0905670e 	stmdbeq	r5, {r1, r2, r3, r8, r9, sl, sp, lr}
    2c7c:	30130558 	andscc	r0, r3, r8, asr r5
    2c80:	03060305 	movweq	r0, #25349	; 0x6305
    2c84:	0566081e 	strbeq	r0, [r6, #-2078]!	; 0xfffff7e2
    2c88:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    2c8c:	05052e21 	streq	r2, [r5, #-3617]	; 0xfffff1df
    2c90:	20052306 	andcs	r2, r5, r6, lsl #6
    2c94:	03050106 	movweq	r0, #20742	; 0x5106
    2c98:	06053306 	streq	r3, [r5], -r6, lsl #6
    2c9c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2ca0:	22054d06 	andcs	r4, r5, #384	; 0x180
    2ca4:	3a050106 	bcc	1430c4 <__Stack_Size+0x142cc4>
    2ca8:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    2cac:	2076030a 	rsbscs	r0, r6, sl, lsl #6
    2cb0:	23060505 	movwcs	r0, #25861	; 0x6505
    2cb4:	19063a05 	stmdbne	r6, {r0, r2, r9, fp, ip, sp}
    2cb8:	79032d05 	stmdbvc	r3, {r0, r2, r8, sl, fp, sp}
    2cbc:	273a0520 	ldrcs	r0, [sl, -r0, lsr #10]!
    2cc0:	79030805 	stmdbvc	r3, {r0, r2, fp}
    2cc4:	272f052e 	strcs	r0, [pc, -lr, lsr #10]!
    2cc8:	79030805 	stmdbvc	r3, {r0, r2, fp}
    2ccc:	06070520 	streq	r0, [r7], -r0, lsr #10
    2cd0:	062b0522 	strteq	r0, [fp], -r2, lsr #10
    2cd4:	06050501 	streq	r0, [r5], -r1, lsl #10
    2cd8:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    2cdc:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2ce0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2ce4:	3c73030a 	ldclcc	3, cr0, [r3], #-40	; 0xffffffd8
    2ce8:	01060d05 	tsteq	r6, r5, lsl #26
    2cec:	30060705 	andcc	r0, r6, r5, lsl #14
    2cf0:	01060a05 	tsteq	r6, r5, lsl #20
    2cf4:	30060905 	andcc	r0, r6, r5, lsl #18
    2cf8:	01062005 	tsteq	r6, r5
    2cfc:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    2d00:	0635052c 	ldrteq	r0, [r5], -ip, lsr #10
    2d04:	4a0f0501 	bmi	3c4110 <__Stack_Size+0x3c3d10>
    2d08:	30060905 	andcc	r0, r6, r5, lsl #18
    2d0c:	01062005 	tsteq	r6, r5
    2d10:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    2d14:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    2d18:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    2d1c:	022f0605 	eoreq	r0, pc, #5242880	; 0x500000
    2d20:	0101000c 	tsteq	r1, ip
    2d24:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2d28:	00170c02 	andseq	r0, r7, r2, lsl #24
    2d2c:	07a00308 	streq	r0, [r0, r8, lsl #6]!
    2d30:	13030501 	movwne	r0, #13569	; 0x3501
    2d34:	11060105 	tstne	r6, r5, lsl #2
    2d38:	05212205 	streq	r2, [r1, #-517]!	; 0xfffffdfb
    2d3c:	03052e07 	movweq	r2, #24071	; 0x5e07
    2d40:	06052206 	streq	r2, [r5], -r6, lsl #4
    2d44:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    2d48:	01040200 	mrseq	r0, R12_usr
    2d4c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    2d50:	03060530 	movweq	r0, #25904	; 0x6530
    2d54:	05017c81 	streq	r7, [r1, #-3201]	; 0xfffff37f
    2d58:	14131403 	ldrne	r1, [r3], #-1027	; 0xfffffbfd
    2d5c:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    2d60:	20060501 	andcs	r0, r6, r1, lsl #10
    2d64:	051e1005 	ldreq	r1, [lr, #-5]
    2d68:	05052219 	streq	r2, [r5, #-537]	; 0xfffffde7
    2d6c:	14132206 	ldrne	r2, [r3], #-518	; 0xfffffdfa
    2d70:	01060c05 	tsteq	r6, r5, lsl #24
    2d74:	21060505 	tstcs	r6, r5, lsl #10
    2d78:	060f0517 			; <UNDEFINED> instruction: 0x060f0517
    2d7c:	1a053c01 	bne	151d88 <__Stack_Size+0x151988>
    2d80:	1f0f052f 	svcne	0x000f052f
    2d84:	21060505 	tstcs	r6, r5, lsl #10
    2d88:	01061a05 	tsteq	r6, r5, lsl #20
    2d8c:	2f060505 	svccs	0x00060505
    2d90:	01061a05 	tsteq	r6, r5, lsl #20
    2d94:	05220505 	streq	r0, [r2, #-1285]!	; 0xfffffafb
    2d98:	05051e1a 	streq	r1, [r5, #-3610]	; 0xfffff1e6
    2d9c:	74063006 	strvc	r3, [r6], #-6
    2da0:	15060305 	strne	r0, [r6, #-773]	; 0xfffffcfb
    2da4:	01060605 	tsteq	r6, r5, lsl #12
    2da8:	30060505 	andcc	r0, r6, r5, lsl #10
    2dac:	3d1f1306 	ldccc	3, cr1, [pc, #-24]	; 2d9c <__Stack_Size+0x299c>
    2db0:	2f21061f 	svccs	0x0021061f
    2db4:	053f0305 	ldreq	r0, [pc, #-773]!	; 2ab7 <__Stack_Size+0x26b7>
    2db8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    2dbc:	11052006 	tstne	r5, r6
    2dc0:	1e060522 	cfsh32ne	mvfx0, mvfx6, #18
    2dc4:	30060505 	andcc	r0, r6, r5, lsl #10
    2dc8:	01062005 	tsteq	r6, r5
    2dcc:	05262205 	streq	r2, [r6, #-517]!	; 0xfffffdfb
    2dd0:	06250615 			; <UNDEFINED> instruction: 0x06250615
    2dd4:	06050501 	streq	r0, [r5], -r1, lsl #10
    2dd8:	0103d303 	tsteq	r3, r3, lsl #6
    2ddc:	01061205 	tsteq	r6, r5, lsl #4
    2de0:	03060305 	movweq	r0, #25349	; 0x6305
    2de4:	1e052015 	mcrne	0, 0, r2, cr5, cr5, {0}
    2de8:	03050106 	movweq	r0, #20742	; 0x5106
    2dec:	01053006 	tsteq	r5, r6
    2df0:	0a051306 	beq	147a10 <__Stack_Size+0x147610>
    2df4:	0605052d 	streq	r0, [r5], -sp, lsr #10
    2df8:	2e7c8f03 	cdpcs	15, 7, cr8, cr12, cr3, {0}
    2dfc:	01060805 	tsteq	r6, r5, lsl #16
    2e00:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    2e04:	01062205 	tsteq	r6, r5, lsl #4
    2e08:	30060a05 	andcc	r0, r6, r5, lsl #20
    2e0c:	05140705 	ldreq	r0, [r4, #-1797]	; 0xfffff8fb
    2e10:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    2e14:	822f0607 	eorhi	r0, pc, #7340032	; 0x700000
    2e18:	08054a06 	stmdaeq	r5, {r1, r2, r9, fp, lr}
    2e1c:	03d60306 	bicseq	r0, r6, #402653184	; 0x18000000
    2e20:	060b0501 	streq	r0, [fp], -r1, lsl #10
    2e24:	06050501 	streq	r0, [r5], -r1, lsl #10
    2e28:	06060530 			; <UNDEFINED> instruction: 0x06060530
    2e2c:	05052001 	streq	r2, [r5, #-1]
    2e30:	12053d06 	andne	r3, r5, #384	; 0x180
    2e34:	0f021806 	svceq	0x00021806
    2e38:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2e3c:	02050001 	andeq	r0, r5, #1
    2e40:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
    2e44:	0107dd03 	tsteq	r7, r3, lsl #26
    2e48:	13130305 	tstne	r3, #335544320	; 0x14000000
    2e4c:	10060105 	andne	r0, r6, r5, lsl #2
    2e50:	05250a05 	streq	r0, [r5, #-2565]!	; 0xfffff5fb
    2e54:	19052205 	stmdbne	r5, {r0, r2, r9, sp}
    2e58:	20070529 	andcs	r0, r7, r9, lsr #10
    2e5c:	23060305 	movwcs	r0, #25349	; 0x6305
    2e60:	02000f05 	andeq	r0, r0, #5, 30
    2e64:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    2e68:	04020003 	streq	r0, [r2], #-3
    2e6c:	06010601 	streq	r0, [r1], -r1, lsl #12
    2e70:	053c0632 	ldreq	r0, [ip, #-1586]!	; 0xfffff9ce
    2e74:	05052f01 	streq	r2, [r5, #-3841]	; 0xfffff0ff
    2e78:	03040200 	movweq	r0, #16896	; 0x4200
    2e7c:	18051d06 	stmdane	r5, {r1, r2, r8, sl, fp, ip}
    2e80:	03040200 	movweq	r0, #16896	; 0x4200
    2e84:	0019058e 	andseq	r0, r9, lr, lsl #11
    2e88:	06030402 	streq	r0, [r3], -r2, lsl #8
    2e8c:	04020001 	streq	r0, [r2], #-1
    2e90:	06022003 	streq	r2, [r2], -r3
    2e94:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2e98:	02050001 	andeq	r0, r5, #1
    2e9c:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
    2ea0:	0106f803 	tsteq	r6, r3, lsl #16	; <UNPREDICTABLE>
    2ea4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    2ea8:	05110601 	ldreq	r0, [r1, #-1537]	; 0xfffff9ff
    2eac:	07052122 	streq	r2, [r5, -r2, lsr #2]
    2eb0:	0603052e 	streq	r0, [r3], -lr, lsr #10
    2eb4:	06060522 	streq	r0, [r6], -r2, lsr #10
    2eb8:	00210501 	eoreq	r0, r1, r1, lsl #10
    2ebc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2ec0:	30060505 	andcc	r0, r6, r5, lsl #10
    2ec4:	06200530 			; <UNDEFINED> instruction: 0x06200530
    2ec8:	20120501 	andscs	r0, r2, r1, lsl #10
    2ecc:	03060305 	movweq	r0, #25349	; 0x6305
    2ed0:	1e052014 	mcrne	0, 0, r2, cr5, cr4, {0}
    2ed4:	03050106 	movweq	r0, #20742	; 0x5106
    2ed8:	01053006 	tsteq	r5, r6
    2edc:	0a051306 	beq	147afc <__Stack_Size+0x1476fc>
    2ee0:	0608052d 	streq	r0, [r8], -sp, lsr #10
    2ee4:	052e6d03 	streq	r6, [lr, #-3331]!	; 0xfffff2fd
    2ee8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2eec:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    2ef0:	20010608 	andcs	r0, r1, r8, lsl #12
    2ef4:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
    2ef8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    2efc:	3d3f0607 	ldccc	6, cr0, [pc, #-28]!	; 2ee8 <__Stack_Size+0x2ae8>
    2f00:	01061e05 	tsteq	r6, r5, lsl #28
    2f04:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    2f08:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    2f0c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    2f10:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
    2f14:	02170612 	andseq	r0, r7, #18874368	; 0x1200000
    2f18:	01010009 	tsteq	r1, r9
    2f1c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2f20:	00000002 	andeq	r0, r0, r2
    2f24:	07f10300 	ldrbeq	r0, [r1, r0, lsl #6]!
    2f28:	01021301 	tsteq	r2, r1, lsl #6
    2f2c:	37010100 	strcc	r0, [r1, -r0, lsl #2]
    2f30:	03000001 	movweq	r0, #1
    2f34:	00003600 	andeq	r3, r0, r0, lsl #12
    2f38:	fb010200 	blx	43742 <__Stack_Size+0x43342>
    2f3c:	01000d0e 	tsteq	r0, lr, lsl #26
    2f40:	00010101 	andeq	r0, r1, r1, lsl #2
    2f44:	00010000 	andeq	r0, r1, r0
    2f48:	73750100 	cmnvc	r5, #0, 2
    2f4c:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    2f50:	75000062 	strvc	r0, [r0, #-98]	; 0xffffff9e
    2f54:	6d5f6273 	lfmvs	f6, 2, [pc, #-460]	; 2d90 <__Stack_Size+0x2990>
    2f58:	632e6d65 			; <UNDEFINED> instruction: 0x632e6d65
    2f5c:	00000100 	andeq	r0, r0, r0, lsl #2
    2f60:	5f627375 	svcpl	0x00627375
    2f64:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2f68:	0100682e 	tsteq	r0, lr, lsr #16
    2f6c:	05000000 	streq	r0, [r0, #-0]
    2f70:	02050001 	andeq	r0, r5, #1
    2f74:	08001868 	stmdaeq	r0, {r3, r5, r6, fp, ip}
    2f78:	05012303 	streq	r2, [r1, #-771]	; 0xfffffcfd
    2f7c:	24051303 	strcs	r1, [r5], #-771	; 0xfffffcfd
    2f80:	14051506 	strne	r1, [r5], #-1286	; 0xfffffafa
    2f84:	2324052b 			; <UNDEFINED> instruction: 0x2324052b
    2f88:	052b1905 	streq	r1, [fp, #-2309]!	; 0xfffff6fb
    2f8c:	13210603 			; <UNDEFINED> instruction: 0x13210603
    2f90:	06240513 			; <UNDEFINED> instruction: 0x06240513
    2f94:	06030501 	streq	r0, [r3], -r1, lsl #10
    2f98:	000f0521 	andeq	r0, pc, r1, lsr #10
    2f9c:	01010402 	tsteq	r1, r2, lsl #8
    2fa0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2fa4:	01060104 	tsteq	r6, r4, lsl #2
    2fa8:	09030105 	stmdbeq	r3, {r0, r2, r8}
    2fac:	00050520 	andeq	r0, r5, r0, lsr #10
    2fb0:	06030402 	streq	r0, [r3], -r2, lsl #8
    2fb4:	00207903 	eoreq	r7, r0, r3, lsl #18
    2fb8:	13030402 	movwne	r0, #13314	; 0x3402
    2fbc:	03040200 	movweq	r0, #16896	; 0x4200
    2fc0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    2fc4:	18052f03 	stmdane	r5, {r0, r1, r8, r9, sl, fp, sp}
    2fc8:	03040200 	movweq	r0, #16896	; 0x4200
    2fcc:	0f050d06 	svceq	0x00050d06
    2fd0:	03040200 	movweq	r0, #16896	; 0x4200
    2fd4:	00050525 	andeq	r0, r5, r5, lsr #10
    2fd8:	06030402 	streq	r0, [r3], -r2, lsl #8
    2fdc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2fe0:	17051303 	strne	r1, [r5, -r3, lsl #6]
    2fe4:	03040200 	movweq	r0, #16896	; 0x4200
    2fe8:	00017903 	andeq	r7, r1, r3, lsl #18
    2fec:	06030402 	streq	r0, [r3], -r2, lsl #8
    2ff0:	00010201 	andeq	r0, r1, r1, lsl #4
    2ff4:	01050101 	tsteq	r5, r1, lsl #2
    2ff8:	86020500 	strhi	r0, [r2], -r0, lsl #10
    2ffc:	03080018 	movweq	r0, #32792	; 0x8018
    3000:	0305013c 	movweq	r0, #20796	; 0x513c
    3004:	06240513 			; <UNDEFINED> instruction: 0x06240513
    3008:	2b140515 	blcs	504464 <__Stack_Size+0x504064>
    300c:	05232405 	streq	r2, [r3, #-1029]!	; 0xfffffbfb
    3010:	03052b19 	movweq	r2, #23321	; 0x5b19
    3014:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    3018:	01062405 	tsteq	r6, r5, lsl #8
    301c:	21060305 	tstcs	r6, r5, lsl #6
    3020:	02000f05 	andeq	r0, r0, #5, 30
    3024:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    3028:	04020003 	streq	r0, [r2], #-3
    302c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3030:	05052501 	streq	r2, [r5, #-1281]	; 0xfffffaff
    3034:	03040200 	movweq	r0, #16896	; 0x4200
    3038:	17051d06 	strne	r1, [r5, -r6, lsl #26]
    303c:	03040200 	movweq	r0, #16896	; 0x4200
    3040:	18050106 	stmdane	r5, {r1, r2, r8}
    3044:	03040200 	movweq	r0, #16896	; 0x4200
    3048:	0017052c 	andseq	r0, r7, ip, lsr #10
    304c:	22030402 	andcs	r0, r3, #33554432	; 0x2000000
    3050:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3054:	2f060304 	svccs	0x00060304
    3058:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    305c:	000f0304 	andeq	r0, pc, r4, lsl #6
    3060:	06030402 	streq	r0, [r3], -r2, lsl #8
    3064:	00010201 	andeq	r0, r1, r1, lsl #4
    3068:	Address 0x0000000000003068 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
    gpio_write_bit( bank,pin,1-onState);
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
{
  14:	00000000 	andeq	r0, r0, r0
    gpio_write_bit( bank,pin,1-onState);
  18:	08000132 	stmdaeq	r0, {r1, r4, r5, r8}
    while (count-- > 0)
  1c:	00000002 	andeq	r0, r0, r2
}
  20:	0000000c 	andeq	r0, r0, ip
        for (c = rate; c > 0; c--)
  24:	00000000 	andeq	r0, r0, r0
  28:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
        gpio_write_bit( bank,pin,onState);
  2c:	0000000a 	andeq	r0, r0, sl
  30:	0000000c 	andeq	r0, r0, ip
        for (c = rate; c > 0; c--)
  34:	00000000 	andeq	r0, r0, r0
        gpio_write_bit( bank,pin,1-onState);
  38:	08000140 	stmdaeq	r0, {r6, r8}
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
        for (c = rate; c > 0; c--)
  48:	08000158 	stmdaeq	r0, {r3, r4, r6, r8}
            asm volatile("nop");
  4c:	0000000c 	andeq	r0, r0, ip
        for (c = rate; c > 0; c--)
  50:	0000001c 	andeq	r0, r0, ip, lsl r0
__RESETFAULTMASK:
  54:	00000000 	andeq	r0, r0, r0
__SETFAULTMASK:
  58:	08000164 	stmdaeq	r0, {r2, r5, r6, r8}
__READ_FAULTMASK:
  5c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
__BASEPRICONFIG:
  60:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf

  64:	02018e02 	andeq	r8, r1, #2, 28
__GetBASEPRI:
  68:	0ec4ce47 	cdpeq	14, 12, cr12, cr4, cr7, {2}

  6c:	00000000 	andeq	r0, r0, r0
  REV16 r0, r0
  70:	0000000c 	andeq	r0, r0, ip

  74:	00000000 	andeq	r0, r0, r0
  78:	08000214 	stmdaeq	r0, {r2, r4, r9}
  7c:	0000000c 	andeq	r0, r0, ip
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
  80:	0000000c 	andeq	r0, r0, ip
  84:	00000000 	andeq	r0, r0, r0
  88:	08000220 	stmdaeq	r0, {r5, r9}
}
  8c:	0000000c 	andeq	r0, r0, ip
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
  90:	0000000c 	andeq	r0, r0, ip
  94:	00000000 	andeq	r0, r0, r0
  98:	0800022c 	stmdaeq	r0, {r2, r3, r5, r9}
  9c:	00000020 	andeq	r0, r0, r0, lsr #32
  a0:	0000000c 	andeq	r0, r0, ip
}
  a4:	00000000 	andeq	r0, r0, r0
  a8:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
  ac:	0000000c 	andeq	r0, r0, ip
  b0:	00000018 	andeq	r0, r0, r8, lsl r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
  bc:	00000074 	andeq	r0, r0, r4, ror r0
  c0:	83100e41 	tsthi	r0, #1040	; 0x410
  c4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
  c8:	00018e02 	andeq	r8, r1, r2, lsl #28
  cc:	00000014 	andeq	r0, r0, r4, lsl r0
  d0:	00000000 	andeq	r0, r0, r0
  d4:	080002cc 	stmdaeq	r0, {r2, r3, r6, r7, r9}
  d8:	00000024 	andeq	r0, r0, r4, lsr #32
  dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
  e0:	00018e02 	andeq	r8, r1, r2, lsl #28
  e4:	0000000c 	andeq	r0, r0, ip
  e8:	00000000 	andeq	r0, r0, r0
  ec:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
  f0:	00000002 	andeq	r0, r0, r2
  f4:	0000000c 	andeq	r0, r0, ip
  f8:	00000000 	andeq	r0, r0, r0
  fc:	080002f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9}
 100:	00000002 	andeq	r0, r0, r2
 104:	0000000c 	andeq	r0, r0, ip
 108:	00000000 	andeq	r0, r0, r0
 10c:	080002f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9}
 110:	00000002 	andeq	r0, r0, r2
 114:	0000000c 	andeq	r0, r0, ip
 118:	00000000 	andeq	r0, r0, r0
 11c:	080002f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9}
 120:	00000002 	andeq	r0, r0, r2
 124:	0000000c 	andeq	r0, r0, ip
 128:	00000000 	andeq	r0, r0, r0
 12c:	080002f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9}
 130:	00000002 	andeq	r0, r0, r2
 134:	0000000c 	andeq	r0, r0, ip
 138:	00000000 	andeq	r0, r0, r0
 13c:	080002fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9}
 140:	00000002 	andeq	r0, r0, r2
 144:	0000000c 	andeq	r0, r0, ip
 148:	00000000 	andeq	r0, r0, r0
 14c:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
 150:	00000002 	andeq	r0, r0, r2
 154:	0000000c 	andeq	r0, r0, ip
 158:	00000000 	andeq	r0, r0, r0
 15c:	080002fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9}
 160:	00000002 	andeq	r0, r0, r2
 164:	0000000c 	andeq	r0, r0, ip
 168:	00000000 	andeq	r0, r0, r0
 16c:	08000300 	stmdaeq	r0, {r8, r9}
 170:	00000002 	andeq	r0, r0, r2
 174:	00000024 	andeq	r0, r0, r4, lsr #32
 178:	00000000 	andeq	r0, r0, r0
 17c:	08000304 	stmdaeq	r0, {r2, r8, r9}
 180:	00000084 	andeq	r0, r0, r4, lsl #1
 184:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
 188:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 18c:	0e0a7001 	cdpeq	0, 0, cr7, cr10, cr1, {0}
 190:	c5ce420c 	strbgt	r4, [lr, #524]	; 0x20c
 194:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
 198:	0000000b 	andeq	r0, r0, fp
 19c:	0000000c 	andeq	r0, r0, ip
	...
 1a8:	00000004 	andeq	r0, r0, r4
 1ac:	0000000c 	andeq	r0, r0, ip
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	08000388 	stmdaeq	r0, {r3, r7, r8, r9}
 1b8:	00000020 	andeq	r0, r0, r0, lsr #32
 1bc:	0000000c 	andeq	r0, r0, ip
 1c0:	00000000 	andeq	r0, r0, r0
 1c4:	080003a8 	stmdaeq	r0, {r3, r5, r7, r8, r9}
 1c8:	00000020 	andeq	r0, r0, r0, lsr #32
 1cc:	00000014 	andeq	r0, r0, r4, lsl r0
 1d0:	00000000 	andeq	r0, r0, r0
 1d4:	080003c8 	stmdaeq	r0, {r3, r6, r7, r8, r9}
 1d8:	00000088 	andeq	r0, r0, r8, lsl #1
 1dc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 1e0:	00018e02 	andeq	r8, r1, r2, lsl #28
 1e4:	0000000c 	andeq	r0, r0, ip
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	08000450 	stmdaeq	r0, {r4, r6, sl}
 1f0:	00000028 	andeq	r0, r0, r8, lsr #32
 1f4:	0000000c 	andeq	r0, r0, ip
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	08000478 	stmdaeq	r0, {r3, r4, r5, r6, sl}
 200:	0000001c 	andeq	r0, r0, ip, lsl r0
 204:	0000000c 	andeq	r0, r0, ip
 208:	00000000 	andeq	r0, r0, r0
 20c:	08000494 	stmdaeq	r0, {r2, r4, r7, sl}
 210:	00000004 	andeq	r0, r0, r4
 214:	00000014 	andeq	r0, r0, r4, lsl r0
 218:	00000000 	andeq	r0, r0, r0
 21c:	08000498 	stmdaeq	r0, {r3, r4, r7, sl}
 220:	00000024 	andeq	r0, r0, r4, lsr #32
 224:	8e100e42 	cdphi	14, 1, cr0, cr0, cr2, {2}
 228:	040e4e01 	streq	r4, [lr], #-3585	; 0xfffff1ff
 22c:	00000014 	andeq	r0, r0, r4, lsl r0
 230:	00000000 	andeq	r0, r0, r0
 234:	080004bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl}
 238:	00000040 	andeq	r0, r0, r0, asr #32
 23c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 240:	00018e02 	andeq	r8, r1, r2, lsl #28
 244:	00000014 	andeq	r0, r0, r4, lsl r0
 248:	00000000 	andeq	r0, r0, r0
 24c:	080004fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl}
 250:	00000022 	andeq	r0, r0, r2, lsr #32
 254:	8e100e42 	cdphi	14, 1, cr0, cr0, cr2, {2}
 258:	040e4d01 	streq	r4, [lr], #-3329	; 0xfffff2ff
 25c:	00000024 	andeq	r0, r0, r4, lsr #32
 260:	00000000 	andeq	r0, r0, r0
 264:	08000520 	stmdaeq	r0, {r5, r8, sl}
 268:	000000cc 	andeq	r0, r0, ip, asr #1
 26c:	83100e42 	tsthi	r0, #1056	; 0x420
 270:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 274:	02018e02 	andeq	r8, r1, #2, 28
 278:	c5ce0a56 	strbgt	r0, [lr, #2646]	; 0xa56
 27c:	000ec3c4 	andeq	ip, lr, r4, asr #7
 280:	00000b42 	andeq	r0, r0, r2, asr #22
 284:	0000000c 	andeq	r0, r0, ip
 288:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 28c:	7c020001 	stcvc	0, cr0, [r2], {1}
 290:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 294:	00000018 	andeq	r0, r0, r8, lsl r0
 298:	00000284 	andeq	r0, r0, r4, lsl #5
 29c:	080005ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl}
 2a0:	00000088 	andeq	r0, r0, r8, lsl #1
 2a4:	83100e41 	tsthi	r0, #1040	; 0x410
 2a8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 2ac:	00018e02 	andeq	r8, r1, r2, lsl #28
 2b0:	0000000c 	andeq	r0, r0, ip
 2b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2b8:	7c020001 	stcvc	0, cr0, [r2], {1}
 2bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2c0:	0000000c 	andeq	r0, r0, ip
 2c4:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 2c8:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
 2cc:	00000014 	andeq	r0, r0, r4, lsl r0
 2d0:	0000000c 	andeq	r0, r0, ip
 2d4:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 2d8:	00000000 	andeq	r0, r0, r0
 2dc:	00000010 	andeq	r0, r0, r0, lsl r0
 2e0:	0000000c 	andeq	r0, r0, ip
 2e4:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 2e8:	08000688 	stmdaeq	r0, {r3, r7, r9, sl}
 2ec:	00000004 	andeq	r0, r0, r4
 2f0:	00000020 	andeq	r0, r0, r0, lsr #32
 2f4:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000052 	andeq	r0, r0, r2, asr r0
 300:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
 304:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
 308:	87058606 	strhi	r8, [r5, -r6, lsl #12]
 30c:	89038804 	stmdbhi	r3, {r2, fp, pc}
 310:	00018e02 	andeq	r8, r1, r2, lsl #28
 314:	0000000c 	andeq	r0, r0, ip
 318:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 31c:	0800068c 	stmdaeq	r0, {r2, r3, r7, r9, sl}
 320:	0000003c 	andeq	r0, r0, ip, lsr r0
 324:	0000000c 	andeq	r0, r0, ip
 328:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 32c:	080006c8 	stmdaeq	r0, {r3, r6, r7, r9, sl}
 330:	0000005c 	andeq	r0, r0, ip, asr r0
 334:	0000000c 	andeq	r0, r0, ip
 338:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 33c:	08000724 	stmdaeq	r0, {r2, r5, r8, r9, sl}
 340:	00000002 	andeq	r0, r0, r2
 344:	0000000c 	andeq	r0, r0, ip
 348:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 34c:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
 350:	0000001c 	andeq	r0, r0, ip, lsl r0
 354:	0000000c 	andeq	r0, r0, ip
 358:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 35c:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
 360:	00000014 	andeq	r0, r0, r4, lsl r0
 364:	0000000c 	andeq	r0, r0, ip
 368:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 36c:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
 370:	00000012 	andeq	r0, r0, r2, lsl r0
 374:	0000000c 	andeq	r0, r0, ip
 378:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 37c:	0800076c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl}
 380:	00000030 	andeq	r0, r0, r0, lsr r0
 384:	00000014 	andeq	r0, r0, r4, lsl r0
 388:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 38c:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
 390:	00000048 	andeq	r0, r0, r8, asr #32
 394:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
 398:	00018e02 	andeq	r8, r1, r2, lsl #28
 39c:	00000018 	andeq	r0, r0, r8, lsl r0
 3a0:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 3a4:	080007e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl}
 3a8:	0000006c 	andeq	r0, r0, ip, rrx
 3ac:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
 3b0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 3b4:	00000001 	andeq	r0, r0, r1
 3b8:	0000000c 	andeq	r0, r0, ip
 3bc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 3c0:	08000850 	stmdaeq	r0, {r4, r6, fp}
 3c4:	00000024 	andeq	r0, r0, r4, lsr #32
 3c8:	00000018 	andeq	r0, r0, r8, lsl r0
 3cc:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 3d0:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
 3d4:	00000028 	andeq	r0, r0, r8, lsr #32
 3d8:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 3dc:	4e018e02 	cdpmi	14, 0, cr8, cr1, cr2, {0}
 3e0:	000ec4ce 	andeq	ip, lr, lr, asr #9
 3e4:	0000000c 	andeq	r0, r0, ip
 3e8:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 3ec:	0800089c 	stmdaeq	r0, {r2, r3, r4, r7, fp}
 3f0:	00000014 	andeq	r0, r0, r4, lsl r0
 3f4:	0000000c 	andeq	r0, r0, ip
 3f8:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 3fc:	080008b0 	stmdaeq	r0, {r4, r5, r7, fp}
 400:	00000028 	andeq	r0, r0, r8, lsr #32
 404:	00000018 	andeq	r0, r0, r8, lsl r0
 408:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 40c:	00000000 	andeq	r0, r0, r0
 410:	00000030 	andeq	r0, r0, r0, lsr r0
 414:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 418:	86038504 	strhi	r8, [r3], -r4, lsl #10
 41c:	00018e02 	andeq	r8, r1, r2, lsl #28
 420:	00000018 	andeq	r0, r0, r8, lsl r0
 424:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 428:	080008d8 	stmdaeq	r0, {r3, r4, r6, r7, fp}
 42c:	00000048 	andeq	r0, r0, r8, asr #32
 430:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 434:	60018e02 	andvs	r8, r1, r2, lsl #28
 438:	0000080e 	andeq	r0, r0, lr, lsl #16
 43c:	0000000c 	andeq	r0, r0, ip
 440:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 444:	08000920 	stmdaeq	r0, {r5, r8, fp}
 448:	0000000c 	andeq	r0, r0, ip
 44c:	0000000c 	andeq	r0, r0, ip
 450:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 454:	0800092c 	stmdaeq	r0, {r2, r3, r5, r8, fp}
 458:	00000018 	andeq	r0, r0, r8, lsl r0
 45c:	0000000c 	andeq	r0, r0, ip
 460:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 464:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
 468:	00000012 	andeq	r0, r0, r2, lsl r0
 46c:	0000000c 	andeq	r0, r0, ip
 470:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 474:	08000958 	stmdaeq	r0, {r3, r4, r6, r8, fp}
 478:	00000014 	andeq	r0, r0, r4, lsl r0
 47c:	0000000c 	andeq	r0, r0, ip
 480:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 484:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
 488:	00000018 	andeq	r0, r0, r8, lsl r0
 48c:	0000000c 	andeq	r0, r0, ip
 490:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 494:	7c020001 	stcvc	0, cr0, [r2], {1}
 498:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 49c:	0000000c 	andeq	r0, r0, ip
 4a0:	0000048c 	andeq	r0, r0, ip, lsl #9
 4a4:	08000984 	stmdaeq	r0, {r2, r7, r8, fp}
 4a8:	0000005c 	andeq	r0, r0, ip, asr r0
 4ac:	00000024 	andeq	r0, r0, r4, lsr #32
 4b0:	0000048c 	andeq	r0, r0, ip, lsl #9
 4b4:	080009e0 	stmdaeq	r0, {r5, r6, r7, r8, fp}
 4b8:	00000044 	andeq	r0, r0, r4, asr #32
 4bc:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 4c0:	4e018e02 	cdpmi	14, 0, cr8, cr1, cr2, {0}
 4c4:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 4c8:	480b4200 	stmdami	fp, {r9, lr}
 4cc:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 4d0:	000b4200 	andeq	r4, fp, r0, lsl #4
 4d4:	0000000c 	andeq	r0, r0, ip
 4d8:	0000048c 	andeq	r0, r0, ip, lsl #9
 4dc:	00000000 	andeq	r0, r0, r0
 4e0:	00000002 	andeq	r0, r0, r2
 4e4:	0000000c 	andeq	r0, r0, ip
 4e8:	0000048c 	andeq	r0, r0, ip, lsl #9
 4ec:	08000a24 	stmdaeq	r0, {r2, r5, r9, fp}
 4f0:	00000018 	andeq	r0, r0, r8, lsl r0
 4f4:	0000000c 	andeq	r0, r0, ip
 4f8:	0000048c 	andeq	r0, r0, ip, lsl #9
 4fc:	08000a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp}
 500:	00000018 	andeq	r0, r0, r8, lsl r0
 504:	0000000c 	andeq	r0, r0, ip
 508:	0000048c 	andeq	r0, r0, ip, lsl #9
 50c:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
 510:	00000028 	andeq	r0, r0, r8, lsr #32
 514:	0000000c 	andeq	r0, r0, ip
 518:	0000048c 	andeq	r0, r0, ip, lsl #9
 51c:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
 520:	00000030 	andeq	r0, r0, r0, lsr r0
 524:	0000001c 	andeq	r0, r0, ip, lsl r0
 528:	0000048c 	andeq	r0, r0, ip, lsl #9
 52c:	08000aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp}
 530:	00000064 	andeq	r0, r0, r4, rrx
 534:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
 538:	86058506 	strhi	r8, [r5], -r6, lsl #10
 53c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
 540:	00018e02 	andeq	r8, r1, r2, lsl #28
 544:	0000001c 	andeq	r0, r0, ip, lsl r0
 548:	0000048c 	andeq	r0, r0, ip, lsl #9
 54c:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
 550:	00000234 	andeq	r0, r0, r4, lsr r2
 554:	83180e44 	tsthi	r8, #68, 28	; 0x440
 558:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 55c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 560:	00018e02 	andeq	r8, r1, r2, lsl #28
 564:	0000000c 	andeq	r0, r0, ip
 568:	0000048c 	andeq	r0, r0, ip, lsl #9
 56c:	00000000 	andeq	r0, r0, r0
 570:	0000000c 	andeq	r0, r0, ip
 574:	0000000c 	andeq	r0, r0, ip
 578:	0000048c 	andeq	r0, r0, ip, lsl #9
 57c:	00000000 	andeq	r0, r0, r0
 580:	0000000c 	andeq	r0, r0, ip
 584:	0000000c 	andeq	r0, r0, ip
 588:	0000048c 	andeq	r0, r0, ip, lsl #9
 58c:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
 590:	0000000c 	andeq	r0, r0, ip
 594:	0000000c 	andeq	r0, r0, ip
 598:	0000048c 	andeq	r0, r0, ip, lsl #9
 59c:	08000d50 	stmdaeq	r0, {r4, r6, r8, sl, fp}
 5a0:	00000004 	andeq	r0, r0, r4
 5a4:	0000000c 	andeq	r0, r0, ip
 5a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 5ac:	7c020001 	stcvc	0, cr0, [r2], {1}
 5b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 5b4:	0000000c 	andeq	r0, r0, ip
 5b8:	000005a4 	andeq	r0, r0, r4, lsr #11
 5bc:	00000000 	andeq	r0, r0, r0
 5c0:	0000000c 	andeq	r0, r0, ip
 5c4:	0000000c 	andeq	r0, r0, ip
 5c8:	000005a4 	andeq	r0, r0, r4, lsr #11
 5cc:	00000000 	andeq	r0, r0, r0
 5d0:	00000010 	andeq	r0, r0, r0, lsl r0
 5d4:	0000000c 	andeq	r0, r0, ip
 5d8:	000005a4 	andeq	r0, r0, r4, lsr #11
 5dc:	00000000 	andeq	r0, r0, r0
 5e0:	0000000c 	andeq	r0, r0, ip
 5e4:	0000000c 	andeq	r0, r0, ip
 5e8:	000005a4 	andeq	r0, r0, r4, lsr #11
 5ec:	00000000 	andeq	r0, r0, r0
 5f0:	00000010 	andeq	r0, r0, r0, lsl r0
 5f4:	0000000c 	andeq	r0, r0, ip
 5f8:	000005a4 	andeq	r0, r0, r4, lsr #11
 5fc:	00000000 	andeq	r0, r0, r0
 600:	00000010 	andeq	r0, r0, r0, lsl r0
 604:	0000000c 	andeq	r0, r0, ip
 608:	000005a4 	andeq	r0, r0, r4, lsr #11
 60c:	00000000 	andeq	r0, r0, r0
 610:	0000000c 	andeq	r0, r0, ip
 614:	0000000c 	andeq	r0, r0, ip
 618:	000005a4 	andeq	r0, r0, r4, lsr #11
 61c:	00000000 	andeq	r0, r0, r0
 620:	00000010 	andeq	r0, r0, r0, lsl r0
 624:	0000000c 	andeq	r0, r0, ip
 628:	000005a4 	andeq	r0, r0, r4, lsr #11
 62c:	00000000 	andeq	r0, r0, r0
 630:	00000014 	andeq	r0, r0, r4, lsl r0
 634:	0000000c 	andeq	r0, r0, ip
 638:	000005a4 	andeq	r0, r0, r4, lsr #11
 63c:	00000000 	andeq	r0, r0, r0
 640:	00000010 	andeq	r0, r0, r0, lsl r0
 644:	0000000c 	andeq	r0, r0, ip
 648:	000005a4 	andeq	r0, r0, r4, lsr #11
 64c:	00000000 	andeq	r0, r0, r0
 650:	0000000e 	andeq	r0, r0, lr
 654:	0000000c 	andeq	r0, r0, ip
 658:	000005a4 	andeq	r0, r0, r4, lsr #11
 65c:	00000000 	andeq	r0, r0, r0
 660:	00000010 	andeq	r0, r0, r0, lsl r0
 664:	0000000c 	andeq	r0, r0, ip
 668:	000005a4 	andeq	r0, r0, r4, lsr #11
 66c:	00000000 	andeq	r0, r0, r0
 670:	0000001c 	andeq	r0, r0, ip, lsl r0
 674:	0000000c 	andeq	r0, r0, ip
 678:	000005a4 	andeq	r0, r0, r4, lsr #11
 67c:	00000000 	andeq	r0, r0, r0
 680:	00000012 	andeq	r0, r0, r2, lsl r0
 684:	0000000c 	andeq	r0, r0, ip
 688:	000005a4 	andeq	r0, r0, r4, lsr #11
 68c:	08000d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp}
 690:	0000002a 	andeq	r0, r0, sl, lsr #32
 694:	0000000c 	andeq	r0, r0, ip
 698:	000005a4 	andeq	r0, r0, r4, lsr #11
 69c:	00000000 	andeq	r0, r0, r0
 6a0:	0000002a 	andeq	r0, r0, sl, lsr #32
 6a4:	0000000c 	andeq	r0, r0, ip
 6a8:	000005a4 	andeq	r0, r0, r4, lsr #11
 6ac:	00000000 	andeq	r0, r0, r0
 6b0:	00000026 	andeq	r0, r0, r6, lsr #32
 6b4:	0000000c 	andeq	r0, r0, ip
 6b8:	000005a4 	andeq	r0, r0, r4, lsr #11
 6bc:	00000000 	andeq	r0, r0, r0
 6c0:	00000012 	andeq	r0, r0, r2, lsl r0
 6c4:	0000000c 	andeq	r0, r0, ip
 6c8:	000005a4 	andeq	r0, r0, r4, lsr #11
 6cc:	00000000 	andeq	r0, r0, r0
 6d0:	00000012 	andeq	r0, r0, r2, lsl r0
 6d4:	0000000c 	andeq	r0, r0, ip
 6d8:	000005a4 	andeq	r0, r0, r4, lsr #11
 6dc:	00000000 	andeq	r0, r0, r0
 6e0:	0000001e 	andeq	r0, r0, lr, lsl r0
 6e4:	0000000c 	andeq	r0, r0, ip
 6e8:	000005a4 	andeq	r0, r0, r4, lsr #11
 6ec:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
 6f0:	0000001e 	andeq	r0, r0, lr, lsl r0
 6f4:	0000000c 	andeq	r0, r0, ip
 6f8:	000005a4 	andeq	r0, r0, r4, lsr #11
 6fc:	00000000 	andeq	r0, r0, r0
 700:	0000001e 	andeq	r0, r0, lr, lsl r0
 704:	0000000c 	andeq	r0, r0, ip
 708:	000005a4 	andeq	r0, r0, r4, lsr #11
 70c:	08000d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp}
 710:	0000001c 	andeq	r0, r0, ip, lsl r0
 714:	0000000c 	andeq	r0, r0, ip
 718:	000005a4 	andeq	r0, r0, r4, lsr #11
 71c:	08000db8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, fp}
 720:	00000004 	andeq	r0, r0, r4
 724:	0000000c 	andeq	r0, r0, ip
 728:	000005a4 	andeq	r0, r0, r4, lsr #11
 72c:	00000000 	andeq	r0, r0, r0
 730:	00000004 	andeq	r0, r0, r4
 734:	0000000c 	andeq	r0, r0, ip
 738:	000005a4 	andeq	r0, r0, r4, lsr #11
 73c:	00000000 	andeq	r0, r0, r0
 740:	00000004 	andeq	r0, r0, r4
 744:	0000000c 	andeq	r0, r0, ip
 748:	000005a4 	andeq	r0, r0, r4, lsr #11
 74c:	00000000 	andeq	r0, r0, r0
 750:	00000004 	andeq	r0, r0, r4
 754:	0000000c 	andeq	r0, r0, ip
 758:	000005a4 	andeq	r0, r0, r4, lsr #11
 75c:	00000000 	andeq	r0, r0, r0
 760:	0000001a 	andeq	r0, r0, sl, lsl r0
 764:	0000000c 	andeq	r0, r0, ip
 768:	000005a4 	andeq	r0, r0, r4, lsr #11
 76c:	00000000 	andeq	r0, r0, r0
 770:	0000001a 	andeq	r0, r0, sl, lsl r0
 774:	0000000c 	andeq	r0, r0, ip
 778:	000005a4 	andeq	r0, r0, r4, lsr #11
 77c:	00000000 	andeq	r0, r0, r0
 780:	00000018 	andeq	r0, r0, r8, lsl r0
 784:	0000000c 	andeq	r0, r0, ip
 788:	000005a4 	andeq	r0, r0, r4, lsr #11
 78c:	00000000 	andeq	r0, r0, r0
 790:	0000001c 	andeq	r0, r0, ip, lsl r0
 794:	0000000c 	andeq	r0, r0, ip
 798:	000005a4 	andeq	r0, r0, r4, lsr #11
 79c:	00000000 	andeq	r0, r0, r0
 7a0:	00000020 	andeq	r0, r0, r0, lsr #32
 7a4:	0000000c 	andeq	r0, r0, ip
 7a8:	000005a4 	andeq	r0, r0, r4, lsr #11
 7ac:	00000000 	andeq	r0, r0, r0
 7b0:	00000020 	andeq	r0, r0, r0, lsr #32
 7b4:	0000000c 	andeq	r0, r0, ip
 7b8:	000005a4 	andeq	r0, r0, r4, lsr #11
 7bc:	08000dbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, fp}
 7c0:	00000026 	andeq	r0, r0, r6, lsr #32
 7c4:	0000000c 	andeq	r0, r0, ip
 7c8:	000005a4 	andeq	r0, r0, r4, lsr #11
 7cc:	08000de2 	stmdaeq	r0, {r1, r5, r6, r7, r8, sl, fp}
 7d0:	00000026 	andeq	r0, r0, r6, lsr #32
 7d4:	0000000c 	andeq	r0, r0, ip
 7d8:	000005a4 	andeq	r0, r0, r4, lsr #11
 7dc:	00000000 	andeq	r0, r0, r0
 7e0:	0000001e 	andeq	r0, r0, lr, lsl r0
 7e4:	0000000c 	andeq	r0, r0, ip
 7e8:	000005a4 	andeq	r0, r0, r4, lsr #11
 7ec:	00000000 	andeq	r0, r0, r0
 7f0:	00000012 	andeq	r0, r0, r2, lsl r0
 7f4:	0000000c 	andeq	r0, r0, ip
 7f8:	000005a4 	andeq	r0, r0, r4, lsr #11
 7fc:	00000000 	andeq	r0, r0, r0
 800:	00000024 	andeq	r0, r0, r4, lsr #32
 804:	0000000c 	andeq	r0, r0, ip
 808:	000005a4 	andeq	r0, r0, r4, lsr #11
 80c:	00000000 	andeq	r0, r0, r0
 810:	00000024 	andeq	r0, r0, r4, lsr #32
 814:	0000000c 	andeq	r0, r0, ip
 818:	000005a4 	andeq	r0, r0, r4, lsr #11
 81c:	08000e08 	stmdaeq	r0, {r3, r9, sl, fp}
 820:	00000020 	andeq	r0, r0, r0, lsr #32
 824:	0000000c 	andeq	r0, r0, ip
 828:	000005a4 	andeq	r0, r0, r4, lsr #11
 82c:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
 830:	00000020 	andeq	r0, r0, r0, lsr #32
 834:	0000000c 	andeq	r0, r0, ip
 838:	000005a4 	andeq	r0, r0, r4, lsr #11
 83c:	08000e48 	stmdaeq	r0, {r3, r6, r9, sl, fp}
 840:	00000020 	andeq	r0, r0, r0, lsr #32
 844:	0000000c 	andeq	r0, r0, ip
 848:	000005a4 	andeq	r0, r0, r4, lsr #11
 84c:	00000000 	andeq	r0, r0, r0
 850:	00000026 	andeq	r0, r0, r6, lsr #32
 854:	0000000c 	andeq	r0, r0, ip
 858:	000005a4 	andeq	r0, r0, r4, lsr #11
 85c:	08000e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp}
 860:	00000044 	andeq	r0, r0, r4, asr #32
 864:	0000000c 	andeq	r0, r0, ip
 868:	000005a4 	andeq	r0, r0, r4, lsr #11
 86c:	00000000 	andeq	r0, r0, r0
 870:	00000024 	andeq	r0, r0, r4, lsr #32
 874:	0000000c 	andeq	r0, r0, ip
 878:	000005a4 	andeq	r0, r0, r4, lsr #11
 87c:	00000000 	andeq	r0, r0, r0
 880:	00000024 	andeq	r0, r0, r4, lsr #32
 884:	00000014 	andeq	r0, r0, r4, lsl r0
 888:	000005a4 	andeq	r0, r0, r4, lsr #11
 88c:	00000000 	andeq	r0, r0, r0
 890:	00000040 	andeq	r0, r0, r0, asr #32
 894:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 898:	00018e02 	andeq	r8, r1, r2, lsl #28
 89c:	0000000c 	andeq	r0, r0, ip
 8a0:	000005a4 	andeq	r0, r0, r4, lsr #11
 8a4:	00000000 	andeq	r0, r0, r0
 8a8:	00000004 	andeq	r0, r0, r4
 8ac:	0000000c 	andeq	r0, r0, ip
 8b0:	000005a4 	andeq	r0, r0, r4, lsr #11
 8b4:	00000000 	andeq	r0, r0, r0
 8b8:	00000004 	andeq	r0, r0, r4
 8bc:	0000000c 	andeq	r0, r0, ip
 8c0:	000005a4 	andeq	r0, r0, r4, lsr #11
 8c4:	00000000 	andeq	r0, r0, r0
 8c8:	00000004 	andeq	r0, r0, r4
 8cc:	0000000c 	andeq	r0, r0, ip
 8d0:	000005a4 	andeq	r0, r0, r4, lsr #11
 8d4:	00000000 	andeq	r0, r0, r0
 8d8:	00000004 	andeq	r0, r0, r4
 8dc:	00000014 	andeq	r0, r0, r4, lsl r0
 8e0:	000005a4 	andeq	r0, r0, r4, lsr #11
 8e4:	00000000 	andeq	r0, r0, r0
 8e8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
 8ec:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 8f0:	00018e02 	andeq	r8, r1, r2, lsl #28
 8f4:	0000000c 	andeq	r0, r0, ip
 8f8:	000005a4 	andeq	r0, r0, r4, lsr #11
 8fc:	00000000 	andeq	r0, r0, r0
 900:	00000060 	andeq	r0, r0, r0, rrx
 904:	0000000c 	andeq	r0, r0, ip
 908:	000005a4 	andeq	r0, r0, r4, lsr #11
 90c:	00000000 	andeq	r0, r0, r0
 910:	00000060 	andeq	r0, r0, r0, rrx
 914:	0000000c 	andeq	r0, r0, ip
 918:	000005a4 	andeq	r0, r0, r4, lsr #11
 91c:	00000000 	andeq	r0, r0, r0
 920:	00000004 	andeq	r0, r0, r4
 924:	0000000c 	andeq	r0, r0, ip
 928:	000005a4 	andeq	r0, r0, r4, lsr #11
 92c:	00000000 	andeq	r0, r0, r0
 930:	00000004 	andeq	r0, r0, r4
 934:	00000014 	andeq	r0, r0, r4, lsl r0
 938:	000005a4 	andeq	r0, r0, r4, lsr #11
 93c:	00000000 	andeq	r0, r0, r0
 940:	0000004c 	andeq	r0, r0, ip, asr #32
 944:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 948:	00018e02 	andeq	r8, r1, r2, lsl #28
 94c:	0000000c 	andeq	r0, r0, ip
 950:	000005a4 	andeq	r0, r0, r4, lsr #11
 954:	00000000 	andeq	r0, r0, r0
 958:	00000046 	andeq	r0, r0, r6, asr #32
 95c:	0000000c 	andeq	r0, r0, ip
 960:	000005a4 	andeq	r0, r0, r4, lsr #11
 964:	00000000 	andeq	r0, r0, r0
 968:	00000006 	andeq	r0, r0, r6
 96c:	0000000c 	andeq	r0, r0, ip
 970:	000005a4 	andeq	r0, r0, r4, lsr #11
 974:	00000000 	andeq	r0, r0, r0
 978:	00000006 	andeq	r0, r0, r6
 97c:	0000000c 	andeq	r0, r0, ip
 980:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 984:	7c020001 	stcvc	0, cr0, [r2], {1}
 988:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 98c:	0000001c 	andeq	r0, r0, ip, lsl r0
 990:	0000097c 	andeq	r0, r0, ip, ror r9
 994:	08000eac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sl, fp}
 998:	00000194 	muleq	r0, r4, r1
 99c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
 9a0:	86058506 	strhi	r8, [r5], -r6, lsl #10
 9a4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
 9a8:	00018e02 	andeq	r8, r1, r2, lsl #28
 9ac:	00000018 	andeq	r0, r0, r8, lsl r0
 9b0:	0000097c 	andeq	r0, r0, ip, ror r9
 9b4:	00000000 	andeq	r0, r0, r0
 9b8:	00000080 	andeq	r0, r0, r0, lsl #1
 9bc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 9c0:	86038504 	strhi	r8, [r3], -r4, lsl #10
 9c4:	00018e02 	andeq	r8, r1, r2, lsl #28
 9c8:	0000000c 	andeq	r0, r0, ip
 9cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 9d0:	7c020001 	stcvc	0, cr0, [r2], {1}
 9d4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 9d8:	0000000c 	andeq	r0, r0, ip
 9dc:	000009c8 	andeq	r0, r0, r8, asr #19
 9e0:	08001040 	stmdaeq	r0, {r6, ip}
 9e4:	00000034 	andeq	r0, r0, r4, lsr r0
 9e8:	0000000c 	andeq	r0, r0, ip
 9ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 9f0:	7c020001 	stcvc	0, cr0, [r2], {1}
 9f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 9f8:	00000014 	andeq	r0, r0, r4, lsl r0
 9fc:	000009e8 	andeq	r0, r0, r8, ror #19
 a00:	08001074 	stmdaeq	r0, {r2, r4, r5, r6, ip}
 a04:	00000024 	andeq	r0, r0, r4, lsr #32
 a08:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 a0c:	00018e02 	andeq	r8, r1, r2, lsl #28
 a10:	00000014 	andeq	r0, r0, r4, lsl r0
 a14:	000009e8 	andeq	r0, r0, r8, ror #19
 a18:	08001098 	stmdaeq	r0, {r3, r4, r7, ip}
 a1c:	00000024 	andeq	r0, r0, r4, lsr #32
 a20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 a24:	00018e02 	andeq	r8, r1, r2, lsl #28
 a28:	00000014 	andeq	r0, r0, r4, lsl r0
 a2c:	000009e8 	andeq	r0, r0, r8, ror #19
 a30:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
 a34:	0000008c 	andeq	r0, r0, ip, lsl #1
 a38:	83080e41 	movwhi	r0, #36417	; 0x8e41
 a3c:	00018e02 	andeq	r8, r1, r2, lsl #28
 a40:	00000020 	andeq	r0, r0, r0, lsr #32
 a44:	000009e8 	andeq	r0, r0, r8, ror #19
 a48:	08001148 	stmdaeq	r0, {r3, r6, r8, ip}
 a4c:	000000ac 	andeq	r0, r0, ip, lsr #1
 a50:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
 a54:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
 a58:	87058606 	strhi	r8, [r5, -r6, lsl #12]
 a5c:	89038804 	stmdbhi	r3, {r2, fp, pc}
 a60:	00018e02 	andeq	r8, r1, r2, lsl #28
 a64:	00000014 	andeq	r0, r0, r4, lsl r0
 a68:	000009e8 	andeq	r0, r0, r8, ror #19
 a6c:	080011f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip}
 a70:	00000038 	andeq	r0, r0, r8, lsr r0
 a74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 a78:	00018e02 	andeq	r8, r1, r2, lsl #28
 a7c:	00000018 	andeq	r0, r0, r8, lsl r0
 a80:	000009e8 	andeq	r0, r0, r8, ror #19
 a84:	0800122c 	stmdaeq	r0, {r2, r3, r5, r9, ip}
 a88:	00000048 	andeq	r0, r0, r8, asr #32
 a8c:	83100e41 	tsthi	r0, #1040	; 0x410
 a90:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 a94:	00018e02 	andeq	r8, r1, r2, lsl #28
 a98:	00000018 	andeq	r0, r0, r8, lsl r0
 a9c:	000009e8 	andeq	r0, r0, r8, ror #19
 aa0:	08001274 	stmdaeq	r0, {r2, r4, r5, r6, r9, ip}
 aa4:	000000cc 	andeq	r0, r0, ip, asr #1
 aa8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 aac:	86038504 	strhi	r8, [r3], -r4, lsl #10
 ab0:	00018e02 	andeq	r8, r1, r2, lsl #28
 ab4:	00000018 	andeq	r0, r0, r8, lsl r0
 ab8:	000009e8 	andeq	r0, r0, r8, ror #19
 abc:	08001340 	stmdaeq	r0, {r6, r8, r9, ip}
 ac0:	0000007c 	andeq	r0, r0, ip, ror r0
 ac4:	83100e41 	tsthi	r0, #1040	; 0x410
 ac8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 acc:	00018e02 	andeq	r8, r1, r2, lsl #28
 ad0:	00000014 	andeq	r0, r0, r4, lsl r0
 ad4:	000009e8 	andeq	r0, r0, r8, ror #19
 ad8:	080013bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip}
 adc:	00000024 	andeq	r0, r0, r4, lsr #32
 ae0:	83080e41 	movwhi	r0, #36417	; 0x8e41
 ae4:	00018e02 	andeq	r8, r1, r2, lsl #28
 ae8:	00000014 	andeq	r0, r0, r4, lsl r0
 aec:	000009e8 	andeq	r0, r0, r8, ror #19
 af0:	080013e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, ip}
 af4:	0000001c 	andeq	r0, r0, ip, lsl r0
 af8:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 afc:	00018e02 	andeq	r8, r1, r2, lsl #28
 b00:	00000014 	andeq	r0, r0, r4, lsl r0
 b04:	000009e8 	andeq	r0, r0, r8, ror #19
 b08:	080013fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip}
 b0c:	00000040 	andeq	r0, r0, r0, asr #32
 b10:	83080e41 	movwhi	r0, #36417	; 0x8e41
 b14:	00018e02 	andeq	r8, r1, r2, lsl #28
 b18:	00000024 	andeq	r0, r0, r4, lsr #32
 b1c:	000009e8 	andeq	r0, r0, r8, ror #19
 b20:	0800143c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip}
 b24:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 b28:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
 b2c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 b30:	0af20201 	beq	ffc8133c <BootRAM+0xebf1add>
 b34:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
 b38:	000ec4c5 	andeq	ip, lr, r5, asr #9
 b3c:	00000b42 	andeq	r0, r0, r2, asr #22
 b40:	00000028 	andeq	r0, r0, r8, lsr #32
 b44:	000009e8 	andeq	r0, r0, r8, ror #19
 b48:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 b4c:	000000c4 	andeq	r0, r0, r4, asr #1
 b50:	83180e41 	tsthi	r8, #1040	; 0x410
 b54:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 b58:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 b5c:	79018e02 	stmdbvc	r1, {r1, r9, sl, fp, pc}
 b60:	c6c7ce0a 	strbgt	ip, [r7], sl, lsl #28
 b64:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
 b68:	000b4200 	andeq	r4, fp, r0, lsl #4
 b6c:	00000018 	andeq	r0, r0, r8, lsl r0
 b70:	000009e8 	andeq	r0, r0, r8, ror #19
 b74:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
 b78:	0000003c 	andeq	r0, r0, ip, lsr r0
 b7c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 b80:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 b84:	00000001 	andeq	r0, r0, r1
 b88:	0000001c 	andeq	r0, r0, ip, lsl r0
 b8c:	000009e8 	andeq	r0, r0, r8, ror #19
 b90:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
 b94:	0000005c 	andeq	r0, r0, ip, asr r0
 b98:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 b9c:	4f018e02 	svcmi	0x00018e02
 ba0:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
 ba4:	000b4200 	andeq	r4, fp, r0, lsl #4
 ba8:	0000000c 	andeq	r0, r0, ip
 bac:	000009e8 	andeq	r0, r0, r8, ror #19
 bb0:	00000000 	andeq	r0, r0, r0
 bb4:	00000002 	andeq	r0, r0, r2
 bb8:	0000000c 	andeq	r0, r0, ip
 bbc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 bc0:	7c020001 	stcvc	0, cr0, [r2], {1}
 bc4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 bc8:	0000000c 	andeq	r0, r0, ip
 bcc:	00000bb8 			; <UNDEFINED> instruction: 0x00000bb8
 bd0:	08001868 	stmdaeq	r0, {r3, r5, r6, fp, ip}
 bd4:	0000001e 	andeq	r0, r0, lr, lsl r0
 bd8:	0000000c 	andeq	r0, r0, ip
 bdc:	00000bb8 			; <UNDEFINED> instruction: 0x00000bb8
 be0:	08001886 	stmdaeq	r0, {r1, r2, r7, fp, ip}
 be4:	0000001e 	andeq	r0, r0, lr, lsl r0

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
       4:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
       8:	5f632f62 	svcpl	0x00632f62
    gpio_write_bit( bank,pin,1-onState);
       c:	796c6e6f 	stmdbvc	ip!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
      10:	6174735f 	cmnvs	r4, pc, asr r3
{
      14:	70757472 	rsbsvc	r7, r5, r2, ror r4
    gpio_write_bit( bank,pin,1-onState);
      18:	4500732e 	strmi	r7, [r0, #-814]	; 0xfffffcd2
    while (count-- > 0)
      1c:	72705c3a 	rsbsvc	r5, r0, #14848	; 0x3a00
}
      20:	626b5c6a 	rsbvs	r5, fp, #27136	; 0x6a00
        for (c = rate; c > 0; c--)
      24:	4d54535c 	ldclmi	3, cr5, [r4, #-368]	; 0xfffffe90
      28:	75643233 	strbvc	r3, [r4, #-563]!	; 0xfffffdcd
        gpio_write_bit( bank,pin,onState);
      2c:	2d6f6e69 	stclcs	14, cr6, [pc, #-420]!	; fffffe90 <BootRAM+0xef70631>
      30:	746f6f62 	strbtvc	r6, [pc], #-3938	; 38 <_Minimum_Stack_Size-0xc8>
        for (c = rate; c > 0; c--)
      34:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
        gpio_write_bit( bank,pin,1-onState);
      38:	47007265 	strmi	r7, [r0, -r5, ror #4]
      3c:	4120554e 			; <UNDEFINED> instruction: 0x4120554e
      40:	2e322053 	mrccs	0, 1, r2, cr2, cr3, {2}
      44:	2e003533 	mcrcs	5, 0, r3, cr0, cr3, {1}
        for (c = rate; c > 0; c--)
      48:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
            asm volatile("nop");
      4c:	6c5f3233 	lfmvs	f3, 2, [pc], {51}	; 0x33
        for (c = rate; c > 0; c--)
      50:	632f6269 			; <UNDEFINED> instruction: 0x632f6269
__RESETFAULTMASK:
      54:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
__SETFAULTMASK:
      58:	5f336d78 	svcpl	0x00336d78
__READ_FAULTMASK:
      5c:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
__BASEPRICONFIG:
      60:	00532e6f 	subseq	r2, r3, pc, ror #28

      64:	4349564e 	movtmi	r5, #38478	; 0x964e
__GetBASEPRI:
      68:	5152495f 	cmppl	r2, pc, asr r9

      6c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
  REV16 r0, r0
      70:	436c656e 	cmnmi	ip, #461373440	; 0x1b800000

      74:	7300646d 	movwvc	r6, #1133	; 0x46d
      78:	6e497274 	mcrvs	2, 2, r7, cr9, cr4, {3}
      7c:	00786564 	rsbseq	r6, r8, r4, ror #10
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      80:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
      84:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
      88:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
}
      8c:	64416563 	strbvs	r6, [r1], #-1379	; 0xfffffa9d
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      90:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
      94:	45700073 	ldrbmi	r0, [r0, #-115]!	; 0xffffff8d
      98:	746e4970 	strbtvc	r4, [lr], #-2416	; 0xfffff690
      9c:	004e495f 	subeq	r4, lr, pc, asr r9
      a0:	5645445f 			; <UNDEFINED> instruction: 0x5645445f
}
      a4:	5f454349 	svcpl	0x00454349
      a8:	4f464e49 	svcmi	0x00464e49
      ac:	65446200 	strbvs	r6, [r4, #-512]	; 0xfffffe00
      b0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
      b4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
      b8:	45520065 	ldrbmi	r0, [r2, #-101]	; 0xffffff9b
      bc:	454d5553 	strbmi	r5, [sp, #-1363]	; 0xfffffaad
      c0:	4941575f 	stmdbmi	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
      c4:	73550054 	cmpvc	r5, #84	; 0x54
      c8:	535f7265 	cmppl	pc, #1342177286	; 0x50000006
      cc:	6e457465 	cdpvs	4, 4, cr7, cr5, cr5, {3}
      d0:	696f5064 	stmdbvs	pc!, {r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
      d4:	6546746e 	strbvs	r7, [r6, #-1134]	; 0xfffffb92
      d8:	72757461 	rsbsvc	r7, r5, #1627389952	; 0x61000000
      dc:	73750065 	cmnvc	r5, #101	; 0x65
      e0:	61745362 	cmnvs	r4, r2, ror #6
      e4:	49737574 	ldmdbmi	r3!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
      e8:	6664006e 	strbtvs	r0, [r4], -lr, rrx
      ec:	696e4975 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r8, fp, lr}^
      f0:	6e4f0074 	mcrvs	0, 2, r0, cr15, cr4, {3}
      f4:	73654465 	cmnvc	r5, #1694498816	; 0x65000000
      f8:	70697263 	rsbvc	r7, r9, r3, ror #4
      fc:	00726f74 	rsbseq	r6, r2, r4, ror pc
     100:	53627375 	cmnpl	r2, #-738197503	; 0xd4000001
     104:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     108:	6200646e 	andvs	r6, r0, #1845493760	; 0x6e000000
     10c:	464f5345 	strbmi	r5, [pc], -r5, asr #6
     110:	00746e63 	rsbseq	r6, r4, r3, ror #28
     114:	52627375 	rsbpl	r7, r2, #-738197503	; 0xd4000001
     118:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
     11c:	55530065 	ldrbpl	r0, [r3, #-101]	; 0xffffff9b
     120:	4e455053 	mcrmi	0, 2, r5, cr5, cr3, {2}
     124:	00444544 	subeq	r4, r4, r4, asr #10
     128:	55534552 	ldrbpl	r4, [r3, #-1362]	; 0xfffffaae
     12c:	535f454d 	cmppl	pc, #322961408	; 0x13400000
     130:	54524154 	ldrbpl	r4, [r2], #-340	; 0xfffffeac
     134:	62737500 	rsbsvs	r7, r3, #0, 10
     138:	44746553 	ldrbtmi	r6, [r4], #-1363	; 0xfffffaad
     13c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     140:	61654665 	cmnvs	r5, r5, ror #12
     144:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
     148:	65735500 	ldrbvs	r5, [r3, #-1280]!	; 0xfffffb00
     14c:	65535f72 	ldrbvs	r5, [r3, #-3954]	; 0xfffff08e
     150:	746e4974 	strbtvc	r4, [lr], #-2420	; 0xfffff68c
     154:	61667265 	cmnvs	r6, r5, ror #4
     158:	44006563 	strmi	r6, [r0], #-1379	; 0xfffffa9d
     15c:	43495645 	movtmi	r5, #38469	; 0x9645
     160:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
     164:	49504943 	ldmdbmi	r0, {r0, r1, r6, r8, fp, lr}^
     168:	00544e45 	subseq	r4, r4, r5, asr #28
     16c:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xfffff0b0
     170:	00444552 	subeq	r4, r4, r2, asr r5
     174:	2e627375 	mcrcs	3, 3, r7, cr2, cr5, {3}
     178:	73750063 	cmnvc	r5, #99	; 0x63
     17c:	74654762 	strbtvc	r4, [r5], #-1890	; 0xfffff89e
     180:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     184:	65446563 	strbvs	r6, [r4, #-1379]	; 0xfffffa9d
     188:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     18c:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     190:	42535500 	subsmi	r5, r3, #0, 10
     194:	646e4977 	strbtvs	r4, [lr], #-2423	; 0xfffff689
     198:	00737865 	rsbseq	r7, r3, r5, ror #16
     19c:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
     1a0:	61746144 	cmnvs	r4, r4, asr #2
     1a4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     1a8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
     1ac:	73750074 	cmnvc	r5, #116	; 0x74
     1b0:	74654762 	strbtvc	r4, [r5], #-1890	; 0xfffff89e
     1b4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     1b8:	65446769 	strbvs	r6, [r4, #-1897]	; 0xfffff897
     1bc:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     1c0:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     1c4:	42535500 	subsmi	r5, r3, #0, 10
     1c8:	71655262 	cmnvc	r5, r2, ror #4
     1cc:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
     1d0:	42535500 	subsmi	r5, r3, #0, 10
     1d4:	544f4e5f 	strbpl	r4, [pc], #-3679	; 1dc <_Minimum_Stack_Size+0xdc>
     1d8:	4145525f 	cmpmi	r5, pc, asr r2
     1dc:	77005944 	strvc	r5, [r0, -r4, asr #18]
     1e0:	72747349 	rsbsvc	r7, r4, #603979777	; 0x24000001
     1e4:	53455200 	movtpl	r5, #20992	; 0x5200
     1e8:	5f454d55 	svcpl	0x00454d55
     1ec:	45545845 	ldrbmi	r5, [r4, #-2117]	; 0xfffff7bb
     1f0:	4c414e52 	mcrrmi	14, 5, r4, r1, cr2
     1f4:	76654400 	strbtvc	r4, [r5], -r0, lsl #8
     1f8:	5f656369 	svcpl	0x00656369
     1fc:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
     200:	73750065 	cmnvc	r5, #101	; 0x65
     204:	74655362 	strbtvc	r5, [r5], #-866	; 0xfffffc9e
     208:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     20c:	64416563 	strbvs	r6, [r1], #-1379	; 0xfffffa9d
     210:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
     214:	65730073 	ldrbvs	r0, [r3, #-115]!	; 0xffffff8d
     218:	55707574 	ldrbpl	r7, [r0, #-1396]!	; 0xfffffa8c
     21c:	75004253 	strvc	r4, [r0, #-595]	; 0xfffffdad
     220:	65476273 	strbvs	r6, [r7, #-627]	; 0xfffffd8d
     224:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
     228:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
     22c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     230:	70006e6f 	andvc	r6, r0, pc, ror #28
     234:	6f666e49 	svcvs	0x00666e49
     238:	74616d72 	strbtvc	r6, [r1], #-3442	; 0xfffff28e
     23c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     240:	614d7263 	cmpvs	sp, r3, ror #4
     244:	55006b73 	strpl	r6, [r0, #-2931]	; 0xfffff48d
     248:	775f6273 			; <UNDEFINED> instruction: 0x775f6273
     24c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     250:	65006874 	strvs	r6, [r0, #-2164]	; 0xfffff78c
     254:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
     258:	6553656d 	ldrbvs	r6, [r3, #-1389]	; 0xfffffa93
     25c:	6c615674 	stclvs	6, cr5, [r1], #-464	; 0xfffffe30
     260:	544e4900 	strbpl	r4, [lr], #-2304	; 0xfffff700
     264:	41465245 	cmpmi	r6, r5, asr #4
     268:	525f4543 	subspl	r4, pc, #281018368	; 0x10c00000
     26c:	50494345 	subpl	r4, r9, r5, asr #6
     270:	544e4549 	strbpl	r4, [lr], #-1353	; 0xfffffab7
     274:	4e437700 	cdpmi	7, 4, cr7, cr3, cr0, {0}
     278:	67005254 	smlsdvs	r0, r4, r2, r5
     27c:	6c467465 	cfstrdvs	mvd7, [r6], {101}	; 0x65
     280:	50687361 	rsbpl	r7, r8, r1, ror #6
     284:	53656761 	cmnpl	r5, #25427968	; 0x1840000
     288:	00657a69 	rsbeq	r7, r5, r9, ror #20
     28c:	61725477 	cmnvs	r2, r7, ror r4
     290:	6566736e 	strbvs	r7, [r6, #-878]!	; 0xfffffc92
     294:	7a695372 	bvc	1a55064 <__Stack_Size+0x1a54c64>
     298:	73750065 	cmnvc	r5, #101	; 0x65
     29c:	72745362 	rsbsvc	r5, r4, #-2013265919	; 0x88000001
     2a0:	44676e69 	strbtmi	r6, [r7], #-3689	; 0xfffff197
     2a4:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     2a8:	6f747069 	svcvs	0x00747069
     2ac:	564e0072 			; <UNDEFINED> instruction: 0x564e0072
     2b0:	495f4349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     2b4:	5374696e 	cmnpl	r4, #1802240	; 0x1b8000
     2b8:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
     2bc:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
     2c0:	62737500 	rsbsvs	r7, r3, #0, 10
     2c4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     2c8:	754f7375 	strbvc	r7, [pc, #-885]	; ffffff5b <BootRAM+0xef706fc>
     2cc:	73550074 	cmpvc	r5, #116	; 0x74
     2d0:	4f775f62 	svcmi	0x00775f62
     2d4:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
     2d8:	66640074 			; <UNDEFINED> instruction: 0x66640074
     2dc:	64705575 	ldrbtvs	r5, [r0], #-1397	; 0xfffffa8b
     2e0:	42657461 	rsbmi	r7, r5, #1627389952	; 0x61000000
     2e4:	71655279 	smcvc	21801	; 0x5529
     2e8:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
     2ec:	54544100 	ldrbpl	r4, [r4], #-256	; 0xffffff00
     2f0:	45484341 	strbmi	r4, [r8, #-833]	; 0xfffffcbf
     2f4:	73750044 	cmnvc	r5, #68	; 0x44
     2f8:	446f4e62 	strbtmi	r4, [pc], #-3682	; 300 <_Minimum_Stack_Size+0x200>
     2fc:	53617461 	cmnpl	r1, #1627389952	; 0x61000000
     300:	70757465 	rsbsvc	r7, r5, r5, ror #8
     304:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     308:	52495f43 	subpl	r5, r9, #268	; 0x10c
     30c:	61684351 	cmnvs	r8, r1, asr r3
     310:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     314:	50627553 	rsbpl	r7, r2, r3, asr r5
     318:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     31c:	00797469 	rsbseq	r7, r9, r9, ror #8
     320:	4345525f 	movtmi	r5, #21087	; 0x525f
     324:	45495049 	strbmi	r5, [r9, #-73]	; 0xffffffb7
     328:	545f544e 	ldrbpl	r5, [pc], #-1102	; 330 <_Minimum_Stack_Size+0x230>
     32c:	00455059 	subeq	r5, r5, r9, asr r0
     330:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     334:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     338:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     33c:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     340:	54430074 	strbpl	r0, [r3], #-116	; 0xffffff8c
     344:	504c5f52 	subpl	r5, ip, r2, asr pc
     348:	62737500 	rsbsvs	r7, r3, #0, 10
     34c:	49626e45 	stmdbmi	r2!, {r0, r2, r6, r9, sl, fp, sp, lr}^
     350:	43005253 	movwmi	r5, #595	; 0x253
     354:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
     358:	465f746e 	ldrbmi	r7, [pc], -lr, ror #8
     35c:	75746165 	ldrbvc	r6, [r4, #-357]!	; 0xfffffe9b
     360:	54006572 	strpl	r6, [r0], #-1394	; 0xfffffa8e
     364:	6c61746f 	cfstrdvs	mvd7, [r1], #-444	; 0xfffffe44
     368:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
     36c:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
     370:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     374:	47006e6f 	strmi	r6, [r0, -pc, ror #28]
     378:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
     37c:	31203731 			; <UNDEFINED> instruction: 0x31203731
     380:	2e312e30 	mrccs	14, 1, r2, cr1, cr0, {1}
     384:	6d2d2030 	stcvs	0, cr2, [sp, #-192]!	; 0xffffff40
     388:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
     38c:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
     390:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
     394:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
     398:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
     39c:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
     3a0:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
     3a4:	6e692d62 	cdpvs	13, 6, cr2, cr9, cr2, {3}
     3a8:	77726574 			; <UNDEFINED> instruction: 0x77726574
     3ac:	206b726f 	rsbcs	r7, fp, pc, ror #4
     3b0:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
     3b4:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
     3b8:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
     3bc:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
     3c0:	616d2d20 	cmnvs	sp, r0, lsr #26
     3c4:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
     3c8:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
     3cc:	206d2d37 	rsbcs	r2, sp, r7, lsr sp
     3d0:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
     3d4:	2d20734f 	stccs	3, cr7, [r0, #-316]!	; 0xfffffec4
     3d8:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
     3dc:	6f697463 	svcvs	0x00697463
     3e0:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
     3e4:	6f697463 	svcvs	0x00697463
     3e8:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
     3ec:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
     3f0:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
     3f4:	6f697463 	svcvs	0x00697463
     3f8:	7500736e 	strvc	r7, [r0, #-878]	; 0xfffffc92
     3fc:	65526273 	ldrbvs	r6, [r2, #-627]	; 0xfffffd8d
     400:	00746573 	rsbseq	r6, r4, r3, ror r5
     404:	44627375 	strbtmi	r7, [r2], #-885	; 0xfffffc8b
     408:	53496273 	movtpl	r6, #37491	; 0x9273
     40c:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     410:	2074726f 	rsbscs	r7, r4, pc, ror #4
     414:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     418:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     41c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     420:	42535500 	subsmi	r5, r3, #0, 10
     424:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     428:	5200524f 	andpl	r5, r0, #-268435452	; 0xf0000004
     42c:	4d555345 	ldclmi	3, cr5, [r5, #-276]	; 0xfffffeec
     430:	464f5f45 	strbmi	r5, [pc], -r5, asr #30
     434:	31750046 	cmncc	r5, r6, asr #32
     438:	38755f36 	ldmdacc	r5!, {r1, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     43c:	65735500 	ldrbvs	r5, [r3, #-1280]!	; 0xfffffb00
     440:	6c435f72 	mcrrvs	15, 7, r5, r3, cr2
     444:	46726165 	ldrbtmi	r6, [r2], -r5, ror #2
     448:	75746165 	ldrbvc	r6, [r4, #-357]!	; 0xfffffe9b
     44c:	55006572 	strpl	r6, [r0, #-1394]	; 0xfffffa8e
     450:	56774253 			; <UNDEFINED> instruction: 0x56774253
     454:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     458:	544f0073 	strbpl	r0, [pc], #-115	; 460 <__Stack_Size+0x60>
     45c:	5f524548 	svcpl	0x00524548
     460:	49434552 	stmdbmi	r3, {r1, r4, r6, r8, sl, lr}^
     464:	4e454950 			; <UNDEFINED> instruction: 0x4e454950
     468:	6f620054 	svcvs	0x00620054
     46c:	76006c6f 	strvc	r6, [r0], -pc, ror #24
     470:	00323375 	eorseq	r3, r2, r5, ror r3
     474:	4349564e 	movtmi	r5, #38478	; 0x964e
     478:	5152495f 	cmppl	r2, pc, asr r9
     47c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     480:	006c656e 	rsbeq	r6, ip, lr, ror #10
     484:	6552775f 	ldrbvs	r7, [r2, #-1887]	; 0xfffff8a1
     488:	6c615667 	stclvs	6, cr5, [r1], #-412	; 0xfffffe64
     48c:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
     490:	61667265 	cmnvs	r6, r5, ror #4
     494:	4e006563 	cfsh32mi	mvfx6, mvfx0, #51
     498:	5f434956 	svcpl	0x00434956
     49c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     4a0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     4a4:	00666544 	rsbeq	r6, r6, r4, asr #10
     4a8:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
     4ac:	5f746e65 	svcpl	0x00746e65
     4b0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     4b4:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     4b8:	6f697461 	svcvs	0x00697461
     4bc:	7375006e 	cmnvc	r5, #110	; 0x6e
     4c0:	70704162 	rsbsvc	r4, r0, r2, ror #2
     4c4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     4c8:	62737500 	rsbsvs	r7, r3, #0, 10
     4cc:	42627344 	rsbmi	r7, r2, #68, 6	; 0x10000001
     4d0:	77007375 	smlsdxvc	r0, r5, r3, r7
     4d4:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     4d8:	70757272 	rsbsvc	r7, r5, r2, ror r2
     4dc:	614d5f74 	hvcvs	54772	; 0xd5f4
     4e0:	75006b73 	strvc	r6, [r0, #-2931]	; 0xfffff48d
     4e4:	65536273 	ldrbvs	r6, [r3, #-627]	; 0xfffffd8d
     4e8:	646e4574 	strbtvs	r4, [lr], #-1396	; 0xfffffa8c
     4ec:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     4f0:	61654674 	smcvs	21604	; 0x5464
     4f4:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
     4f8:	616c4300 	cmnvs	ip, r0, lsl #6
     4fc:	475f7373 			; <UNDEFINED> instruction: 0x475f7373
     500:	495f7465 	ldmdbmi	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     504:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     508:	65636166 	strbvs	r6, [r3, #-358]!	; 0xfffffe9a
     50c:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
     510:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     514:	75666400 	strbvc	r6, [r6, #-1024]!	; 0xfffffc00
     518:	61647055 	qdsubvs	r7, r5, r4
     51c:	79426574 	stmdbvc	r2, {r2, r4, r5, r6, r8, sl, sp, lr}^
     520:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
     524:	564e0074 			; <UNDEFINED> instruction: 0x564e0074
     528:	495f4349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     52c:	68435152 	stmdavs	r3, {r1, r4, r6, r8, ip, lr}^
     530:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     534:	6572506c 	ldrbvs	r5, [r2, #-108]!	; 0xffffff94
     538:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
     53c:	506e6f69 	rsbpl	r6, lr, r9, ror #30
     540:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     544:	00797469 	rsbseq	r7, r9, r9, ror #8
     548:	73616c43 	cmnvc	r1, #17152	; 0x4300
     54c:	61445f73 	hvcvs	17907	; 0x45f3
     550:	535f6174 	cmppl	pc, #116, 2
     554:	70757465 	rsbsvc	r7, r5, r5, ror #8
     558:	72507000 	subsvc	r7, r0, #0
     55c:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
     560:	55007974 	strpl	r7, [r0, #-2420]	; 0xfffff68c
     564:	495f4253 	ldmdbmi	pc, {r0, r1, r4, r6, r9, lr}^	; <UNPREDICTABLE>
     568:	0074696e 	rsbseq	r6, r4, lr, ror #18
     56c:	5645445f 			; <UNDEFINED> instruction: 0x5645445f
     570:	5f454349 	svcpl	0x00454349
     574:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     578:	53550045 	cmppl	r5, #69	; 0x45
     57c:	526d6242 	rsbpl	r6, sp, #536870916	; 0x20000004
     580:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
     584:	79547473 	ldmdbvc	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     588:	75006570 	strvc	r6, [r0, #-1392]	; 0xfffffa90
     58c:	6f506273 	svcvs	0x00506273
     590:	4f726577 	svcmi	0x00726577
     594:	7067006e 	rsbvc	r0, r7, lr, rrx
     598:	775f6f69 	ldrbvc	r6, [pc, -r9, ror #30]
     59c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     5a0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     5a4:	45785200 	ldrbmi	r5, [r8, #-512]!	; 0xfffffe00
     5a8:	75625f50 	strbvc	r5, [r2, #-3920]!	; 0xfffff0b0
     5ac:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     5b0:	53455200 	movtpl	r5, #20992	; 0x5200
     5b4:	5f454d55 	svcpl	0x00454d55
     5b8:	464f5345 	strbmi	r5, [pc], -r5, asr #6
     5bc:	73654400 	cmnvc	r5, #0, 8
     5c0:	70697263 	rsbvc	r7, r9, r3, ror #4
     5c4:	5f726f74 	svcpl	0x00726f74
     5c8:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     5cc:	65735500 	ldrbvs	r5, [r3, #-1280]!	; 0xfffffb00
     5d0:	65535f72 	ldrbvs	r5, [r3, #-3954]	; 0xfffff08e
     5d4:	76654474 			; <UNDEFINED> instruction: 0x76654474
     5d8:	46656369 	strbtmi	r6, [r5], -r9, ror #6
     5dc:	75746165 	ldrbvc	r6, [r4, #-357]!	; 0xfffffe9b
     5e0:	55006572 	strpl	r6, [r0, #-1394]	; 0xfffffa8e
     5e4:	5f726573 	svcpl	0x00726573
     5e8:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
     5ec:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     5f0:	61727567 	cmnvs	r2, r7, ror #10
     5f4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     5f8:	4c414600 	mcrrmi	6, 0, r4, r1, cr0
     5fc:	55004553 	strpl	r4, [r0, #-1363]	; 0xfffffaad
     600:	5f726573 	svcpl	0x00726573
     604:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
     608:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     60c:	65636166 	strbvs	r6, [r3, #-358]!	; 0xfffffe9a
     610:	76654400 	strbtvc	r4, [r5], -r0, lsl #8
     614:	5f656369 	svcpl	0x00656369
     618:	706f7250 	rsbvc	r7, pc, r0, asr r2	; <UNPREDICTABLE>
     61c:	79747265 	ldmdbvc	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
     620:	53455200 	movtpl	r5, #20992	; 0x5200
     624:	5f454d55 	svcpl	0x00454d55
     628:	75004e4f 	strvc	r4, [r0, #-3663]	; 0xfffff1b1
     62c:	65476273 	strbvs	r6, [r7, #-627]	; 0xfffffd8d
     630:	6e754674 	mrcvs	6, 3, r4, cr5, cr4, {3}
     634:	6f697463 	svcvs	0x00697463
     638:	446c616e 	strbtmi	r6, [ip], #-366	; 0xfffffe92
     63c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     640:	6f747069 	svcvs	0x00747069
     644:	75430072 	strbvc	r0, [r3, #-114]	; 0xffffff8e
     648:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
     64c:	6c415f74 	mcrrvs	15, 7, r5, r1, cr4
     650:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
     654:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
     658:	69747465 	ldmdbvs	r4!, {r0, r2, r5, r6, sl, ip, sp, lr}^
     65c:	7500676e 	strvc	r6, [r0, #-1902]	; 0xfffff892
     660:	61446273 	hvcvs	17955	; 0x4623
     664:	65536174 	ldrbvs	r6, [r3, #-372]	; 0xfffffe8c
     668:	00707574 	rsbseq	r7, r0, r4, ror r5
     66c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     670:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     674:	61686320 	cmnvs	r8, r0, lsr #6
     678:	555f0072 	ldrbpl	r0, [pc, #-114]	; 60e <__Stack_Size+0x20e>
     67c:	5f524553 	svcpl	0x00524553
     680:	4e415453 	mcrmi	4, 2, r5, cr1, cr3, {2}
     684:	44524144 	ldrbmi	r4, [r2], #-324	; 0xfffffebc
     688:	5145525f 	cmppl	r5, pc, asr r2
     68c:	54534555 	ldrbpl	r4, [r3], #-1365	; 0xfffffaab
     690:	53550053 	cmppl	r5, #83	; 0x53
     694:	504c5f42 	subpl	r5, ip, r2, asr #30
     698:	4e41435f 	mcrmi	3, 2, r4, cr1, cr15, {2}
     69c:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     6a0:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     6a4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     6a8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     6ac:	6c656400 	cfstrdvs	mvd6, [r5], #-0
     6b0:	55007961 	strpl	r7, [r0, #-2401]	; 0xfffff69f
     6b4:	5f726573 	svcpl	0x00726573
     6b8:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
     6bc:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
     6c0:	68730073 	ldmdavs	r3!, {r0, r1, r4, r5, r6}^
     6c4:	2074726f 	rsbscs	r7, r4, pc, ror #4
     6c8:	00746e69 	rsbseq	r6, r4, r9, ror #28
     6cc:	755f3875 	ldrbvc	r3, [pc, #-2165]	; fffffe5f <BootRAM+0xef70600>
     6d0:	75466273 	strbvc	r6, [r6, #-627]	; 0xfffffd8d
     6d4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
     6d8:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
     6dc:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     6e0:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     6e4:	5500726f 	strpl	r7, [r0, #-623]	; 0xfffffd91
     6e8:	5f726573 	svcpl	0x00726573
     6ec:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
     6f0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     6f4:	61727567 	cmnvs	r2, r7, ror #10
     6f8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     6fc:	53455200 	movtpl	r5, #20992	; 0x5200
     700:	5f454d55 	svcpl	0x00454d55
     704:	4554414c 	ldrbmi	r4, [r4, #-332]	; 0xfffffeb4
     708:	73750052 	cmnvc	r5, #82	; 0x52
     70c:	74654762 	strbtvc	r4, [r5], #-1890	; 0xfffff89e
     710:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     714:	63616672 	cmnvs	r1, #119537664	; 0x7200000
     718:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
     71c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     720:	616c4300 	cmnvs	ip, r0, lsl #6
     724:	4e5f7373 	mrcmi	3, 2, r7, cr15, cr3, {3}
     728:	7461446f 	strbtvc	r4, [r1], #-1135	; 0xfffffb91
     72c:	65535f61 	ldrbvs	r5, [r3, #-3937]	; 0xfffff09f
     730:	00707574 	rsbseq	r7, r0, r4, ror r5
     734:	6369766e 	cmnvs	r9, #115343360	; 0x6e00000
     738:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     73c:	72744300 	rsbsvc	r4, r4, #0, 6
     740:	6e495f6c 	cdpvs	15, 4, cr5, cr9, cr12, {3}
     744:	52006f66 	andpl	r6, r0, #408	; 0x198
     748:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
     74c:	75005365 	strvc	r5, [r0, #-869]	; 0xfffffc9b
     750:	65536273 	ldrbvs	r6, [r3, #-627]	; 0xfffffd8d
     754:	746e4974 	strbtvc	r4, [lr], #-2420	; 0xfffff68c
     758:	61667265 	cmnvs	r6, r5, ror #4
     75c:	5f006563 	svcpl	0x00006563
     760:	55534552 	ldrbpl	r4, [r3, #-1362]	; 0xfffffaae
     764:	5400544c 	strpl	r5, [r0], #-1100	; 0xfffffbb4
     768:	00455552 	subeq	r5, r5, r2, asr r5
     76c:	5645445f 			; <UNDEFINED> instruction: 0x5645445f
     770:	5f454349 	svcpl	0x00454349
     774:	504f5250 	subpl	r5, pc, r0, asr r2	; <UNPREDICTABLE>
     778:	62737500 	rsbsvs	r7, r3, #0, 10
     77c:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
     780:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     784:	61727567 	cmnvs	r2, r7, ror #10
     788:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     78c:	656c4300 	strbvs	r4, [ip, #-768]!	; 0xfffffd00
     790:	535f7261 	cmppl	pc, #268435462	; 0x10000006
     794:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
     798:	754f5f73 	strbvc	r5, [pc, #-3955]	; fffff82d <BootRAM+0xef6ffce>
     79c:	53550074 	cmppl	r5, #116	; 0x74
     7a0:	4e555f42 	cdpmi	15, 5, cr5, cr5, cr2, {2}
     7a4:	50505553 	subspl	r5, r0, r3, asr r5
     7a8:	0054524f 	subseq	r5, r4, pc, asr #4
     7ac:	53746c61 	cmnpl	r4, #24832	; 0x6100
     7b0:	69747465 	ldmdbvs	r4!, {r0, r2, r5, r6, sl, ip, sp, lr}^
     7b4:	5300676e 	movwpl	r6, #1902	; 0x76e
     7b8:	50457465 	subpl	r7, r5, r5, ror #8
     7bc:	6f437852 	svcvs	0x00437852
     7c0:	00746e75 	rsbseq	r6, r4, r5, ror lr
     7c4:	636f7250 	cmnvs	pc, #80, 4
     7c8:	5f737365 	svcpl	0x00737365
     7cc:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     7d0:	495f7375 	ldmdbmi	pc, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     7d4:	7250004e 	subsvc	r0, r0, #78	; 0x4e
     7d8:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
     7dc:	74535f73 	ldrbvc	r5, [r3], #-3955	; 0xfffff08d
     7e0:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     7e4:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xfffff0a1
     7e8:	62737500 	rsbsvs	r7, r3, #0, 10
     7ec:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
     7f0:	6e49656d 	cdpvs	5, 4, cr6, cr9, cr13, {3}
     7f4:	5f007469 	svcpl	0x00007469
     7f8:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
     7fc:	62004543 	andvs	r4, r0, #281018368	; 0x10c00000
     800:	50746e49 	rsbspl	r6, r4, r9, asr #28
     804:	536b6361 	cmnpl	fp, #-2080374783	; 0x84000001
     808:	7000464f 	andvc	r4, r0, pc, asr #12
     80c:	6e497045 	cdpvs	0, 4, cr7, cr9, cr5, {2}
     810:	554f5f74 	strbpl	r5, [pc, #-3956]	; fffff8a4 <BootRAM+0xef70045>
     814:	65720054 	ldrbvs	r0, [r2, #-84]!	; 0xffffffac
     818:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
     81c:	4e450074 	mcrmi	0, 2, r0, cr5, cr4, {3}
     820:	494f5044 	stmdbmi	pc, {r2, r6, ip, lr}^	; <UNPREDICTABLE>
     824:	525f544e 	subspl	r5, pc, #1308622848	; 0x4e000000
     828:	50494345 	subpl	r4, r9, r5, asr #6
     82c:	544e4549 	strbpl	r4, [lr], #-1353	; 0xfffffab7
     830:	62737500 	rsbsvs	r7, r3, #0, 10
     834:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     838:	42535500 	subsmi	r5, r3, #0, 10
     83c:	6e654c77 	mcrvs	12, 3, r4, cr5, cr7, {3}
     840:	73687467 	cmnvc	r8, #1728053248	; 0x67000000
     844:	62737500 	rsbsvs	r7, r3, #0, 10
     848:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
     84c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     850:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
     854:	70697263 	rsbvc	r7, r9, r3, ror #4
     858:	00726f74 	rsbseq	r6, r2, r4, ror pc
     85c:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
     860:	64726164 	ldrbtvs	r6, [r2], #-356	; 0xfffffe9c
     864:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
     868:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
     86c:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
     870:	6144726f 	cmpvs	r4, pc, ror #4
     874:	43006174 	movwmi	r6, #372	; 0x174
     878:	49464e4f 	stmdbmi	r6, {r0, r1, r2, r3, r6, r9, sl, fp, lr}^
     87c:	45525547 	ldrbmi	r5, [r2, #-1351]	; 0xfffffab9
     880:	73750044 	cmnvc	r5, #68	; 0x44
     884:	776f5062 	strbvc	r5, [pc, -r2, rrx]!
     888:	664f7265 	strbvs	r7, [pc], -r5, ror #4
     88c:	75430066 	strbvc	r0, [r3, #-102]	; 0xffffff9a
     890:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
     894:	6e495f74 	mcrvs	15, 2, r5, cr9, cr4, {3}
     898:	66726574 			; <UNDEFINED> instruction: 0x66726574
     89c:	00656361 	rsbeq	r6, r5, r1, ror #6
     8a0:	47627375 			; <UNDEFINED> instruction: 0x47627375
     8a4:	6e497465 	cdpvs	4, 4, cr7, cr9, cr5, {3}
     8a8:	66726574 			; <UNDEFINED> instruction: 0x66726574
     8ac:	00656361 	rsbeq	r6, r5, r1, ror #6
     8b0:	5f454e4f 	svcpl	0x00454e4f
     8b4:	43534544 	cmpmi	r3, #68, 10	; 0x11000000
     8b8:	54504952 	ldrbpl	r4, [r0], #-2386	; 0xfffff6ae
     8bc:	7500524f 	strvc	r5, [r0, #-591]	; 0xfffffdb1
     8c0:	73755f38 	cmnvc	r5, #56, 30	; 0xe0
     8c4:	6e6f4362 	cdpvs	3, 6, cr4, cr15, cr2, {3}
     8c8:	44676966 	strbtmi	r6, [r7], #-2406	; 0xfffff69a
     8cc:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     8d0:	6f747069 	svcvs	0x00747069
     8d4:	55464472 	strbpl	r4, [r6, #-1138]	; 0xfffffb8e
     8d8:	44444100 	strbmi	r4, [r4], #-256	; 0xffffff00
     8dc:	53534552 	cmppl	r3, #343932928	; 0x14800000
     8e0:	52004445 	andpl	r4, r0, #1157627904	; 0x45000000
     8e4:	4d555345 	ldclmi	3, cr5, [r5, #-276]	; 0xfffffeec
     8e8:	4e495f45 	cdpmi	15, 4, cr5, cr9, cr5, {2}
     8ec:	4e524554 	mrcmi	5, 2, r4, cr2, cr4, {2}
     8f0:	5f004c41 	svcpl	0x00004c41
     8f4:	55534552 	ldrbpl	r4, [r3, #-1362]	; 0xfffffaae
     8f8:	535f454d 	cmppl	pc, #322961408	; 0x13400000
     8fc:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     900:	42535500 	subsmi	r5, r3, #0, 10
     904:	4355535f 	cmpmi	r5, #2080374785	; 0x7c000001
     908:	53534543 	cmppl	r3, #281018368	; 0x10c00000
     90c:	434e5500 	movtmi	r5, #58624	; 0xe500
     910:	454e4e4f 	strbmi	r4, [lr, #-3663]	; 0xfffff1b1
     914:	44455443 	strbmi	r5, [r5], #-1091	; 0xfffffbbd
     918:	62737500 	rsbsvs	r7, r3, #0, 10
     91c:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
     920:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
     924:	455f0073 	ldrbmi	r0, [pc, #-115]	; 8b9 <__Stack_Size+0x4b9>
     928:	4f50444e 	svcmi	0x0050444e
     92c:	5f544e49 	svcpl	0x00544e49
     930:	4f464e49 	svcmi	0x00464e49
     934:	62737500 	rsbsvs	r7, r3, #0, 10
     938:	61656c43 	cmnvs	r5, r3, asr #24
     93c:	61654672 	smcvs	21602	; 0x5462
     940:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
     944:	746f5400 	strbtvc	r5, [pc], #-1024	; 94c <__Stack_Size+0x54c>
     948:	455f6c61 	ldrbmi	r6, [pc, #-3169]	; fffffcef <BootRAM+0xef70490>
     94c:	6f70646e 	svcvs	0x0070646e
     950:	00746e69 	rsbseq	r6, r4, r9, ror #28
     954:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
     958:	536c6f72 	cmnpl	ip, #456	; 0x1c8
     95c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     960:	706f4300 	rsbvc	r4, pc, r0, lsl #6
     964:	756f5279 	strbvc	r5, [pc, #-633]!	; 6f3 <__Stack_Size+0x2f3>
     968:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
     96c:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
     970:	78525045 	ldmdavc	r2, {r0, r2, r6, ip, lr}^
     974:	696c6156 	stmdbvs	ip!, {r1, r2, r4, r6, r8, sp, lr}^
     978:	6f6e0064 	svcvs	0x006e0064
     97c:	6e696874 	mcrvs	8, 3, r6, cr9, cr4, {3}
     980:	6f725067 	svcvs	0x00725067
     984:	73750063 	cmnvc	r5, #99	; 0x63
     988:	61635f62 	cmnvs	r3, r2, ror #30
     98c:	61626c6c 	cmnvs	r2, ip, ror #24
     990:	2e736b63 	vsubcs.f64	d22, d3, d19
     994:	38750063 	ldmdacc	r5!, {r0, r1, r5, r6}^
     998:	6273755f 	rsbsvs	r7, r3, #398458880	; 0x17c00000
     99c:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     9a0:	6556676e 	ldrbvs	r6, [r6, #-1902]	; 0xfffff892
     9a4:	726f646e 	rsbvc	r6, pc, #1845493760	; 0x6e000000
     9a8:	5f387500 	svcpl	0x00387500
     9ac:	53627375 	cmnpl	r2, #-738197503	; 0xd4000001
     9b0:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     9b4:	746e4967 	strbtvc	r4, [lr], #-2407	; 0xfffff699
     9b8:	61667265 	cmnvs	r6, r5, ror #4
     9bc:	75006563 	strvc	r6, [r0, #-1379]	; 0xfffffa9d
     9c0:	73755f38 	cmnvc	r5, #56, 30	; 0xe0
     9c4:	76654462 	strbtvc	r4, [r5], -r2, ror #8
     9c8:	44656369 	strbtmi	r6, [r5], #-873	; 0xfffffc97
     9cc:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
     9d0:	6f747069 	svcvs	0x00747069
     9d4:	55464472 	strbpl	r4, [r6, #-1138]	; 0xfffffb8e
     9d8:	5f387500 	svcpl	0x00387500
     9dc:	53627375 	cmnpl	r2, #-738197503	; 0xd4000001
     9e0:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     9e4:	746c4167 	strbtvc	r4, [ip], #-359	; 0xfffffe99
     9e8:	38750032 	ldmdacc	r5!, {r1, r4, r5}^
     9ec:	6273755f 	rsbsvs	r7, r3, #398458880	; 0x17c00000
     9f0:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     9f4:	6553676e 	ldrbvs	r6, [r3, #-1902]	; 0xfffff892
     9f8:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     9fc:	5f387500 	svcpl	0x00387500
     a00:	53627375 	cmnpl	r2, #-738197503	; 0xd4000001
     a04:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
     a08:	746c4167 	strbtvc	r4, [ip], #-359	; 0xfffffe99
     a0c:	38750030 	ldmdacc	r5!, {r4, r5}^
     a10:	6273755f 	rsbsvs	r7, r3, #398458880	; 0x17c00000
     a14:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     a18:	6c41676e 	mcrrvs	7, 6, r6, r1, cr14
     a1c:	75003174 	strvc	r3, [r0, #-372]	; 0xfffffe8c
     a20:	73755f38 	cmnvc	r5, #56, 30	; 0xe0
     a24:	72745362 	rsbsvc	r5, r4, #-2013265919	; 0x88000001
     a28:	50676e69 	rsbpl	r6, r7, r9, ror #28
     a2c:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
     a30:	75007463 	strvc	r7, [r0, #-1123]	; 0xfffffb9d
     a34:	73755f38 	cmnvc	r5, #56, 30	; 0xe0
     a38:	72745362 	rsbsvc	r5, r4, #-2013265919	; 0x88000001
     a3c:	4c676e69 	stclmi	14, cr6, [r7], #-420	; 0xfffffe5c
     a40:	49676e61 	stmdbmi	r7!, {r0, r5, r6, r9, sl, fp, sp, lr}^
     a44:	73750064 	cmnvc	r5, #100	; 0x64
     a48:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xfffff09e
     a4c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     a50:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
     a54:	6400632e 	strvs	r6, [r0], #-814	; 0xfffffcd2
     a58:	69467566 	stmdbvs	r6, {r1, r2, r5, r6, r8, sl, ip, sp, lr}^
     a5c:	6873696e 	ldmdavs	r3!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     a60:	6f6c7055 	svcvs	0x006c7055
     a64:	73006461 	movwvc	r6, #1121	; 0x461
     a68:	70757465 	rsbsvc	r7, r5, r5, ror #8
     a6c:	4144454c 	cmpmi	r4, ip, asr #10
     a70:	7542646e 	strbvc	r6, [r2, #-1134]	; 0xfffffb92
     a74:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
     a78:	65686300 	strbvs	r6, [r8, #-768]!	; 0xfffffd00
     a7c:	6e416b63 	vmlsvs.f64	d22, d1, d19
     a80:	656c4364 	strbvs	r4, [ip, #-868]!	; 0xfffffc9c
     a84:	6f427261 	svcvs	0x00427261
     a88:	6f6c746f 	svcvs	0x006c746f
     a8c:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
     a90:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
     a94:	6e6f6400 	cdpvs	4, 6, cr6, cr15, cr0, {0}
     a98:	61775f74 	cmnvs	r7, r4, ror pc
     a9c:	63007469 	movwvs	r7, #1129	; 0x469
     aa0:	6b636568 	blvs	18da048 <__Stack_Size+0x18d9c48>
     aa4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     aa8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
     aac:	6d756a00 	vldmdbvs	r5!, {s13-s12}
     ab0:	556f5470 	strbpl	r5, [pc, #-1136]!	; 648 <__Stack_Size+0x248>
     ab4:	00726573 	rsbseq	r6, r2, r3, ror r5
     ab8:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     abc:	65526d65 	ldrbvs	r6, [r2, #-3429]	; 0xfffff29b
     ac0:	00746573 	rsbseq	r6, r4, r3, ror r5
     ac4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     ac8:	74747542 	ldrbtvc	r7, [r4], #-1346	; 0xfffffabe
     acc:	74536e6f 	ldrbvc	r6, [r3], #-3695	; 0xfffff191
     ad0:	00657461 	rsbeq	r7, r5, r1, ror #8
     ad4:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
     ad8:	414c4670 	hvcmi	50272	; 0xc460
     adc:	73004853 	movwvc	r4, #2131	; 0x853
     ae0:	70757465 	rsbsvc	r7, r5, r5, ror #8
     ae4:	004b4c43 	subeq	r4, fp, r3, asr #24
     ae8:	6e69616d 	powvsez	f6, f1, #5.0
     aec:	5f6f6e00 	svcpl	0x006f6e00
     af0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     af4:	6d756a5f 	vldmdbvs	r5!, {s13-s107}
     af8:	616d0070 	smcvs	53248	; 0xd000
     afc:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
     b00:	73797300 	cmnvc	r9, #0, 6
     b04:	486d6574 	stmdami	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     b08:	52647261 	rsbpl	r7, r4, #268435462	; 0x10000006
     b0c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     b10:	6c656400 	cfstrdvs	mvd6, [r5], #-0
     b14:	635f7961 	cmpvs	pc, #1589248	; 0x184000
     b18:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     b1c:	75666400 	strbvc	r6, [r6, #-1024]!	; 0xfffffc00
     b20:	6f6c7055 	svcvs	0x006c7055
     b24:	74536461 	ldrbvc	r6, [r3], #-1121	; 0xfffffb9f
     b28:	65747261 	ldrbvs	r7, [r4, #-609]!	; 0xfffffd9f
     b2c:	65730064 	ldrbvs	r0, [r3, #-100]!	; 0xffffff9c
     b30:	70734d74 	rsbsvc	r4, r3, r4, ror sp
     b34:	4a646e41 	bmi	191c440 <__Stack_Size+0x191c040>
     b38:	00706d75 	rsbseq	r6, r0, r5, ror sp
     b3c:	52504349 	subspl	r4, r0, #603979777	; 0x24000001
     b40:	67617000 	strbvs	r7, [r1, -r0]!
     b44:	64644165 	strbtvs	r4, [r4], #-357	; 0xfffffe9b
     b48:	6d740072 	ldclvs	0, cr0, [r4, #-456]!	; 0xfffffe38
     b4c:	62757370 	rsbsvs	r7, r5, #112, 6	; 0xc0000001
     b50:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
     b54:	53490072 	movtpl	r0, #36978	; 0x9072
     b58:	72005250 	andvc	r5, r0, #80, 4
     b5c:	50646165 	rsbpl	r6, r4, r5, ror #2
     b60:	66006e69 	strvs	r6, [r0], -r9, ror #28
     b64:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
     b68:	73617245 	cmnvc	r1, #1342177284	; 0x50000004
     b6c:	67615065 	strbvs	r5, [r1, -r5, rrx]!
     b70:	72007365 	andvc	r7, r0, #-1811939327	; 0x94000001
     b74:	00657461 	rsbeq	r7, r5, r1, ror #8
     b78:	73616c66 	cmnvc	r1, #26112	; 0x6600
     b7c:	61724568 	cmnvs	r2, r8, ror #10
     b80:	61506573 	cmpvs	r0, r3, ror r5
     b84:	72006567 	andvc	r6, r0, #432013312	; 0x19c00000
     b88:	00424353 	subeq	r4, r2, r3, asr r3
     b8c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     b90:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     b94:	52003031 	andpl	r3, r0, #49	; 0x31
     b98:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     b9c:	31444556 	cmpcc	r4, r6, asr r5
     ba0:	6d740031 	ldclvs	0, cr0, [r4, #-196]!	; 0xffffff3c
     ba4:	67657270 			; <UNDEFINED> instruction: 0x67657270
     ba8:	31757600 	cmncc	r5, r0, lsl #12
     bac:	74730036 	ldrbtvc	r0, [r3], #-54	; 0xffffffca
     bb0:	00657461 	rsbeq	r7, r5, r1, ror #8
     bb4:	32425041 	subcc	r5, r2, #65	; 0x41
     bb8:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     bbc:	706d7400 	rsbvc	r7, sp, r0, lsl #8
     bc0:	00657270 	rsbeq	r7, r5, r0, ror r2
     bc4:	73616c66 	cmnvc	r1, #26112	; 0x6600
     bc8:	6c6e5568 	cfstr64vs	mvdx5, [lr], #-416	; 0xfffffe60
     bcc:	006b636f 	rsbeq	r6, fp, pc, ror #6
     bd0:	46746567 	ldrbtmi	r6, [r4], -r7, ror #10
     bd4:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
     bd8:	00646e45 	rsbeq	r6, r4, r5, asr #28
     bdc:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
     be0:	564e7200 	strbpl	r7, [lr], -r0, lsl #4
     be4:	6e004349 	cdpvs	3, 0, cr4, cr0, cr9, {2}
     be8:	44636976 	strbtmi	r6, [r3], #-2422	; 0xfffff68a
     bec:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
     bf0:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
     bf4:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     bf8:	73747075 	cmnvc	r4, #117	; 0x75
     bfc:	6c617600 	stclvs	6, cr7, [r1], #-0
     c00:	56006575 			; <UNDEFINED> instruction: 0x56006575
     c04:	00524f54 	subseq	r4, r2, r4, asr pc
     c08:	706d756a 	rsbvc	r7, sp, sl, ror #10
     c0c:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     c10:	43435200 	movtmi	r5, #12800	; 0x3200
     c14:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
     c18:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     c1c:	4e007463 	cdpmi	4, 0, cr7, cr0, cr3, {3}
     c20:	5f434956 	svcpl	0x00434956
     c24:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     c28:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     c2c:	49007463 	stmdbmi	r0, {r0, r1, r5, r6, sl, ip, sp, lr}
     c30:	00525343 	subseq	r5, r2, r3, asr #6
     c34:	6d706d74 	ldclvs	13, cr6, [r0, #-464]!	; 0xfffffe30
     c38:	006b7361 	rsbeq	r7, fp, r1, ror #6
     c3c:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
     c40:	4100524e 	tstmi	r0, lr, asr #4
     c44:	52435249 	subpl	r5, r3, #-1879048188	; 0x90000004
     c48:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
     c4c:	73005241 	movwvc	r5, #577	; 0x241
     c50:	626f7274 	rsbvs	r7, pc, #116, 4	; 0x40000007
     c54:	6e695065 	cdpvs	0, 6, cr5, cr9, cr5, {3}
     c58:	57686c00 	strbpl	r6, [r8, -r0, lsl #24]!
     c5c:	0064726f 	rsbeq	r7, r4, pc, ror #4
     c60:	566d7772 			; <UNDEFINED> instruction: 0x566d7772
     c64:	66006c61 	strvs	r6, [r0], -r1, ror #24
     c68:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
     c6c:	6b636f4c 	blvs	18dc9a4 <__Stack_Size+0x18dc5a4>
     c70:	72777000 	rsbsvc	r7, r7, #0
     c74:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
     c78:	70616d5f 	rsbvc	r6, r1, pc, asr sp
     c7c:	53464300 	movtpl	r4, #25344	; 0x6300
     c80:	41490052 	qdaddmi	r0, r2, r9
     c84:	77005242 	strvc	r5, [r0, -r2, asr #4]
     c88:	0064726f 	rsbeq	r7, r4, pc, ror #4
     c8c:	52454349 	subpl	r4, r5, #603979777	; 0x24000001
     c90:	42504100 	subsmi	r4, r0, #0, 2
     c94:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
     c98:	6b620052 	blvs	1880de8 <__Stack_Size+0x18809e8>
     c9c:	65725f70 	ldrbvs	r5, [r2, #-3952]!	; 0xfffff090
     ca0:	616d5f67 	cmnvs	sp, r7, ror #30
     ca4:	50430070 	subpl	r0, r3, r0, ror r0
     ca8:	00444955 	subeq	r4, r4, r5, asr r9
     cac:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     cb0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     cb4:	46440030 			; <UNDEFINED> instruction: 0x46440030
     cb8:	52005253 	andpl	r5, r0, #805306373	; 0x30000005
     cbc:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     cc0:	32444556 	subcc	r4, r4, #360710144	; 0x15800000
     cc4:	53455200 	movtpl	r5, #20992	; 0x5200
     cc8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     ccc:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     cd0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     cd4:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     cd8:	53455200 	movtpl	r5, #20992	; 0x5200
     cdc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     ce0:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
     ce4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     ce8:	36444556 			; <UNDEFINED> instruction: 0x36444556
     cec:	53455200 	movtpl	r5, #20992	; 0x5200
     cf0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     cf4:	53003744 	movwpl	r3, #1860	; 0x744
     cf8:	52534348 	subspl	r4, r3, #72, 6	; 0x20000001
     cfc:	45534900 	ldrbmi	r4, [r3, #-2304]	; 0xfffff700
     d00:	52440052 	subpl	r0, r4, #82	; 0x52
     d04:	41003031 	tstmi	r0, r1, lsr r0
     d08:	45324250 	ldrmi	r4, [r2, #-592]!	; 0xfffffdb0
     d0c:	6600524e 	strvs	r5, [r0], -lr, asr #4
     d10:	5367616c 	cmnpl	r7, #108, 2
     d14:	52007465 	andpl	r7, r0, #1694498816	; 0x65000000
     d18:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     d1c:	31444556 	cmpcc	r4, r6, asr r5
     d20:	72737500 	rsbsvc	r7, r3, #0, 10
     d24:	6e69614d 	powvsem	f6, f1, #5.0
     d28:	53464100 	movtpl	r4, #24832	; 0x6100
     d2c:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     d30:	56524553 			; <UNDEFINED> instruction: 0x56524553
     d34:	00394445 	eorseq	r4, r9, r5, asr #8
     d38:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
     d3c:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
     d40:	5300632e 	movwpl	r6, #814	; 0x32e
     d44:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     d48:	6f437055 	svcvs	0x00437055
     d4c:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
     d50:	564e0072 			; <UNDEFINED> instruction: 0x564e0072
     d54:	545f4349 	ldrbpl	r4, [pc], #-841	; d5c <__Stack_Size+0x95c>
     d58:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     d5c:	41006665 	tstmi	r0, r5, ror #12
     d60:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
     d64:	6600524e 	strvs	r5, [r0], -lr, asr #4
     d68:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
     d6c:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
     d70:	726f5765 	rsbvc	r5, pc, #26476544	; 0x1940000
     d74:	6c660064 	stclvs	0, cr0, [r6], #-400	; 0xfffffe70
     d78:	53687361 	cmnpl	r8, #-2080374783	; 0x84000001
     d7c:	00657a69 	rsbeq	r7, r5, r9, ror #20
     d80:	52504853 	subspl	r4, r0, #5439488	; 0x530000
     d84:	43545200 	cmpmi	r4, #0, 4
     d88:	62005243 	andvs	r5, r0, #805306372	; 0x30000004
     d8c:	006b6e61 	rsbeq	r6, fp, r1, ror #28
     d90:	73616c66 	cmnvc	r1, #26112	; 0x6600
     d94:	64644168 	strbtvs	r4, [r4], #-360	; 0xfffffe98
     d98:	75660072 	strbvc	r0, [r6, #-114]!	; 0xffffff8e
     d9c:	7450636e 	ldrbvc	r6, [r0], #-878	; 0xfffffc92
     da0:	73750072 	cmnvc	r5, #114	; 0x72
     da4:	64644172 	strbtvs	r4, [r4], #-370	; 0xfffffe8e
     da8:	45520072 	ldrbmi	r0, [r2, #-114]	; 0xffffff8e
     dac:	56524553 			; <UNDEFINED> instruction: 0x56524553
     db0:	00384445 	eorseq	r4, r8, r5, asr #8
     db4:	31706b62 	cmncc	r0, r2, ror #22
     db8:	69725730 	ldmdbvs	r2!, {r4, r5, r8, r9, sl, ip, lr}^
     dbc:	42006574 	andmi	r6, r0, #116, 10	; 0x1d000000
     dc0:	00524344 	subseq	r4, r2, r4, asr #6
     dc4:	70706d74 	rsbsvc	r6, r0, r4, ror sp
     dc8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     dcc:	00797469 	rsbseq	r7, r9, r9, ror #8
     dd0:	6f576868 	svcvs	0x00576868
     dd4:	52006472 	andpl	r6, r0, #1912602624	; 0x72000000
     dd8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     ddc:	00314445 	eorseq	r4, r1, r5, asr #8
     de0:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     de4:	63757600 	cmnvs	r5, #0, 12
     de8:	53003233 	movwpl	r3, #563	; 0x233
     dec:	545f4243 	ldrbpl	r4, [pc], #-579	; df4 <__Stack_Size+0x9f4>
     df0:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     df4:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
     df8:	00525346 	subseq	r5, r2, r6, asr #6
     dfc:	72745369 	rsbsvc	r5, r4, #-1543503871	; 0xa4000001
     e00:	00676e69 	rsbeq	r6, r7, r9, ror #28
     e04:	76636572 			; <UNDEFINED> instruction: 0x76636572
     e08:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     e0c:	64007265 	strvs	r7, [r0], #-613	; 0xfffffd9b
     e10:	632e7566 			; <UNDEFINED> instruction: 0x632e7566
     e14:	4c505f00 	mrrcmi	15, 0, r5, r0, cr0
     e18:	6400544f 	strvs	r5, [r0], #-1103	; 0xfffffbb1
     e1c:	6f437566 	svcvs	0x00437566
     e20:	4e447970 			; <UNDEFINED> instruction: 0x4e447970
     e24:	44414f4c 	strbmi	r4, [r1], #-3916	; 0xfffff0b4
     e28:	55464400 	strbpl	r4, [r6, #-1024]	; 0xfffffc00
     e2c:	4c50555f 	cfldr64mi	mvdx5, [r0], {95}	; 0x5f
     e30:	5f44414f 	svcpl	0x0044414f
     e34:	53414c46 	movtpl	r4, #7238	; 0x1c46
     e38:	58305f48 	ldmdapl	r0!, {r3, r6, r8, r9, sl, fp, ip, lr}
     e3c:	35303038 	ldrcc	r3, [r0, #-56]!	; 0xffffffc8
     e40:	00303030 	eorseq	r3, r0, r0, lsr r0
     e44:	5546445f 	strbpl	r4, [r6, #-1119]	; 0xfffffba1
     e48:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     e4c:	75007375 	strvc	r7, [r0, #-885]	; 0xfffffc8b
     e50:	41726573 	cmnmi	r2, r3, ror r5
     e54:	64417070 	strbvs	r7, [r1], #-112	; 0xffffff90
     e58:	62007264 	andvs	r7, r0, #100, 4	; 0x40000006
     e5c:	6c6f5077 	stclvs	0, cr5, [pc], #-476	; c88 <__Stack_Size+0x888>
     e60:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	; 0xfffffe50
     e64:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
     e68:	77620030 			; <UNDEFINED> instruction: 0x77620030
     e6c:	6c6c6f50 	stclvs	15, cr6, [ip], #-320	; 0xfffffec0
     e70:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
     e74:	3174756f 	cmncc	r4, pc, ror #10
     e78:	50776200 	rsbspl	r6, r7, r0, lsl #4
     e7c:	546c6c6f 	strbtpl	r6, [ip], #-3183	; 0xfffff391
     e80:	6f656d69 	svcvs	0x00656d69
     e84:	00327475 	eorseq	r7, r2, r5, ror r4
     e88:	5f554644 	svcpl	0x00554644
     e8c:	4f4c5055 	svcmi	0x004c5055
     e90:	4e5f4441 	cdpmi	4, 5, cr4, cr15, cr1, {2}
     e94:	00454e4f 	subeq	r4, r5, pc, asr #28
     e98:	43756664 	cmnmi	r5, #100, 12	; 0x6400000
     e9c:	5579706f 	ldrbpl	r7, [r9, #-111]!	; 0xffffff91
     ea0:	414f4c50 	cmpmi	pc, r0, asr ip	; <UNPREDICTABLE>
     ea4:	73750044 	cmnvc	r5, #68	; 0x44
     ea8:	70557265 	subsvc	r7, r5, r5, ror #4
     eac:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
     eb0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     eb4:	75666400 	strbvc	r6, [r6, #-1024]!	; 0xfffffc00
     eb8:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
     ebc:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     ec0:	6f547265 	svcvs	0x00547265
     ec4:	63657845 	cmnvs	r5, #4521984	; 0x450000
     ec8:	75666400 	strbvc	r6, [r6, #-1024]!	; 0xfffffc00
     ecc:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
     ed0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     ed4:	63007375 	movwvs	r7, #885	; 0x375
     ed8:	5f65646f 	svcpl	0x0065646f
     edc:	79706f63 	ldmdbvc	r0!, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}^
     ee0:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
     ee4:	6664006b 	strbtvs	r0, [r4], -fp, rrx
     ee8:	706f4375 	rsbvc	r4, pc, r5, ror r3	; <UNPREDICTABLE>
     eec:	61745379 	cmnvs	r4, r9, ror r3
     ef0:	64006574 	strvs	r6, [r0], #-1396	; 0xfffffa8c
     ef4:	70557566 	subsvc	r7, r5, r6, ror #10
     ef8:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
     efc:	69547942 	ldmdbvs	r4, {r1, r6, r8, fp, ip, sp, lr}^
     f00:	756f656d 	strbvc	r6, [pc, #-1389]!	; 99b <__Stack_Size+0x59b>
     f04:	46440074 			; <UNDEFINED> instruction: 0x46440074
     f08:	50555f55 	subspl	r5, r5, r5, asr pc
     f0c:	44414f4c 	strbmi	r4, [r1], #-3916	; 0xfffff0b4
     f10:	414c465f 	cmpmi	ip, pc, asr r6
     f14:	305f4853 	subscc	r4, pc, r3, asr r8	; <UNPREDICTABLE>
     f18:	30303858 	eorscc	r3, r0, r8, asr r8
     f1c:	30303032 	eorscc	r3, r0, r2, lsr r0
     f20:	77656e00 	strbvc	r6, [r5, -r0, lsl #28]!
     f24:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     f28:	66640065 	strbtvs	r0, [r4], -r5, rrx
     f2c:	6c705575 	cfldr64vs	mvdx5, [r0], #-468	; 0xfffffe2c
     f30:	5464616f 	strbtpl	r6, [r4], #-367	; 0xfffffe91
     f34:	73657079 	cmnvc	r5, #121	; 0x79
     f38:	6400745f 	strvs	r7, [r0], #-1119	; 0xfffffba1
     f3c:	70417566 	subvc	r7, r1, r6, ror #10
     f40:	61745370 	cmnvs	r4, r0, ror r3
     f44:	00737574 	rsbseq	r7, r3, r4, ror r5
     f48:	6f6c7075 	svcvs	0x006c7075
     f4c:	6c426461 	cfstrdvs	mvd6, [r2], {97}	; 0x61
     f50:	4c6b636f 	stclmi	3, cr6, [fp], #-444	; 0xfffffe44
     f54:	74006e65 	strvc	r6, [r0], #-3685	; 0xfffff19b
     f58:	42736968 	rsbsmi	r6, r3, #104, 18	; 0x1a0000
     f5c:	6b636f6c 	blvs	18dcd14 <__Stack_Size+0x18dc914>
     f60:	006e654c 	rsbeq	r6, lr, ip, asr #10
     f64:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     f68:	6d726946 			; <UNDEFINED> instruction: 0x6d726946
     f6c:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
     f70:	006e654c 	rsbeq	r6, lr, ip, asr #10
     f74:	42756664 	rsbsmi	r6, r5, #100, 12	; 0x6400000
     f78:	00797375 	rsbseq	r7, r9, r5, ror r3
     f7c:	61745362 	cmnvs	r4, r2, ror #6
     f80:	6c006574 	cfstr32vs	mvfx6, [r0], {116}	; 0x74
     f84:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     f88:	74730068 	ldrbtvc	r0, [r3], #-104	; 0xffffff98
     f8c:	53747261 	cmnpl	r4, #268435462	; 0x10000006
     f90:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     f94:	55464400 	strbpl	r4, [r6, #-1024]	; 0xfffffc00
     f98:	4c50555f 	cfldr64mi	mvdx5, [r0], {95}	; 0x5f
     f9c:	5f44414f 	svcpl	0x0044414f
     fa0:	004d4152 	subeq	r4, sp, r2, asr r1
     fa4:	49474542 	stmdbmi	r7, {r1, r6, r8, sl, lr}^
     fa8:	4e494e4e 	cdpmi	14, 4, cr4, cr9, cr14, {2}
     fac:	73750047 	cmnvc	r5, #71	; 0x47
     fb0:	70537265 	subsvc	r7, r3, r5, ror #4
     fb4:	00656361 	rsbeq	r6, r5, r1, ror #6
     fb8:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     fbc:	45707041 	ldrbmi	r7, [r0, #-65]!	; 0xffffffbf
     fc0:	6200646e 	andvs	r6, r0, #1845493760	; 0x6e000000
     fc4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     fc8:	64007375 	strvs	r7, [r0], #-885	; 0xfffffc8b
     fcc:	65537566 	ldrbvs	r7, [r3, #-1382]	; 0xfffffa9a
     fd0:	61745374 	cmnvs	r4, r4, ror r3
     fd4:	4d006574 	cfstr32mi	mvfx6, [r0, #-464]	; 0xfffffe30
     fd8:	4c444449 	cfstrdmi	mvd4, [r4], {73}	; 0x49
     fdc:	66640045 	strbtvs	r0, [r4], -r5, asr #32
     fe0:	74654775 	strbtvc	r4, [r5], #-1909	; 0xfffff88b
     fe4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     fe8:	72460065 	subvc	r0, r6, #101	; 0x65
     fec:	73556565 	cmpvc	r5, #423624704	; 0x19400000
     ff0:	75427265 	strbvc	r7, [r2, #-613]	; 0xfffffd9b
     ff4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     ff8:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
     ffc:	74537854 	ldrbvc	r7, [r3], #-2132	; 0xfffff7ac
    1000:	536c6c61 	cmnpl	ip, #24832	; 0x6100
    1004:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1008:	65530073 	ldrbvs	r0, [r3, #-115]	; 0xffffff8d
    100c:	44504574 	ldrbmi	r4, [r0], #-1396	; 0xfffffa8c
    1010:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xfffff39e
    1014:	64413166 	strbvs	r3, [r1], #-358	; 0xfffffe9a
    1018:	53007264 	movwpl	r7, #612	; 0x264
    101c:	50457465 	subpl	r7, r5, r5, ror #8
    1020:	61567854 	cmpvs	r6, r4, asr r8
    1024:	0064696c 	rsbeq	r6, r4, ip, ror #18
    1028:	44746553 	ldrbtmi	r6, [r4], #-1363	; 0xfffffaad
    102c:	6c42756f 	cfstr64vs	mvdx7, [r2], {111}	; 0x6f
    1030:	66754265 	ldrbtvs	r4, [r5], -r5, ror #4
    1034:	53504566 	cmppl	r0, #427819008	; 0x19800000
    1038:	6c6c6174 	stfvse	f6, [ip], #-464	; 0xfffffe30
    103c:	5f504500 	svcpl	0x00504500
    1040:	46554244 	ldrbmi	r4, [r5], -r4, asr #4
    1044:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xfffff0a1
    1048:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    104c:	78525045 	ldmdavc	r2, {r0, r2, r6, ip, lr}^
    1050:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1054:	5f007375 	svcpl	0x00007375
    1058:	445f5045 	ldrbmi	r5, [pc], #-69	; 1060 <__Stack_Size+0xc60>
    105c:	5f465542 	svcpl	0x00465542
    1060:	00524944 	subseq	r4, r2, r4, asr #18
    1064:	49746553 	ldmdbmi	r4!, {r0, r1, r4, r6, r8, sl, sp, lr}^
    1068:	00525453 	subseq	r5, r2, r3, asr r4
    106c:	6c424e77 	mcrrvs	14, 7, r4, r2, cr7
    1070:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
    1074:	64416200 	strbvs	r6, [r1], #-512	; 0xfffffe00
    1078:	47007264 	strmi	r7, [r0, -r4, ror #4]
    107c:	4e437465 	cdpmi	4, 4, cr7, cr3, cr5, {3}
    1080:	47005254 	smlsdmi	r0, r4, r2, r5
    1084:	78527465 	ldmdavc	r2, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1088:	6c617453 	cfstrdvs	mvd7, [r1], #-332	; 0xfffffeb4
    108c:	6174536c 	cmnvs	r4, ip, ror #6
    1090:	00737574 	rsbseq	r7, r3, r4, ror r5
    1094:	44746547 	ldrbtmi	r6, [r4], #-1351	; 0xfffffab9
    1098:	52444441 	subpl	r4, r4, #1090519040	; 0x41000000
    109c:	6f437700 	svcvs	0x00437700
    10a0:	00746e75 	rsbseq	r6, r4, r5, ror lr
    10a4:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0xfffffaad
    10a8:	64644150 	strbtvs	r4, [r4], #-336	; 0xfffffeb0
    10ac:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    10b0:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    10b4:	78525045 	ldmdavc	r2, {r0, r2, r6, ip, lr}^
    10b8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    10bc:	54007375 	strpl	r7, [r0], #-885	; 0xfffffc8b
    10c0:	6c67676f 	stclvs	7, cr6, [r7], #-444	; 0xfffffe44
    10c4:	4f544465 	svcmi	0x00544465
    10c8:	58525f47 	ldmdapl	r2, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    10cc:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    10d0:	44444144 	strbmi	r4, [r4], #-324	; 0xfffffebc
    10d4:	65530052 	ldrbvs	r0, [r3, #-82]	; 0xffffffae
    10d8:	44504574 	ldrbmi	r4, [r0], #-1396	; 0xfffffa8c
    10dc:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xfffff39e
    10e0:	64416666 	strbvs	r6, [r1], #-1638	; 0xfffff99a
    10e4:	53007264 	movwpl	r7, #612	; 0x264
    10e8:	50457465 	subpl	r7, r5, r5, ror #8
    10ec:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    10f0:	5f504500 	svcpl	0x00504500
    10f4:	46554244 	ldrbmi	r4, [r5], -r4, asr #4
    10f8:	004e495f 	subeq	r4, lr, pc, asr r9
    10fc:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0xfffffab9
    1100:	41785250 	cmnmi	r8, r0, asr r2
    1104:	00726464 	rsbseq	r6, r2, r4, ror #8
    1108:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0xfffffaad
    110c:	6c624450 	cfstrdvs	mvd4, [r2], #-320	; 0xfffffec0
    1110:	30667542 	rsbcc	r7, r6, r2, asr #10
    1114:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1118:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    111c:	78545045 	ldmdavc	r4, {r0, r2, r6, ip, lr}^
    1120:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1124:	62007375 	andvs	r7, r0, #-738197503	; 0xd4000001
    1128:	00726944 	rsbseq	r6, r2, r4, asr #18
    112c:	70795477 	rsbsvc	r5, r9, r7, ror r4
    1130:	65470065 	strbvs	r0, [r7, #-101]	; 0xffffff9b
    1134:	41504574 	cmpmi	r0, r4, ror r5
    1138:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    113c:	75007373 	strvc	r7, [r0, #-883]	; 0xfffffc8d
    1140:	6c5f6273 	lfmvs	f6, 2, [pc], {115}	; 0x73
    1144:	752f6269 	strvc	r6, [pc, #-617]!	; ee3 <__Stack_Size+0xae3>
    1148:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
    114c:	2e736765 	cdpcs	7, 7, cr6, cr3, cr5, {3}
    1150:	50450063 	subpl	r0, r5, r3, rrx
    1154:	5542445f 	strbpl	r4, [r2, #-1119]	; 0xfffffba1
    1158:	52455f46 	subpl	r5, r5, #280	; 0x118
    115c:	65470052 	strbvs	r0, [r7, #-82]	; 0xffffffae
    1160:	44504574 	ldrbmi	r4, [r0], #-1396	; 0xfffffa8c
    1164:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xfffff39e
    1168:	72694466 	rsbvc	r4, r9, #1711276032	; 0x66000000
    116c:	75427700 	strbvc	r7, [r2, #-1792]	; 0xfffff900
    1170:	64413166 	strbvs	r3, [r1], #-358	; 0xfffffe9a
    1174:	77007264 	strvc	r7, [r0, -r4, ror #4]
    1178:	00577753 	subseq	r7, r7, r3, asr r7
    117c:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0xfffffaad
    1180:	756f4450 	strbvc	r4, [pc, #-1104]!	; d38 <__Stack_Size+0x938>
    1184:	42656c62 	rsbmi	r6, r5, #25088	; 0x6200
    1188:	00666675 	rsbeq	r6, r6, r5, ror r6
    118c:	6f576f54 	svcvs	0x00576f54
    1190:	53006472 	movwpl	r6, #1138	; 0x472
    1194:	50457465 	subpl	r7, r5, r5, ror #8
    1198:	64417854 	strbvs	r7, [r1], #-2132	; 0xfffff7ac
    119c:	54007264 	strpl	r7, [r0], #-612	; 0xfffffd9c
    11a0:	6c67676f 	stclvs	7, cr6, [r7], #-444	; 0xfffffe44
    11a4:	4f544465 	svcmi	0x00544465
    11a8:	58545f47 	ldmdapl	r4, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    11ac:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    11b0:	62445045 	subvs	r5, r4, #69	; 0x45
    11b4:	6675426c 	ldrbtvs	r4, [r5], -ip, ror #4
    11b8:	64644131 	strbtvs	r4, [r4], #-305	; 0xfffffecf
    11bc:	65470072 	strbvs	r0, [r7, #-114]	; 0xffffff8e
    11c0:	54504574 	ldrbpl	r4, [r0], #-1396	; 0xfffffa8c
    11c4:	00657079 	rsbeq	r7, r5, r9, ror r0
    11c8:	61656c43 	cmnvs	r5, r3, asr #24
    11cc:	5f504572 	svcpl	0x00504572
    11d0:	5f525443 	svcpl	0x00525443
    11d4:	53005852 	movwpl	r5, #2130	; 0x852
    11d8:	50457465 	subpl	r7, r5, r5, ror #8
    11dc:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    11e0:	43666675 	cmnmi	r6, #122683392	; 0x7500000
    11e4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    11e8:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
    11ec:	4b5f5045 	blmi	17d5308 <__Stack_Size+0x17d4f08>
    11f0:	00444e49 	subeq	r4, r4, r9, asr #28
    11f4:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0xfffffaad
    11f8:	43785450 	cmnmi	r8, #80, 8	; 0x50000000
    11fc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1200:	656c4300 	strbvs	r4, [ip, #-768]!	; 0xfffffd00
    1204:	50457261 	subpl	r7, r5, r1, ror #4
    1208:	4e494b5f 	vmovmi.8	d9[2], r4
    120c:	6c430044 	mcrrvs	0, 4, r0, r3, cr4
    1210:	45726165 	ldrbmi	r6, [r2, #-357]!	; 0xfffffe9b
    1214:	756f4450 	strbvc	r4, [pc, #-1104]!	; dcc <__Stack_Size+0x9cc>
    1218:	42656c62 	rsbmi	r6, r5, #25088	; 0x6200
    121c:	00666675 	rsbeq	r6, r6, r5, ror r6
    1220:	42746547 	rsbsmi	r6, r4, #297795584	; 0x11c00000
    1224:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
    1228:	65470045 	strbvs	r0, [r7, #-69]	; 0xffffffbb
    122c:	54534974 	ldrbpl	r4, [r3], #-2420	; 0xfffff68c
    1230:	52770052 	rsbspl	r0, r7, #82	; 0x52
    1234:	77007465 	strvc	r7, [r0, -r5, ror #8]
    1238:	56676552 			; <UNDEFINED> instruction: 0x56676552
    123c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1240:	656c4300 	strbvs	r4, [ip, #-768]!	; 0xfffffd00
    1244:	54447261 	strbpl	r7, [r4], #-609	; 0xfffffd9f
    1248:	525f474f 	subspl	r4, pc, #20709376	; 0x13c0000
    124c:	65530058 	ldrbvs	r0, [r3, #-88]	; 0xffffffa8
    1250:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xfffff08c
    1254:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1258:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xfffff0a1
    125c:	64417700 	strbvs	r7, [r1], #-1792	; 0xfffff900
    1260:	47007264 	strmi	r7, [r0, -r4, ror #4]
    1264:	50457465 	subpl	r7, r5, r5, ror #8
    1268:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    126c:	43306675 	teqmi	r0, #122683392	; 0x7500000
    1270:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1274:	77647000 	strbvc	r7, [r4, -r0]!
    1278:	00676552 	rsbeq	r6, r7, r2, asr r5
    127c:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
    1280:	70617753 	rsbvc	r7, r1, r3, asr r7
    1284:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    1288:	50444e45 	subpl	r4, r4, r5, asr #28
    128c:	544e494f 	strbpl	r4, [lr], #-2383	; 0xfffff6b1
    1290:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    1294:	78525045 	ldmdavc	r2, {r0, r2, r6, ip, lr}^
    1298:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    129c:	54620074 	strbtpl	r0, [r2], #-116	; 0xffffff8c
    12a0:	00706d65 	rsbseq	r6, r0, r5, ror #26
    12a4:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
    12a8:	0052544e 	subseq	r5, r2, lr, asr #8
    12ac:	42746553 	rsbsmi	r6, r4, #348127232	; 0x14c00000
    12b0:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
    12b4:	65470045 	strbvs	r0, [r7, #-69]	; 0xffffffbb
    12b8:	54504574 	ldrbpl	r4, [r0], #-1396	; 0xfffffa8c
    12bc:	756f4378 	strbvc	r4, [pc, #-888]!	; f4c <__Stack_Size+0xb4c>
    12c0:	4300746e 	movwmi	r7, #1134	; 0x46e
    12c4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    12c8:	435f5045 	cmpmi	pc, #69	; 0x45
    12cc:	545f5254 	ldrbpl	r5, [pc], #-596	; 12d4 <__Stack_Size+0xed4>
    12d0:	65470058 	strbvs	r0, [r7, #-88]	; 0xffffffa8
    12d4:	44504574 	ldrbmi	r4, [r0], #-1396	; 0xfffffa8c
    12d8:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xfffff39e
    12dc:	6f433166 	svcvs	0x00433166
    12e0:	00746e75 	rsbseq	r6, r4, r5, ror lr
    12e4:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0xfffffaad
    12e8:	6c624450 	cfstrdvs	mvd4, [r2], #-320	; 0xfffffec0
    12ec:	30667542 	rsbcc	r7, r6, r2, asr #10
    12f0:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    12f4:	42770074 	rsbsmi	r0, r7, #116	; 0x74
    12f8:	41306675 	teqmi	r0, r5, ror r6
    12fc:	00726464 	rsbseq	r6, r2, r4, ror #8
    1300:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0xfffffaad
    1304:	756f4350 	strbvc	r4, [pc, #-848]!	; fbc <__Stack_Size+0xbbc>
    1308:	7852746e 	ldmdavc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    130c:	00676552 	rsbeq	r6, r7, r2, asr r5
    1310:	46746547 	ldrbtmi	r6, [r4], -r7, asr #10
    1314:	4700524e 	strmi	r5, [r0, -lr, asr #4]
    1318:	50457465 	subpl	r7, r5, r5, ror #8
    131c:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    1320:	41306675 	teqmi	r0, r5, ror r6
    1324:	00726464 	rsbseq	r6, r2, r4, ror #8
    1328:	70646e45 	rsbvc	r6, r4, r5, asr #28
    132c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    1330:	4f54445f 	svcmi	0x0054445f
    1334:	74535f47 	ldrbvc	r5, [r3], #-3911	; 0xfffff0b9
    1338:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    133c:	74654700 	strbtvc	r4, [r5], #-1792	; 0xfffff900
    1340:	78545045 	ldmdavc	r4, {r0, r2, r6, ip, lr}^
    1344:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1348:	656c4300 	strbvs	r4, [ip, #-768]!	; 0xfffffd00
    134c:	54447261 	strbpl	r7, [r4], #-609	; 0xfffffd9f
    1350:	545f474f 	ldrbpl	r4, [pc], #-1871	; 1358 <__Stack_Size+0xf58>
    1354:	65530058 	ldrbvs	r0, [r3, #-88]	; 0xffffffa8
    1358:	54504574 	ldrbpl	r4, [r0], #-1396	; 0xfffffa8c
    135c:	61745378 	cmnvs	r4, r8, ror r3
    1360:	00737574 	rsbseq	r7, r3, r4, ror r5
    1364:	4e704562 	cdpmi	5, 7, cr4, cr0, cr2, {3}
    1368:	53006d75 	movwpl	r6, #3445	; 0xd75
    136c:	4e457465 	cdpmi	4, 4, cr7, cr5, cr5, {3}
    1370:	494f5044 	stmdbmi	pc, {r2, r6, ip, lr}^	; <UNPREDICTABLE>
    1374:	5300544e 	movwpl	r5, #1102	; 0x44e
    1378:	50457465 	subpl	r7, r5, r5, ror #8
    137c:	64417852 	strbvs	r7, [r1], #-2130	; 0xfffff7ae
    1380:	53007264 	movwpl	r7, #612	; 0x264
    1384:	50457465 	subpl	r7, r5, r5, ror #8
    1388:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    138c:	43316675 	teqmi	r1, #122683392	; 0x7500000
    1390:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1394:	52544300 	subspl	r4, r4, #0, 6
    1398:	0050485f 	subseq	r4, r0, pc, asr r8
    139c:	75746553 	ldrbvc	r6, [r4, #-1363]!	; 0xfffffaad
    13a0:	505f3070 	subspl	r3, pc, r0, ror r0	; <UNPREDICTABLE>
    13a4:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    13a8:	53007373 	movwpl	r7, #883	; 0x373
    13ac:	52657661 	rsbpl	r7, r5, #101711872	; 0x6100000
    13b0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    13b4:	61530065 	cmpvs	r3, r5, rrx
    13b8:	53546576 	cmppl	r4, #494927872	; 0x1d800000
    13bc:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    13c0:	50457700 	subpl	r7, r5, r0, lsl #14
    13c4:	006c6156 	rsbeq	r6, ip, r6, asr r1
    13c8:	5f627375 	svcpl	0x00627375
    13cc:	2f62696c 	svccs	0x0062696c
    13d0:	5f627375 	svcpl	0x00627375
    13d4:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    13d8:	6e490063 	cdpvs	0, 4, cr0, cr9, cr3, {3}
    13dc:	72505f30 	subsvc	r5, r0, #48, 30	; 0xc0
    13e0:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    13e4:	754f0073 	strbvc	r0, [pc, #-115]	; 1379 <__Stack_Size+0xf79>
    13e8:	505f3074 	subspl	r3, pc, r4, ror r0	; <UNPREDICTABLE>
    13ec:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    13f0:	45007373 	strmi	r7, [r0, #-883]	; 0xfffffc8d
    13f4:	646e6950 	strbtvs	r6, [lr], #-2384	; 0xfffff6b0
    13f8:	53007865 	movwpl	r7, #2149	; 0x865
    13fc:	53657661 	cmnpl	r5, #101711872	; 0x6100000
    1400:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1404:	62737500 	rsbsvs	r7, r3, #0, 10
    1408:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    140c:	6273752f 	rsbsvs	r7, r3, #197132288	; 0xbc00000
    1410:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1414:	00632e74 	rsbeq	r2, r3, r4, ror lr
    1418:	65735570 	ldrbvs	r5, [r3, #-1392]!	; 0xfffffa90
    141c:	74535f72 	ldrbvc	r5, [r3], #-3954	; 0xfffff08e
    1420:	61646e61 	cmnvs	r4, r1, ror #28
    1424:	525f6472 	subspl	r6, pc, #1912602624	; 0x72000000
    1428:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
    142c:	00737473 	rsbseq	r7, r3, r3, ror r4
    1430:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    1434:	495f6563 	ldmdbmi	pc, {r0, r1, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    1438:	006f666e 	rsbeq	r6, pc, lr, ror #12
    143c:	74736f50 	ldrbtvc	r6, [r3], #-3920	; 0xfffff0b0
    1440:	72505f30 	subsvc	r5, r0, #48, 30	; 0xc0
    1444:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    1448:	73750073 	cmnvc	r5, #115	; 0x73
    144c:	696c5f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    1450:	73752f62 	cmnvc	r5, #392	; 0x188
    1454:	6f635f62 	svcvs	0x00635f62
    1458:	632e6572 			; <UNDEFINED> instruction: 0x632e6572
    145c:	444e4500 	strbmi	r4, [lr], #-1280	; 0xfffffb00
    1460:	4e494f50 	mcrmi	15, 2, r4, cr9, cr0, {2}
    1464:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
    1468:	004c4c41 	subeq	r4, ip, r1, asr #24
    146c:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    1470:	4e00746c 	cdpmi	4, 0, cr7, cr0, cr12, {3}
    1474:	505f504f 	subspl	r5, pc, pc, asr #32
    1478:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    147c:	44007373 	strmi	r7, [r0], #-883	; 0xfffffc8d
    1480:	42617461 	rsbmi	r7, r1, #1627389952	; 0x61000000
    1484:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1488:	65520072 	ldrbvs	r0, [r2, #-114]	; 0xffffff8e
    148c:	76726573 			; <UNDEFINED> instruction: 0x76726573
    1490:	53006465 	movwpl	r6, #1125	; 0x465
    1494:	646e6174 	strbtvs	r6, [lr], #-372	; 0xfffffe8c
    1498:	5f647261 	svcpl	0x00647261
    149c:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
    14a0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    14a4:	61727567 	cmnvs	r2, r7, ror #10
    14a8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    14ac:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
    14b0:	61745361 	cmnvs	r4, r1, ror #6
    14b4:	6e496567 	cdpvs	5, 4, cr6, cr9, cr7, {3}
    14b8:	56454400 	strbpl	r4, [r5], -r0, lsl #8
    14bc:	5f454349 	svcpl	0x00454349
    14c0:	4f4d4552 	svcmi	0x004d4552
    14c4:	575f4554 			; <UNDEFINED> instruction: 0x575f4554
    14c8:	55454b41 	strbpl	r4, [r5, #-2881]	; 0xfffff4bf
    14cc:	54530050 	ldrbpl	r0, [r3], #-80	; 0xffffffb0
    14d0:	454c4c41 	strbmi	r4, [ip, #-3137]	; 0xfffff3bf
    14d4:	79540044 	ldmdbvc	r4, {r2, r6}^
    14d8:	525f6570 	subspl	r6, pc, #112, 10	; 0x1c000000
    14dc:	65006365 	strvs	r6, [r0, #-869]	; 0xfffffc9b
    14e0:	5f746978 	svcpl	0x00746978
    14e4:	61446f4e 	cmpvs	r4, lr, asr #30
    14e8:	535f6174 	cmppl	pc, #116, 2
    14ec:	70757465 	rsbsvc	r7, r5, r5, ror #8
    14f0:	56770030 			; <UNDEFINED> instruction: 0x56770030
    14f4:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    14f8:	45440031 	strbmi	r0, [r4, #-49]	; 0xffffffcf
    14fc:	45434956 	strbmi	r4, [r3, #-2390]	; 0xfffff6aa
    1500:	5345445f 	movtpl	r4, #21599	; 0x545f
    1504:	50495243 	subpl	r5, r9, r3, asr #4
    1508:	00524f54 	subseq	r4, r2, r4, asr pc
    150c:	49525453 	ldmdbmi	r2, {r0, r1, r4, r6, sl, ip, lr}^
    1510:	445f474e 	ldrbmi	r4, [pc], #-1870	; 1518 <__Stack_Size+0x1118>
    1514:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    1518:	4f545049 	svcmi	0x00545049
    151c:	73550052 	cmpvc	r5, #82	; 0x52
    1520:	6f547265 	svcvs	0x00547265
    1524:	42414d50 	submi	r4, r1, #80, 26	; 0x1400
    1528:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    152c:	706f4372 	rsbvc	r4, pc, r2, ror r3	; <UNPREDICTABLE>
    1530:	61730079 	cmnvs	r3, r9, ror r0
    1534:	725f6576 	subsvc	r6, pc, #494927872	; 0x1d800000
    1538:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    153c:	4c006874 	stcmi	8, cr6, [r0], {116}	; 0x74
    1540:	5f545341 	svcpl	0x00545341
    1544:	445f4e49 	ldrbmi	r4, [pc], #-3657	; 154c <__Stack_Size+0x114c>
    1548:	00415441 	subeq	r5, r1, r1, asr #8
    154c:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    1550:	64726164 	ldrbtvs	r6, [r2], #-356	; 0xfffffe9c
    1554:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1558:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    155c:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    1560:	78450065 	stmdavc	r5, {r0, r2, r5, r6}^
    1564:	74636570 	strbtvc	r6, [r3], #-1392	; 0xfffffa90
    1568:	6174535f 	cmnvs	r4, pc, asr r3
    156c:	5f737574 	svcpl	0x00737574
    1570:	0074754f 	rsbseq	r7, r4, pc, asr #10
    1574:	53554150 	cmppl	r5, #80, 2
    1578:	65520045 	ldrbvs	r0, [r2, #-69]	; 0xffffffbb
    157c:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
    1580:	006f4e74 	rsbeq	r4, pc, r4, ror lr	; <UNPREDICTABLE>
    1584:	5f544547 	svcpl	0x00544547
    1588:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xfffff1b7
    158c:	43414652 	movtmi	r4, #5714	; 0x1652
    1590:	74530045 	ldrbvc	r0, [r3], #-69	; 0xffffffbb
    1594:	61646e61 	cmnvs	r4, r1, ror #28
    1598:	535f6472 	cmppl	pc, #1912602624	; 0x72000000
    159c:	6e457465 	cdpvs	4, 4, cr7, cr5, cr5, {3}
    15a0:	696f5064 	stmdbvs	pc!, {r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
    15a4:	6546746e 	strbvs	r7, [r6, #-1134]	; 0xfffffb92
    15a8:	72757461 	rsbsvc	r7, r5, #1627389952	; 0x61000000
    15ac:	45470065 	strbmi	r0, [r7, #-101]	; 0xffffff9b
    15b0:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
    15b4:	53555441 	cmppl	r5, #1090519040	; 0x41000000
    15b8:	54455300 	strbpl	r5, [r5], #-768	; 0xfffffd00
    15bc:	4145465f 	cmpmi	r5, pc, asr r6
    15c0:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
    15c4:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
    15c8:	754d5f61 	strbvc	r5, [sp, #-3937]	; 0xfffff09f
    15cc:	614d5f6c 	cmpvs	sp, ip, ror #30
    15d0:	63615078 	cmnvs	r1, #120	; 0x78
    15d4:	5374656b 	cmnpl	r4, #448790528	; 0x1ac00000
    15d8:	00657a69 	rsbeq	r7, r5, r9, ror #20
    15dc:	76654470 			; <UNDEFINED> instruction: 0x76654470
    15e0:	61745300 	cmnvs	r4, r0, lsl #6
    15e4:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
    15e8:	65535f64 	ldrbvs	r5, [r3, #-3940]	; 0xfffff09c
    15ec:	76654474 			; <UNDEFINED> instruction: 0x76654474
    15f0:	46656369 	strbtmi	r6, [r5], -r9, ror #6
    15f4:	75746165 	ldrbvc	r6, [r4, #-357]!	; 0xfffffe9b
    15f8:	70006572 	andvc	r6, r0, r2, ror r5
    15fc:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
    1600:	4e595300 	cdpmi	3, 5, cr5, cr9, cr0, {0}
    1604:	465f4843 	ldrbmi	r4, [pc], -r3, asr #16
    1608:	454d4152 	strbmi	r4, [sp, #-338]	; 0xfffffeae
    160c:	61745300 	cmnvs	r4, r0, lsl #6
    1610:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
    1614:	65475f64 	strbvs	r5, [r7, #-3940]	; 0xfffff09c
    1618:	746e4974 	strbtvc	r4, [lr], #-2420	; 0xfffff68c
    161c:	61667265 	cmnvs	r6, r5, ror #4
    1620:	53006563 	movwpl	r6, #1379	; 0x563
    1624:	445f5445 	ldrbmi	r5, [pc], #-1093	; 162c <__Stack_Size+0x122c>
    1628:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    162c:	4f545049 	svcmi	0x00545049
    1630:	45530052 	ldrbmi	r0, [r3, #-82]	; 0xffffffae
    1634:	4e495f54 	mcrmi	15, 2, r5, cr9, cr4, {2}
    1638:	46524554 			; <UNDEFINED> instruction: 0x46524554
    163c:	00454341 	subeq	r4, r5, r1, asr #6
    1640:	4145465f 	cmpmi	r5, pc, asr r6
    1644:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
    1648:	4c45535f 	mcrrmi	3, 5, r5, r5, cr15
    164c:	4f544345 	svcmi	0x00544345
    1650:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
    1654:	61646e61 	cmnvs	r4, r1, ror #28
    1658:	475f6472 			; <UNDEFINED> instruction: 0x475f6472
    165c:	6f437465 	svcvs	0x00437465
    1660:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1664:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
    1668:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    166c:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    1670:	64726164 	ldrbtvs	r6, [r2], #-356	; 0xfffffe9c
    1674:	656c435f 	strbvs	r4, [ip, #-863]!	; 0xfffffca1
    1678:	65467261 	strbvs	r7, [r6, #-609]	; 0xfffffd9f
    167c:	72757461 	rsbsvc	r7, r5, #1627389952	; 0x61000000
    1680:	45470065 	strbmi	r0, [r7, #-101]	; 0xffffff9b
    1684:	4f435f54 	svcmi	0x00435f54
    1688:	4749464e 	strbmi	r4, [r9, -lr, asr #12]
    168c:	54415255 	strbpl	r5, [r1], #-597	; 0xfffffdab
    1690:	004e4f49 	subeq	r4, lr, r9, asr #30
    1694:	4e4f435f 	mcrmi	3, 2, r4, cr15, cr15, {2}
    1698:	4c4f5254 	sfmmi	f5, 2, [pc], {84}	; 0x54
    169c:	4154535f 	cmpmi	r4, pc, asr r3
    16a0:	5f004554 	svcpl	0x00004554
    16a4:	43534544 	cmpmi	r3, #68, 10	; 0x11000000
    16a8:	54504952 	ldrbpl	r4, [r0], #-2386	; 0xfffff6ae
    16ac:	545f524f 	ldrbpl	r5, [pc], #-591	; 16b4 <__Stack_Size+0x12b4>
    16b0:	00455059 	subeq	r5, r5, r9, asr r0
    16b4:	54544553 	ldrbpl	r4, [r4], #-1363	; 0xfffffaad
    16b8:	5f474e49 	svcpl	0x00474e49
    16bc:	50005055 	andpl	r5, r0, r5, asr r0
    16c0:	6f54414d 	svcvs	0x0054414d
    16c4:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    16c8:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    16cc:	6f437265 	svcvs	0x00437265
    16d0:	53007970 	movwpl	r7, #2416	; 0x970
    16d4:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    16d8:	49464e4f 	stmdbmi	r6, {r0, r1, r2, r3, r6, r9, sl, fp, lr}^
    16dc:	41525547 	cmpmi	r2, r7, asr #10
    16e0:	4e4f4954 			; <UNDEFINED> instruction: 0x4e4f4954
    16e4:	49415700 	stmdbmi	r1, {r8, r9, sl, ip, lr}^
    16e8:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
    16ec:	53555441 	cmppl	r5, #1090519040	; 0x41000000
    16f0:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xfffff0a1
    16f4:	544f5400 	strbpl	r5, [pc], #-1024	; 16fc <__Stack_Size+0x12fc>
    16f8:	735f4c41 	cmpvc	pc, #16640	; 0x4100
    16fc:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
    1700:	00545345 	subseq	r5, r4, r5, asr #6
    1704:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xfffff1b7
    1708:	43414652 	movtmi	r4, #5714	; 0x1652
    170c:	45445f45 	strbmi	r5, [r4, #-3909]	; 0xfffff0bb
    1710:	49524353 	ldmdbmi	r2, {r0, r1, r4, r6, r8, r9, lr}^
    1714:	524f5450 	subpl	r5, pc, #80, 8	; 0x50000000
    1718:	76617300 	strbtvc	r7, [r1], -r0, lsl #6
    171c:	4c775f65 	ldclmi	15, cr5, [r7], #-404	; 0xfffffe6c
    1720:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1724:	74530068 	ldrbvc	r0, [r3], #-104	; 0xffffff98
    1728:	61646e61 	cmnvs	r4, r1, ror #28
    172c:	475f6472 			; <UNDEFINED> instruction: 0x475f6472
    1730:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1734:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1738:	444e4500 	strbmi	r4, [lr], #-1280	; 0xfffffb00
    173c:	4e494f50 	mcrmi	15, 2, r4, cr9, cr0, {2}
    1740:	45445f54 	strbmi	r5, [r4, #-3924]	; 0xfffff0ac
    1744:	49524353 	ldmdbmi	r2, {r0, r1, r4, r6, r8, r9, lr}^
    1748:	524f5450 	subpl	r5, pc, #80, 8	; 0x50000000
    174c:	4e4f4300 	cdpmi	3, 4, cr4, cr15, cr0, {0}
    1750:	5f474946 	svcpl	0x00474946
    1754:	43534544 	cmpmi	r3, #68, 10	; 0x11000000
    1758:	54504952 	ldrbpl	r4, [r0], #-2386	; 0xfffff6ae
    175c:	7000524f 	andvc	r5, r0, pc, asr #4
    1760:	00667542 	rsbeq	r7, r6, r2, asr #10
    1764:	69504570 	ldmdbvs	r0, {r4, r5, r6, r8, sl, lr}^
    1768:	006f666e 	rsbeq	r6, pc, lr, ror #12
    176c:	5f544553 	svcpl	0x00544553
    1770:	52444441 	subpl	r4, r4, #1090519040	; 0x41000000
    1774:	00535345 	subseq	r5, r3, r5, asr #6
    1778:	616c6552 	cmnvs	ip, r2, asr r5
    177c:	5f646574 	svcpl	0x00646574
    1780:	70646e45 	rsbvc	r6, r4, r5, asr #28
    1784:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    1788:	61745300 	cmnvs	r4, r0, lsl #6
    178c:	49737574 	ldmdbmi	r3!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
    1790:	006f666e 	rsbeq	r6, pc, lr, ror #12
    1794:	61746144 	cmnvs	r4, r4, asr #2
    1798:	67617453 			; <UNDEFINED> instruction: 0x67617453
    179c:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xfffff09b
    17a0:	54454700 	strbpl	r4, [r5], #-1792	; 0xfffff900
    17a4:	5345445f 	movtpl	r4, #21599	; 0x545f
    17a8:	50495243 	subpl	r5, r9, r3, asr #4
    17ac:	00524f54 	subseq	r4, r2, r4, asr pc
    17b0:	54494157 	strbpl	r4, [r9], #-343	; 0xfffffea9
    17b4:	5445535f 	strbpl	r5, [r5], #-863	; 0xfffffca1
    17b8:	52005055 	andpl	r5, r0, #85	; 0x55
    17bc:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
    17c0:	4e5f7473 	mrcmi	4, 2, r7, cr15, cr3, {3}
    17c4:	4157006f 	cmpmi	r7, pc, rrx
    17c8:	535f5449 	cmppl	pc, #1224736768	; 0x49000000
    17cc:	55544154 	ldrbpl	r4, [r4, #-340]	; 0xfffffeac
    17d0:	4e495f53 	mcrmi	15, 2, r5, cr9, cr3, {2}
    17d4:	454c4300 	strbmi	r4, [ip, #-768]	; 0xfffffd00
    17d8:	465f5241 	ldrbmi	r5, [pc], -r1, asr #4
    17dc:	55544145 	ldrbpl	r4, [r4, #-325]	; 0xfffffebb
    17e0:	4c004552 	cfstr32mi	mvfx4, [r0], {82}	; 0x52
    17e4:	5f545341 	svcpl	0x00545341
    17e8:	5f54554f 	svcpl	0x0054554f
    17ec:	41544144 	cmpmi	r4, r4, asr #2
    17f0:	6e497700 	cdpvs	7, 4, cr7, cr9, cr0, {0}
    17f4:	30786564 	rsbscc	r6, r8, r4, ror #10
    17f8:	62737500 	rsbsvs	r7, r3, #0, 10
    17fc:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    1800:	6273752f 	rsbsvs	r7, r3, #197132288	; 0xbc00000
    1804:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
    1808:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
    180c:	31706d65 	cmncc	r0, r5, ror #26
    1810:	424e7700 	submi	r7, lr, #0, 14
    1814:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    1818:	55627000 	strbpl	r7, [r2, #-0]!
    181c:	75427273 	strbvc	r7, [r2, #-627]	; 0xfffffd8d
    1820:	65740066 	ldrbvs	r0, [r4, #-102]!	; 0xffffff9a
    1824:	0032706d 	eorseq	r7, r2, sp, rrx
    1828:	414d5077 	hvcmi	54535	; 0xd507
    182c:	41667542 	cmnmi	r6, r2, asr #10
    1830:	00726464 	rsbseq	r6, r2, r4, ror #8
    1834:	56776470 			; <UNDEFINED> instruction: 0x56776470
    1838:	Address 0x0000000000001838 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	00000000 	andeq	r0, r0, r0
       4:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
       8:	08000251 	stmdaeq	r0, {r0, r4, r6, r9}
    gpio_write_bit( bank,pin,1-onState);
       c:	51500001 	cmppl	r0, r1
      10:	58080002 	stmdapl	r8, {r1}
{
      14:	04080002 	streq	r0, [r8], #-2
    gpio_write_bit( bank,pin,1-onState);
      18:	5001f300 	andpl	pc, r1, r0, lsl #6
    while (count-- > 0)
      1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
        gpio_write_bit( bank,pin,onState);
      2c:	00022c00 	andeq	r2, r2, r0, lsl #24
      30:	00023f08 	andeq	r3, r2, r8, lsl #30
        for (c = rate; c > 0; c--)
      34:	50000108 	andpl	r0, r0, r8, lsl #2
        gpio_write_bit( bank,pin,1-onState);
      38:	0800023f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r9}
      3c:	08000240 	stmdaeq	r0, {r6, r9}
      40:	01f30004 	mvnseq	r0, r4
      44:	02409f50 	subeq	r9, r0, #80, 30	; 0x140
        for (c = rate; c > 0; c--)
      48:	02420800 	subeq	r0, r2, #0, 16
            asm volatile("nop");
      4c:	00010800 	andeq	r0, r1, r0, lsl #16
        for (c = rate; c > 0; c--)
      50:	00024250 	andeq	r4, r2, r0, asr r2
__RESETFAULTMASK:
      54:	00024c08 	andeq	r4, r2, r8, lsl #24
__SETFAULTMASK:
      58:	f3000408 	vshl.u8	d0, d8, d0
__READ_FAULTMASK:
      5c:	009f5001 	addseq	r5, pc, r1
	...
__GetBASEPRI:
      68:	32000000 	andcc	r0, r0, #0

      6c:	3f080002 	svccc	0x00080002
  REV16 r0, r0
      70:	01080002 	tsteq	r8, r2

      74:	02405300 	subeq	r5, r0, #0, 6
      78:	024c0800 	subeq	r0, ip, #0, 16
      7c:	00010800 	andeq	r0, r1, r0, lsl #16
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      80:	00000053 	andeq	r0, r0, r3, asr r0
	...
}
      8c:	00022000 	andeq	r2, r2, r0
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
      90:	00022508 	andeq	r2, r2, r8, lsl #10
      94:	50000108 	andpl	r0, r0, r8, lsl #2
      98:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
      9c:	0800022c 	stmdaeq	r0, {r2, r3, r5, r9}
      a0:	01f30004 	mvnseq	r0, r4
}
      a4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
      b0:	02140000 	andseq	r0, r4, #0
      b4:	02190800 	andseq	r0, r9, #0, 16
      b8:	00010800 	andeq	r0, r1, r0, lsl #16
      bc:	00021950 	andeq	r1, r2, r0, asr r9
      c0:	00022008 	andeq	r2, r2, r8
      c4:	f3000408 	vshl.u8	d0, d8, d0
      c8:	009f5001 	addseq	r5, pc, r1
	...
      d4:	34000000 	strcc	r0, [r0], #-0
      d8:	3a080001 	bcc	2000e4 <__Stack_Size+0x1ffce4>
      dc:	01080001 	tsteq	r8, r1
      e0:	013a5000 	teqeq	sl, r0
      e4:	013e0800 	teqeq	lr, r0, lsl #16
      e8:	00040800 	andeq	r0, r4, r0, lsl #16
      ec:	9f5001f3 	svcls	0x005001f3
	...
      f8:	00020200 	andeq	r0, r2, r0, lsl #4
      fc:	00000000 	andeq	r0, r0, r0
     100:	080001a6 	stmdaeq	r0, {r1, r2, r5, r7, r8}
     104:	080001a6 	stmdaeq	r0, {r1, r2, r5, r7, r8}
     108:	a6530001 	ldrbge	r0, [r3], -r1
     10c:	aa080001 	bge	200118 <__Stack_Size+0x1ffd18>
     110:	05080001 	streq	r0, [r8, #-1]
     114:	40007300 	andmi	r7, r0, r0, lsl #6
     118:	01aa9f27 			; <UNDEFINED> instruction: 0x01aa9f27
     11c:	01b40800 			; <UNDEFINED> instruction: 0x01b40800
     120:	00070800 	andeq	r0, r7, r0, lsl #16
     124:	27400073 	smlsldxcs	r0, r0, r3, r0	; <UNPREDICTABLE>
     128:	b49f2740 	ldrlt	r2, [pc], #1856	; 130 <_Minimum_Stack_Size+0x30>
     12c:	be080001 	cdplt	0, 0, cr0, cr8, cr1, {0}
     130:	09080001 	stmdbeq	r8, {r0}
     134:	18807200 	stmne	r0, {r9, ip, sp, lr}
     138:	40274006 	eormi	r4, r7, r6
     13c:	00009f27 	andeq	r9, r0, r7, lsr #30
     140:	00000000 	andeq	r0, r0, r0
     144:	01000000 	mrseq	r0, (UNDEF: 0)
     148:	01000001 	tsteq	r0, r1
     14c:	04140001 	ldreq	r0, [r4], #-1
     150:	04140800 	ldreq	r0, [r4], #-2048	; 0xfffff800
     154:	00010800 	andeq	r0, r1, r0, lsl #16
     158:	00041453 	andeq	r1, r4, r3, asr r4
     15c:	00041808 	andeq	r1, r4, r8, lsl #16
     160:	73000508 	movwvc	r0, #1288	; 0x508
     164:	9f214000 	svcls	0x00214000
     168:	0800043e 	stmdaeq	r0, {r1, r2, r3, r4, r5, sl}
     16c:	0800043e 	stmdaeq	r0, {r1, r2, r3, r4, r5, sl}
     170:	3e510001 	cdpcc	0, 5, cr0, cr1, cr1, {0}
     174:	50080004 	andpl	r0, r8, r4
     178:	06080004 	streq	r0, [r8], -r4
     17c:	09007100 	stmdbeq	r0, {r8, ip, sp, lr}
     180:	009f1aef 	addseq	r1, pc, pc, ror #21
	...
     18c:	b2000101 	andlt	r0, r0, #1073741824	; 0x40000000
     190:	b2080003 	andlt	r0, r8, #3
     194:	01080003 	tsteq	r8, r3
     198:	03b25100 			; <UNDEFINED> instruction: 0x03b25100
     19c:	03c80800 	biceq	r0, r8, #0, 16
     1a0:	00060800 	andeq	r0, r6, r0, lsl #16
     1a4:	fb090071 	blx	240372 <__Stack_Size+0x23ff72>
     1a8:	00009f1a 	andeq	r9, r0, sl, lsl pc
     1ac:	00000000 	andeq	r0, r0, r0
     1b0:	01000000 	mrseq	r0, (UNDEF: 0)
     1b4:	03900001 	orrseq	r0, r0, #1
     1b8:	03900800 	orrseq	r0, r0, #0, 16
     1bc:	00010800 	andeq	r0, r1, r0, lsl #16
     1c0:	00039053 	andeq	r9, r3, r3, asr r0
     1c4:	00039408 	andeq	r9, r3, r8, lsl #8
     1c8:	73000508 	movwvc	r0, #1288	; 0x508
     1cc:	9f213c00 	svcls	0x00213c00
	...
     1e0:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
     1e4:	0800026a 	stmdaeq	r0, {r1, r3, r5, r6, r9}
     1e8:	6a500001 	bvs	14001f4 <__Stack_Size+0x13ffdf4>
     1ec:	6e080002 	cdpvs	0, 0, cr0, cr8, cr2, {0}
     1f0:	04080002 	streq	r0, [r8], #-2
     1f4:	5001f300 	andpl	pc, r1, r0, lsl #6
     1f8:	00026e9f 	muleq	r2, pc, lr	; <UNPREDICTABLE>
     1fc:	00027108 	andeq	r7, r2, r8, lsl #2
     200:	50000108 	andpl	r0, r0, r8, lsl #2
     204:	08000271 	stmdaeq	r0, {r0, r4, r5, r6, r9}
     208:	080002cc 	stmdaeq	r0, {r2, r3, r6, r7, r9}
     20c:	01f30004 	mvnseq	r0, r4
     210:	00009f50 	andeq	r9, r0, r0, asr pc
     214:	00000000 	andeq	r0, r0, r0
     218:	00030000 	andeq	r0, r3, r0
     21c:	02580000 	subseq	r0, r8, #0
     220:	02a80800 	adceq	r0, r8, #0, 16
     224:	00020800 	andeq	r0, r2, r0, lsl #16
     228:	02aa9f30 	adceq	r9, sl, #48, 30	; 0xc0
     22c:	02cc0800 	sbceq	r0, ip, #0, 16
     230:	00020800 	andeq	r0, r2, r0, lsl #16
     234:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
     240:	02760000 	rsbseq	r0, r6, #0
     244:	029c0800 	addseq	r0, ip, #0, 16
     248:	00010800 	andeq	r0, r1, r0, lsl #16
     24c:	0002aa54 	andeq	sl, r2, r4, asr sl
     250:	0002cc08 	andeq	ip, r2, r8, lsl #24
     254:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
     260:	029a0000 	addseq	r0, sl, #0
     264:	02a50800 	adceq	r0, r5, #0, 16
     268:	00010800 	andeq	r0, r1, r0, lsl #16
     26c:	00000053 	andeq	r0, r0, r3, asr r0
	...
     27c:	0002cc00 	andeq	ip, r2, r0, lsl #24
     280:	0002dc08 	andeq	sp, r2, r8, lsl #24
     284:	50000108 	andpl	r0, r0, r8, lsl #2
     288:	080002dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9}
     28c:	080002e0 	stmdaeq	r0, {r5, r6, r7, r9}
     290:	01f30004 	mvnseq	r0, r4
     294:	02e09f50 	rsceq	r9, r0, #80, 30	; 0x140
     298:	02e30800 	rsceq	r0, r3, #0, 16
     29c:	00010800 	andeq	r0, r1, r0, lsl #16
     2a0:	0002e350 	andeq	lr, r2, r0, asr r3
     2a4:	0002f008 	andeq	pc, r2, r8
     2a8:	f3000408 	vshl.u8	d0, d8, d0
     2ac:	009f5001 	addseq	r5, pc, r1
     2b0:	00000000 	andeq	r0, r0, r0
     2b4:	01000000 	mrseq	r0, (UNDEF: 0)
     2b8:	0002e000 	andeq	lr, r2, r0
     2bc:	0002f008 	andeq	pc, r2, r8
     2c0:	f3000408 	vshl.u8	d0, d8, d0
     2c4:	009f5001 	addseq	r5, pc, r1
     2c8:	00000000 	andeq	r0, r0, r0
     2cc:	02000000 	andeq	r0, r0, #0
     2d0:	ec000000 	stc	0, cr0, [r0], {-0}
     2d4:	22080005 	andcs	r0, r8, #5
     2d8:	02080006 	andeq	r0, r8, #6
     2dc:	3c9f3000 	ldccc	0, cr3, [pc], {0}
     2e0:	4a080006 	bmi	200300 <__Stack_Size+0x1fff00>
     2e4:	02080006 	andeq	r0, r8, #6
     2e8:	009f3000 	addseq	r3, pc, r0
     2ec:	00000000 	andeq	r0, r0, r0
     2f0:	03000000 	movweq	r0, #0
     2f4:	ec000000 	stc	0, cr0, [r0], {-0}
     2f8:	22080005 	andcs	r0, r8, #5
     2fc:	02080006 	andeq	r0, r8, #6
     300:	3c9f3000 	ldccc	0, cr3, [pc], {0}
     304:	4a080006 	bmi	200324 <__Stack_Size+0x1fff24>
     308:	02080006 	andeq	r0, r8, #6
     30c:	009f3000 	addseq	r3, pc, r0
	...
     318:	24000101 	strcs	r0, [r0], #-257	; 0xfffffeff
     31c:	24080006 	strcs	r0, [r8], #-6
     320:	01080006 	tsteq	r8, r6
     324:	06245500 	strteq	r5, [r4], -r0, lsl #10
     328:	062a0800 	strteq	r0, [sl], -r0, lsl #16
     32c:	00030800 	andeq	r0, r3, r0, lsl #16
     330:	009f0175 	addseq	r0, pc, r5, ror r1	; <UNPREDICTABLE>
	...
     33c:	44000000 	strmi	r0, [r0], #-0
     340:	4c080009 	stcmi	0, cr0, [r8], {9}
     344:	01080009 	tsteq	r8, r9
     348:	094c5000 	stmdbeq	ip, {ip, lr}^
     34c:	094e0800 	stmdbeq	lr, {fp}^
     350:	00010800 	andeq	r0, r1, r0, lsl #16
     354:	00000050 	andeq	r0, r0, r0, asr r0
     358:	00000000 	andeq	r0, r0, r0
     35c:	00000100 	andeq	r0, r0, r0, lsl #2
     360:	4c000000 	stcmi	0, cr0, [r0], {-0}
     364:	4e080009 	cdpmi	0, 0, cr0, cr8, cr9, {0}
     368:	07080009 	streq	r0, [r8, -r9]
     36c:	00703f00 	rsbseq	r3, r0, r0, lsl #30
     370:	9f242432 	svcls	0x00242432
     374:	08000952 	stmdaeq	r0, {r1, r4, r6, r8, fp}
     378:	08000954 	stmdaeq	r0, {r2, r4, r6, r8, fp}
     37c:	54500001 	ldrbpl	r0, [r0], #-1
     380:	56080009 	strpl	r0, [r8], -r9
     384:	04080009 	streq	r0, [r8], #-9
     388:	20007000 	andcs	r7, r0, r0
     38c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     398:	0008d800 	andeq	sp, r8, r0, lsl #16
     39c:	00091208 	andeq	r1, r9, r8, lsl #4
     3a0:	50000108 	andpl	r0, r0, r8, lsl #2
     3a4:	08000912 	stmdaeq	r0, {r1, r4, r8, fp}
     3a8:	08000920 	stmdaeq	r0, {r5, r8, fp}
     3ac:	01f30004 	mvnseq	r0, r4
     3b0:	00009f50 	andeq	r9, r0, r0, asr pc
     3b4:	00000000 	andeq	r0, r0, r0
     3b8:	00020000 	andeq	r0, r2, r0
     3bc:	08d80000 	ldmeq	r8, {}^	; <UNPREDICTABLE>
     3c0:	09120800 	ldmdbeq	r2, {fp}
     3c4:	00010800 	andeq	r0, r1, r0, lsl #16
     3c8:	00091250 	andeq	r1, r9, r0, asr r2
     3cc:	00092008 	andeq	r2, r9, r8
     3d0:	f3000408 	vshl.u8	d0, d8, d0
     3d4:	009f5001 	addseq	r5, pc, r1
	...
     3e0:	0008e800 	andeq	lr, r8, r0, lsl #16
     3e4:	00092008 	andeq	r2, r9, r8
     3e8:	52000108 	andpl	r0, r0, #8, 2
	...
     400:	00010000 	andeq	r0, r1, r0
     404:	00000050 	andeq	r0, r0, r0, asr r0
     408:	00000000 	andeq	r0, r0, r0
     40c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
     418:	01f30004 	mvnseq	r0, r4
     41c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     428:	01000000 	mrseq	r0, (UNDEF: 0)
     42c:	00000001 	andeq	r0, r0, r1
     430:	00000000 	andeq	r0, r0, r0
     434:	00010000 	andeq	r0, r1, r0
     438:	00000051 	andeq	r0, r0, r1, asr r0
     43c:	00000000 	andeq	r0, r0, r0
     440:	f3000400 	vshl.u8	d0, d0, d0
     444:	009f5101 	addseq	r5, pc, r1, lsl #2
     448:	00000000 	andeq	r0, r0, r0
     44c:	03000000 	movweq	r0, #0
     450:	9f017100 	svcls	0x00017100
	...
     45c:	00510001 	subseq	r0, r1, r1
	...
     468:	b0000000 	andlt	r0, r0, r0
     46c:	d0080008 	andle	r0, r8, r8
     470:	01080008 	tsteq	r8, r8
     474:	08d05000 	ldmeq	r0, {ip, lr}^
     478:	08d80800 	ldmeq	r8, {fp}^
     47c:	00040800 	andeq	r0, r4, r0, lsl #16
     480:	9f5001f3 	svcls	0x005001f3
	...
     48c:	00010101 	andeq	r0, r1, r1, lsl #2
     490:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
     494:	080008ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, fp}
     498:	9f320002 	svcls	0x00320002
     49c:	080008ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, fp}
     4a0:	080008d8 	stmdaeq	r0, {r3, r4, r6, r7, fp}
     4a4:	9f300002 	svcls	0x00300002
	...
     4b4:	080007e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl}
     4b8:	0800081a 	stmdaeq	r0, {r1, r3, r4, fp}
     4bc:	1a500001 	bne	14004c8 <__Stack_Size+0x14000c8>
     4c0:	50080008 	andpl	r0, r8, r8
     4c4:	04080008 	streq	r0, [r8], #-8
     4c8:	5001f300 	andpl	pc, r1, r0, lsl #6
     4cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     4d0:	00000000 	andeq	r0, r0, r0
     4d4:	00000200 	andeq	r0, r0, r0, lsl #4
     4d8:	00000000 	andeq	r0, r0, r0
     4dc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
     4e0:	0007e400 	andeq	lr, r7, r0, lsl #8
     4e4:	0007f208 	andeq	pc, r7, r8, lsl #4
     4e8:	30000208 	andcc	r0, r0, r8, lsl #4
     4ec:	0007f29f 	muleq	r7, pc, r2	; <UNPREDICTABLE>
     4f0:	0007fa08 	andeq	pc, r7, r8, lsl #20
     4f4:	52000108 	andpl	r0, r0, #8, 2
     4f8:	08000802 	stmdaeq	r0, {r1, fp}
     4fc:	0800080a 	stmdaeq	r0, {r1, r3, fp}
     500:	0a510001 	beq	144050c <__Stack_Size+0x144010c>
     504:	22080008 	andcs	r0, r8, #8
     508:	01080008 	tsteq	r8, r8
     50c:	08225300 	stmdaeq	r2!, {r8, r9, ip, lr}
     510:	08220800 	stmdaeq	r2!, {fp}
     514:	00060800 	andeq	r0, r6, r0, lsl #16
     518:	00700073 	rsbseq	r0, r0, r3, ror r0
     51c:	08229f24 	stmdaeq	r2!, {r2, r5, r8, r9, sl, fp, ip, pc}
     520:	08240800 	stmdaeq	r4!, {fp}
     524:	000c0800 	andeq	r0, ip, r0, lsl #16
     528:	00700073 	rsbseq	r0, r0, r3, ror r0
     52c:	70ff0824 	rscsvc	r0, pc, r4, lsr #16
     530:	9f1a2400 	svcls	0x001a2400
	...
     53c:	04020003 	streq	r0, [r2], #-3
     540:	00000004 	andeq	r0, r0, r4
     544:	00000000 	andeq	r0, r0, r0
     548:	07e40000 	strbeq	r0, [r4, r0]!
     54c:	081e0800 	ldmdaeq	lr, {fp}
     550:	00020800 	andeq	r0, r2, r0, lsl #16
     554:	08229f30 	stmdaeq	r2!, {r4, r5, r8, r9, sl, fp, ip, pc}
     558:	08220800 	stmdaeq	r2!, {fp}
     55c:	00010800 	andeq	r0, r1, r0, lsl #16
     560:	00082255 	andeq	r2, r8, r5, asr r2
     564:	00082a08 	andeq	r2, r8, r8, lsl #20
     568:	08000a08 	stmdaeq	r0, {r3, r9, fp}
     56c:	240070ff 	strcs	r7, [r0], #-255	; 0xffffff01
     570:	1a007520 	bne	1d9f8 <__Stack_Size+0x1d5f8>
     574:	00082a9f 	muleq	r8, pc, sl	; <UNPREDICTABLE>
     578:	00082e08 	andeq	r2, r8, r8, lsl #28
     57c:	08000e08 	stmdaeq	r0, {r3, r9, sl, fp}
     580:	330072ff 	movwcc	r7, #767	; 0x2ff
     584:	2424331a 	strtcs	r3, [r4], #-794	; 0xfffffce6
     588:	1a007520 	bne	1da10 <__Stack_Size+0x1d610>
     58c:	00082e9f 	muleq	r8, pc, lr	; <UNPREDICTABLE>
     590:	00083408 	andeq	r3, r8, r8, lsl #8
     594:	53000108 	movwpl	r0, #264	; 0x108
     598:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
     59c:	08000836 	stmdaeq	r0, {r1, r2, r4, r5, fp}
     5a0:	80710003 	rsbshi	r0, r1, r3
     5a4:	00083606 	andeq	r3, r8, r6, lsl #12
     5a8:	00083a08 	andeq	r3, r8, r8, lsl #20
     5ac:	72000b08 	andvc	r0, r0, #8, 22	; 0x2000
     5b0:	1afc0800 	bne	fff025b8 <BootRAM+0xee72d59>
     5b4:	ff1c000c 			; <UNDEFINED> instruction: 0xff1c000c
     5b8:	00001c1f 	andeq	r1, r0, pc, lsl ip
     5bc:	00000000 	andeq	r0, r0, r0
     5c0:	03040000 	movweq	r0, #16384	; 0x4000
     5c4:	00000003 	andeq	r0, r0, r3
     5c8:	080007e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl}
     5cc:	08000822 	stmdaeq	r0, {r1, r5, fp}
     5d0:	9f300002 	svcls	0x00300002
     5d4:	08000822 	stmdaeq	r0, {r1, r5, fp}
     5d8:	0800082a 	stmdaeq	r0, {r1, r3, r5, fp}
     5dc:	ff080006 			; <UNDEFINED> instruction: 0xff080006
     5e0:	9f240070 	svcls	0x00240070
     5e4:	0800082a 	stmdaeq	r0, {r1, r3, r5, fp}
     5e8:	08000850 	stmdaeq	r0, {r4, r6, fp}
     5ec:	00500001 	subseq	r0, r0, r1
     5f0:	00000000 	andeq	r0, r0, r0
     5f4:	05000000 	streq	r0, [r0, #-0]
     5f8:	e4000000 	str	r0, [r0], #-0
     5fc:	f6080007 			; <UNDEFINED> instruction: 0xf6080007
     600:	02080007 	andeq	r0, r8, #7
     604:	f69f3000 			; <UNDEFINED> instruction: 0xf69f3000
     608:	02080007 	andeq	r0, r8, #7
     60c:	01080008 	tsteq	r8, r8
     610:	00005100 	andeq	r5, r0, r0, lsl #2
     614:	00000000 	andeq	r0, r0, r0
     618:	01060000 	mrseq	r0, (UNDEF: 6)
     61c:	00000001 	andeq	r0, r0, r1
     620:	080007e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl}
     624:	080007f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, r9, sl}
     628:	9f3f0002 	svcls	0x003f0002
     62c:	080007f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, r9, sl}
     630:	080007fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, r9, sl}
     634:	723f0005 	eorsvc	r0, pc, #5
     638:	fa9f2500 	blx	fe7c9a40 <BootRAM+0xd73a1e1>
     63c:	08080007 	stmdaeq	r8, {r0, r1, r2}
     640:	01080008 	tsteq	r8, r8
     644:	00005200 	andeq	r5, r0, r0, lsl #4
     648:	00000000 	andeq	r0, r0, r0
     64c:	00020000 	andeq	r0, r2, r0
     650:	079c0000 	ldreq	r0, [ip, r0]
     654:	07c00800 	strbeq	r0, [r0, r0, lsl #16]
     658:	00020800 	andeq	r0, r2, r0, lsl #16
     65c:	07d29f30 			; <UNDEFINED> instruction: 0x07d29f30
     660:	07e40800 	strbeq	r0, [r4, r0, lsl #16]!
     664:	00020800 	andeq	r0, r2, r0, lsl #16
     668:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
     678:	08740000 	ldmdaeq	r4!, {}^	; <UNPREDICTABLE>
     67c:	08810800 	stmeq	r1, {fp}
     680:	00010800 	andeq	r0, r1, r0, lsl #16
     684:	00088150 	andeq	r8, r8, r0, asr r1
     688:	00089408 	andeq	r9, r8, r8, lsl #8
     68c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
     690:	08000894 	stmdaeq	r0, {r2, r4, r7, fp}
     694:	08000897 	stmdaeq	r0, {r0, r1, r2, r4, r7, fp}
     698:	97500001 	ldrbls	r0, [r0, -r1]
     69c:	9c080008 	stcls	0, cr0, [r8], {8}
     6a0:	04080008 	streq	r0, [r8], #-8
     6a4:	5001f300 	andpl	pc, r1, r0, lsl #6
     6a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     6b4:	00075800 	andeq	r5, r7, r0, lsl #16
     6b8:	00076908 	andeq	r6, r7, r8, lsl #18
     6bc:	50000108 	andpl	r0, r0, r8, lsl #2
     6c0:	08000769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl}
     6c4:	0800076a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl}
     6c8:	01f30004 	mvnseq	r0, r4
     6cc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     6d8:	0800075e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, r9, sl}
     6dc:	08000769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl}
     6e0:	00530001 	subseq	r0, r3, r1
     6e4:	00000000 	andeq	r0, r0, r0
     6e8:	01000000 	mrseq	r0, (UNDEF: 0)
     6ec:	00075e00 	andeq	r5, r7, r0, lsl #28
     6f0:	00076908 	andeq	r6, r7, r8, lsl #18
     6f4:	53000108 	movwpl	r0, #264	; 0x108
	...
     704:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
     708:	08000748 	stmdaeq	r0, {r3, r6, r8, r9, sl}
     70c:	48500001 	ldmdami	r0, {r0}^
     710:	58080007 	stmdapl	r8, {r0, r1, r2}
     714:	04080007 	streq	r0, [r8], #-7
     718:	5001f300 	andpl	pc, r1, r0, lsl #6
     71c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     720:	00000000 	andeq	r0, r0, r0
     724:	46000000 	strmi	r0, [r0], -r0
     728:	4e080007 	cdpmi	0, 0, cr0, cr8, cr7, {0}
     72c:	01080007 	tsteq	r8, r7
     730:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     73c:	08000732 	stmdaeq	r0, {r1, r4, r5, r8, r9, sl}
     740:	08000738 	stmdaeq	r0, {r3, r4, r5, r8, r9, sl}
     744:	00520001 	subseq	r0, r2, r1
	...
     760:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     76c:	00560001 	subseq	r0, r6, r1
     770:	00000000 	andeq	r0, r0, r0
     774:	01000000 	mrseq	r0, (UNDEF: 0)
     778:	00005000 	andeq	r5, r0, r0
     77c:	00000000 	andeq	r0, r0, r0
     780:	00010000 	andeq	r0, r1, r0
     784:	00000056 	andeq	r0, r0, r6, asr r0
     788:	00000000 	andeq	r0, r0, r0
     78c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     798:	00020200 	andeq	r0, r2, r0, lsl #4
	...
     7a4:	00510001 	subseq	r0, r1, r1
     7a8:	00000000 	andeq	r0, r0, r0
     7ac:	04000000 	streq	r0, [r0], #-0
     7b0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     7b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     7c0:	03030202 	movweq	r0, #12802	; 0x3202
	...
     7cc:	01000000 	mrseq	r0, (UNDEF: 0)
     7d0:	00005200 	andeq	r5, r0, r0, lsl #4
     7d4:	00000000 	andeq	r0, r0, r0
     7d8:	00040000 	andeq	r0, r4, r0
     7dc:	9f5201f3 	svcls	0x005201f3
	...
     7e8:	00540001 	subseq	r0, r4, r1
     7ec:	00000000 	andeq	r0, r0, r0
     7f0:	03000000 	movweq	r0, #0
     7f4:	9f7f7400 	svcls	0x007f7400
	...
     800:	7f740003 	svcvc	0x00740003
     804:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     818:	53000100 	movwpl	r0, #256	; 0x100
	...
     824:	00580001 	subseq	r0, r8, r1
	...
     838:	02000000 	andeq	r0, r0, #0
     83c:	00009100 	andeq	r9, r0, r0, lsl #2
     840:	00000000 	andeq	r0, r0, r0
     844:	02000000 	andeq	r0, r0, #0
     848:	00009100 	andeq	r9, r0, r0, lsl #2
	...
     854:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     860:	01000000 	mrseq	r0, (UNDEF: 0)
     864:	00005300 	andeq	r5, r0, r0, lsl #6
     868:	00000000 	andeq	r0, r0, r0
     86c:	00010000 	andeq	r0, r1, r0
     870:	00000058 	andeq	r0, r0, r8, asr r0
     874:	00000000 	andeq	r0, r0, r0
     878:	53000100 	movwpl	r0, #256	; 0x100
	...
     884:	00530001 	subseq	r0, r3, r1
	...
     898:	01000000 	mrseq	r0, (UNDEF: 0)
     89c:	00005000 	andeq	r5, r0, r0
     8a0:	00000000 	andeq	r0, r0, r0
     8a4:	00040000 	andeq	r0, r4, r0
     8a8:	9f5001f3 	svcls	0x005001f3
	...
     8b4:	00020200 	andeq	r0, r2, r0, lsl #4
     8b8:	06740000 	ldrbteq	r0, [r4], -r0
     8bc:	06740800 	ldrbteq	r0, [r4], -r0, lsl #16
     8c0:	00010800 	andeq	r0, r1, r0, lsl #16
     8c4:	00067452 	andeq	r7, r6, r2, asr r4
     8c8:	00067808 	andeq	r7, r6, r8, lsl #16
     8cc:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
     8d0:	30244800 	eorcc	r4, r4, r0, lsl #16
     8d4:	06789f29 	ldrbteq	r9, [r8], -r9, lsr #30
     8d8:	06880800 	streq	r0, [r8], r0, lsl #16
     8dc:	00080800 	andeq	r0, r8, r0, lsl #16
     8e0:	485201f3 	ldmdami	r2, {r0, r1, r4, r5, r6, r7, r8}^
     8e4:	9f293024 	svcls	0x00293024
	...
     8f0:	00000001 	andeq	r0, r0, r1
     8f4:	08000ace 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, fp}
     8f8:	08000ad6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, fp}
     8fc:	9f300002 	svcls	0x00300002
     900:	08000ad6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, fp}
     904:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
     908:	00560001 	subseq	r0, r6, r1
	...
     914:	7c000000 	stcvc	0, cr0, [r0], {-0}
     918:	9208000a 	andls	r0, r8, #10
     91c:	0108000a 	tsteq	r8, sl
     920:	0a925000 	beq	fe494928 <BootRAM+0xd4050c9>
     924:	0aac0800 	beq	feb0292c <BootRAM+0xda730cd>
     928:	00040800 	andeq	r0, r4, r0, lsl #16
     92c:	9f5001f3 	svcls	0x005001f3
	...
     93c:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
     940:	08000a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp}
     944:	6a500001 	bvs	1400950 <__Stack_Size+0x1400550>
     948:	7c08000a 	stcvc	0, cr0, [r8], {10}
     94c:	0408000a 	streq	r0, [r8], #-10
     950:	5001f300 	andpl	pc, r1, r0, lsl #6
     954:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     960:	000a3c00 	andeq	r3, sl, r0, lsl #24
     964:	000a4a08 	andeq	r4, sl, r8, lsl #20
     968:	50000108 	andpl	r0, r0, r8, lsl #2
     96c:	08000a4a 	stmdaeq	r0, {r1, r3, r6, r9, fp}
     970:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
     974:	01f30004 	mvnseq	r0, r4
     978:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     984:	0a240000 	beq	90098c <__Stack_Size+0x90058c>
     988:	0a320800 	beq	c82990 <__Stack_Size+0xc82590>
     98c:	00010800 	andeq	r0, r1, r0, lsl #16
     990:	000a3250 	andeq	r3, sl, r0, asr r2
     994:	000a3c08 	andeq	r3, sl, r8, lsl #24
     998:	f3000408 	vshl.u8	d0, d8, d0
     99c:	009f5001 	addseq	r5, pc, r1
	...
     9ac:	0009f000 	andeq	pc, r9, r0
     9b0:	0009fb08 	andeq	pc, r9, r8, lsl #22
     9b4:	50000108 	andpl	r0, r0, r8, lsl #2
     9b8:	08000a04 	stmdaeq	r0, {r2, r9, fp}
     9bc:	08000a17 	stmdaeq	r0, {r0, r1, r2, r4, r9, fp}
     9c0:	18500001 	ldmdane	r0, {r0}^
     9c4:	2408000a 	strcs	r0, [r8], #-10
     9c8:	0108000a 	tsteq	r8, sl
     9cc:	00005000 	andeq	r5, r0, r0
	...
     9dc:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     a04:	0b240000 	bleq	900a0c <__Stack_Size+0x90060c>
     a08:	0b4e0800 	bleq	1382a10 <__Stack_Size+0x1382610>
     a0c:	00010800 	andeq	r0, r1, r0, lsl #16
     a10:	000b4e53 	andeq	r4, fp, r3, asr lr
     a14:	000b5408 	andeq	r5, fp, r8, lsl #8
     a18:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
     a1c:	08000b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp}
     a20:	08000b61 	stmdaeq	r0, {r0, r5, r6, r8, r9, fp}
     a24:	61530001 	cmpvs	r3, r1
     a28:	7408000b 	strvc	r0, [r8], #-11
     a2c:	0108000b 	tsteq	r8, fp
     a30:	0b7e5500 	bleq	1f95e38 <__Stack_Size+0x1f95a38>
     a34:	0b800800 	bleq	fe002a3c <BootRAM+0xcf731dd>
     a38:	00010800 	andeq	r0, r1, r0, lsl #16
     a3c:	000b8053 	andeq	r8, fp, r3, asr r0
     a40:	000b9208 	andeq	r9, fp, r8, lsl #4
     a44:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
     a48:	08000b92 	stmdaeq	r0, {r1, r4, r7, r8, r9, fp}
     a4c:	08000b98 	stmdaeq	r0, {r3, r4, r7, r8, r9, fp}
     a50:	98530001 	ldmdals	r3, {r0}^
     a54:	c408000b 	strgt	r0, [r8], #-11
     a58:	0108000b 	tsteq	r8, fp
     a5c:	0bc85500 	bleq	ff215e64 <BootRAM+0xe186605>
     a60:	0bde0800 	bleq	ff782a68 <BootRAM+0xe6f3209>
     a64:	00010800 	andeq	r0, r1, r0, lsl #16
     a68:	000bde55 	andeq	sp, fp, r5, asr lr
     a6c:	000be608 	andeq	lr, fp, r8, lsl #12
     a70:	53000108 	movwpl	r0, #264	; 0x108
     a74:	08000bea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, r9, fp}
     a78:	08000c00 	stmdaeq	r0, {sl, fp}
     a7c:	00530001 	subseq	r0, r3, r1
     a80:	0808000c 	stmdaeq	r8, {r2, r3}
     a84:	0108000c 	tsteq	r8, ip
     a88:	0c085500 	cfstr32eq	mvfx5, [r8], {-0}
     a8c:	0c1a0800 	ldceq	8, cr0, [sl], {-0}
     a90:	00010800 	andeq	r0, r1, r0, lsl #16
     a94:	000c1a53 	andeq	r1, ip, r3, asr sl
     a98:	000c2208 	andeq	r2, ip, r8, lsl #4
     a9c:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
     aa0:	08000c22 	stmdaeq	r0, {r1, r5, sl, fp}
     aa4:	08000c28 	stmdaeq	r0, {r3, r5, sl, fp}
     aa8:	28530001 	ldmdacs	r3, {r0}^
     aac:	4608000c 	strmi	r0, [r8], -ip
     ab0:	0108000c 	tsteq	r8, ip
     ab4:	0c4a5500 	cfstr64eq	mvdx5, [sl], {-0}
     ab8:	0c5a0800 	mrrceq	8, 0, r0, sl, cr0
     abc:	00010800 	andeq	r0, r1, r0, lsl #16
     ac0:	000c5a55 	andeq	r5, ip, r5, asr sl
     ac4:	000c6a08 	andeq	r6, ip, r8, lsl #20
     ac8:	53000108 	movwpl	r0, #264	; 0x108
     acc:	08000c6a 	stmdaeq	r0, {r1, r3, r5, r6, sl, fp}
     ad0:	08000c6c 	stmdaeq	r0, {r2, r3, r5, r6, sl, fp}
     ad4:	6c550001 	mrrcvs	0, 0, r0, r5, cr1
     ad8:	7e08000c 	cdpvc	0, 0, cr0, cr8, cr12, {0}
     adc:	0108000c 	tsteq	r8, ip
     ae0:	0c7e5300 	ldcleq	3, cr5, [lr], #-0
     ae4:	0c880800 	stceq	8, cr0, [r8], {0}
     ae8:	00010800 	andeq	r0, r1, r0, lsl #16
     aec:	000ce255 	andeq	lr, ip, r5, asr r2
     af0:	000cf008 	andeq	pc, ip, r8
     af4:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
     af8:	08000cf0 	stmdaeq	r0, {r4, r5, r6, r7, sl, fp}
     afc:	08000cf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, sl, fp}
     b00:	f6530001 			; <UNDEFINED> instruction: 0xf6530001
     b04:	4408000c 	strmi	r0, [r8], #-12
     b08:	0108000d 	tsteq	r8, sp
     b0c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
     b20:	00010000 	andeq	r0, r1, r0
     b24:	00000050 	andeq	r0, r0, r0, asr r0
     b28:	00000000 	andeq	r0, r0, r0
     b2c:	f3000400 	vshl.u8	d0, d0, d0
     b30:	009f5001 	addseq	r5, pc, r1
     b34:	00000000 	andeq	r0, r0, r0
     b38:	04000000 	streq	r0, [r0], #-0
	...
     b44:	01000000 	mrseq	r0, (UNDEF: 0)
     b48:	00005000 	andeq	r5, r0, r0
     b4c:	00000000 	andeq	r0, r0, r0
     b50:	00040000 	andeq	r0, r4, r0
     b54:	9f5001f3 	svcls	0x005001f3
	...
     b60:	00000005 	andeq	r0, r0, r5
	...
     b6c:	00700017 	rsbseq	r0, r0, r7, lsl r0
     b70:	1f141438 	svcne	0x00141438
     b74:	0a241023 	beq	904c08 <__Stack_Size+0x904808>
     b78:	171affff 			; <UNDEFINED> instruction: 0x171affff
     b7c:	ffff0a16 			; <UNDEFINED> instruction: 0xffff0a16
     b80:	2125161a 			; <UNDEFINED> instruction: 0x2125161a
     b84:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b88:	00000000 	andeq	r0, r0, r0
     b8c:	f3001800 	vsub.i8	d1, d0, d0
     b90:	14385001 	ldrtne	r5, [r8], #-1
     b94:	10231f14 	eorne	r1, r3, r4, lsl pc
     b98:	ffff0a24 			; <UNDEFINED> instruction: 0xffff0a24
     b9c:	0a16171a 	beq	58680c <__Stack_Size+0x58640c>
     ba0:	161affff 	ssub8ne	pc, sl, pc	; <UNPREDICTABLE>
     ba4:	009f2125 	addseq	r2, pc, r5, lsr #2
	...
     bb8:	01000000 	mrseq	r0, (UNDEF: 0)
     bbc:	00005000 	andeq	r5, r0, r0
     bc0:	00000000 	andeq	r0, r0, r0
     bc4:	00040000 	andeq	r0, r4, r0
     bc8:	9f5001f3 	svcls	0x005001f3
	...
     bd4:	00000003 	andeq	r0, r0, r3
	...
     be0:	0070000e 	rsbseq	r0, r0, lr
     be4:	381aff08 	ldmdacc	sl, {r3, r8, r9, sl, fp, ip, sp, lr, pc}
     be8:	08007124 	stmdaeq	r0, {r2, r5, r8, ip, sp, lr}
     bec:	9f211aff 	svcls	0x00211aff
	...
     bf8:	01f3000f 	mvnseq	r0, pc
     bfc:	1aff0850 	bne	fffc2d44 <BootRAM+0xef334e5>
     c00:	00712438 	rsbseq	r2, r1, r8, lsr r4
     c04:	211aff08 	tstcs	sl, r8, lsl #30	; <UNPREDICTABLE>
     c08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     c20:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     c2c:	01f30004 	mvnseq	r0, r4
     c30:	00009f50 	andeq	r9, r0, r0, asr pc
     c34:	00000000 	andeq	r0, r0, r0
     c38:	00010000 	andeq	r0, r1, r0
     c3c:	00000050 	andeq	r0, r0, r0, asr r0
     c40:	00000000 	andeq	r0, r0, r0
     c44:	f3000400 	vshl.u8	d0, d0, d0
     c48:	009f5001 	addseq	r5, pc, r1
	...
     c5c:	01000000 	mrseq	r0, (UNDEF: 0)
     c60:	00005000 	andeq	r5, r0, r0
     c64:	00000000 	andeq	r0, r0, r0
     c68:	00040000 	andeq	r0, r4, r0
     c6c:	9f5001f3 	svcls	0x005001f3
	...
     c88:	00500001 	subseq	r0, r0, r1
     c8c:	00000000 	andeq	r0, r0, r0
     c90:	04000000 	streq	r0, [r0], #-0
     c94:	5001f300 	andpl	pc, r1, r0, lsl #6
     c98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     c9c:	00000000 	andeq	r0, r0, r0
     ca0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     cac:	01f30004 	mvnseq	r0, r4
     cb0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     cc8:	00510001 	subseq	r0, r1, r1
     ccc:	00000000 	andeq	r0, r0, r0
     cd0:	04000000 	streq	r0, [r0], #-0
     cd4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     cd8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     cdc:	00000000 	andeq	r0, r0, r0
     ce0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     cfc:	00010000 	andeq	r0, r1, r0
     d00:	00000052 	andeq	r0, r0, r2, asr r0
     d04:	00000000 	andeq	r0, r0, r0
     d08:	f3000400 	vshl.u8	d0, d0, d0
     d0c:	009f5201 	addseq	r5, pc, r1, lsl #4
     d10:	00000000 	andeq	r0, r0, r0
     d14:	01000000 	mrseq	r0, (UNDEF: 0)
     d18:	00005200 	andeq	r5, r0, r0, lsl #4
     d1c:	00000000 	andeq	r0, r0, r0
     d20:	00040000 	andeq	r0, r4, r0
     d24:	9f5201f3 	svcls	0x005201f3
	...
     d30:	00520001 	subseq	r0, r2, r1
	...
     d44:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     d60:	00530001 	subseq	r0, r3, r1
     d64:	00000000 	andeq	r0, r0, r0
     d68:	05000000 	streq	r0, [r0, #-0]
     d6c:	35007200 	strcc	r7, [r0, #-512]	; 0xfffffe00
     d70:	00009f25 	andeq	r9, r0, r5, lsr #30
     d74:	00000000 	andeq	r0, r0, r0
     d78:	00010000 	andeq	r0, r1, r0
     d7c:	00000053 	andeq	r0, r0, r3, asr r0
     d80:	00000000 	andeq	r0, r0, r0
     d84:	53000100 	movwpl	r0, #256	; 0x100
	...
     da0:	00500001 	subseq	r0, r0, r1
     da4:	00000000 	andeq	r0, r0, r0
     da8:	04000000 	streq	r0, [r0], #-0
     dac:	5001f300 	andpl	pc, r1, r0, lsl #6
     db0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     db4:	00000000 	andeq	r0, r0, r0
     db8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     dc4:	01f30004 	mvnseq	r0, r4
     dc8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     de0:	00510001 	subseq	r0, r1, r1
     de4:	00000000 	andeq	r0, r0, r0
     de8:	04000000 	streq	r0, [r0], #-0
     dec:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     df0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     df4:	00000000 	andeq	r0, r0, r0
     df8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     e14:	00010000 	andeq	r0, r1, r0
     e18:	00000052 	andeq	r0, r0, r2, asr r0
     e1c:	00000000 	andeq	r0, r0, r0
     e20:	f3000400 	vshl.u8	d0, d0, d0
     e24:	009f5201 	addseq	r5, pc, r1, lsl #4
     e28:	00000000 	andeq	r0, r0, r0
     e2c:	01000000 	mrseq	r0, (UNDEF: 0)
     e30:	00005200 	andeq	r5, r0, r0, lsl #4
     e34:	00000000 	andeq	r0, r0, r0
     e38:	00040000 	andeq	r0, r4, r0
     e3c:	9f5201f3 	svcls	0x005201f3
	...
     e48:	00520001 	subseq	r0, r2, r1
	...
     e5c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     e78:	00530001 	subseq	r0, r3, r1
     e7c:	00000000 	andeq	r0, r0, r0
     e80:	05000000 	streq	r0, [r0, #-0]
     e84:	35007200 	strcc	r7, [r0, #-512]	; 0xfffffe00
     e88:	00009f25 	andeq	r9, r0, r5, lsr #30
     e8c:	00000000 	andeq	r0, r0, r0
     e90:	00010000 	andeq	r0, r1, r0
     e94:	00000053 	andeq	r0, r0, r3, asr r0
     e98:	00000000 	andeq	r0, r0, r0
     e9c:	53000100 	movwpl	r0, #256	; 0x100
	...
     eb8:	00500001 	subseq	r0, r0, r1
     ebc:	00000000 	andeq	r0, r0, r0
     ec0:	04000000 	streq	r0, [r0], #-0
     ec4:	5001f300 	andpl	pc, r1, r0, lsl #6
     ec8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ecc:	00000000 	andeq	r0, r0, r0
     ed0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     edc:	01f30004 	mvnseq	r0, r4
     ee0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     ef8:	00010000 	andeq	r0, r1, r0
     efc:	00000051 	andeq	r0, r0, r1, asr r0
     f00:	00000000 	andeq	r0, r0, r0
     f04:	f3000400 	vshl.u8	d0, d0, d0
     f08:	009f5101 	addseq	r5, pc, r1, lsl #2
     f0c:	00000000 	andeq	r0, r0, r0
     f10:	01000000 	mrseq	r0, (UNDEF: 0)
     f14:	00005100 	andeq	r5, r0, r0, lsl #2
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	00040000 	andeq	r0, r4, r0
     f20:	9f5101f3 	svcls	0x005101f3
	...
     f40:	00520001 	subseq	r0, r2, r1
     f44:	00000000 	andeq	r0, r0, r0
     f48:	04000000 	streq	r0, [r0], #-0
     f4c:	5201f300 	andpl	pc, r1, #0, 6
     f50:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f54:	00000000 	andeq	r0, r0, r0
     f58:	52000100 	andpl	r0, r0, #0, 2
	...
     f64:	01f30004 	mvnseq	r0, r4
     f68:	00009f52 	andeq	r9, r0, r2, asr pc
     f6c:	00000000 	andeq	r0, r0, r0
     f70:	00010000 	andeq	r0, r1, r0
     f74:	00000052 	andeq	r0, r0, r2, asr r0
     f78:	00000000 	andeq	r0, r0, r0
     f7c:	f3000400 	vshl.u8	d0, d0, d0
     f80:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
     f94:	01000000 	mrseq	r0, (UNDEF: 0)
     f98:	00005100 	andeq	r5, r0, r0, lsl #2
     f9c:	00000000 	andeq	r0, r0, r0
     fa0:	00010000 	andeq	r0, r1, r0
     fa4:	00000051 	andeq	r0, r0, r1, asr r0
	...
     fbc:	53000100 	movwpl	r0, #256	; 0x100
	...
     fc8:	00720005 	rsbseq	r0, r2, r5
     fcc:	009f2535 	addseq	r2, pc, r5, lsr r5	; <UNPREDICTABLE>
     fd0:	00000000 	andeq	r0, r0, r0
     fd4:	01000000 	mrseq	r0, (UNDEF: 0)
     fd8:	00005300 	andeq	r5, r0, r0, lsl #6
     fdc:	00000000 	andeq	r0, r0, r0
     fe0:	00010000 	andeq	r0, r1, r0
     fe4:	00000053 	andeq	r0, r0, r3, asr r0
	...
     ff8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1004:	00510001 	subseq	r0, r1, r1
	...
    101c:	01000000 	mrseq	r0, (UNDEF: 0)
    1020:	00005300 	andeq	r5, r0, r0, lsl #6
    1024:	00000000 	andeq	r0, r0, r0
    1028:	00010000 	andeq	r0, r1, r0
    102c:	00000053 	andeq	r0, r0, r3, asr r0
    1030:	00000000 	andeq	r0, r0, r0
    1034:	72000500 	andvc	r0, r0, #0, 10
    1038:	9f253500 	svcls	0x00253500
	...
    1044:	00530001 	subseq	r0, r3, r1
	...
    1058:	01000000 	mrseq	r0, (UNDEF: 0)
    105c:	00005000 	andeq	r5, r0, r0
    1060:	00000000 	andeq	r0, r0, r0
    1064:	00040000 	andeq	r0, r4, r0
    1068:	9f5001f3 	svcls	0x005001f3
	...
    1080:	00510001 	subseq	r0, r1, r1
    1084:	00000000 	andeq	r0, r0, r0
    1088:	04000000 	streq	r0, [r0], #-0
    108c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1090:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    10a4:	52000100 	andpl	r0, r0, #0, 2
	...
    10b0:	01f30004 	mvnseq	r0, r4
    10b4:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    10c8:	00010000 	andeq	r0, r1, r0
    10cc:	00000050 	andeq	r0, r0, r0, asr r0
    10d0:	00000000 	andeq	r0, r0, r0
    10d4:	f3000400 	vshl.u8	d0, d0, d0
    10d8:	009f5001 	addseq	r5, pc, r1
	...
    10ec:	01000000 	mrseq	r0, (UNDEF: 0)
    10f0:	00005000 	andeq	r5, r0, r0
    10f4:	00000000 	andeq	r0, r0, r0
    10f8:	00040000 	andeq	r0, r4, r0
    10fc:	9f5001f3 	svcls	0x005001f3
	...
    110c:	08000e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp}
    1110:	08000e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp}
    1114:	78500001 	ldmdavc	r0, {r0}^
    1118:	ac08000e 	stcge	0, cr0, [r8], {14}
    111c:	0408000e 	streq	r0, [r8], #-14
    1120:	5001f300 	andpl	pc, r1, r0, lsl #6
    1124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1134:	000e6800 	andeq	r6, lr, r0, lsl #16
    1138:	000e9208 	andeq	r9, lr, r8, lsl #4
    113c:	51000108 	tstpl	r0, r8, lsl #2
    1140:	08000e92 	stmdaeq	r0, {r1, r4, r7, r9, sl, fp}
    1144:	08000e96 	stmdaeq	r0, {r1, r2, r4, r7, r9, sl, fp}
    1148:	01f30004 	mvnseq	r0, r4
    114c:	0e969f51 	mrceq	15, 4, r9, cr6, cr1, {2}
    1150:	0e9a0800 	cdpeq	8, 9, cr0, cr10, cr0, {0}
    1154:	00010800 	andeq	r0, r1, r0, lsl #16
    1158:	000e9a51 	andeq	r9, lr, r1, asr sl
    115c:	000eac08 	andeq	sl, lr, r8, lsl #24
    1160:	f3000408 	vshl.u8	d0, d8, d0
    1164:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    1170:	000e7e00 	andeq	r7, lr, r0, lsl #28
    1174:	000eac08 	andeq	sl, lr, r8, lsl #24
    1178:	52000108 	andpl	r0, r0, #8, 2
	...
    118c:	08000e82 	stmdaeq	r0, {r1, r7, r9, sl, fp}
    1190:	08000e8a 	stmdaeq	r0, {r1, r3, r7, r9, sl, fp}
    1194:	8a530001 	bhi	14c11a0 <__Stack_Size+0x14c0da0>
    1198:	8c08000e 	stchi	0, cr0, [r8], {14}
    119c:	0508000e 	streq	r0, [r8, #-14]
    11a0:	35007100 	strcc	r7, [r0, #-256]	; 0xffffff00
    11a4:	0e8c9f25 	cdpeq	15, 8, cr9, cr12, cr5, {1}
    11a8:	0e8e0800 	cdpeq	8, 8, cr0, cr14, cr0, {0}
    11ac:	00010800 	andeq	r0, r1, r0, lsl #16
    11b0:	000e9853 	andeq	r9, lr, r3, asr r8
    11b4:	000ea008 	andeq	sl, lr, r8
    11b8:	53000108 	movwpl	r0, #264	; 0x108
	...
    11d0:	00010000 	andeq	r0, r1, r0
    11d4:	00000051 	andeq	r0, r0, r1, asr r0
    11d8:	00000000 	andeq	r0, r0, r0
    11dc:	f3000400 	vshl.u8	d0, d0, d0
    11e0:	009f5101 	addseq	r5, pc, r1, lsl #2
    11e4:	00000000 	andeq	r0, r0, r0
    11e8:	01000000 	mrseq	r0, (UNDEF: 0)
    11ec:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1204:	00530001 	subseq	r0, r3, r1
    1208:	00000000 	andeq	r0, r0, r0
    120c:	01000000 	mrseq	r0, (UNDEF: 0)
    1210:	00005300 	andeq	r5, r0, r0, lsl #6
    1214:	00000000 	andeq	r0, r0, r0
    1218:	00010000 	andeq	r0, r1, r0
    121c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1228:	000e4800 	andeq	r4, lr, r0, lsl #16
    122c:	000e5408 	andeq	r5, lr, r8, lsl #8
    1230:	50000108 	andpl	r0, r0, r8, lsl #2
    1234:	08000e54 	stmdaeq	r0, {r2, r4, r6, r9, sl, fp}
    1238:	08000e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp}
    123c:	01f30004 	mvnseq	r0, r4
    1240:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    124c:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
    1250:	0e340800 	cdpeq	8, 3, cr0, cr4, cr0, {0}
    1254:	00010800 	andeq	r0, r1, r0, lsl #16
    1258:	000e3450 	andeq	r3, lr, r0, asr r4
    125c:	000e4808 	andeq	r4, lr, r8, lsl #16
    1260:	f3000408 	vshl.u8	d0, d8, d0
    1264:	009f5001 	addseq	r5, pc, r1
	...
    1270:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1274:	1408000e 	strne	r0, [r8], #-14
    1278:	0108000e 	tsteq	r8, lr
    127c:	0e145000 	cdpeq	0, 1, cr5, cr4, cr0, {0}
    1280:	0e280800 	cdpeq	8, 2, cr0, cr8, cr0, {0}
    1284:	00040800 	andeq	r0, r4, r0, lsl #16
    1288:	9f5001f3 	svcls	0x005001f3
	...
    12a0:	00500001 	subseq	r0, r0, r1
    12a4:	00000000 	andeq	r0, r0, r0
    12a8:	04000000 	streq	r0, [r0], #-0
    12ac:	5001f300 	andpl	pc, r1, r0, lsl #6
    12b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    12c4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    12d0:	01f30004 	mvnseq	r0, r4
    12d4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    12e8:	00010000 	andeq	r0, r1, r0
    12ec:	00000050 	andeq	r0, r0, r0, asr r0
    12f0:	00000000 	andeq	r0, r0, r0
    12f4:	f3000400 	vshl.u8	d0, d0, d0
    12f8:	009f5001 	addseq	r5, pc, r1
	...
    130c:	01000000 	mrseq	r0, (UNDEF: 0)
    1310:	00005100 	andeq	r5, r0, r0, lsl #2
    1314:	00000000 	andeq	r0, r0, r0
    1318:	00040000 	andeq	r0, r4, r0
    131c:	9f5101f3 	svcls	0x005101f3
	...
    1334:	00500001 	subseq	r0, r0, r1
    1338:	00000000 	andeq	r0, r0, r0
    133c:	04000000 	streq	r0, [r0], #-0
    1340:	5001f300 	andpl	pc, r1, r0, lsl #6
    1344:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1358:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1364:	01f30004 	mvnseq	r0, r4
    1368:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1374:	0de20000 	stcleq	0, cr0, [r2]
    1378:	0de40800 	stcleq	8, cr0, [r4]
    137c:	00010800 	andeq	r0, r1, r0, lsl #16
    1380:	000de450 	andeq	lr, sp, r0, asr r4
    1384:	000e0808 	andeq	r0, lr, r8, lsl #16
    1388:	f3000408 	vshl.u8	d0, d8, d0
    138c:	009f5001 	addseq	r5, pc, r1
	...
    1398:	bc000000 	stclt	0, cr0, [r0], {-0}
    139c:	be08000d 	cdplt	0, 0, cr0, cr8, cr13, {0}
    13a0:	0108000d 	tsteq	r8, sp
    13a4:	0dbe5000 	ldceq	0, cr5, [lr]
    13a8:	0de20800 	stcleq	8, cr0, [r2]
    13ac:	00040800 	andeq	r0, r4, r0, lsl #16
    13b0:	9f5001f3 	svcls	0x005001f3
	...
    13c8:	00500001 	subseq	r0, r0, r1
    13cc:	00000000 	andeq	r0, r0, r0
    13d0:	04000000 	streq	r0, [r0], #-0
    13d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    13d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    13ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    13f8:	01f30004 	mvnseq	r0, r4
    13fc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1410:	00010000 	andeq	r0, r1, r0
    1414:	00000050 	andeq	r0, r0, r0, asr r0
    1418:	00000000 	andeq	r0, r0, r0
    141c:	f3000400 	vshl.u8	d0, d0, d0
    1420:	009f5001 	addseq	r5, pc, r1
	...
    1434:	01000000 	mrseq	r0, (UNDEF: 0)
    1438:	00005000 	andeq	r5, r0, r0
    143c:	00000000 	andeq	r0, r0, r0
    1440:	00040000 	andeq	r0, r4, r0
    1444:	9f5001f3 	svcls	0x005001f3
	...
    145c:	00500001 	subseq	r0, r0, r1
    1460:	00000000 	andeq	r0, r0, r0
    1464:	04000000 	streq	r0, [r0], #-0
    1468:	5001f300 	andpl	pc, r1, r0, lsl #6
    146c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1480:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    148c:	01f30004 	mvnseq	r0, r4
    1490:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    149c:	0d9c0000 	ldceq	0, cr0, [ip]
    14a0:	0d9e0800 	ldceq	8, cr0, [lr]
    14a4:	00010800 	andeq	r0, r1, r0, lsl #16
    14a8:	000d9e50 	andeq	r9, sp, r0, asr lr
    14ac:	000db808 	andeq	fp, sp, r8, lsl #16
    14b0:	f3000408 	vshl.u8	d0, d8, d0
    14b4:	009f5001 	addseq	r5, pc, r1
	...
    14c8:	01000000 	mrseq	r0, (UNDEF: 0)
    14cc:	00005000 	andeq	r5, r0, r0
    14d0:	00000000 	andeq	r0, r0, r0
    14d4:	00040000 	andeq	r0, r4, r0
    14d8:	9f5001f3 	svcls	0x005001f3
	...
    14e8:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
    14ec:	08000d80 	stmdaeq	r0, {r7, r8, sl, fp}
    14f0:	80500001 	subshi	r0, r0, r1
    14f4:	9c08000d 	stcls	0, cr0, [r8], {13}
    14f8:	0408000d 	streq	r0, [r8], #-13
    14fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    1500:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1504:	00000000 	andeq	r0, r0, r0
    1508:	02020000 	andeq	r0, r2, #0
    150c:	00000404 	andeq	r0, r0, r4, lsl #8
    1510:	000d9400 	andeq	r9, sp, r0, lsl #8
    1514:	000d9408 	andeq	r9, sp, r8, lsl #8
    1518:	53000108 	movwpl	r0, #264	; 0x108
    151c:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
    1520:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
    1524:	00730007 	rsbseq	r0, r3, r7
    1528:	2710000a 	ldrcs	r0, [r0, -sl]
    152c:	000d949f 	muleq	sp, pc, r4	; <UNPREDICTABLE>
    1530:	000d9808 	andeq	r9, sp, r8, lsl #16
    1534:	73000708 	movwvc	r0, #1800	; 0x708
    1538:	30000a00 	andcc	r0, r0, r0, lsl #20
    153c:	0d989f27 	ldceq	15, cr9, [r8, #156]	; 0x9c
    1540:	0d9c0800 	ldceq	8, cr0, [ip]
    1544:	000b0800 	andeq	r0, fp, r0, lsl #16
    1548:	000a0073 	andeq	r0, sl, r3, ror r0
    154c:	000a2730 	andeq	r2, sl, r0, lsr r7
    1550:	009f2730 	addseq	r2, pc, r0, lsr r7	; <UNPREDICTABLE>
	...
    1564:	01000000 	mrseq	r0, (UNDEF: 0)
    1568:	00005000 	andeq	r5, r0, r0
    156c:	00000000 	andeq	r0, r0, r0
    1570:	00040000 	andeq	r0, r4, r0
    1574:	9f5001f3 	svcls	0x005001f3
	...
    1580:	04020200 	streq	r0, [r2], #-512	; 0xfffffe00
    1584:	00000004 	andeq	r0, r0, r4
	...
    1590:	00530001 	subseq	r0, r3, r1
    1594:	00000000 	andeq	r0, r0, r0
    1598:	05000000 	streq	r0, [r0, #-0]
    159c:	40007300 	andmi	r7, r0, r0, lsl #6
    15a0:	00009f27 	andeq	r9, r0, r7, lsr #30
    15a4:	00000000 	andeq	r0, r0, r0
    15a8:	00060000 	andeq	r0, r6, r0
    15ac:	30080073 	andcc	r0, r8, r3, ror r0
    15b0:	00009f27 	andeq	r9, r0, r7, lsr #30
    15b4:	00000000 	andeq	r0, r0, r0
    15b8:	00090000 	andeq	r0, r9, r0
    15bc:	30080073 	andcc	r0, r8, r3, ror r0
    15c0:	27300827 	ldrcs	r0, [r0, -r7, lsr #16]!
    15c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    15d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    15e4:	01f30004 	mvnseq	r0, r4
    15e8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    15fc:	00010000 	andeq	r0, r1, r0
    1600:	00000050 	andeq	r0, r0, r0, asr r0
    1604:	00000000 	andeq	r0, r0, r0
    1608:	f3000400 	vshl.u8	d0, d0, d0
    160c:	009f5001 	addseq	r5, pc, r1
	...
    1620:	01000000 	mrseq	r0, (UNDEF: 0)
    1624:	00005000 	andeq	r5, r0, r0
    1628:	00000000 	andeq	r0, r0, r0
    162c:	00040000 	andeq	r0, r4, r0
    1630:	9f5001f3 	svcls	0x005001f3
	...
    1648:	00530001 	subseq	r0, r3, r1
    164c:	00000000 	andeq	r0, r0, r0
    1650:	01000000 	mrseq	r0, (UNDEF: 0)
    1654:	00005300 	andeq	r5, r0, r0, lsl #6
    1658:	00000000 	andeq	r0, r0, r0
    165c:	00030000 	andeq	r0, r3, r0
	...
    1668:	00010000 	andeq	r0, r1, r0
    166c:	00000050 	andeq	r0, r0, r0, asr r0
    1670:	00000000 	andeq	r0, r0, r0
    1674:	f3000400 	vshl.u8	d0, d0, d0
    1678:	009f5001 	addseq	r5, pc, r1
	...
    168c:	01000000 	mrseq	r0, (UNDEF: 0)
    1690:	00005000 	andeq	r5, r0, r0
    1694:	00000000 	andeq	r0, r0, r0
    1698:	00040000 	andeq	r0, r4, r0
    169c:	9f5001f3 	svcls	0x005001f3
	...
    16b0:	00010000 	andeq	r0, r1, r0
    16b4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    16c0:	000d5400 	andeq	r5, sp, r0, lsl #8
    16c4:	000d5608 	andeq	r5, sp, r8, lsl #12
    16c8:	50000108 	andpl	r0, r0, r8, lsl #2
    16cc:	08000d56 	stmdaeq	r0, {r1, r2, r4, r6, r8, sl, fp}
    16d0:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
    16d4:	01f30004 	mvnseq	r0, r4
    16d8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    16e4:	08000d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp}
    16e8:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
    16ec:	00530001 	subseq	r0, r3, r1
	...
    1700:	01000000 	mrseq	r0, (UNDEF: 0)
    1704:	00005000 	andeq	r5, r0, r0
    1708:	00000000 	andeq	r0, r0, r0
    170c:	00040000 	andeq	r0, r4, r0
    1710:	9f5001f3 	svcls	0x005001f3
	...
    1728:	00500001 	subseq	r0, r0, r1
    172c:	00000000 	andeq	r0, r0, r0
    1730:	04000000 	streq	r0, [r0], #-0
    1734:	5001f300 	andpl	pc, r1, r0, lsl #6
    1738:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    174c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1758:	01f30004 	mvnseq	r0, r4
    175c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1770:	00010000 	andeq	r0, r1, r0
    1774:	00000050 	andeq	r0, r0, r0, asr r0
    1778:	00000000 	andeq	r0, r0, r0
    177c:	f3000400 	vshl.u8	d0, d0, d0
    1780:	009f5001 	addseq	r5, pc, r1
	...
    1794:	01000000 	mrseq	r0, (UNDEF: 0)
    1798:	00005000 	andeq	r5, r0, r0
    179c:	00000000 	andeq	r0, r0, r0
    17a0:	00040000 	andeq	r0, r4, r0
    17a4:	9f5001f3 	svcls	0x005001f3
	...
    17b0:	00000002 	andeq	r0, r0, r2
	...
    17bc:	00020000 	andeq	r0, r2, r0
    17c0:	00009f30 	andeq	r9, r0, r0, lsr pc
    17c4:	00000000 	andeq	r0, r0, r0
    17c8:	00070000 	andeq	r0, r7, r0
    17cc:	ff0a0072 			; <UNDEFINED> instruction: 0xff0a0072
    17d0:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    17d4:	00000000 	andeq	r0, r0, r0
    17d8:	07000000 	streq	r0, [r0, -r0]
    17dc:	0a007200 	beq	1dfe4 <__Stack_Size+0x1dbe4>
    17e0:	9f1affff 	svcls	0x001affff
	...
    17ec:	00010002 	andeq	r0, r1, r2
    17f0:	00000000 	andeq	r0, r0, r0
    17f4:	0eac0000 	cdpeq	0, 10, cr0, cr12, cr0, {0}
    17f8:	0eb60800 	cdpeq	8, 11, cr0, cr6, cr0, {0}
    17fc:	00020800 	andeq	r0, r2, r0, lsl #16
    1800:	0f849f30 	svceq	0x00849f30
    1804:	0f8c0800 	svceq	0x008c0800
    1808:	00070800 	andeq	r0, r7, r0, lsl #16
    180c:	ff0a0073 			; <UNDEFINED> instruction: 0xff0a0073
    1810:	8e9f1aff 			; <UNDEFINED> instruction: 0x8e9f1aff
    1814:	9608000f 	strls	r0, [r8], -pc
    1818:	0708000f 	streq	r0, [r8, -pc]
    181c:	0a007300 	beq	1e424 <__Stack_Size+0x1e024>
    1820:	9f1affff 	svcls	0x001affff
    1824:	08000fa8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, fp}
    1828:	08000faa 	stmdaeq	r0, {r1, r3, r5, r7, r8, r9, sl, fp}
    182c:	00730007 	rsbseq	r0, r3, r7
    1830:	1affff0a 	bne	1460 <__Stack_Size+0x1060>
    1834:	000fce9f 	muleq	pc, pc, lr	; <UNPREDICTABLE>
    1838:	00104008 	andseq	r4, r0, r8
    183c:	75000708 	strvc	r0, [r0, #-1800]	; 0xfffff8f8
    1840:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    1844:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1848:	00000000 	andeq	r0, r0, r0
    184c:	03000000 	movweq	r0, #0
    1850:	00000003 	andeq	r0, r0, r3
    1854:	0efc0000 	cdpeq	0, 15, cr0, cr12, cr0, {0}
    1858:	0efc0800 	cdpeq	8, 15, cr0, cr12, cr0, {0}
    185c:	00010800 	andeq	r0, r1, r0, lsl #16
    1860:	000efc53 	andeq	pc, lr, r3, asr ip	; <UNPREDICTABLE>
    1864:	000f0008 	andeq	r0, pc, r8
    1868:	73000708 	movwvc	r0, #1800	; 0x708
    186c:	20000a00 	andcs	r0, r0, r0, lsl #20
    1870:	0f009f27 	svceq	0x00009f27
    1874:	0f080800 	svceq	0x00080800
    1878:	000b0800 	andeq	r0, fp, r0, lsl #16
    187c:	000a0073 	andeq	r0, sl, r3, ror r0
    1880:	000a2720 	andeq	r2, sl, r0, lsr #14
    1884:	089f2720 	ldmeq	pc, {r5, r8, r9, sl, sp}	; <UNPREDICTABLE>
    1888:	1a08000f 	bne	2018cc <__Stack_Size+0x2014cc>
    188c:	0d08000f 	stceq	0, cr0, [r8, #-60]	; 0xffffffc4
    1890:	18807400 	stmne	r0, {sl, ip, sp, lr}
    1894:	20000a06 	andcs	r0, r0, r6, lsl #20
    1898:	20000a27 	andcs	r0, r0, r7, lsr #20
    189c:	00009f27 	andeq	r9, r0, r7, lsr #30
    18a0:	00000000 	andeq	r0, r0, r0
    18a4:	03000000 	movweq	r0, #0
    18a8:	00000003 	andeq	r0, r0, r3
    18ac:	00000000 	andeq	r0, r0, r0
    18b0:	0f120000 	svceq	0x00120000
    18b4:	0f120800 	svceq	0x00120800
    18b8:	00010800 	andeq	r0, r1, r0, lsl #16
    18bc:	000f1253 	andeq	r1, pc, r3, asr r2	; <UNPREDICTABLE>
    18c0:	000f1608 	andeq	r1, pc, r8, lsl #12
    18c4:	73000608 	movwvc	r0, #1544	; 0x608
    18c8:	27200800 	strcs	r0, [r0, -r0, lsl #16]!
    18cc:	000f169f 	muleq	pc, pc, r6	; <UNPREDICTABLE>
    18d0:	000f1c08 	andeq	r1, pc, r8, lsl #24
    18d4:	73000908 	movwvc	r0, #2312	; 0x908
    18d8:	27200800 	strcs	r0, [r0, -r0, lsl #16]!
    18dc:	9f272008 	svcls	0x00272008
    18e0:	08000f1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, fp}
    18e4:	08000f36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, sl, fp}
    18e8:	8074000b 	rsbshi	r0, r4, fp
    18ec:	20080618 	andcs	r0, r8, r8, lsl r6
    18f0:	27200827 	strcs	r0, [r0, -r7, lsr #16]!
    18f4:	000f849f 	muleq	pc, pc, r4	; <UNPREDICTABLE>
    18f8:	000fa208 	andeq	sl, pc, r8, lsl #4
    18fc:	74000b08 	strvc	r0, [r0], #-2824	; 0xfffff4f8
    1900:	08061880 	stmdaeq	r6, {r7, fp, ip}
    1904:	20082720 	andcs	r2, r8, r0, lsr #14
    1908:	0fa89f27 	svceq	0x00a89f27
    190c:	0fbc0800 	svceq	0x00bc0800
    1910:	000b0800 	andeq	r0, fp, r0, lsl #16
    1914:	06188074 			; <UNDEFINED> instruction: 0x06188074
    1918:	08272008 	stmdaeq	r7!, {r3, sp}
    191c:	009f2720 	addseq	r2, pc, r0, lsr #14
	...
    192c:	44000000 	strmi	r0, [r0], #-0
    1930:	5e08000f 	cdppl	0, 0, cr0, cr8, cr15, {0}
    1934:	0108000f 	tsteq	r8, pc
    1938:	0f5e5300 	svceq	0x005e5300
    193c:	0f600800 	svceq	0x00600800
    1940:	00050800 	andeq	r0, r5, r0, lsl #16
    1944:	06188072 			; <UNDEFINED> instruction: 0x06188072
    1948:	000f609f 	muleq	pc, pc, r0	; <UNPREDICTABLE>
    194c:	000f6c08 	andeq	r6, pc, r8, lsl #24
    1950:	74000508 	strvc	r0, [r0], #-1288	; 0xfffffaf8
    1954:	9f061880 	svcls	0x00061880
    1958:	08000f6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, fp}
    195c:	08000f80 	stmdaeq	r0, {r7, r8, r9, sl, fp}
    1960:	000c0007 	andeq	r0, ip, r7
    1964:	0640005c 			; <UNDEFINED> instruction: 0x0640005c
    1968:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    196c:	00000000 	andeq	r0, r0, r0
    1970:	6a030000 	bvs	c1978 <__Stack_Size+0xc1578>
    1974:	8008000f 	andhi	r0, r8, pc
    1978:	0108000f 	tsteq	r8, pc
    197c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    198c:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
    1990:	080017e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, sl, ip}
    1994:	e6500001 	ldrb	r0, [r0], -r1
    1998:	ec080017 	stc	0, cr0, [r8], {23}
    199c:	04080017 	streq	r0, [r8], #-23	; 0xffffffe9
    19a0:	5001f300 	andpl	pc, r1, r0, lsl #6
    19a4:	0017ec9f 	mulseq	r7, pc, ip	; <UNPREDICTABLE>
    19a8:	00180c08 	andseq	r0, r8, r8, lsl #24
    19ac:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    19b8:	17dc0001 	ldrbne	r0, [ip, r1]
    19bc:	180c0800 	stmdane	ip, {fp}
    19c0:	00010800 	andeq	r0, r1, r0, lsl #16
    19c4:	00000052 	andeq	r0, r0, r2, asr r0
    19c8:	00000000 	andeq	r0, r0, r0
    19cc:	dc000000 	stcle	0, cr0, [r0], {-0}
    19d0:	0c080017 	stceq	0, cr0, [r8], {23}
    19d4:	01080018 	tsteq	r8, r8, lsl r0
    19d8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    19ec:	08001714 	stmdaeq	r0, {r2, r4, r8, r9, sl, ip}
    19f0:	0800171e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, sl, ip}
    19f4:	1e530001 	cdpne	0, 5, cr0, cr3, cr1, {0}
    19f8:	2f080017 	svccs	0x00080017
    19fc:	08080017 	stmdaeq	r8, {r0, r1, r2, r4}
    1a00:	94087400 	strls	r7, [r8], #-1024	; 0xfffffc00
    1a04:	1aff0801 	bne	fffc3a10 <BootRAM+0xef341b1>
    1a08:	0017789f 	mulseq	r7, pc, r8	; <UNPREDICTABLE>
    1a0c:	00178008 	andseq	r8, r7, r8
    1a10:	53000108 	movwpl	r0, #264	; 0x108
    1a14:	080017a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, ip}
    1a18:	080017ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, ip}
    1a1c:	ac530001 	mrrcge	0, 0, r0, r3, cr1
    1a20:	b1080017 	tstlt	r8, r7, lsl r0
    1a24:	08080017 	stmdaeq	r8, {r0, r1, r2, r4}
    1a28:	94087400 	strls	r7, [r8], #-1024	; 0xfffffc00
    1a2c:	1aff0801 	bne	fffc3a38 <BootRAM+0xef341d9>
    1a30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1a34:	00000000 	andeq	r0, r0, r0
    1a38:	00000300 	andeq	r0, r0, r0, lsl #6
    1a3c:	00171c00 	andseq	r1, r7, r0, lsl #24
    1a40:	00177808 	andseq	r7, r7, r8, lsl #16
    1a44:	74000308 	strvc	r0, [r0], #-776	; 0xfffffcf8
    1a48:	17849f10 	usada8ne	r4, r0, pc, r9	; <UNPREDICTABLE>
    1a4c:	17a60800 	strne	r0, [r6, r0, lsl #16]!
    1a50:	00030800 	andeq	r0, r3, r0, lsl #16
    1a54:	009f1074 	addseq	r1, pc, r4, ror r0	; <UNPREDICTABLE>
    1a58:	00000000 	andeq	r0, r0, r0
    1a5c:	05000000 	streq	r0, [r0, #-0]
    1a60:	00171c00 	andseq	r1, r7, r0, lsl #24
    1a64:	00172f08 	andseq	r2, r7, r8, lsl #30
    1a68:	74000908 	strvc	r0, [r0], #-2312	; 0xfffff6f8
    1a6c:	0a029410 	beq	a6ab4 <__Stack_Size+0xa66b4>
    1a70:	9f1affff 	svcls	0x001affff
	...
    1a80:	08001734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, ip}
    1a84:	0800173c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl, ip}
    1a88:	3c500001 	mrrccc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    1a8c:	4e080017 	mcrmi	0, 0, r0, cr8, cr7, {0}
    1a90:	01080017 	tsteq	r8, r7, lsl r0
    1a94:	00005700 	andeq	r5, r0, r0, lsl #14
    1a98:	00000000 	andeq	r0, r0, r0
    1a9c:	01000000 	mrseq	r0, (UNDEF: 0)
    1aa0:	00000001 	andeq	r0, r0, r1
    1aa4:	08001726 	stmdaeq	r0, {r1, r2, r5, r8, r9, sl, ip}
    1aa8:	08001726 	stmdaeq	r0, {r1, r2, r5, r8, r9, sl, ip}
    1aac:	26520001 	ldrbcs	r0, [r2], -r1
    1ab0:	2c080017 	stccs	0, cr0, [r8], {23}
    1ab4:	16080017 			; <UNDEFINED> instruction: 0x16080017
    1ab8:	12007500 	andne	r7, r0, #0, 10
    1abc:	22244b40 	eorcs	r4, r4, #64, 22	; 0x10000
    1ac0:	14160072 	ldrne	r0, [r6], #-114	; 0xffffff8e
    1ac4:	22244b40 	eorcs	r4, r4, #64, 22	; 0x10000
    1ac8:	0001282d 	andeq	r2, r1, sp, lsr #16
    1acc:	2c9f1316 	ldccs	3, cr1, [pc], {22}
    1ad0:	2f080017 	svccs	0x00080017
    1ad4:	1c080017 	stcne	0, cr0, [r8], {23}
    1ad8:	94107400 	ldrls	r7, [r0], #-1024	; 0xfffffc00
    1adc:	ffff0a02 			; <UNDEFINED> instruction: 0xffff0a02
    1ae0:	4b40121a 	blmi	1006350 <__Stack_Size+0x1005f50>
    1ae4:	00722224 	rsbseq	r2, r2, r4, lsr #4
    1ae8:	4b401416 	blmi	1006b48 <__Stack_Size+0x1006748>
    1aec:	282d2224 	stmdacs	sp!, {r2, r5, r9, sp}
    1af0:	13160001 	tstne	r6, #1
    1af4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1b04:	00181400 	andseq	r1, r8, r0, lsl #8
    1b08:	00181f08 	andseq	r1, r8, r8, lsl #30
    1b0c:	52000108 	andpl	r0, r0, #8, 2
    1b10:	08001824 	stmdaeq	r0, {r2, r5, fp, ip}
    1b14:	0800182f 	stmdaeq	r0, {r0, r1, r2, r3, r5, fp, ip}
    1b18:	30530001 	subscc	r0, r3, r1
    1b1c:	36080018 			; <UNDEFINED> instruction: 0x36080018
    1b20:	01080018 	tsteq	r8, r8, lsl r0
    1b24:	18365200 	ldmdane	r6!, {r9, ip, lr}
    1b28:	18450800 	stmdane	r5, {fp}^
    1b2c:	00080800 	andeq	r0, r8, r0, lsl #16
    1b30:	01940873 	orrseq	r0, r4, r3, ror r8
    1b34:	9f1aff08 	svcls	0x001aff08
	...
    1b40:	14500000 	ldrbne	r0, [r0], #-0
    1b44:	145a0800 	ldrbne	r0, [sl], #-2048	; 0xfffff800
    1b48:	00110800 	andseq	r0, r1, r0, lsl #16
    1b4c:	ff0a0072 			; <UNDEFINED> instruction: 0xff0a0072
    1b50:	24311aff 	ldrtcs	r1, [r1], #-2815	; 0xfffff501
    1b54:	81c08023 	bichi	r8, r0, r3, lsr #32
    1b58:	939f0480 	orrsls	r0, pc, #128, 8	; 0x80000000
    1b5c:	00000004 	andeq	r0, r0, r4
    1b60:	00000000 	andeq	r0, r0, r0
    1b64:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    1b80:	00148400 	andseq	r8, r4, r0, lsl #8
    1b84:	00149408 	andseq	r9, r4, r8, lsl #8
    1b88:	32000208 	andcc	r0, r0, #8, 4	; 0x80000000
    1b8c:	0014949f 	mulseq	r4, pc, r4	; <UNPREDICTABLE>
    1b90:	00149808 	andseq	r9, r4, r8, lsl #16
    1b94:	50000108 	andpl	r0, r0, r8, lsl #2
    1b98:	08001498 	stmdaeq	r0, {r3, r4, r7, sl, ip}
    1b9c:	080014a4 	stmdaeq	r0, {r2, r5, r7, sl, ip}
    1ba0:	9f320002 	svcls	0x00320002
    1ba4:	080014ac 	stmdaeq	r0, {r2, r3, r5, r7, sl, ip}
    1ba8:	080014be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, sl, ip}
    1bac:	9f320002 	svcls	0x00320002
    1bb0:	080014da 	stmdaeq	r0, {r1, r3, r4, r6, r7, sl, ip}
    1bb4:	080014e4 	stmdaeq	r0, {r2, r5, r6, r7, sl, ip}
    1bb8:	9f320002 	svcls	0x00320002
    1bbc:	080014ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, sl, ip}
    1bc0:	080014f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, sl, ip}
    1bc4:	f6500001 			; <UNDEFINED> instruction: 0xf6500001
    1bc8:	06080014 			; <UNDEFINED> instruction: 0x06080014
    1bcc:	02080015 	andeq	r0, r8, #21
    1bd0:	069f3200 	ldreq	r3, [pc], r0, lsl #4
    1bd4:	08080015 	stmdaeq	r8, {r0, r2, r4}
    1bd8:	01080015 	tsteq	r8, r5, lsl r0
    1bdc:	15085000 	strne	r5, [r8, #-0]
    1be0:	15220800 	strne	r0, [r2, #-2048]!	; 0xfffff800
    1be4:	00020800 	andeq	r0, r2, r0, lsl #16
    1be8:	15229f32 	strne	r9, [r2, #-3890]!	; 0xfffff0ce
    1bec:	15240800 	strne	r0, [r4, #-2048]!	; 0xfffff800
    1bf0:	00010800 	andeq	r0, r1, r0, lsl #16
    1bf4:	00152450 	andseq	r2, r5, r0, asr r4
    1bf8:	00153008 	andseq	r3, r5, r8
    1bfc:	32000208 	andcc	r0, r0, #8, 4	; 0x80000000
    1c00:	0015309f 	mulseq	r5, pc, r0	; <UNPREDICTABLE>
    1c04:	00153208 	andseq	r3, r5, r8, lsl #4
    1c08:	50000108 	andpl	r0, r0, r8, lsl #2
    1c0c:	08001532 	stmdaeq	r0, {r1, r4, r5, r8, sl, ip}
    1c10:	08001542 	stmdaeq	r0, {r1, r6, r8, sl, ip}
    1c14:	9f320002 	svcls	0x00320002
    1c18:	08001542 	stmdaeq	r0, {r1, r6, r8, sl, ip}
    1c1c:	0800154a 	stmdaeq	r0, {r1, r3, r6, r8, sl, ip}
    1c20:	00500001 	subseq	r0, r0, r1
    1c24:	00000000 	andeq	r0, r0, r0
    1c28:	04000000 	streq	r0, [r0], #-0
	...
    1c48:	84000000 	strhi	r0, [r0], #-0
    1c4c:	93080014 	movwls	r0, #32788	; 0x8014
    1c50:	08080014 	stmdaeq	r8, {r2, r4}
    1c54:	94017300 	strls	r7, [r1], #-768	; 0xfffffd00
    1c58:	1aff0801 	bne	fffc3c64 <BootRAM+0xef34405>
    1c5c:	0014939f 	mulseq	r4, pc, r3	; <UNPREDICTABLE>
    1c60:	00149808 	andseq	r9, r4, r8, lsl #16
    1c64:	75000608 	strvc	r0, [r0, #-1544]	; 0xfffff9f8
    1c68:	1aff0800 	bne	fffc3c70 <BootRAM+0xef34411>
    1c6c:	0014989f 	mulseq	r4, pc, r8	; <UNPREDICTABLE>
    1c70:	0014a408 	andseq	sl, r4, r8, lsl #8
    1c74:	73000808 	movwvc	r0, #2056	; 0x808
    1c78:	08019401 	stmdaeq	r1, {r0, sl, ip, pc}
    1c7c:	a49f1aff 	ldrge	r1, [pc], #2815	; 1c84 <__Stack_Size+0x1884>
    1c80:	a8080014 	stmdage	r8, {r2, r4}
    1c84:	06080014 			; <UNDEFINED> instruction: 0x06080014
    1c88:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}
    1c8c:	ac9f1aff 	vldmiage	pc, {s2-s256}
    1c90:	ba080014 	blt	201ce8 <__Stack_Size+0x2018e8>
    1c94:	08080014 	stmdaeq	r8, {r2, r4}
    1c98:	94017300 	strls	r7, [r1], #-768	; 0xfffffd00
    1c9c:	1aff0801 	bne	fffc3ca8 <BootRAM+0xef34449>
    1ca0:	0014ba9f 	mulseq	r4, pc, sl	; <UNPREDICTABLE>
    1ca4:	0014da08 	andseq	sp, r4, r8, lsl #20
    1ca8:	75000608 	strvc	r0, [r0, #-1544]	; 0xfffff9f8
    1cac:	1aff0800 	bne	fffc3cb4 <BootRAM+0xef34455>
    1cb0:	0014da9f 	mulseq	r4, pc, sl	; <UNPREDICTABLE>
    1cb4:	0014e408 	andseq	lr, r4, r8, lsl #8
    1cb8:	73000808 	movwvc	r0, #2056	; 0x808
    1cbc:	08019401 	stmdaeq	r1, {r0, sl, ip, pc}
    1cc0:	e49f1aff 	ldr	r1, [pc], #2815	; 1cc8 <__Stack_Size+0x18c8>
    1cc4:	f6080014 			; <UNDEFINED> instruction: 0xf6080014
    1cc8:	06080014 			; <UNDEFINED> instruction: 0x06080014
    1ccc:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}
    1cd0:	f69f1aff 			; <UNDEFINED> instruction: 0xf69f1aff
    1cd4:	fe080014 	mcr2	0, 0, r0, cr8, cr4, {0}
    1cd8:	08080014 	stmdaeq	r8, {r2, r4}
    1cdc:	94017300 	strls	r7, [r1], #-768	; 0xfffffd00
    1ce0:	1aff0801 	bne	fffc3cec <BootRAM+0xef3448d>
    1ce4:	0014fe9f 	mulseq	r4, pc, lr	; <UNPREDICTABLE>
    1ce8:	00150808 	andseq	r0, r5, r8, lsl #16
    1cec:	75000608 	strvc	r0, [r0, #-1544]	; 0xfffff9f8
    1cf0:	1aff0800 	bne	fffc3cf8 <BootRAM+0xef34499>
    1cf4:	0015089f 	mulseq	r5, pc, r8	; <UNPREDICTABLE>
    1cf8:	00151a08 	andseq	r1, r5, r8, lsl #20
    1cfc:	73000808 	movwvc	r0, #2056	; 0x808
    1d00:	08019401 	stmdaeq	r1, {r0, sl, ip, pc}
    1d04:	1a9f1aff 	bne	fe7c8908 <BootRAM+0xd7390a9>
    1d08:	24080015 	strcs	r0, [r8], #-21	; 0xffffffeb
    1d0c:	06080015 			; <UNDEFINED> instruction: 0x06080015
    1d10:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}
    1d14:	249f1aff 	ldrcs	r1, [pc], #2815	; 1d1c <__Stack_Size+0x191c>
    1d18:	2f080015 	svccs	0x00080015
    1d1c:	08080015 	stmdaeq	r8, {r0, r2, r4}
    1d20:	94017300 	strls	r7, [r1], #-768	; 0xfffffd00
    1d24:	1aff0801 	bne	fffc3d30 <BootRAM+0xef344d1>
    1d28:	00152f9f 	mulseq	r5, pc, pc	; <UNPREDICTABLE>
    1d2c:	00153208 	andseq	r3, r5, r8, lsl #4
    1d30:	75000608 	strvc	r0, [r0, #-1544]	; 0xfffff9f8
    1d34:	1aff0800 	bne	fffc3d3c <BootRAM+0xef344dd>
    1d38:	0015329f 	mulseq	r5, pc, r2	; <UNPREDICTABLE>
    1d3c:	00154108 	andseq	r4, r5, r8, lsl #2
    1d40:	73000808 	movwvc	r0, #2056	; 0x808
    1d44:	08019401 	stmdaeq	r1, {r0, sl, ip, pc}
    1d48:	419f1aff 			; <UNDEFINED> instruction: 0x419f1aff
    1d4c:	4a080015 	bmi	201da8 <__Stack_Size+0x2019a8>
    1d50:	06080015 			; <UNDEFINED> instruction: 0x06080015
    1d54:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}
    1d58:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
    1d64:	a6000100 	strge	r0, [r0], -r0, lsl #2
    1d68:	a8080014 	stmdage	r8, {r2, r4}
    1d6c:	01080014 	tsteq	r8, r4, lsl r0
    1d70:	14be5300 	ldrtne	r5, [lr], #768	; 0x300
    1d74:	14da0800 	ldrbne	r0, [sl], #2048	; 0x800
    1d78:	00020800 	andeq	r0, r2, r0, lsl #16
    1d7c:	00009f36 	andeq	r9, r0, r6, lsr pc
    1d80:	00000000 	andeq	r0, r0, r0
    1d84:	00090000 	andeq	r0, r9, r0
	...
    1d9c:	154a0000 	strbne	r0, [sl, #-0]
    1da0:	15600800 	strbne	r0, [r0, #-2048]!	; 0xfffff800
    1da4:	00020800 	andeq	r0, r2, r0, lsl #16
    1da8:	15609f30 	strbne	r9, [r0, #-3888]!	; 0xfffff0d0
    1dac:	15660800 	strbne	r0, [r6, #-2048]!	; 0xfffff800
    1db0:	00010800 	andeq	r0, r1, r0, lsl #16
    1db4:	00156653 	andseq	r6, r5, r3, asr r6
    1db8:	00156c08 	andseq	r6, r5, r8, lsl #24
    1dbc:	30000208 	andcc	r0, r0, r8, lsl #4
    1dc0:	00156c9f 	mulseq	r5, pc, ip	; <UNPREDICTABLE>
    1dc4:	00156e08 	andseq	r6, r5, r8, lsl #28
    1dc8:	53000108 	movwpl	r0, #264	; 0x108
    1dcc:	0800156e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, ip}
    1dd0:	08001574 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, ip}
    1dd4:	9f300002 	svcls	0x00300002
    1dd8:	08001574 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, ip}
    1ddc:	08001576 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, ip}
    1de0:	76530001 	ldrbvc	r0, [r3], -r1
    1de4:	7c080015 	stcvc	0, cr0, [r8], {21}
    1de8:	02080015 	andeq	r0, r8, #21
    1dec:	7c9f3000 	ldcvc	0, cr3, [pc], {0}
    1df0:	7e080015 	mcrvc	0, 0, r0, cr8, cr5, {0}
    1df4:	01080015 	tsteq	r8, r5, lsl r0
    1df8:	157e5300 	ldrbne	r5, [lr, #-768]!	; 0xfffffd00
    1dfc:	15a40800 	strne	r0, [r4, #2048]!	; 0x800
    1e00:	00020800 	andeq	r0, r2, r0, lsl #16
    1e04:	15a49f30 	strne	r9, [r4, #3888]!	; 0xf30
    1e08:	15af0800 	strne	r0, [pc, #2048]!	; 2610 <__Stack_Size+0x2210>
    1e0c:	00010800 	andeq	r0, r1, r0, lsl #16
    1e10:	0015c053 	andseq	ip, r5, r3, asr r0
    1e14:	00160a08 	andseq	r0, r6, r8, lsl #20
    1e18:	30000208 	andcc	r0, r0, r8, lsl #4
    1e1c:	00162c9f 	mulseq	r6, pc, ip	; <UNPREDICTABLE>
    1e20:	00169c08 	andseq	r9, r6, r8, lsl #24
    1e24:	30000208 	andcc	r0, r0, r8, lsl #4
    1e28:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1e2c:	00000000 	andeq	r0, r0, r0
    1e30:	00000100 	andeq	r0, r0, r0, lsl #2
    1e34:	00000001 	andeq	r0, r0, r1
    1e38:	0015b000 	andseq	fp, r5, r0
    1e3c:	0015c008 	andseq	ip, r5, r8
    1e40:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    1e44:	0800161a 	stmdaeq	r0, {r1, r3, r4, r9, sl, ip}
    1e48:	08001622 	stmdaeq	r0, {r1, r5, r9, sl, ip}
    1e4c:	9c500001 	mrrcls	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    1e50:	b8080016 	stmdalt	r8, {r1, r2, r4}
    1e54:	01080016 	tsteq	r8, r6, lsl r0
    1e58:	16f05500 	ldrbtne	r5, [r0], r0, lsl #10
    1e5c:	170c0800 	strne	r0, [ip, -r0, lsl #16]
    1e60:	00010800 	andeq	r0, r1, r0, lsl #16
    1e64:	00000055 	andeq	r0, r0, r5, asr r0
    1e68:	00000000 	andeq	r0, r0, r0
    1e6c:	00000600 	andeq	r0, r0, r0, lsl #12
	...
    1e78:	00154a00 	andseq	r4, r5, r0, lsl #20
    1e7c:	00155608 	andseq	r5, r5, r8, lsl #12
    1e80:	73000808 	movwvc	r0, #2056	; 0x808
    1e84:	08019401 	stmdaeq	r1, {r0, sl, ip, pc}
    1e88:	7e9f1aff 			; <UNDEFINED> instruction: 0x7e9f1aff
    1e8c:	9e080015 	mcrls	0, 0, r0, cr8, cr5, {0}
    1e90:	08080015 	stmdaeq	r8, {r0, r2, r4}
    1e94:	94017300 	strls	r7, [r1], #-768	; 0xfffffd00
    1e98:	1aff0801 	bne	fffc3ea4 <BootRAM+0xef34645>
    1e9c:	0015c09f 	mulseq	r5, pc, r0	; <UNPREDICTABLE>
    1ea0:	0015cd08 	andseq	ip, r5, r8, lsl #26
    1ea4:	73000808 	movwvc	r0, #2056	; 0x808
    1ea8:	08019401 	stmdaeq	r1, {r0, sl, ip, pc}
    1eac:	da9f1aff 	ble	fe7c8ab0 <BootRAM+0xd739251>
    1eb0:	e6080015 			; <UNDEFINED> instruction: 0xe6080015
    1eb4:	08080015 	stmdaeq	r8, {r0, r2, r4}
    1eb8:	94017300 	strls	r7, [r1], #-768	; 0xfffffd00
    1ebc:	1aff0801 	bne	fffc3ec8 <BootRAM+0xef34669>
    1ec0:	00162c9f 	mulseq	r6, pc, ip	; <UNPREDICTABLE>
    1ec4:	00163208 	andseq	r3, r6, r8, lsl #4
    1ec8:	73000808 	movwvc	r0, #2056	; 0x808
    1ecc:	08019401 	stmdaeq	r1, {r0, sl, ip, pc}
    1ed0:	3a9f1aff 	bcc	fe7c8ad4 <BootRAM+0xd739275>
    1ed4:	69080016 	stmdbvs	r8, {r1, r2, r4}
    1ed8:	08080016 	stmdaeq	r8, {r1, r2, r4}
    1edc:	94017300 	strls	r7, [r1], #-768	; 0xfffffd00
    1ee0:	1aff0801 	bne	fffc3eec <BootRAM+0xef3468d>
    1ee4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ee8:	00000000 	andeq	r0, r0, r0
    1eec:	e4000000 	str	r0, [r0], #-0
    1ef0:	0a080015 	beq	201f4c <__Stack_Size+0x201b4c>
    1ef4:	06080016 			; <UNDEFINED> instruction: 0x06080016
    1ef8:	08007100 	stmdaeq	r0, {r8, ip, sp, lr}
    1efc:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    1f00:	00000000 	andeq	r0, r0, r0
    1f04:	01000000 	mrseq	r0, (UNDEF: 0)
    1f08:	0015e400 	andseq	lr, r5, r0, lsl #8
    1f0c:	00160a08 	andseq	r0, r6, r8, lsl #20
    1f10:	72000908 	andvc	r0, r0, #8, 18	; 0x20000
    1f14:	1a700800 	bne	1c03f1c <__Stack_Size+0x1c03b1c>
    1f18:	9f1aff08 	svcls	0x001aff08
	...
    1f24:	0000010a 	andeq	r0, r0, sl, lsl #2
    1f28:	0800154a 	stmdaeq	r0, {r1, r3, r6, r8, sl, ip}
    1f2c:	08001622 	stmdaeq	r0, {r1, r5, r9, sl, ip}
    1f30:	9f300002 	svcls	0x00300002
    1f34:	0800162c 	stmdaeq	r0, {r2, r3, r5, r9, sl, ip}
    1f38:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
    1f3c:	9f300002 	svcls	0x00300002
	...
    1f48:	15fc0000 	ldrbne	r0, [ip, #0]!
    1f4c:	160a0800 	strne	r0, [sl], -r0, lsl #16
    1f50:	00010800 	andeq	r0, r1, r0, lsl #16
    1f54:	00000053 	andeq	r0, r0, r3, asr r0
    1f58:	00000000 	andeq	r0, r0, r0
    1f5c:	00000100 	andeq	r0, r0, r0, lsl #2
    1f60:	00000000 	andeq	r0, r0, r0
    1f64:	00155c00 	andseq	r5, r5, r0, lsl #24
    1f68:	00156008 	andseq	r6, r5, r8
    1f6c:	53000108 	movwpl	r0, #264	; 0x108
    1f70:	08001566 	stmdaeq	r0, {r1, r2, r5, r6, r8, sl, ip}
    1f74:	0800156c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, ip}
    1f78:	6e530001 	cdpvs	0, 5, cr0, cr3, cr1, {0}
    1f7c:	74080015 	strvc	r0, [r8], #-21	; 0xffffffeb
    1f80:	01080015 	tsteq	r8, r5, lsl r0
    1f84:	15765300 	ldrbne	r5, [r6, #-768]!	; 0xfffffd00
    1f88:	157c0800 	ldrbne	r0, [ip, #-2048]!	; 0xfffff800
    1f8c:	00010800 	andeq	r0, r1, r0, lsl #16
    1f90:	00000053 	andeq	r0, r0, r3, asr r0
    1f94:	00000000 	andeq	r0, r0, r0
    1f98:	56000000 	strpl	r0, [r0], -r0
    1f9c:	f4080011 	vst4.8	{d0-d3}, [r8 :64], r1
    1fa0:	03080011 	movweq	r0, #32785	; 0x8011
    1fa4:	9f107500 	svcls	0x00107500
	...
    1fb0:	00000300 	andeq	r0, r0, r0, lsl #6
    1fb4:	11580000 	cmpne	r8, r0
    1fb8:	117e0800 	cmnne	lr, r0, lsl #16
    1fbc:	00010800 	andeq	r0, r1, r0, lsl #16
    1fc0:	00118854 	andseq	r8, r1, r4, asr r8
    1fc4:	0011a208 	andseq	sl, r1, r8, lsl #4
    1fc8:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    1fcc:	080011a2 	stmdaeq	r0, {r1, r5, r7, r8, ip}
    1fd0:	080011a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, ip}
    1fd4:	10750009 	rsbsne	r0, r5, r9
    1fd8:	ff0a0294 			; <UNDEFINED> instruction: 0xff0a0294
    1fdc:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    1fe0:	00000000 	andeq	r0, r0, r0
    1fe4:	01000000 	mrseq	r0, (UNDEF: 0)
    1fe8:	02020000 	andeq	r0, r2, #0
    1fec:	00000303 	andeq	r0, r0, r3, lsl #6
    1ff0:	00000101 	andeq	r0, r0, r1, lsl #2
    1ff4:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    1ff8:	78080011 	stmdavc	r8, {r0, r4}
    1ffc:	08080011 	stmdaeq	r8, {r0, r4}
    2000:	94087500 	strls	r7, [r8], #-1280	; 0xfffffb00
    2004:	1aff0801 	bne	fffc4010 <BootRAM+0xef347b1>
    2008:	0011789f 	mulseq	r1, pc, r8	; <UNPREDICTABLE>
    200c:	00117e08 	andseq	r7, r1, r8, lsl #28
    2010:	76000608 	strvc	r0, [r0], -r8, lsl #12
    2014:	1aff0800 	bne	fffc401c <BootRAM+0xef347bd>
    2018:	00117e9f 	mulseq	r1, pc, lr	; <UNPREDICTABLE>
    201c:	00117e08 	andseq	r7, r1, r8, lsl #28
    2020:	34000208 	strcc	r0, [r0], #-520	; 0xfffffdf8
    2024:	00117e9f 	mulseq	r1, pc, lr	; <UNPREDICTABLE>
    2028:	00118808 	andseq	r8, r1, r8, lsl #16
    202c:	56000108 	strpl	r0, [r0], -r8, lsl #2
    2030:	08001188 	stmdaeq	r0, {r3, r7, r8, ip}
    2034:	08001188 	stmdaeq	r0, {r3, r7, r8, ip}
    2038:	08750008 	ldmdaeq	r5!, {r3}^
    203c:	ff080194 			; <UNDEFINED> instruction: 0xff080194
    2040:	11889f1a 	orrne	r9, r8, sl, lsl pc
    2044:	11900800 	orrsne	r0, r0, r0, lsl #16
    2048:	00020800 	andeq	r0, r2, r0, lsl #16
    204c:	11909f37 	orrsne	r9, r0, r7, lsr pc
    2050:	119c0800 	orrsne	r0, ip, r0, lsl #16
    2054:	00080800 	andeq	r0, r8, r0, lsl #16
    2058:	01940875 	orrseq	r0, r4, r5, ror r8
    205c:	9f1aff08 	svcls	0x001aff08
    2060:	0800119c 	stmdaeq	r0, {r2, r3, r4, r7, r8, ip}
    2064:	080011f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip}
    2068:	00560001 	subseq	r0, r6, r1
	...
    2074:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    2078:	aa080011 	bge	2020c4 <__Stack_Size+0x201cc4>
    207c:	01080011 	tsteq	r8, r1, lsl r0
    2080:	11aa5000 			; <UNDEFINED> instruction: 0x11aa5000
    2084:	11f40800 	mvnsne	r0, r0, lsl #16
    2088:	00010800 	andeq	r0, r1, r0, lsl #16
    208c:	00000059 	andeq	r0, r0, r9, asr r0
    2090:	00000000 	andeq	r0, r0, r0
    2094:	01000000 	mrseq	r0, (UNDEF: 0)
    2098:	92000000 	andls	r0, r0, #0
    209c:	9c080011 	stcls	0, cr0, [r8], {17}
    20a0:	01080011 	tsteq	r8, r1, lsl r0
    20a4:	119c5200 	orrsne	r5, ip, r0, lsl #4
    20a8:	11a20800 			; <UNDEFINED> instruction: 0x11a20800
    20ac:	00160800 	andseq	r0, r6, r0, lsl #16
    20b0:	40120074 	andsmi	r0, r2, r4, ror r0
    20b4:	7222244b 	eorvc	r2, r2, #1258291200	; 0x4b000000
    20b8:	40141600 	andsmi	r1, r4, r0, lsl #12
    20bc:	2d22244b 	cfstrscs	mvf2, [r2, #-300]!	; 0xfffffed4
    20c0:	16000128 	strne	r0, [r0], -r8, lsr #2
    20c4:	11a29f13 			; <UNDEFINED> instruction: 0x11a29f13
    20c8:	11a50800 			; <UNDEFINED> instruction: 0x11a50800
    20cc:	001c0800 	andseq	r0, ip, r0, lsl #16
    20d0:	02941075 	addseq	r1, r4, #117	; 0x75
    20d4:	1affff0a 	bne	1d04 <__Stack_Size+0x1904>
    20d8:	244b4012 	strbcs	r4, [fp], #-18	; 0xffffffee
    20dc:	16007222 	strne	r7, [r0], -r2, lsr #4
    20e0:	244b4014 	strbcs	r4, [fp], #-20	; 0xffffffec
    20e4:	01282d22 			; <UNDEFINED> instruction: 0x01282d22
    20e8:	9f131600 	svcls	0x00131600
	...
    20f4:	00010100 	andeq	r0, r1, r0, lsl #2
    20f8:	00000000 	andeq	r0, r0, r0
    20fc:	080013e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, ip}
    2100:	080013f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, ip}
    2104:	f0500001 			; <UNDEFINED> instruction: 0xf0500001
    2108:	f2080013 	vqadd.s8	d0, d8, d3
    210c:	04080013 	streq	r0, [r8], #-19	; 0xffffffed
    2110:	5001f300 	andpl	pc, r1, r0, lsl #6
    2114:	0013f29f 	mulseq	r3, pc, r2	; <UNPREDICTABLE>
    2118:	0013f408 	andseq	pc, r3, r8, lsl #8
    211c:	50000108 	andpl	r0, r0, r8, lsl #2
    2120:	080013f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, ip}
    2124:	080013fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip}
    2128:	01f30004 	mvnseq	r0, r4
    212c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    2138:	080013e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, ip}
    213c:	080013fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip}
    2140:	00520001 	subseq	r0, r2, r1
	...
    214c:	4c000000 	stcmi	0, cr0, [r0], {-0}
    2150:	a5080013 	strge	r0, [r8, #-19]	; 0xffffffed
    2154:	06080013 			; <UNDEFINED> instruction: 0x06080013
    2158:	08007100 	stmdaeq	r0, {r8, ip, sp, lr}
    215c:	aa9f1aff 	bge	fe7c8d60 <BootRAM+0xd739501>
    2160:	bc080013 	stclt	0, cr0, [r8], {19}
    2164:	06080013 			; <UNDEFINED> instruction: 0x06080013
    2168:	08007100 	stmdaeq	r0, {r8, ip, sp, lr}
    216c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    2170:	00000000 	andeq	r0, r0, r0
    2174:	01000000 	mrseq	r0, (UNDEF: 0)
    2178:	00000000 	andeq	r0, r0, r0
    217c:	00135000 	andseq	r5, r3, r0
    2180:	00137008 	andseq	r7, r3, r8
    2184:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    2188:	08001370 	stmdaeq	r0, {r4, r5, r6, r8, r9, ip}
    218c:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
    2190:	0470000c 	ldrbteq	r0, [r0], #-12
    2194:	ff080194 			; <UNDEFINED> instruction: 0xff080194
    2198:	ff7f0b1a 			; <UNDEFINED> instruction: 0xff7f0b1a
    219c:	13aa9f1a 			; <UNDEFINED> instruction: 0x13aa9f1a
    21a0:	13ac0800 			; <UNDEFINED> instruction: 0x13ac0800
    21a4:	000c0800 	andeq	r0, ip, r0, lsl #16
    21a8:	01940470 	orrseq	r0, r4, r0, ror r4
    21ac:	0b1aff08 	bleq	6c1dd4 <__Stack_Size+0x6c19d4>
    21b0:	9f1aff7f 	svcls	0x001aff7f
	...
    21c0:	13500000 	cmpne	r0, #0
    21c4:	13700800 	cmnne	r0, #0, 16
    21c8:	00010800 	andeq	r0, r1, r0, lsl #16
    21cc:	00137054 	andseq	r7, r3, r4, asr r0
    21d0:	0013a508 	andseq	sl, r3, r8, lsl #10
    21d4:	70000c08 	andvc	r0, r0, r8, lsl #24
    21d8:	08019404 	stmdaeq	r1, {r2, sl, ip, pc}
    21dc:	7f0b1aff 	svcvc	0x000b1aff
    21e0:	aa9f1aff 	bge	fe7c8de4 <BootRAM+0xd739585>
    21e4:	ac080013 	stcge	0, cr0, [r8], {19}
    21e8:	0c080013 	stceq	0, cr0, [r8], {19}
    21ec:	94047000 	strls	r7, [r4], #-0
    21f0:	1aff0801 	bne	fffc41fc <BootRAM+0xef3499d>
    21f4:	1aff7f0b 	bne	fffe1e28 <BootRAM+0xef525c9>
    21f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    21fc:	00000000 	andeq	r0, r0, r0
    2200:	66000000 	strvs	r0, [r0], -r0
    2204:	76080013 			; <UNDEFINED> instruction: 0x76080013
    2208:	01080013 	tsteq	r8, r3, lsl r0
    220c:	00005200 	andeq	r5, r0, r0, lsl #4
    2210:	00000000 	andeq	r0, r0, r0
    2214:	04020000 	streq	r0, [r2], #-0
    2218:	13980004 	orrsne	r0, r8, #4
    221c:	13980800 	orrsne	r0, r8, #0, 16
    2220:	00010800 	andeq	r0, r1, r0, lsl #16
    2224:	00139852 	andseq	r9, r3, r2, asr r8
    2228:	00139c08 	andseq	r9, r3, r8, lsl #24
    222c:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
    2230:	10000a00 	andne	r0, r0, r0, lsl #20
    2234:	00009f27 	andeq	r9, r0, r7, lsr #30
	...
    2240:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    224c:	0800127c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, ip}
    2250:	08001280 	stmdaeq	r0, {r7, r9, ip}
    2254:	00730006 	rsbseq	r0, r3, r6
    2258:	9f1a7f08 	svcls	0x001a7f08
    225c:	08001280 	stmdaeq	r0, {r7, r9, ip}
    2260:	0800128a 	stmdaeq	r0, {r1, r3, r7, r9, ip}
    2264:	8e530001 	cdphi	0, 5, cr0, cr3, cr1, {0}
    2268:	d4080012 	strle	r0, [r8], #-18	; 0xffffffee
    226c:	01080012 	tsteq	r8, r2, lsl r0
    2270:	12d45300 	sbcsne	r5, r4, #0, 6
    2274:	12e50800 	rscne	r0, r5, #0, 16
    2278:	000b0800 	andeq	r0, fp, r0, lsl #16
    227c:	01940075 	orrseq	r0, r4, r5, ror r0
    2280:	081a7f08 	ldmdaeq	sl, {r3, r8, r9, sl, fp, ip, sp, lr}
    2284:	fa9f1aff 	blx	fe7c8e88 <BootRAM+0xd739629>
    2288:	06080012 			; <UNDEFINED> instruction: 0x06080012
    228c:	0b080013 	bleq	2022e0 <__Stack_Size+0x201ee0>
    2290:	94007500 	strls	r7, [r0], #-1280	; 0xfffffb00
    2294:	1a7f0801 	bne	1fc42a0 <__Stack_Size+0x1fc3ea0>
    2298:	9f1aff08 	svcls	0x001aff08
    229c:	08001326 	stmdaeq	r0, {r1, r2, r5, r8, r9, ip}
    22a0:	08001328 	stmdaeq	r0, {r3, r5, r8, r9, ip}
    22a4:	28530001 	ldmdacs	r3, {r0}^
    22a8:	40080013 	andmi	r0, r8, r3, lsl r0
    22ac:	0b080013 	bleq	202300 <__Stack_Size+0x201f00>
    22b0:	94007500 	strls	r7, [r0], #-1280	; 0xfffffb00
    22b4:	1a7f0801 	bne	1fc42c0 <__Stack_Size+0x1fc3ec0>
    22b8:	9f1aff08 	svcls	0x001aff08
	...
    22c4:	12be0000 	adcsne	r0, lr, #0
    22c8:	12cc0800 	sbcne	r0, ip, #0, 16
    22cc:	00010800 	andeq	r0, r1, r0, lsl #16
    22d0:	00000052 	andeq	r0, r0, r2, asr r0
    22d4:	00000000 	andeq	r0, r0, r0
    22d8:	00000100 	andeq	r0, r0, r0, lsl #2
    22dc:	00000000 	andeq	r0, r0, r0
    22e0:	0012a600 	andseq	sl, r2, r0, lsl #12
    22e4:	0012e208 	andseq	lr, r2, r8, lsl #4
    22e8:	50000108 	andpl	r0, r0, r8, lsl #2
    22ec:	080012e2 	stmdaeq	r0, {r1, r5, r6, r7, r9, ip}
    22f0:	080012e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, ip}
    22f4:	0475000c 	ldrbteq	r0, [r5], #-12
    22f8:	ff080194 			; <UNDEFINED> instruction: 0xff080194
    22fc:	ff7f0b1a 			; <UNDEFINED> instruction: 0xff7f0b1a
    2300:	12fa9f1a 	rscsne	r9, sl, #26, 30	; 0x68
    2304:	13110800 	tstne	r1, #0, 16
    2308:	00010800 	andeq	r0, r1, r0, lsl #16
    230c:	00132050 	andseq	r2, r3, r0, asr r0
    2310:	00132308 	andseq	r2, r3, r8, lsl #6
    2314:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    2324:	12a00000 	adcne	r0, r0, #0
    2328:	12e50800 	rscne	r0, r5, #0, 16
    232c:	00060800 	andeq	r0, r6, r0, lsl #16
    2330:	ff080071 			; <UNDEFINED> instruction: 0xff080071
    2334:	12fa9f1a 	rscsne	r9, sl, #26, 30	; 0x68
    2338:	130e0800 	movwne	r0, #59392	; 0xe800
    233c:	00060800 	andeq	r0, r6, r0, lsl #16
    2340:	ff080071 			; <UNDEFINED> instruction: 0xff080071
    2344:	13209f1a 			; <UNDEFINED> instruction: 0x13209f1a
    2348:	13230800 			; <UNDEFINED> instruction: 0x13230800
    234c:	00060800 	andeq	r0, r6, r0, lsl #16
    2350:	ff080071 			; <UNDEFINED> instruction: 0xff080071
    2354:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    2364:	12a60000 	adcne	r0, r6, #0
    2368:	12e20800 	rscne	r0, r2, #0, 16
    236c:	00010800 	andeq	r0, r1, r0, lsl #16
    2370:	0012e250 	andseq	lr, r2, r0, asr r2
    2374:	0012e508 	andseq	lr, r2, r8, lsl #10
    2378:	75000c08 	strvc	r0, [r0, #-3080]	; 0xfffff3f8
    237c:	08019404 	stmdaeq	r1, {r2, sl, ip, pc}
    2380:	7f0b1aff 	svcvc	0x000b1aff
    2384:	fa9f1aff 	blx	fe7c8f88 <BootRAM+0xd739729>
    2388:	11080012 	tstne	r8, r2, lsl r0
    238c:	01080013 	tsteq	r8, r3, lsl r0
    2390:	13205000 	nopne	{0}	; <UNPREDICTABLE>
    2394:	13230800 			; <UNDEFINED> instruction: 0x13230800
    2398:	00010800 	andeq	r0, r1, r0, lsl #16
    239c:	00000050 	andeq	r0, r0, r0, asr r0
    23a0:	00000000 	andeq	r0, r0, r0
    23a4:	02020000 	andeq	r0, r2, #0
    23a8:	00000404 	andeq	r0, r0, r4, lsl #8
    23ac:	00131800 	andseq	r1, r3, r0, lsl #16
    23b0:	00131808 	andseq	r1, r3, r8, lsl #16
    23b4:	53000108 	movwpl	r0, #264	; 0x108
    23b8:	08001318 	stmdaeq	r0, {r3, r4, r8, r9, ip}
    23bc:	08001318 	stmdaeq	r0, {r3, r4, r8, r9, ip}
    23c0:	00730007 	rsbseq	r0, r3, r7
    23c4:	2710000a 	ldrcs	r0, [r0, -sl]
    23c8:	0013189f 	mulseq	r3, pc, r8	; <UNPREDICTABLE>
    23cc:	00131c08 	andseq	r1, r3, r8, lsl #24
    23d0:	73000708 	movwvc	r0, #1800	; 0x708
    23d4:	30000a00 	andcc	r0, r0, r0, lsl #20
    23d8:	131c9f27 	tstne	ip, #39, 30	; 0x9c
    23dc:	13200800 	nopne	{0}	; <UNPREDICTABLE>
    23e0:	000b0800 	andeq	r0, fp, r0, lsl #16
    23e4:	000a0073 	andeq	r0, sl, r3, ror r0
    23e8:	000a2730 	andeq	r2, sl, r0, lsr r7
    23ec:	009f2730 	addseq	r2, pc, r0, lsr r7	; <UNPREDICTABLE>
	...
    23f8:	bc000000 	stclt	0, cr0, [r0], {-0}
    23fc:	c6080010 			; <UNDEFINED> instruction: 0xc6080010
    2400:	01080010 	tsteq	r8, r0, lsl r0
    2404:	10c65000 	sbcne	r5, r6, r0
    2408:	11480800 	cmpne	r8, r0, lsl #16
    240c:	00040800 	andeq	r0, r4, r0, lsl #16
    2410:	9f5001f3 	svcls	0x005001f3
	...
    241c:	10de0000 	sbcsne	r0, lr, r0
    2420:	10f40800 	rscsne	r0, r4, r0, lsl #16
    2424:	00010800 	andeq	r0, r1, r0, lsl #16
    2428:	00000051 	andeq	r0, r0, r1, asr r0
    242c:	00000000 	andeq	r0, r0, r0
    2430:	0c000100 	stfeqs	f0, [r0], {-0}
    2434:	1c080011 	stcne	0, cr0, [r8], {17}
    2438:	05080011 	streq	r0, [r8, #-17]	; 0xffffffef
    243c:	3f007100 	svccc	0x00007100
    2440:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    244c:	0800110c 	stmdaeq	r0, {r2, r3, r8, ip}
    2450:	0800111c 	stmdaeq	r0, {r2, r3, r4, r8, ip}
    2454:	00510001 	subseq	r0, r1, r1
	...
    2460:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    2464:	55080012 	strpl	r0, [r8, #-18]	; 0xffffffee
    2468:	01080012 	tsteq	r8, r2, lsl r0
    246c:	12645000 	rsbne	r5, r4, #0
    2470:	12740800 	rsbsne	r0, r4, #0, 16
    2474:	00010800 	andeq	r0, r1, r0, lsl #16
    2478:	00000050 	andeq	r0, r0, r0, asr r0
    247c:	00000000 	andeq	r0, r0, r0
    2480:	01010000 	mrseq	r0, (UNDEF: 1)
    2484:	00000000 	andeq	r0, r0, r0
    2488:	00109800 	andseq	r9, r0, r0, lsl #16
    248c:	0010a408 	andseq	sl, r0, r8, lsl #8
    2490:	50000108 	andpl	r0, r0, r8, lsl #2
    2494:	080010a4 	stmdaeq	r0, {r2, r5, r7, ip}
    2498:	080010a6 	stmdaeq	r0, {r1, r2, r5, r7, ip}
    249c:	01f30004 	mvnseq	r0, r4
    24a0:	10a69f50 	adcne	r9, r6, r0, asr pc
    24a4:	10ad0800 	adcne	r0, sp, r0, lsl #16
    24a8:	00010800 	andeq	r0, r1, r0, lsl #16
    24ac:	0010ad50 	andseq	sl, r0, r0, asr sp
    24b0:	0010bc08 	andseq	fp, r0, r8, lsl #24
    24b4:	f3000408 	vshl.u8	d0, d8, d0
    24b8:	009f5001 	addseq	r5, pc, r1
	...
    24c4:	00000101 	andeq	r0, r0, r1, lsl #2
    24c8:	74000000 	strvc	r0, [r0], #-0
    24cc:	80080010 	andhi	r0, r8, r0, lsl r0
    24d0:	01080010 	tsteq	r8, r0, lsl r0
    24d4:	10805000 	addne	r5, r0, r0
    24d8:	10820800 	addne	r0, r2, r0, lsl #16
    24dc:	00040800 	andeq	r0, r4, r0, lsl #16
    24e0:	9f5001f3 	svcls	0x005001f3
    24e4:	08001082 	stmdaeq	r0, {r1, r7, ip}
    24e8:	08001089 	stmdaeq	r0, {r0, r3, r7, ip}
    24ec:	89500001 	ldmdbhi	r0, {r0}^
    24f0:	98080010 	stmdals	r8, {r4}
    24f4:	04080010 	streq	r0, [r8], #-16
    24f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    24fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2500:	00000000 	andeq	r0, r0, r0
    2504:	01010000 	mrseq	r0, (UNDEF: 1)
    2508:	01010000 	mrseq	r0, (UNDEF: 1)
    250c:	00188600 	andseq	r8, r8, r0, lsl #12
    2510:	00189808 	andseq	r9, r8, r8, lsl #16
    2514:	50000108 	andpl	r0, r0, r8, lsl #2
    2518:	08001898 	stmdaeq	r0, {r3, r4, r7, fp, ip}
    251c:	080018a2 	stmdaeq	r0, {r1, r5, r7, fp, ip}
    2520:	01700003 	cmneq	r0, r3
    2524:	0018a29f 	mulseq	r8, pc, r2	; <UNPREDICTABLE>
    2528:	0018a208 	andseq	sl, r8, r8, lsl #4
    252c:	70000308 	andvc	r0, r0, r8, lsl #6
    2530:	18a29f7f 	stmiane	r2!, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}
    2534:	18a40800 	stmiane	r4!, {fp}
    2538:	00010800 	andeq	r0, r1, r0, lsl #16
    253c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    2548:	00188600 	andseq	r8, r8, r0, lsl #12
    254c:	00188a08 	andseq	r8, r8, r8, lsl #20
    2550:	51000108 	tstpl	r0, r8, lsl #2
    2554:	0800188a 	stmdaeq	r0, {r1, r3, r7, fp, ip}
    2558:	080018a4 	stmdaeq	r0, {r2, r5, r7, fp, ip}
    255c:	01f30004 	mvnseq	r0, r4
    2560:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    256c:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    2570:	188c0800 	stmne	ip, {fp}
    2574:	00010800 	andeq	r0, r1, r0, lsl #16
    2578:	00188c52 	andseq	r8, r8, r2, asr ip
    257c:	0018a408 	andseq	sl, r8, r8, lsl #8
    2580:	f3000408 	vshl.u8	d0, d8, d0
    2584:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    2590:	00189201 	andseq	r9, r8, r1, lsl #4
    2594:	00189408 	andseq	r9, r8, r8, lsl #8
    2598:	52000108 	andpl	r0, r0, #8, 2
	...
    25a4:	02000001 	andeq	r0, r0, #1
    25a8:	18940002 	ldmne	r4, {r1}
    25ac:	189e0800 	ldmne	lr, {fp}
    25b0:	00010800 	andeq	r0, r1, r0, lsl #16
    25b4:	00189e52 	andseq	r9, r8, r2, asr lr
    25b8:	0018a208 	andseq	sl, r8, r8, lsl #4
    25bc:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    25c0:	18a29f01 	stmiane	r2!, {r0, r8, r9, sl, fp, ip, pc}
    25c4:	18a40800 	stmiane	r4!, {fp}
    25c8:	00010800 	andeq	r0, r1, r0, lsl #16
    25cc:	00000052 	andeq	r0, r0, r2, asr r0
    25d0:	00000000 	andeq	r0, r0, r0
    25d4:	01010000 	mrseq	r0, (UNDEF: 1)
    25d8:	94000000 	strls	r0, [r0], #-0
    25dc:	98080018 	stmdals	r8, {r3, r4}
    25e0:	01080018 	tsteq	r8, r8, lsl r0
    25e4:	18985100 	ldmne	r8, {r8, ip, lr}
    25e8:	189c0800 	ldmne	ip, {fp}
    25ec:	00030800 	andeq	r0, r3, r0, lsl #16
    25f0:	9c9f0471 	cfldrsls	mvf0, [pc], {113}	; 0x71
    25f4:	a4080018 	strge	r0, [r8], #-24	; 0xffffffe8
    25f8:	01080018 	tsteq	r8, r8, lsl r0
    25fc:	00005100 	andeq	r5, r0, r0, lsl #2
    2600:	00000000 	andeq	r0, r0, r0
    2604:	02000000 	andeq	r0, r0, #0
    2608:	02000002 	andeq	r0, r0, #2
    260c:	18680002 	stmdane	r8!, {r1}^
    2610:	187a0800 	ldmdane	sl!, {fp}^
    2614:	00010800 	andeq	r0, r1, r0, lsl #16
    2618:	00187a50 	andseq	r7, r8, r0, asr sl
    261c:	00187e08 	andseq	r7, r8, r8, lsl #28
    2620:	70000308 	andvc	r0, r0, r8, lsl #6
    2624:	187e9f01 	ldmdane	lr!, {r0, r8, r9, sl, fp, ip, pc}^
    2628:	18840800 	stmne	r4, {fp}
    262c:	00030800 	andeq	r0, r3, r0, lsl #16
    2630:	849f7f70 	ldrhi	r7, [pc], #3952	; 2638 <__Stack_Size+0x2238>
    2634:	86080018 			; <UNDEFINED> instruction: 0x86080018
    2638:	01080018 	tsteq	r8, r8, lsl r0
    263c:	00005000 	andeq	r5, r0, r0
	...
    2648:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
    264c:	186c0800 	stmdane	ip!, {fp}^
    2650:	00010800 	andeq	r0, r1, r0, lsl #16
    2654:	00186c51 	andseq	r6, r8, r1, asr ip
    2658:	00188608 	andseq	r8, r8, r8, lsl #12
    265c:	f3000408 	vshl.u8	d0, d8, d0
    2660:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    266c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    2670:	6e080018 	mcrvs	0, 0, r0, cr8, cr8, {0}
    2674:	01080018 	tsteq	r8, r8, lsl r0
    2678:	186e5200 	stmdane	lr!, {r9, ip, lr}^
    267c:	18860800 	stmne	r6, {fp}
    2680:	00040800 	andeq	r0, r4, r0, lsl #16
    2684:	9f5201f3 	svcls	0x005201f3
	...
    2690:	18740100 	ldmdane	r4!, {r8}^
    2694:	18760800 	ldmdane	r6!, {fp}^
    2698:	00010800 	andeq	r0, r1, r0, lsl #16
    269c:	00000052 	andeq	r0, r0, r2, asr r0
    26a0:	00000000 	andeq	r0, r0, r0
    26a4:	00000100 	andeq	r0, r0, r0, lsl #2
    26a8:	76000303 	strvc	r0, [r0], -r3, lsl #6
    26ac:	80080018 	andhi	r0, r8, r8, lsl r0
    26b0:	01080018 	tsteq	r8, r8, lsl r0
    26b4:	18805200 	stmne	r0, {r9, ip, lr}
    26b8:	18840800 	stmne	r4, {fp}
    26bc:	00030800 	andeq	r0, r3, r0, lsl #16
    26c0:	849f0172 	ldrhi	r0, [pc], #370	; 26c8 <__Stack_Size+0x22c8>
    26c4:	86080018 			; <UNDEFINED> instruction: 0x86080018
    26c8:	01080018 	tsteq	r8, r8, lsl r0
    26cc:	00005200 	andeq	r5, r0, r0, lsl #4
    26d0:	00000000 	andeq	r0, r0, r0
    26d4:	00010000 	andeq	r0, r1, r0
    26d8:	187a0000 	ldmdane	sl!, {}^	; <UNPREDICTABLE>
    26dc:	187e0800 	ldmdane	lr!, {fp}^
    26e0:	00080800 	andeq	r0, r8, r0, lsl #16
    26e4:	01940070 	orrseq	r0, r4, r0, ror r0
    26e8:	9f1aff08 	svcls	0x001aff08
    26ec:	0800187e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, fp, ip}
    26f0:	08001884 	stmdaeq	r0, {r2, r7, fp, ip}
    26f4:	7e700008 	cdpvc	0, 7, cr0, cr0, cr8, {0}
    26f8:	ff080194 			; <UNDEFINED> instruction: 0xff080194
    26fc:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    2708:	0800187e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, fp, ip}
    270c:	08001884 	stmdaeq	r0, {r2, r7, fp, ip}
    2710:	7f700012 	svcvc	0x00700012
    2714:	ff080194 			; <UNDEFINED> instruction: 0xff080194
    2718:	7024381a 	eorvc	r3, r4, sl, lsl r8
    271c:	0801947e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, sl, ip, pc}
    2720:	9f211aff 	svcls	0x00211aff
	...
    272c:	00010100 	andeq	r0, r1, r0, lsl #2
    2730:	00010100 	andeq	r0, r1, r0, lsl #2
    2734:	08001876 	stmdaeq	r0, {r1, r2, r4, r5, r6, fp, ip}
    2738:	0800187e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, fp, ip}
    273c:	7e510001 	cdpvc	0, 5, cr0, cr1, cr1, {0}
    2740:	84080018 	strhi	r0, [r8], #-24	; 0xffffffe8
    2744:	03080018 	movweq	r0, #32792	; 0x8018
    2748:	9f027100 	svcls	0x00027100
    274c:	08001884 	stmdaeq	r0, {r2, r7, fp, ip}
    2750:	08001884 	stmdaeq	r0, {r2, r7, fp, ip}
    2754:	7e710003 	cdpvc	0, 7, cr0, cr1, cr3, {0}
    2758:	0018849f 	mulseq	r8, pc, r4	; <UNPREDICTABLE>
    275c:	00188608 	andseq	r8, r8, r8, lsl #12
    2760:	51000108 	tstpl	r0, r8, lsl #2
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   4:	00000000 	andeq	r0, r0, r0
   8:	080000f0 	stmdaeq	r0, {r4, r5, r6, r7}
    gpio_write_bit( bank,pin,1-onState);
   c:	08000130 	stmdaeq	r0, {r4, r5, r8}
  10:	08000130 	stmdaeq	r0, {r4, r5, r8}
{
  14:	08000132 	stmdaeq	r0, {r1, r4, r5, r8}
	...
}
  20:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
        for (c = rate; c > 0; c--)
  24:	08000298 	stmdaeq	r0, {r3, r4, r7, r9}
  28:	0800029a 	stmdaeq	r0, {r1, r3, r4, r7, r9}
        gpio_write_bit( bank,pin,onState);
  2c:	080002a8 	stmdaeq	r0, {r3, r5, r7, r9}
  30:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
        for (c = rate; c > 0; c--)
  34:	080002cc 	stmdaeq	r0, {r2, r3, r6, r7, r9}
	...
        gpio_write_bit( bank,pin,1-onState);
  40:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
  44:	08000364 	stmdaeq	r0, {r2, r5, r6, r8, r9}
        for (c = rate; c > 0; c--)
  48:	0800036a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9}
            asm volatile("nop");
  4c:	0800036e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9}
	...
__SETFAULTMASK:
  58:	08000132 	stmdaeq	r0, {r1, r4, r5, r8}
__READ_FAULTMASK:
  5c:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
__BASEPRICONFIG:
  60:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}

  64:	0800013e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8}
__GetBASEPRI:
  68:	08000140 	stmdaeq	r0, {r6, r8}

  6c:	08000158 	stmdaeq	r0, {r3, r4, r6, r8}
  REV16 r0, r0
  70:	08000158 	stmdaeq	r0, {r3, r4, r6, r8}

  74:	08000164 	stmdaeq	r0, {r2, r5, r6, r8}
  78:	08000164 	stmdaeq	r0, {r2, r5, r6, r8}
  7c:	08000214 	stmdaeq	r0, {r2, r4, r9}
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
  80:	08000214 	stmdaeq	r0, {r2, r4, r9}
  84:	08000220 	stmdaeq	r0, {r5, r9}
  88:	08000220 	stmdaeq	r0, {r5, r9}
}
  8c:	0800022c 	stmdaeq	r0, {r2, r3, r5, r9}
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
  90:	0800022c 	stmdaeq	r0, {r2, r3, r5, r9}
  94:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
  98:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
  9c:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
  a0:	08000258 	stmdaeq	r0, {r3, r4, r6, r9}
}
  a4:	080002cc 	stmdaeq	r0, {r2, r3, r6, r7, r9}
  a8:	080002cc 	stmdaeq	r0, {r2, r3, r6, r7, r9}
  ac:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
  b0:	08000304 	stmdaeq	r0, {r2, r8, r9}
  b4:	08000388 	stmdaeq	r0, {r3, r7, r8, r9}
  b8:	00000001 	andeq	r0, r0, r1
  bc:	00000001 	andeq	r0, r0, r1
  c0:	08000388 	stmdaeq	r0, {r3, r7, r8, r9}
  c4:	080003a8 	stmdaeq	r0, {r3, r5, r7, r8, r9}
  c8:	080003a8 	stmdaeq	r0, {r3, r5, r7, r8, r9}
  cc:	080003c8 	stmdaeq	r0, {r3, r6, r7, r8, r9}
  d0:	080003c8 	stmdaeq	r0, {r3, r6, r7, r8, r9}
  d4:	08000450 	stmdaeq	r0, {r4, r6, sl}
  d8:	08000450 	stmdaeq	r0, {r4, r6, sl}
  dc:	08000478 	stmdaeq	r0, {r3, r4, r5, r6, sl}
  e0:	08000478 	stmdaeq	r0, {r3, r4, r5, r6, sl}
  e4:	08000494 	stmdaeq	r0, {r2, r4, r7, sl}
  e8:	08000494 	stmdaeq	r0, {r2, r4, r7, sl}
  ec:	08000498 	stmdaeq	r0, {r3, r4, r7, sl}
  f0:	08000498 	stmdaeq	r0, {r3, r4, r7, sl}
  f4:	080004bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl}
  f8:	080004bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl}
  fc:	080004fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl}
 100:	080004fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl}
 104:	0800051e 	stmdaeq	r0, {r1, r2, r3, r4, r8, sl}
 108:	08000520 	stmdaeq	r0, {r5, r8, sl}
 10c:	080005ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl}
	...
 118:	08000624 	stmdaeq	r0, {r2, r5, r9, sl}
 11c:	0800062a 	stmdaeq	r0, {r1, r3, r5, r9, sl}
 120:	0800064a 	stmdaeq	r0, {r1, r3, r6, r9, sl}
 124:	08000658 	stmdaeq	r0, {r3, r4, r6, r9, sl}
	...
 130:	080005ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl}
 134:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
	...
 140:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
 144:	08000876 	stmdaeq	r0, {r1, r2, r4, r5, r6, fp}
 148:	0800087a 	stmdaeq	r0, {r1, r3, r4, r5, r6, fp}
 14c:	0800087e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, fp}
	...
 158:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
 15c:	08000688 	stmdaeq	r0, {r3, r7, r9, sl}
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	08000688 	stmdaeq	r0, {r3, r7, r9, sl}
 16c:	0800068c 	stmdaeq	r0, {r2, r3, r7, r9, sl}
 170:	00000001 	andeq	r0, r0, r1
 174:	00000001 	andeq	r0, r0, r1
 178:	0800068c 	stmdaeq	r0, {r2, r3, r7, r9, sl}
 17c:	080006c8 	stmdaeq	r0, {r3, r6, r7, r9, sl}
 180:	080006c8 	stmdaeq	r0, {r3, r6, r7, r9, sl}
 184:	08000724 	stmdaeq	r0, {r2, r5, r8, r9, sl}
 188:	08000724 	stmdaeq	r0, {r2, r5, r8, r9, sl}
 18c:	08000726 	stmdaeq	r0, {r1, r2, r5, r8, r9, sl}
 190:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
 194:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
 198:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
 19c:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
 1a0:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
 1a4:	0800076a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl}
 1a8:	0800076c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl}
 1ac:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
 1b0:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
 1b4:	080007e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl}
 1b8:	080007e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl}
 1bc:	08000850 	stmdaeq	r0, {r4, r6, fp}
 1c0:	08000850 	stmdaeq	r0, {r4, r6, fp}
 1c4:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
 1c8:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
 1cc:	0800089c 	stmdaeq	r0, {r2, r3, r4, r7, fp}
 1d0:	0800089c 	stmdaeq	r0, {r2, r3, r4, r7, fp}
 1d4:	080008b0 	stmdaeq	r0, {r4, r5, r7, fp}
 1d8:	080008b0 	stmdaeq	r0, {r4, r5, r7, fp}
 1dc:	080008d8 	stmdaeq	r0, {r3, r4, r6, r7, fp}
 1e0:	00000001 	andeq	r0, r0, r1
 1e4:	00000001 	andeq	r0, r0, r1
 1e8:	080008d8 	stmdaeq	r0, {r3, r4, r6, r7, fp}
 1ec:	08000920 	stmdaeq	r0, {r5, r8, fp}
 1f0:	08000920 	stmdaeq	r0, {r5, r8, fp}
 1f4:	0800092c 	stmdaeq	r0, {r2, r3, r5, r8, fp}
 1f8:	0800092c 	stmdaeq	r0, {r2, r3, r5, r8, fp}
 1fc:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
 200:	08000944 	stmdaeq	r0, {r2, r6, r8, fp}
 204:	08000956 	stmdaeq	r0, {r1, r2, r4, r6, r8, fp}
 208:	08000958 	stmdaeq	r0, {r3, r4, r6, r8, fp}
 20c:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
 210:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
 214:	08000984 	stmdaeq	r0, {r2, r7, r8, fp}
	...
 220:	08000984 	stmdaeq	r0, {r2, r7, r8, fp}
 224:	080009e0 	stmdaeq	r0, {r5, r6, r7, r8, fp}
 228:	080009e0 	stmdaeq	r0, {r5, r6, r7, r8, fp}
 22c:	08000a24 	stmdaeq	r0, {r2, r5, r9, fp}
 230:	00000001 	andeq	r0, r0, r1
 234:	00000001 	andeq	r0, r0, r1
 238:	08000a24 	stmdaeq	r0, {r2, r5, r9, fp}
 23c:	08000a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp}
 240:	08000a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp}
 244:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
 248:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
 24c:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
 250:	08000a7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, fp}
 254:	08000aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp}
 258:	08000aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp}
 25c:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
 260:	08000b10 	stmdaeq	r0, {r4, r8, r9, fp}
 264:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
 270:	00000001 	andeq	r0, r0, r1
 274:	00000001 	andeq	r0, r0, r1
 278:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
 27c:	08000d50 	stmdaeq	r0, {r4, r6, r8, sl, fp}
 280:	08000d50 	stmdaeq	r0, {r4, r6, r8, sl, fp}
 284:	08000d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp}
	...
 290:	00000001 	andeq	r0, r0, r1
 294:	00000001 	andeq	r0, r0, r1
 298:	00000001 	andeq	r0, r0, r1
 29c:	00000001 	andeq	r0, r0, r1
	...
 2a8:	00000001 	andeq	r0, r0, r1
 2ac:	00000001 	andeq	r0, r0, r1
 2b0:	00000001 	andeq	r0, r0, r1
 2b4:	00000001 	andeq	r0, r0, r1
	...
 2c0:	08000e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp}
 2c4:	08000e94 	stmdaeq	r0, {r2, r4, r7, r9, sl, fp}
 2c8:	08000e96 	stmdaeq	r0, {r1, r2, r4, r7, r9, sl, fp}
 2cc:	08000eac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sl, fp}
	...
 2d8:	08000e70 	stmdaeq	r0, {r4, r5, r6, r9, sl, fp}
 2dc:	08000e72 	stmdaeq	r0, {r1, r4, r5, r6, r9, sl, fp}
 2e0:	08000e7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9, sl, fp}
 2e4:	08000e94 	stmdaeq	r0, {r2, r4, r7, r9, sl, fp}
 2e8:	08000e96 	stmdaeq	r0, {r1, r2, r4, r7, r9, sl, fp}
 2ec:	08000eac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sl, fp}
	...
 2f8:	00000001 	andeq	r0, r0, r1
 2fc:	00000001 	andeq	r0, r0, r1
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
	...
 310:	00000001 	andeq	r0, r0, r1
 314:	00000001 	andeq	r0, r0, r1
 318:	00000001 	andeq	r0, r0, r1
 31c:	00000001 	andeq	r0, r0, r1
 320:	00000001 	andeq	r0, r0, r1
 324:	00000001 	andeq	r0, r0, r1
	...
 330:	00000001 	andeq	r0, r0, r1
 334:	00000001 	andeq	r0, r0, r1
 338:	00000001 	andeq	r0, r0, r1
 33c:	00000001 	andeq	r0, r0, r1
	...
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
 350:	00000001 	andeq	r0, r0, r1
 354:	00000001 	andeq	r0, r0, r1
 358:	00000001 	andeq	r0, r0, r1
 35c:	00000001 	andeq	r0, r0, r1
	...
 368:	00000001 	andeq	r0, r0, r1
 36c:	00000001 	andeq	r0, r0, r1
 370:	00000001 	andeq	r0, r0, r1
 374:	00000001 	andeq	r0, r0, r1
	...
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
 388:	00000001 	andeq	r0, r0, r1
 38c:	00000001 	andeq	r0, r0, r1
	...
 398:	00000001 	andeq	r0, r0, r1
 39c:	00000001 	andeq	r0, r0, r1
 3a0:	00000001 	andeq	r0, r0, r1
 3a4:	00000001 	andeq	r0, r0, r1
 3a8:	00000001 	andeq	r0, r0, r1
 3ac:	00000001 	andeq	r0, r0, r1
 3b0:	00000001 	andeq	r0, r0, r1
 3b4:	00000001 	andeq	r0, r0, r1
 3b8:	00000001 	andeq	r0, r0, r1
 3bc:	00000001 	andeq	r0, r0, r1
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
 3c8:	00000001 	andeq	r0, r0, r1
 3cc:	00000001 	andeq	r0, r0, r1
 3d0:	00000001 	andeq	r0, r0, r1
 3d4:	00000001 	andeq	r0, r0, r1
 3d8:	00000001 	andeq	r0, r0, r1
 3dc:	00000001 	andeq	r0, r0, r1
 3e0:	00000001 	andeq	r0, r0, r1
 3e4:	00000001 	andeq	r0, r0, r1
 3e8:	00000001 	andeq	r0, r0, r1
 3ec:	00000001 	andeq	r0, r0, r1
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
 3fc:	00000001 	andeq	r0, r0, r1
 400:	08000d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp}
 404:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	00000001 	andeq	r0, r0, r1
 414:	00000001 	andeq	r0, r0, r1
 418:	00000001 	andeq	r0, r0, r1
 41c:	00000001 	andeq	r0, r0, r1
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
 430:	08000d7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, fp}
 434:	08000d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp}
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
 440:	08000d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp}
 444:	08000db8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, fp}
 448:	00000001 	andeq	r0, r0, r1
 44c:	00000001 	andeq	r0, r0, r1
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
 458:	00000001 	andeq	r0, r0, r1
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
 474:	00000001 	andeq	r0, r0, r1
 478:	08000dbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, fp}
 47c:	08000de2 	stmdaeq	r0, {r1, r5, r6, r7, r8, sl, fp}
 480:	08000de2 	stmdaeq	r0, {r1, r5, r6, r7, r8, sl, fp}
 484:	08000e08 	stmdaeq	r0, {r3, r9, sl, fp}
 488:	00000001 	andeq	r0, r0, r1
 48c:	00000001 	andeq	r0, r0, r1
 490:	00000001 	andeq	r0, r0, r1
 494:	00000001 	andeq	r0, r0, r1
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	08000e08 	stmdaeq	r0, {r3, r9, sl, fp}
 4ac:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
 4b0:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
 4b4:	08000e48 	stmdaeq	r0, {r3, r6, r9, sl, fp}
 4b8:	08000e48 	stmdaeq	r0, {r3, r6, r9, sl, fp}
 4bc:	08000e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp}
 4c0:	00000001 	andeq	r0, r0, r1
 4c4:	00000001 	andeq	r0, r0, r1
 4c8:	08000e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp}
 4cc:	08000eac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sl, fp}
 4d0:	00000001 	andeq	r0, r0, r1
 4d4:	00000001 	andeq	r0, r0, r1
 4d8:	00000001 	andeq	r0, r0, r1
 4dc:	00000001 	andeq	r0, r0, r1
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
 4f8:	00000001 	andeq	r0, r0, r1
 4fc:	00000001 	andeq	r0, r0, r1
 500:	00000001 	andeq	r0, r0, r1
 504:	00000001 	andeq	r0, r0, r1
 508:	00000001 	andeq	r0, r0, r1
 50c:	00000001 	andeq	r0, r0, r1
 510:	00000001 	andeq	r0, r0, r1
 514:	00000001 	andeq	r0, r0, r1
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
	...
 528:	08000eac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sl, fp}
 52c:	08001040 	stmdaeq	r0, {r6, ip}
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
	...
 540:	08001040 	stmdaeq	r0, {r6, ip}
 544:	08001074 	stmdaeq	r0, {r2, r4, r5, r6, ip}
	...
 550:	080010f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, ip}
 554:	080010f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, ip}
 558:	0800110a 	stmdaeq	r0, {r1, r3, r8, ip}
 55c:	08001136 	stmdaeq	r0, {r1, r2, r4, r5, r8, ip}
	...
 568:	08001378 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, ip}
 56c:	0800137a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, ip}
 570:	0800137c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, ip}
 574:	08001382 	stmdaeq	r0, {r1, r7, r8, r9, ip}
 578:	08001386 	stmdaeq	r0, {r1, r2, r7, r8, r9, ip}
 57c:	0800138a 	stmdaeq	r0, {r1, r3, r7, r8, r9, ip}
 580:	0800138e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, ip}
 584:	08001392 	stmdaeq	r0, {r1, r4, r7, r8, r9, ip}
 588:	08001394 	stmdaeq	r0, {r2, r4, r7, r8, r9, ip}
 58c:	08001398 	stmdaeq	r0, {r3, r4, r7, r8, r9, ip}
	...
 598:	08001382 	stmdaeq	r0, {r1, r7, r8, r9, ip}
 59c:	08001386 	stmdaeq	r0, {r1, r2, r7, r8, r9, ip}
 5a0:	0800138a 	stmdaeq	r0, {r1, r3, r7, r8, r9, ip}
 5a4:	0800138e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, ip}
 5a8:	08001392 	stmdaeq	r0, {r1, r4, r7, r8, r9, ip}
 5ac:	08001394 	stmdaeq	r0, {r2, r4, r7, r8, r9, ip}
 5b0:	08001398 	stmdaeq	r0, {r3, r4, r7, r8, r9, ip}
 5b4:	0800139e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, ip}
	...
 5c0:	0800147e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, sl, ip}
 5c4:	08001480 	stmdaeq	r0, {r7, sl, ip}
 5c8:	08001484 	stmdaeq	r0, {r2, r7, sl, ip}
 5cc:	080014a8 	stmdaeq	r0, {r3, r5, r7, sl, ip}
 5d0:	080014ac 	stmdaeq	r0, {r2, r3, r5, r7, sl, ip}
 5d4:	0800154a 	stmdaeq	r0, {r1, r3, r6, r8, sl, ip}
	...
 5e0:	080014a8 	stmdaeq	r0, {r3, r5, r7, sl, ip}
 5e4:	080014ac 	stmdaeq	r0, {r2, r3, r5, r7, sl, ip}
 5e8:	0800154a 	stmdaeq	r0, {r1, r3, r6, r8, sl, ip}
 5ec:	08001622 	stmdaeq	r0, {r1, r5, r9, sl, ip}
 5f0:	0800162c 	stmdaeq	r0, {r2, r3, r5, r9, sl, ip}
 5f4:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
	...
 600:	08001554 	stmdaeq	r0, {r2, r4, r6, r8, sl, ip}
 604:	08001560 	stmdaeq	r0, {r5, r6, r8, sl, ip}
 608:	08001566 	stmdaeq	r0, {r1, r2, r5, r6, r8, sl, ip}
 60c:	0800157e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, ip}
	...
 618:	080016ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, sl, ip}
 61c:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
 620:	080016ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, sl, ip}
 624:	080016f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, ip}
	...
 630:	0800171c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, ip}
 634:	08001776 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl, ip}
 638:	08001784 	stmdaeq	r0, {r2, r7, r8, r9, sl, ip}
 63c:	080017a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, ip}
	...
 648:	08001074 	stmdaeq	r0, {r2, r4, r5, r6, ip}
 64c:	08001098 	stmdaeq	r0, {r3, r4, r7, ip}
 650:	08001098 	stmdaeq	r0, {r3, r4, r7, ip}
 654:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
 658:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
 65c:	08001148 	stmdaeq	r0, {r3, r6, r8, ip}
 660:	08001148 	stmdaeq	r0, {r3, r6, r8, ip}
 664:	080011f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip}
 668:	080011f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, ip}
 66c:	0800122c 	stmdaeq	r0, {r2, r3, r5, r9, ip}
 670:	0800122c 	stmdaeq	r0, {r2, r3, r5, r9, ip}
 674:	08001274 	stmdaeq	r0, {r2, r4, r5, r6, r9, ip}
 678:	08001274 	stmdaeq	r0, {r2, r4, r5, r6, r9, ip}
 67c:	08001340 	stmdaeq	r0, {r6, r8, r9, ip}
 680:	08001340 	stmdaeq	r0, {r6, r8, r9, ip}
 684:	080013bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip}
 688:	080013bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip}
 68c:	080013e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, ip}
 690:	080013e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, ip}
 694:	080013fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip}
 698:	080013fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip}
 69c:	0800143c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip}
 6a0:	0800143c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip}
 6a4:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 6a8:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 6ac:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
 6b0:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
 6b4:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
 6b8:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
 6bc:	08001868 	stmdaeq	r0, {r3, r5, r6, fp, ip}
 6c0:	00000001 	andeq	r0, r0, r1
 6c4:	00000001 	andeq	r0, r0, r1
	...
 6d0:	08001868 	stmdaeq	r0, {r3, r5, r6, fp, ip}
 6d4:	08001886 	stmdaeq	r0, {r1, r2, r7, fp, ip}
 6d8:	08001886 	stmdaeq	r0, {r1, r2, r7, fp, ip}
 6dc:	080018a4 	stmdaeq	r0, {r2, r5, r7, fp, ip}
	...
